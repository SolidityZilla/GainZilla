{
	"id": "015091c894fff8a6ae93d3cb196b740e",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.25",
	"solcLongVersion": "0.8.25+commit.b61c2a91",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/gainzilla.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.25;\n\nimport \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\n\ninterface IUniswapV2Router {\n    function factory() external pure returns (address);\n    function WETH() external pure returns (address);\n    function addLiquidityETH(\n        address token,\n        uint amountTokenDesired,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline\n    ) external payable returns (uint, uint, uint);\n    function swapExactTokensForETH(\n        uint amountIn, \n        uint amountOutMin, \n        address[] calldata path, \n        address to, \n        uint deadline\n    ) external returns (uint[] memory amounts);\n}\n\ninterface IUniswapV2Factory {\n    function createPair(address tokenA, address tokenB) external returns (address pair);\n}\n\ninterface IUniswapV2Pair {\n    function getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast);\n    function token0() external view returns (address);\n    function token1() external view returns (address);\n}\n\ncontract MemeCoin is ERC20, Ownable {\n    using SafeMath for uint256;\n\n    uint256 private constant TOTAL_SUPPLY = 1_000_000_000 * 10**18;\n    uint256 public maxWalletPercentage = 100;\n    uint256 private constant BP_DIVISOR = 10_000;\n\n    struct TaxRates {\n        uint16 buyLp;\n        uint16 buyEco;\n        uint16 sellLp;\n        uint16 sellEco;\n    }\n    TaxRates public taxRates;\n    uint256 private transferMultiplier = 35;\n\n    uint256 public swapThreshold = TOTAL_SUPPLY / 1000;\n    uint256 public accumulatedLp;\n    uint256 public accumulatedEco;\n    bool private swapping;\n\n    struct CooldownConfig {\n        bool enabled;\n        uint32 duration;\n        mapping(address => uint256) cooldowns;\n    }\n    CooldownConfig public cooldown;\n\n    struct DiamondFloor {\n        bool enabled;\n        uint16 triggerPercentage;\n        uint256 athPrice;\n        bool sellStopped;\n        uint256 blockedAth;\n    }\n    DiamondFloor public diamondFloor;\n\n    address public routerAddress;\n    address public pairAddress;\n    address private constant DEFAULT_ROUTER = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    mapping(address => bool) public isExempt;\n\n    event RouterUpdated(address newRouter);\n    event TaxesCollected(uint256 lpAmount, uint256 ecoAmount);\n    event LiquidityAdded(uint256 tokenAmount, uint256 ethAmount);\n\n    constructor() ERC20(\"Meme Coin\", \"MEME\") Ownable() {\n        _mint(msg.sender, TOTAL_SUPPLY);\n        routerAddress = DEFAULT_ROUTER;\n        _setupPair();\n        \n        taxRates = TaxRates(0, 0, 0, 0);\n    \n        isExempt[msg.sender] = true;\n        isExempt[address(this)] = true;\n    }\n\n    function _transfer(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) internal virtual override {\n        require(amount > 0, \"Transfer amount must be >0\");\n\n        bool isBuy = sender == pairAddress && !isExempt[recipient];\n        bool isSell = recipient == pairAddress && !isExempt[sender];\n\n        if (diamondFloor.enabled && isSell) {\n            require(!diamondFloor.sellStopped, \"Sells stopped by Diamond Floor\");\n            _checkPriceConditions();\n        }\n\n        if (cooldown.enabled && isSell) {\n            require(block.timestamp >= cooldown.cooldowns[sender], \"Cooldown active\");\n            cooldown.cooldowns[sender] = block.timestamp + cooldown.duration;\n        }\n\n        uint256 taxAmount = _calculateTax(sender, recipient, amount);\n        uint256 netAmount = amount.sub(taxAmount);\n\n        if (!isExempt[recipient] && !isSell) {\n            require(balanceOf(recipient).add(netAmount) <= _maxWalletSize(), \"Max wallet exceeded\");\n        }\n\n        if (taxAmount > 0) {\n            super._transfer(sender, address(this), taxAmount);\n            _distributeTax(taxAmount, isBuy, isSell);\n        }\n\n        super._transfer(sender, recipient, netAmount);\n\n        if (_shouldSwapBack()) {\n            _swapAndLiquify();\n        }\n    }\n\n    function _calculateTax(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) private view returns (uint256) {\n        if (isExempt[sender] || isExempt[recipient]) return 0;\n\n        bool isBuy = sender == pairAddress;\n        bool isSell = recipient == pairAddress;\n\n        if (isBuy) {\n            return amount.mul(uint256(taxRates.buyLp).add(taxRates.buyEco)).div(BP_DIVISOR);\n        } else if (isSell) {\n            return amount.mul(uint256(taxRates.sellLp).add(taxRates.sellEco)).div(BP_DIVISOR);\n        } else {\n            uint256 sellTotal = uint256(taxRates.sellLp).add(taxRates.sellEco);\n            uint256 transferTax = sellTotal.mul(transferMultiplier).div(10);\n            return amount.mul(transferTax).div(BP_DIVISOR);\n        }\n    }\n\n\n    function _distributeTax(uint256 taxAmount, bool isBuy, bool isSell) private {\n        uint256 lpShare;\n        uint256 ecoShare;\n\n        if (isBuy) {\n            lpShare = taxAmount.mul(taxRates.buyLp).div(taxRates.buyLp + taxRates.buyEco);\n        } else if (isSell) {\n            lpShare = taxAmount.mul(taxRates.sellLp).div(taxRates.sellLp + taxRates.sellEco);\n        } else {\n            uint256 sellTotal = taxRates.sellLp + taxRates.sellEco;\n            lpShare = taxAmount.mul(taxRates.sellLp).div(sellTotal).mul(transferMultiplier).div(10);\n        }\n\n        ecoShare = taxAmount - lpShare;\n        accumulatedLp += lpShare;\n        accumulatedEco += ecoShare;\n\n        emit TaxesCollected(lpShare, ecoShare);\n    }\n\n    function _checkPriceConditions() private {\n        uint256 currentPrice = pairPrice();\n\n        if (currentPrice > diamondFloor.athPrice) {\n            diamondFloor.athPrice = currentPrice;\n            if (diamondFloor.sellStopped) {\n                diamondFloor.sellStopped = false;\n            }\n            return;\n        }\n\n        uint256 thresholdPrice = diamondFloor.athPrice\n            .mul(BP_DIVISOR - diamondFloor.triggerPercentage)\n            .div(BP_DIVISOR);\n\n        if (currentPrice < thresholdPrice) {\n            diamondFloor.sellStopped = true;\n            diamondFloor.blockedAth = diamondFloor.athPrice;\n        }\n\n        if (diamondFloor.sellStopped && currentPrice >= diamondFloor.blockedAth.mul(2)) {\n            diamondFloor.sellStopped = false;\n            diamondFloor.athPrice = currentPrice;\n        }\n    }\n\n    function _swapAndLiquify() private {\n        uint256 totalTokens = accumulatedLp + accumulatedEco;\n        if (totalTokens < swapThreshold) return;\n\n        swapping = true;\n        uint256 initialBalance = address(this).balance;\n\n        _swapTokensForETH(accumulatedEco);\n        uint256 ecoETH = address(this).balance.sub(initialBalance);\n        payable(owner()).transfer(ecoETH);\n\n        uint256 lpTokens = accumulatedLp;\n        uint256 half = lpTokens.div(2);\n        _swapTokensForETH(half);\n        \n        uint256 lpETH = address(this).balance.sub(ecoETH);\n        _addLiquidity(lpTokens.sub(half), lpETH);\n\n        accumulatedLp = 0;\n        accumulatedEco = 0;\n        swapping = false;\n    }\n\n    function pairPrice() public view returns (uint256) {\n        (uint112 reserve0, uint112 reserve1,) = IUniswapV2Pair(pairAddress).getReserves();\n        return IUniswapV2Pair(pairAddress).token0() == address(this) ?\n            (uint256(reserve1).mul(1e18)).div(uint256(reserve0)) :\n            (uint256(reserve0).mul(1e18)).div(uint256(reserve1));\n    }\n\n    function cooldownRemaining(address account) public view returns (\n        uint256 days_, \n        uint256 hours_, \n        uint256 minutes_, \n        uint256 seconds_\n    ) {\n        uint256 remaining = cooldown.cooldowns[account] > block.timestamp ? \n            cooldown.cooldowns[account].sub(block.timestamp) : 0;\n        \n        days_ = remaining.div(86400);\n        remaining %= 86400;\n        hours_ = remaining.div(3600);\n        remaining %= 3600;\n        minutes_ = remaining.div(60);\n        seconds_ = remaining % 60;\n    }\n\n    function priceDeviation() public view returns (int256) {\n        if (diamondFloor.athPrice == 0) return 0;\n        uint256 currentPrice = pairPrice();\n        return currentPrice > diamondFloor.athPrice ?\n            int256(currentPrice.sub(diamondFloor.athPrice).mul(1e18).div(diamondFloor.athPrice)) :\n            -int256(diamondFloor.athPrice.sub(currentPrice).mul(1e18).div(diamondFloor.athPrice));\n    }\n\n    function setRouter(address newRouter) external onlyOwner {\n        routerAddress = newRouter;\n        _setupPair();\n        emit RouterUpdated(newRouter);\n    }\n\n    function setTaxRates(uint16 buyLp, uint16 buyEco, uint16 sellLp, uint16 sellEco) external onlyOwner {\n        require(buyLp + buyEco <= 2500, \"Buy tax too high\");\n        require(sellLp + sellEco <= 2500, \"Sell tax too high\");\n        taxRates = TaxRates(buyLp, buyEco, sellLp, sellEco);\n    }\n\n    function setThreshold(uint256 threshold) external onlyOwner {\n        swapThreshold = threshold;\n    }\n\n    function configureCooldown(bool enabled, uint32 duration) external onlyOwner {\n        cooldown.enabled = enabled;\n        cooldown.duration = duration * 1 minutes;\n    }\n\n    function configureDiamondFloor(bool enabled, uint16 triggerPercent) external onlyOwner {\n        diamondFloor.enabled = enabled;\n        diamondFloor.triggerPercentage = triggerPercent;\n    }\n\n    function setExempt(address account, bool exempt) external onlyOwner {\n        isExempt[account] = exempt;\n    }\n\n    function _setupPair() private {\n        pairAddress = IUniswapV2Factory(IUniswapV2Router(routerAddress).factory())\n            .createPair(address(this), IUniswapV2Router(routerAddress).WETH());\n    }\n\n    function _swapTokensForETH(uint256 amount) private {\n        address[] memory path = new address[](2);\n        path[0] = address(this);\n        path[1] = IUniswapV2Router(routerAddress).WETH();\n\n        _approve(address(this), routerAddress, amount);\n        IUniswapV2Router(routerAddress).swapExactTokensForETH(\n            amount,\n            0,\n            path,\n            address(this),\n            block.timestamp\n        );\n    }\n\n    function _addLiquidity(uint256 tokenAmount, uint256 ethAmount) private {\n        _approve(address(this), routerAddress, tokenAmount);\n        IUniswapV2Router(routerAddress).addLiquidityETH{value: ethAmount}(\n            address(this),\n            tokenAmount,\n            0,\n            0,\n            owner(),\n            block.timestamp\n        );\n        emit LiquidityAdded(tokenAmount, ethAmount);\n    }\n\n    function _maxWalletSize() public view returns (uint256) {\n        return TOTAL_SUPPLY.mul(maxWalletPercentage).div(BP_DIVISOR);\n    }\n\n    function _shouldSwapBack() private view returns (bool) {\n        return !swapping &&\n            accumulatedLp.add(accumulatedEco) >= swapThreshold &&\n            msg.sender != pairAddress;\n    }\n\n    receive() external payable {}\n}"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts@4.9.3/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./extensions/IERC20Metadata.sol\";\nimport \"../../utils/Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(address from, address to, uint256 amount) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\n            // decrementing then incrementing.\n            _balances[to] += amount;\n        }\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        unchecked {\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\n            _balances[account] += amount;\n        }\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\n            _totalSupply -= amount;\n        }\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n}\n"
			},
			"@openzeppelin/contracts@4.9.3/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts@4.9.3/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts@4.9.3/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6692  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6692  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220bff2674b5b8364a938ce76c69d94c8c6bbdde56662337050e0d72e56c50a81ee64736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220bff2674b5b8364a938ce76c69d94c8c6bbdde56662337050e0d72e56c50a81ee64736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBF CALLCODE PUSH8 0x4B5B8364A938CE76 0xC6 SWAP14 SWAP5 0xC8 0xC6 0xBB 0xDD 0xE5 PUSH7 0x62337050E0D72E JUMP 0xC5 EXP DUP2 0xEE PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "482:6210:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;482:6210:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220bff2674b5b8364a938ce76c69d94c8c6bbdde56662337050e0d72e56c50a81ee64736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBF CALLCODE PUSH8 0x4B5B8364A938CE76 0xC6 SWAP14 SWAP5 0xC8 0xC6 0xBB 0xDD 0xE5 PUSH7 0x62337050E0D72E JUMP 0xC5 EXP DUP2 0xEE PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "482:6210:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bff2674b5b8364a938ce76c69d94c8c6bbdde56662337050e0d72e56c50a81ee64736f6c63430008190033",
									".code": [
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"@openzeppelin/contracts@4.9.3/access/Ownable.sol",
								"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts@4.9.3/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts@4.9.3/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts@4.9.3/utils/Context.sol",
								"contracts/gainzilla.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@4.9.3/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts@4.9.3/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts@4.9.3/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":1532:12844  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  mstore(0x40, 0x80)\n    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":1980:2093  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":2046:2051  _name */\n  0x03\n    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":2046:2059  _name = name_ */\n  tag_6\n    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":2054:2059  name_ */\n  dup4\n    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":2046:2051  _name */\n  dup3\n    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":2046:2059  _name = name_ */\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":2069:2076  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":2069:2086  _symbol = symbol_ */\n  tag_8\n    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":2079:2086  symbol_ */\n  dup3\n    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":2069:2076  _symbol */\n  dup3\n    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":2069:2086  _symbol = symbol_ */\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":1980:2093  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":1532:12844  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  jump(tag_16)\n    /* \"#utility.yul\":14:141   */\ntag_10:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:862   */\ntag_11:\n    /* \"#utility.yul\":200:205   */\n  0x00\n    /* \"#utility.yul\":253:256   */\n  dup3\n    /* \"#utility.yul\":246:250   */\n  0x1f\n    /* \"#utility.yul\":238:244   */\n  dup4\n    /* \"#utility.yul\":234:251   */\n  add\n    /* \"#utility.yul\":230:257   */\n  slt\n    /* \"#utility.yul\":220:275   */\n  tag_19\n  jumpi\n    /* \"#utility.yul\":271:272   */\n  0x00\n    /* \"#utility.yul\":268:269   */\n  dup1\n    /* \"#utility.yul\":261:273   */\n  revert\n    /* \"#utility.yul\":220:275   */\ntag_19:\n    /* \"#utility.yul\":294:307   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":356:366   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":353:389   */\n  iszero\n  tag_21\n  jumpi\n    /* \"#utility.yul\":369:387   */\n  tag_21\n  tag_10\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":444:446   */\n  0x40\n    /* \"#utility.yul\":438:447   */\n  mload\n    /* \"#utility.yul\":412:414   */\n  0x1f\n    /* \"#utility.yul\":498:511   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":494:516   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":518:520   */\n  0x3f\n    /* \"#utility.yul\":490:521   */\n  add\n    /* \"#utility.yul\":486:526   */\n  and\n    /* \"#utility.yul\":474:527   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":542:560   */\n  dup3\n  dup3\n  gt\n    /* \"#utility.yul\":562:584   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":539:585   */\n  or\n    /* \"#utility.yul\":536:608   */\n  iszero\n  tag_23\n  jumpi\n    /* \"#utility.yul\":588:606   */\n  tag_23\n  tag_10\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":628:638   */\n  dup2\n    /* \"#utility.yul\":624:626   */\n  0x40\n    /* \"#utility.yul\":617:639   */\n  mstore\n    /* \"#utility.yul\":663:665   */\n  dup4\n    /* \"#utility.yul\":655:661   */\n  dup2\n    /* \"#utility.yul\":648:666   */\n  mstore\n    /* \"#utility.yul\":709:712   */\n  dup7\n    /* \"#utility.yul\":702:706   */\n  0x20\n    /* \"#utility.yul\":697:699   */\n  dup6\n    /* \"#utility.yul\":689:695   */\n  dup9\n    /* \"#utility.yul\":685:700   */\n  add\n    /* \"#utility.yul\":681:707   */\n  add\n    /* \"#utility.yul\":678:713   */\n  gt\n    /* \"#utility.yul\":675:730   */\n  iszero\n  tag_24\n  jumpi\n    /* \"#utility.yul\":726:727   */\n  0x00\n    /* \"#utility.yul\":723:724   */\n  dup1\n    /* \"#utility.yul\":716:728   */\n  revert\n    /* \"#utility.yul\":675:730   */\ntag_24:\n    /* \"#utility.yul\":783:785   */\n  dup4\n    /* \"#utility.yul\":776:780   */\n  0x20\n    /* \"#utility.yul\":768:774   */\n  dup8\n    /* \"#utility.yul\":764:781   */\n  add\n    /* \"#utility.yul\":757:761   */\n  0x20\n    /* \"#utility.yul\":749:755   */\n  dup4\n    /* \"#utility.yul\":745:762   */\n  add\n    /* \"#utility.yul\":739:786   */\n  mcopy\n    /* \"#utility.yul\":830:831   */\n  0x00\n    /* \"#utility.yul\":823:827   */\n  0x20\n    /* \"#utility.yul\":818:820   */\n  dup6\n    /* \"#utility.yul\":810:816   */\n  dup4\n    /* \"#utility.yul\":806:821   */\n  add\n    /* \"#utility.yul\":802:828   */\n  add\n    /* \"#utility.yul\":795:832   */\n  mstore\n    /* \"#utility.yul\":850:856   */\n  dup1\n    /* \"#utility.yul\":841:856   */\n  swap5\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":146:862   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":867:1429   */\ntag_3:\n    /* \"#utility.yul\":966:972   */\n  0x00\n    /* \"#utility.yul\":974:980   */\n  dup1\n    /* \"#utility.yul\":1027:1029   */\n  0x40\n    /* \"#utility.yul\":1015:1024   */\n  dup4\n    /* \"#utility.yul\":1006:1013   */\n  dup6\n    /* \"#utility.yul\":1002:1025   */\n  sub\n    /* \"#utility.yul\":998:1030   */\n  slt\n    /* \"#utility.yul\":995:1047   */\n  iszero\n  tag_26\n  jumpi\n    /* \"#utility.yul\":1043:1044   */\n  0x00\n    /* \"#utility.yul\":1040:1041   */\n  dup1\n    /* \"#utility.yul\":1033:1045   */\n  revert\n    /* \"#utility.yul\":995:1047   */\ntag_26:\n    /* \"#utility.yul\":1070:1086   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1135:1149   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1132:1166   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":1162:1163   */\n  0x00\n    /* \"#utility.yul\":1159:1160   */\n  dup1\n    /* \"#utility.yul\":1152:1164   */\n  revert\n    /* \"#utility.yul\":1132:1166   */\ntag_27:\n    /* \"#utility.yul\":1185:1246   */\n  tag_28\n    /* \"#utility.yul\":1238:1245   */\n  dup7\n    /* \"#utility.yul\":1229:1235   */\n  dup4\n    /* \"#utility.yul\":1218:1227   */\n  dup8\n    /* \"#utility.yul\":1214:1236   */\n  add\n    /* \"#utility.yul\":1185:1246   */\n  tag_11\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":1175:1246   */\n  swap4\n  pop\n    /* \"#utility.yul\":1292:1294   */\n  0x20\n    /* \"#utility.yul\":1281:1290   */\n  dup6\n    /* \"#utility.yul\":1277:1295   */\n  add\n    /* \"#utility.yul\":1271:1296   */\n  mload\n    /* \"#utility.yul\":1255:1296   */\n  swap2\n  pop\n    /* \"#utility.yul\":1321:1323   */\n  dup1\n    /* \"#utility.yul\":1311:1319   */\n  dup3\n    /* \"#utility.yul\":1308:1324   */\n  gt\n    /* \"#utility.yul\":1305:1341   */\n  iszero\n  tag_29\n  jumpi\n    /* \"#utility.yul\":1337:1338   */\n  0x00\n    /* \"#utility.yul\":1334:1335   */\n  dup1\n    /* \"#utility.yul\":1327:1339   */\n  revert\n    /* \"#utility.yul\":1305:1341   */\ntag_29:\n  pop\n    /* \"#utility.yul\":1360:1423   */\n  tag_30\n    /* \"#utility.yul\":1415:1422   */\n  dup6\n    /* \"#utility.yul\":1404:1412   */\n  dup3\n    /* \"#utility.yul\":1393:1402   */\n  dup7\n    /* \"#utility.yul\":1389:1413   */\n  add\n    /* \"#utility.yul\":1360:1423   */\n  tag_11\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":1350:1423   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":867:1429   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1434:1814   */\ntag_12:\n    /* \"#utility.yul\":1513:1514   */\n  0x01\n    /* \"#utility.yul\":1509:1521   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1556:1568   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1577:1638   */\n  tag_32\n  jumpi\n    /* \"#utility.yul\":1631:1635   */\n  0x7f\n    /* \"#utility.yul\":1623:1629   */\n  dup3\n    /* \"#utility.yul\":1619:1636   */\n  and\n    /* \"#utility.yul\":1609:1636   */\n  swap2\n  pop\n    /* \"#utility.yul\":1577:1638   */\ntag_32:\n    /* \"#utility.yul\":1684:1686   */\n  0x20\n    /* \"#utility.yul\":1676:1682   */\n  dup3\n    /* \"#utility.yul\":1673:1687   */\n  lt\n    /* \"#utility.yul\":1653:1671   */\n  dup2\n    /* \"#utility.yul\":1650:1688   */\n  sub\n    /* \"#utility.yul\":1647:1808   */\n  tag_33\n  jumpi\n    /* \"#utility.yul\":1730:1740   */\n  0x4e487b71\n    /* \"#utility.yul\":1725:1728   */\n  0xe0\n    /* \"#utility.yul\":1721:1741   */\n  shl\n    /* \"#utility.yul\":1718:1719   */\n  0x00\n    /* \"#utility.yul\":1711:1742   */\n  mstore\n    /* \"#utility.yul\":1765:1769   */\n  0x22\n    /* \"#utility.yul\":1762:1763   */\n  0x04\n    /* \"#utility.yul\":1755:1770   */\n  mstore\n    /* \"#utility.yul\":1793:1797   */\n  0x24\n    /* \"#utility.yul\":1790:1791   */\n  0x00\n    /* \"#utility.yul\":1783:1798   */\n  revert\n    /* \"#utility.yul\":1647:1808   */\ntag_33:\n  pop\n    /* \"#utility.yul\":1434:1814   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1945:2463   */\ntag_14:\n    /* \"#utility.yul\":2047:2049   */\n  0x1f\n    /* \"#utility.yul\":2042:2045   */\n  dup3\n    /* \"#utility.yul\":2039:2050   */\n  gt\n    /* \"#utility.yul\":2036:2457   */\n  iszero\n  tag_36\n  jumpi\n    /* \"#utility.yul\":2083:2088   */\n  dup1\n    /* \"#utility.yul\":2080:2081   */\n  0x00\n    /* \"#utility.yul\":2073:2089   */\n  mstore\n    /* \"#utility.yul\":2127:2131   */\n  0x20\n    /* \"#utility.yul\":2124:2125   */\n  0x00\n    /* \"#utility.yul\":2114:2132   */\n  keccak256\n    /* \"#utility.yul\":2197:2199   */\n  0x1f\n    /* \"#utility.yul\":2185:2195   */\n  dup5\n    /* \"#utility.yul\":2181:2200   */\n  add\n    /* \"#utility.yul\":2178:2179   */\n  0x05\n    /* \"#utility.yul\":2174:2201   */\n  shr\n    /* \"#utility.yul\":2168:2172   */\n  dup2\n    /* \"#utility.yul\":2164:2202   */\n  add\n    /* \"#utility.yul\":2233:2237   */\n  0x20\n    /* \"#utility.yul\":2221:2231   */\n  dup6\n    /* \"#utility.yul\":2218:2238   */\n  lt\n    /* \"#utility.yul\":2215:2262   */\n  iszero\n  tag_37\n  jumpi\n  pop\n    /* \"#utility.yul\":2256:2260   */\n  dup1\n    /* \"#utility.yul\":2215:2262   */\ntag_37:\n    /* \"#utility.yul\":2311:2313   */\n  0x1f\n    /* \"#utility.yul\":2306:2309   */\n  dup5\n    /* \"#utility.yul\":2302:2314   */\n  add\n    /* \"#utility.yul\":2299:2300   */\n  0x05\n    /* \"#utility.yul\":2295:2315   */\n  shr\n    /* \"#utility.yul\":2289:2293   */\n  dup3\n    /* \"#utility.yul\":2285:2316   */\n  add\n    /* \"#utility.yul\":2275:2316   */\n  swap2\n  pop\n    /* \"#utility.yul\":2366:2447   */\ntag_38:\n    /* \"#utility.yul\":2384:2386   */\n  dup2\n    /* \"#utility.yul\":2377:2382   */\n  dup2\n    /* \"#utility.yul\":2374:2387   */\n  lt\n    /* \"#utility.yul\":2366:2447   */\n  iszero\n  tag_40\n  jumpi\n    /* \"#utility.yul\":2443:2444   */\n  0x00\n    /* \"#utility.yul\":2429:2445   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2410:2411   */\n  0x01\n    /* \"#utility.yul\":2399:2412   */\n  add\n    /* \"#utility.yul\":2366:2447   */\n  jump(tag_38)\ntag_40:\n    /* \"#utility.yul\":2370:2373   */\n  pop\n  pop\n    /* \"#utility.yul\":2036:2457   */\ntag_36:\n    /* \"#utility.yul\":1945:2463   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2639:3984   */\ntag_7:\n    /* \"#utility.yul\":2759:2769   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":2781:2811   */\n  dup2\n  gt\n    /* \"#utility.yul\":2778:2834   */\n  iszero\n  tag_44\n  jumpi\n    /* \"#utility.yul\":2814:2832   */\n  tag_44\n  tag_10\n  jump\t// in\ntag_44:\n    /* \"#utility.yul\":2843:2940   */\n  tag_45\n    /* \"#utility.yul\":2933:2939   */\n  dup2\n    /* \"#utility.yul\":2893:2931   */\n  tag_46\n    /* \"#utility.yul\":2925:2929   */\n  dup5\n    /* \"#utility.yul\":2919:2930   */\n  sload\n    /* \"#utility.yul\":2893:2931   */\n  tag_12\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":2887:2891   */\n  dup5\n    /* \"#utility.yul\":2843:2940   */\n  tag_14\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":2995:2999   */\n  0x20\n  dup1\n    /* \"#utility.yul\":3052:3054   */\n  0x1f\n    /* \"#utility.yul\":3041:3055   */\n  dup4\n  gt\n    /* \"#utility.yul\":3069:3070   */\n  0x01\n    /* \"#utility.yul\":3064:3727   */\n  dup2\n  eq\n  tag_48\n  jumpi\n    /* \"#utility.yul\":3771:3772   */\n  0x00\n    /* \"#utility.yul\":3788:3794   */\n  dup5\n    /* \"#utility.yul\":3785:3874   */\n  iszero\n  tag_49\n  jumpi\n  pop\n    /* \"#utility.yul\":3840:3859   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":3834:3860   */\n  mload\n    /* \"#utility.yul\":3785:3874   */\ntag_49:\n  not(0x00)\n    /* \"#utility.yul\":2596:2597   */\n  0x03\n    /* \"#utility.yul\":2592:2603   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":2588:2612   */\n  shr\n    /* \"#utility.yul\":2584:2613   */\n  not\n    /* \"#utility.yul\":2574:2614   */\n  and\n    /* \"#utility.yul\":2620:2621   */\n  0x01\n    /* \"#utility.yul\":2616:2627   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":2571:2628   */\n  or\n    /* \"#utility.yul\":3887:3968   */\n  dup6\n  sstore\n    /* \"#utility.yul\":3034:3978   */\n  jump(tag_47)\n    /* \"#utility.yul\":3064:3727   */\ntag_48:\n    /* \"#utility.yul\":1892:1893   */\n  0x00\n    /* \"#utility.yul\":1885:1899   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":1929:1933   */\n  0x20\n    /* \"#utility.yul\":1916:1934   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":3100:3120   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":3218:3454   */\ntag_52:\n    /* \"#utility.yul\":3232:3239   */\n  dup3\n    /* \"#utility.yul\":3229:3230   */\n  dup2\n    /* \"#utility.yul\":3226:3240   */\n  lt\n    /* \"#utility.yul\":3218:3454   */\n  iszero\n  tag_54\n  jumpi\n    /* \"#utility.yul\":3321:3340   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":3315:3341   */\n  mload\n    /* \"#utility.yul\":3300:3342   */\n  dup3\n  sstore\n    /* \"#utility.yul\":3413:3440   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":3381:3382   */\n  0x01\n    /* \"#utility.yul\":3369:3383   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":3248:3267   */\n  dup5\n  add\n    /* \"#utility.yul\":3218:3454   */\n  jump(tag_52)\ntag_54:\n    /* \"#utility.yul\":3222:3225   */\n  pop\n    /* \"#utility.yul\":3482:3488   */\n  dup6\n    /* \"#utility.yul\":3473:3480   */\n  dup3\n    /* \"#utility.yul\":3470:3489   */\n  lt\n    /* \"#utility.yul\":3467:3668   */\n  iszero\n  tag_55\n  jumpi\n    /* \"#utility.yul\":3543:3562   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":3537:3563   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":3626:3627   */\n  0x03\n    /* \"#utility.yul\":3622:3636   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":3638:3641   */\n  0xf8\n    /* \"#utility.yul\":3618:3642   */\n  and\n    /* \"#utility.yul\":3614:3651   */\n  shr\n    /* \"#utility.yul\":3610:3652   */\n  not\n    /* \"#utility.yul\":3595:3653   */\n  and\n    /* \"#utility.yul\":3580:3654   */\n  dup2\n  sstore\n    /* \"#utility.yul\":3467:3668   */\ntag_55:\n  pop\n  pop\n    /* \"#utility.yul\":3714:3715   */\n  0x01\n    /* \"#utility.yul\":3705:3711   */\n  dup5\n    /* \"#utility.yul\":3702:3703   */\n  0x01\n    /* \"#utility.yul\":3698:3712   */\n  shl\n    /* \"#utility.yul\":3694:3716   */\n  add\n    /* \"#utility.yul\":3688:3692   */\n  dup6\n    /* \"#utility.yul\":3681:3717   */\n  sstore\n    /* \"#utility.yul\":3034:3978   */\ntag_47:\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2639:3984   */\n  pop\n  pop\n  jump\t// out\ntag_16:\n    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":1532:12844  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":1532:12844  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":2158:2256  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":4444:4641  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_19\n      tag_20\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      mload(0x40)\n        /* \"#utility.yul\":1039:1053   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1032:1054   */\n      iszero\n        /* \"#utility.yul\":1014:1055   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1002:1004   */\n      0x20\n        /* \"#utility.yul\":987:1005   */\n      add\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":4444:4641  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      tag_17\n        /* \"#utility.yul\":874:1061   */\n      jump\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3255:3361  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3342:3354  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3255:3361  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_25:\n      mload(0x40)\n        /* \"#utility.yul\":1212:1237   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1200:1202   */\n      0x20\n        /* \"#utility.yul\":1185:1203   */\n      add\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3255:3361  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_17\n        /* \"#utility.yul\":1066:1243   */\n      jump\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5203:5459  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_6:\n      tag_19\n      tag_30\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3104:3195  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      mload(0x40)\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3186:3188  18 */\n      0x12\n        /* \"#utility.yul\":1723:1759   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1711:1713   */\n      0x20\n        /* \"#utility.yul\":1696:1714   */\n      add\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3104:3195  function decimals() public view virtual override returns (uint8) {... */\n      tag_17\n        /* \"#utility.yul\":1581:1765   */\n      jump\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5854:6088  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_19\n      tag_39\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_39:\n      tag_40\n      jump\t// in\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3419:3544  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_9:\n      tag_25\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3519:3537  _balances[account] */\n      and\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3493:3500  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3519:3537  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3419:3544  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":2369:2471  function symbol() public view virtual override returns (string memory) {... */\n    tag_10:\n      tag_15\n      tag_48\n      jump\t// in\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6575:7002  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_11:\n      tag_19\n      tag_51\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3740:3929  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_12:\n      tag_19\n      tag_55\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3987:4136  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_13:\n      tag_25\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":2158:2256  function name() public view virtual override returns (string memory) {... */\n    tag_16:\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":2212:2225  string memory */\n      0x60\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":2244:2249  _name */\n      0x03\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":2237:2249  return _name */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_66\n      swap1\n      tag_65\n      jump\t// in\n    tag_66:\n      dup1\n      iszero\n      tag_67\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_68\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_67)\n    tag_68:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_69:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_69\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_67:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":2158:2256  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":4444:4641  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_22:\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":4527:4531  bool */\n      0x00\n        /* \"@openzeppelin/contracts@4.9.3/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":4581:4613  _approve(owner, spender, amount) */\n      tag_73\n        /* \"@openzeppelin/contracts@4.9.3/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":4597:4604  spender */\n      dup6\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":4606:4612  amount */\n      dup6\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":4581:4589  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":4581:4613  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_73:\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":4630:4634  true */\n      0x01\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":4623:4634  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":4444:4641  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_70:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5203:5459  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_32:\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5300:5304  bool */\n      0x00\n        /* \"@openzeppelin/contracts@4.9.3/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5356:5394  _spendAllowance(from, spender, amount) */\n      tag_78\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5372:5376  from */\n      dup6\n        /* \"@openzeppelin/contracts@4.9.3/utils/Context.sol\":719:729  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5387:5393  amount */\n      dup6\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5356:5371  _spendAllowance */\n      tag_79\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5356:5394  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_78:\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5404:5431  _transfer(from, to, amount) */\n      tag_80\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5414:5418  from */\n      dup6\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5420:5422  to */\n      dup6\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5424:5430  amount */\n      dup6\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5404:5413  _transfer */\n      tag_81\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5404:5431  _transfer(from, to, amount) */\n      jump\t// in\n    tag_80:\n      pop\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5448:5452  true */\n      0x01\n      swap5\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5203:5459  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5854:6088  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_40:\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5942:5946  bool */\n      0x00\n        /* \"@openzeppelin/contracts@4.9.3/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5996:6060  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_73\n        /* \"@openzeppelin/contracts@4.9.3/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6012:6019  spender */\n      dup6\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6049:6059  addedValue */\n      dup6\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6021:6046  allowance(owner, spender) */\n      tag_86\n        /* \"@openzeppelin/contracts@4.9.3/utils/Context.sol\":719:729  msg.sender */\n      dup4\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6012:6019  spender */\n      dup4\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6021:6030  allowance */\n      tag_61\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6021:6046  allowance(owner, spender) */\n      jump\t// in\n    tag_86:\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6021:6059  allowance(owner, spender) + addedValue */\n      tag_87\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5996:6004  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5996:6060  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":2369:2471  function symbol() public view virtual override returns (string memory) {... */\n    tag_48:\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":2425:2438  string memory */\n      0x60\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":2457:2464  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":2450:2464  return _symbol */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6575:7002  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_52:\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6668:6672  bool */\n      0x00\n        /* \"@openzeppelin/contracts@4.9.3/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6668:6672  bool */\n      dup2\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6749:6774  allowance(owner, spender) */\n      tag_98\n        /* \"@openzeppelin/contracts@4.9.3/utils/Context.sol\":719:729  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6766:6773  spender */\n      dup7\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6749:6758  allowance */\n      tag_61\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6749:6774  allowance(owner, spender) */\n      jump\t// in\n    tag_98:\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6722:6774  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6812:6827  subtractedValue */\n      dup4\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6792:6808  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6792:6827  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6784:6869  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_99\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3040:3042   */\n      0x20\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6784:6869  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3022:3043   */\n      mstore\n        /* \"#utility.yul\":3079:3081   */\n      0x25\n        /* \"#utility.yul\":3059:3077   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3052:3082   */\n      mstore\n        /* \"#utility.yul\":3118:3152   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":3098:3116   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3091:3153   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":3169:3187   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3162:3197   */\n      mstore\n        /* \"#utility.yul\":3214:3233   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6784:6869  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_99:\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6903:6963  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_80\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6912:6917  owner */\n      dup3\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6919:6926  spender */\n      dup7\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6947:6962  subtractedValue */\n      dup7\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6928:6944  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6928:6962  currentAllowance - subtractedValue */\n      sub\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6903:6911  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6903:6963  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3740:3929  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_56:\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3819:3823  bool */\n      0x00\n        /* \"@openzeppelin/contracts@4.9.3/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3873:3901  _transfer(owner, to, amount) */\n      tag_73\n        /* \"@openzeppelin/contracts@4.9.3/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3890:3892  to */\n      dup6\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3894:3900  amount */\n      dup6\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3873:3882  _transfer */\n      tag_81\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3873:3901  _transfer(owner, to, amount) */\n      jump\t// in\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3987:4136  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_61:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":4102:4120  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":4076:4083  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":4102:4120  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":4102:4113  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":4102:4120  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":4102:4129  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3987:4136  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":10457:10797  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_74:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":10558:10577  owner != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":10550:10618  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_109\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3446:3448   */\n      0x20\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":10550:10618  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3428:3449   */\n      mstore\n        /* \"#utility.yul\":3485:3487   */\n      0x24\n        /* \"#utility.yul\":3465:3483   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3458:3488   */\n      mstore\n        /* \"#utility.yul\":3524:3558   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":3504:3522   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3497:3559   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":3575:3593   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3568:3602   */\n      mstore\n        /* \"#utility.yul\":3619:3638   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":10550:10618  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_100\n        /* \"#utility.yul\":3244:3644   */\n      jump\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":10550:10618  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_109:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":10636:10657  spender != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":10628:10696  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3851:3853   */\n      0x20\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":10628:10696  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3833:3854   */\n      mstore\n        /* \"#utility.yul\":3890:3892   */\n      0x22\n        /* \"#utility.yul\":3870:3888   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3863:3893   */\n      mstore\n        /* \"#utility.yul\":3929:3963   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":3909:3927   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3902:3964   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":3980:3998   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3973:4005   */\n      mstore\n        /* \"#utility.yul\":4022:4041   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":10628:10696  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_100\n        /* \"#utility.yul\":3649:4047   */\n      jump\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":10628:10696  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_112:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":10707:10725  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":10707:10718  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":10707:10725  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":10707:10734  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":10707:10743  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":10758:10790  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":1212:1237   */\n      dup5\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":10758:10790  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":1185:1203   */\n      add\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":10758:10790  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":10457:10797  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11078:11489  function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_79:\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11178:11202  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11205:11230  allowance(owner, spender) */\n      tag_117\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11215:11220  owner */\n      dup5\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11222:11229  spender */\n      dup5\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11205:11214  allowance */\n      tag_61\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11205:11230  allowance(owner, spender) */\n      jump\t// in\n    tag_117:\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11178:11230  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n      not(0x00)\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11244:11260  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11244:11281  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11240:11483  if (currentAllowance != type(uint256).max) {... */\n      tag_122\n      jumpi\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11325:11331  amount */\n      dup2\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11305:11321  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11305:11331  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11297:11365  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_119\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4254:4256   */\n      0x20\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11297:11365  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4236:4257   */\n      mstore\n        /* \"#utility.yul\":4293:4295   */\n      0x1d\n        /* \"#utility.yul\":4273:4291   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4266:4296   */\n      mstore\n        /* \"#utility.yul\":4332:4363   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":4312:4330   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4305:4364   */\n      mstore\n        /* \"#utility.yul\":4381:4399   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11297:11365  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_100\n        /* \"#utility.yul\":4052:4405   */\n      jump\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11297:11365  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n    tag_119:\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11407:11458  _approve(owner, spender, currentAllowance - amount) */\n      tag_122\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11416:11421  owner */\n      dup5\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11423:11430  spender */\n      dup5\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11451:11457  amount */\n      dup5\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11432:11448  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11432:11457  currentAllowance - amount */\n      sub\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11407:11415  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11407:11458  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_122:\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11168:11489  {... */\n      pop\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11078:11489  function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7456:8244  function _transfer(address from, address to, uint256 amount) internal virtual {... */\n    tag_81:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7552:7570  from != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7544:7612  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_124\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4612:4614   */\n      0x20\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7544:7612  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4594:4615   */\n      mstore\n        /* \"#utility.yul\":4651:4653   */\n      0x25\n        /* \"#utility.yul\":4631:4649   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4624:4654   */\n      mstore\n        /* \"#utility.yul\":4690:4724   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":4670:4688   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4663:4725   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":4741:4759   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4734:4769   */\n      mstore\n        /* \"#utility.yul\":4786:4805   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7544:7612  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_100\n        /* \"#utility.yul\":4410:4811   */\n      jump\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7544:7612  require(from != address(0), \"ERC20: transfer from the zero address\") */\n    tag_124:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7630:7646  to != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7622:7686  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_127\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5018:5020   */\n      0x20\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7622:7686  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5000:5021   */\n      mstore\n        /* \"#utility.yul\":5057:5059   */\n      0x23\n        /* \"#utility.yul\":5037:5055   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5030:5060   */\n      mstore\n        /* \"#utility.yul\":5096:5130   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":5076:5094   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5069:5131   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":5147:5165   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5140:5173   */\n      mstore\n        /* \"#utility.yul\":5190:5209   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7622:7686  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_100\n        /* \"#utility.yul\":4816:5215   */\n      jump\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7622:7686  require(to != address(0), \"ERC20: transfer to the zero address\") */\n    tag_127:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7768:7783  _balances[from] */\n      dup4\n      and\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7746:7765  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7768:7783  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7801:7822  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7793:7865  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_132\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5422:5424   */\n      0x20\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7793:7865  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5404:5425   */\n      mstore\n        /* \"#utility.yul\":5461:5463   */\n      0x26\n        /* \"#utility.yul\":5441:5459   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5434:5464   */\n      mstore\n        /* \"#utility.yul\":5500:5534   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":5480:5498   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5473:5535   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":5551:5569   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5544:5580   */\n      mstore\n        /* \"#utility.yul\":5597:5616   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7793:7865  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_100\n        /* \"#utility.yul\":5220:5622   */\n      jump\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7793:7865  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_132:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7899:7914  _balances[from] */\n      dup5\n      dup2\n      and\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7899:7908  _balances */\n      0x00\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7899:7914  _balances[from] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7917:7937  fromBalance - amount */\n      dup8\n      dup8\n      sub\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7899:7937  _balances[from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":8114:8127  _balances[to] */\n      swap4\n      dup8\n      and\n      dup1\n      dup4\n      mstore\n      swap2\n      dup5\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":8114:8137  _balances[to] += amount */\n      dup1\n      sload\n      dup8\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":8163:8189  Transfer(from, to, amount) */\n      swap3\n      mload\n        /* \"#utility.yul\":1212:1237   */\n      dup6\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":8114:8127  _balances[to] */\n      swap1\n      swap3\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":8163:8189  Transfer(from, to, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n        /* \"#utility.yul\":1185:1203   */\n      add\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":8163:8189  Transfer(from, to, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":8200:8237  _afterTokenTransfer(from, to, amount) */\n      tag_122\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":12073:12164  function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {} */\n      jump\n        /* \"#utility.yul\":14:432   */\n    tag_18:\n        /* \"#utility.yul\":163:165   */\n      0x20\n        /* \"#utility.yul\":152:161   */\n      dup2\n        /* \"#utility.yul\":145:166   */\n      mstore\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":195:201   */\n      dup3\n        /* \"#utility.yul\":189:202   */\n      mload\n        /* \"#utility.yul\":238:244   */\n      dup1\n        /* \"#utility.yul\":233:235   */\n      0x20\n        /* \"#utility.yul\":222:231   */\n      dup5\n        /* \"#utility.yul\":218:236   */\n      add\n        /* \"#utility.yul\":211:245   */\n      mstore\n        /* \"#utility.yul\":297:303   */\n      dup1\n        /* \"#utility.yul\":292:294   */\n      0x20\n        /* \"#utility.yul\":284:290   */\n      dup6\n        /* \"#utility.yul\":280:295   */\n      add\n        /* \"#utility.yul\":275:277   */\n      0x40\n        /* \"#utility.yul\":264:273   */\n      dup6\n        /* \"#utility.yul\":260:278   */\n      add\n        /* \"#utility.yul\":254:304   */\n      mcopy\n        /* \"#utility.yul\":353:354   */\n      0x00\n        /* \"#utility.yul\":348:350   */\n      0x40\n        /* \"#utility.yul\":339:345   */\n      dup3\n        /* \"#utility.yul\":328:337   */\n      dup6\n        /* \"#utility.yul\":324:346   */\n      add\n        /* \"#utility.yul\":320:351   */\n      add\n        /* \"#utility.yul\":313:355   */\n      mstore\n        /* \"#utility.yul\":423:425   */\n      0x40\n        /* \"#utility.yul\":416:418   */\n      0x1f\n        /* \"#utility.yul\":412:419   */\n      not\n        /* \"#utility.yul\":407:409   */\n      0x1f\n        /* \"#utility.yul\":399:405   */\n      dup4\n        /* \"#utility.yul\":395:410   */\n      add\n        /* \"#utility.yul\":391:420   */\n      and\n        /* \"#utility.yul\":380:389   */\n      dup5\n        /* \"#utility.yul\":376:421   */\n      add\n        /* \"#utility.yul\":372:426   */\n      add\n        /* \"#utility.yul\":364:426   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":14:432   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":437:610   */\n    tag_140:\n        /* \"#utility.yul\":505:525   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":554:585   */\n      dup2\n      and\n        /* \"#utility.yul\":544:586   */\n      dup2\n      eq\n        /* \"#utility.yul\":534:604   */\n      tag_144\n      jumpi\n        /* \"#utility.yul\":600:601   */\n      0x00\n        /* \"#utility.yul\":597:598   */\n      dup1\n        /* \"#utility.yul\":590:602   */\n      revert\n        /* \"#utility.yul\":534:604   */\n    tag_144:\n        /* \"#utility.yul\":437:610   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:869   */\n    tag_21:\n        /* \"#utility.yul\":683:689   */\n      0x00\n        /* \"#utility.yul\":691:697   */\n      dup1\n        /* \"#utility.yul\":744:746   */\n      0x40\n        /* \"#utility.yul\":732:741   */\n      dup4\n        /* \"#utility.yul\":723:730   */\n      dup6\n        /* \"#utility.yul\":719:742   */\n      sub\n        /* \"#utility.yul\":715:747   */\n      slt\n        /* \"#utility.yul\":712:764   */\n      iszero\n      tag_146\n      jumpi\n        /* \"#utility.yul\":760:761   */\n      0x00\n        /* \"#utility.yul\":757:758   */\n      dup1\n        /* \"#utility.yul\":750:762   */\n      revert\n        /* \"#utility.yul\":712:764   */\n    tag_146:\n        /* \"#utility.yul\":783:812   */\n      tag_147\n        /* \"#utility.yul\":802:811   */\n      dup4\n        /* \"#utility.yul\":783:812   */\n      tag_140\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":773:812   */\n      swap5\n        /* \"#utility.yul\":859:861   */\n      0x20\n        /* \"#utility.yul\":844:862   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":831:863   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":615:869   */\n      jump\t// out\n        /* \"#utility.yul\":1248:1576   */\n    tag_31:\n        /* \"#utility.yul\":1325:1331   */\n      0x00\n        /* \"#utility.yul\":1333:1339   */\n      dup1\n        /* \"#utility.yul\":1341:1347   */\n      0x00\n        /* \"#utility.yul\":1394:1396   */\n      0x60\n        /* \"#utility.yul\":1382:1391   */\n      dup5\n        /* \"#utility.yul\":1373:1380   */\n      dup7\n        /* \"#utility.yul\":1369:1392   */\n      sub\n        /* \"#utility.yul\":1365:1397   */\n      slt\n        /* \"#utility.yul\":1362:1414   */\n      iszero\n      tag_151\n      jumpi\n        /* \"#utility.yul\":1410:1411   */\n      0x00\n        /* \"#utility.yul\":1407:1408   */\n      dup1\n        /* \"#utility.yul\":1400:1412   */\n      revert\n        /* \"#utility.yul\":1362:1414   */\n    tag_151:\n        /* \"#utility.yul\":1433:1462   */\n      tag_152\n        /* \"#utility.yul\":1452:1461   */\n      dup5\n        /* \"#utility.yul\":1433:1462   */\n      tag_140\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":1423:1462   */\n      swap3\n      pop\n        /* \"#utility.yul\":1481:1519   */\n      tag_153\n        /* \"#utility.yul\":1515:1517   */\n      0x20\n        /* \"#utility.yul\":1504:1513   */\n      dup6\n        /* \"#utility.yul\":1500:1518   */\n      add\n        /* \"#utility.yul\":1481:1519   */\n      tag_140\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":1471:1519   */\n      swap2\n      pop\n        /* \"#utility.yul\":1566:1568   */\n      0x40\n        /* \"#utility.yul\":1555:1564   */\n      dup5\n        /* \"#utility.yul\":1551:1569   */\n      add\n        /* \"#utility.yul\":1538:1570   */\n      calldataload\n        /* \"#utility.yul\":1528:1570   */\n      swap1\n      pop\n        /* \"#utility.yul\":1248:1576   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1770:1956   */\n    tag_44:\n        /* \"#utility.yul\":1829:1835   */\n      0x00\n        /* \"#utility.yul\":1882:1884   */\n      0x20\n        /* \"#utility.yul\":1870:1879   */\n      dup3\n        /* \"#utility.yul\":1861:1868   */\n      dup5\n        /* \"#utility.yul\":1857:1880   */\n      sub\n        /* \"#utility.yul\":1853:1885   */\n      slt\n        /* \"#utility.yul\":1850:1902   */\n      iszero\n      tag_156\n      jumpi\n        /* \"#utility.yul\":1898:1899   */\n      0x00\n        /* \"#utility.yul\":1895:1896   */\n      dup1\n        /* \"#utility.yul\":1888:1900   */\n      revert\n        /* \"#utility.yul\":1850:1902   */\n    tag_156:\n        /* \"#utility.yul\":1921:1950   */\n      tag_157\n        /* \"#utility.yul\":1940:1949   */\n      dup3\n        /* \"#utility.yul\":1921:1950   */\n      tag_140\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":1911:1950   */\n      swap4\n        /* \"#utility.yul\":1770:1956   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1961:2221   */\n    tag_60:\n        /* \"#utility.yul\":2029:2035   */\n      0x00\n        /* \"#utility.yul\":2037:2043   */\n      dup1\n        /* \"#utility.yul\":2090:2092   */\n      0x40\n        /* \"#utility.yul\":2078:2087   */\n      dup4\n        /* \"#utility.yul\":2069:2076   */\n      dup6\n        /* \"#utility.yul\":2065:2088   */\n      sub\n        /* \"#utility.yul\":2061:2093   */\n      slt\n        /* \"#utility.yul\":2058:2110   */\n      iszero\n      tag_159\n      jumpi\n        /* \"#utility.yul\":2106:2107   */\n      0x00\n        /* \"#utility.yul\":2103:2104   */\n      dup1\n        /* \"#utility.yul\":2096:2108   */\n      revert\n        /* \"#utility.yul\":2058:2110   */\n    tag_159:\n        /* \"#utility.yul\":2129:2158   */\n      tag_160\n        /* \"#utility.yul\":2148:2157   */\n      dup4\n        /* \"#utility.yul\":2129:2158   */\n      tag_140\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":2119:2158   */\n      swap2\n      pop\n        /* \"#utility.yul\":2177:2215   */\n      tag_161\n        /* \"#utility.yul\":2211:2213   */\n      0x20\n        /* \"#utility.yul\":2200:2209   */\n      dup5\n        /* \"#utility.yul\":2196:2214   */\n      add\n        /* \"#utility.yul\":2177:2215   */\n      tag_140\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":2167:2215   */\n      swap1\n      pop\n        /* \"#utility.yul\":1961:2221   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2226:2606   */\n    tag_65:\n        /* \"#utility.yul\":2305:2306   */\n      0x01\n        /* \"#utility.yul\":2301:2313   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":2348:2360   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":2369:2430   */\n      tag_163\n      jumpi\n        /* \"#utility.yul\":2423:2427   */\n      0x7f\n        /* \"#utility.yul\":2415:2421   */\n      dup3\n        /* \"#utility.yul\":2411:2428   */\n      and\n        /* \"#utility.yul\":2401:2428   */\n      swap2\n      pop\n        /* \"#utility.yul\":2369:2430   */\n    tag_163:\n        /* \"#utility.yul\":2476:2478   */\n      0x20\n        /* \"#utility.yul\":2468:2474   */\n      dup3\n        /* \"#utility.yul\":2465:2479   */\n      lt\n        /* \"#utility.yul\":2445:2463   */\n      dup2\n        /* \"#utility.yul\":2442:2480   */\n      sub\n        /* \"#utility.yul\":2439:2600   */\n      tag_164\n      jumpi\n        /* \"#utility.yul\":2522:2532   */\n      0x4e487b71\n        /* \"#utility.yul\":2517:2520   */\n      0xe0\n        /* \"#utility.yul\":2513:2533   */\n      shl\n        /* \"#utility.yul\":2510:2511   */\n      0x00\n        /* \"#utility.yul\":2503:2534   */\n      mstore\n        /* \"#utility.yul\":2557:2561   */\n      0x22\n        /* \"#utility.yul\":2554:2555   */\n      0x04\n        /* \"#utility.yul\":2547:2562   */\n      mstore\n        /* \"#utility.yul\":2585:2589   */\n      0x24\n        /* \"#utility.yul\":2582:2583   */\n      0x00\n        /* \"#utility.yul\":2575:2590   */\n      revert\n        /* \"#utility.yul\":2439:2600   */\n    tag_164:\n      pop\n        /* \"#utility.yul\":2226:2606   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2611:2833   */\n    tag_88:\n        /* \"#utility.yul\":2676:2685   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":2697:2707   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":2694:2827   */\n      iszero\n      tag_70\n      jumpi\n        /* \"#utility.yul\":2749:2759   */\n      0x4e487b71\n        /* \"#utility.yul\":2744:2747   */\n      0xe0\n        /* \"#utility.yul\":2740:2760   */\n      shl\n        /* \"#utility.yul\":2737:2738   */\n      0x00\n        /* \"#utility.yul\":2730:2761   */\n      mstore\n        /* \"#utility.yul\":2784:2788   */\n      0x11\n        /* \"#utility.yul\":2781:2782   */\n      0x04\n        /* \"#utility.yul\":2774:2789   */\n      mstore\n        /* \"#utility.yul\":2812:2816   */\n      0x24\n        /* \"#utility.yul\":2809:2810   */\n      0x00\n        /* \"#utility.yul\":2802:2817   */\n      revert\n\n    auxdata: 0xa264697066735822122090e4af7cd9ffb9b46c49a42bc69d404577b9bd08df0979ba0c2be62d9183cde364736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_469": {
									"entryPoint": null,
									"id": 469,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 99,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 235,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 386,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 462,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 330,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 79,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3986:7",
										"nodeType": "YulBlock",
										"src": "0:3986:7",
										"statements": [
											{
												"nativeSrc": "6:3:7",
												"nodeType": "YulBlock",
												"src": "6:3:7",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "46:95:7",
													"nodeType": "YulBlock",
													"src": "46:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "63:1:7",
																		"nodeType": "YulLiteral",
																		"src": "63:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "70:3:7",
																				"nodeType": "YulLiteral",
																				"src": "70:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "75:10:7",
																				"nodeType": "YulLiteral",
																				"src": "75:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "66:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:7"
																		},
																		"nativeSrc": "66:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "56:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:7"
																},
																"nativeSrc": "56:31:7",
																"nodeType": "YulFunctionCall",
																"src": "56:31:7"
															},
															"nativeSrc": "56:31:7",
															"nodeType": "YulExpressionStatement",
															"src": "56:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "103:1:7",
																		"nodeType": "YulLiteral",
																		"src": "103:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "106:4:7",
																		"nodeType": "YulLiteral",
																		"src": "106:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "96:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:7"
																},
																"nativeSrc": "96:15:7",
																"nodeType": "YulFunctionCall",
																"src": "96:15:7"
															},
															"nativeSrc": "96:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "96:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "127:1:7",
																		"nodeType": "YulLiteral",
																		"src": "127:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "130:4:7",
																		"nodeType": "YulLiteral",
																		"src": "130:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "120:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:7"
																},
																"nativeSrc": "120:15:7",
																"nodeType": "YulFunctionCall",
																"src": "120:15:7"
															},
															"nativeSrc": "120:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "120:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "14:127:7",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:7"
											},
											{
												"body": {
													"nativeSrc": "210:652:7",
													"nodeType": "YulBlock",
													"src": "210:652:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "259:16:7",
																"nodeType": "YulBlock",
																"src": "259:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "268:1:7",
																					"nodeType": "YulLiteral",
																					"src": "268:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "271:1:7",
																					"nodeType": "YulLiteral",
																					"src": "271:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "261:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "261:6:7"
																			},
																			"nativeSrc": "261:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "261:12:7"
																		},
																		"nativeSrc": "261:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "261:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "238:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "238:6:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "246:4:7",
																						"nodeType": "YulLiteral",
																						"src": "246:4:7",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "234:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "234:3:7"
																				},
																				"nativeSrc": "234:17:7",
																				"nodeType": "YulFunctionCall",
																				"src": "234:17:7"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "253:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "253:3:7"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "230:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "230:3:7"
																		},
																		"nativeSrc": "230:27:7",
																		"nodeType": "YulFunctionCall",
																		"src": "230:27:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "223:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "223:6:7"
																},
																"nativeSrc": "223:35:7",
																"nodeType": "YulFunctionCall",
																"src": "223:35:7"
															},
															"nativeSrc": "220:55:7",
															"nodeType": "YulIf",
															"src": "220:55:7"
														},
														{
															"nativeSrc": "284:23:7",
															"nodeType": "YulVariableDeclaration",
															"src": "284:23:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "300:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "300:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "294:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "294:5:7"
																},
																"nativeSrc": "294:13:7",
																"nodeType": "YulFunctionCall",
																"src": "294:13:7"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "288:2:7",
																	"nodeType": "YulTypedName",
																	"src": "288:2:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "316:28:7",
															"nodeType": "YulVariableDeclaration",
															"src": "316:28:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "334:2:7",
																				"nodeType": "YulLiteral",
																				"src": "334:2:7",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "338:1:7",
																				"nodeType": "YulLiteral",
																				"src": "338:1:7",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "330:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "330:3:7"
																		},
																		"nativeSrc": "330:10:7",
																		"nodeType": "YulFunctionCall",
																		"src": "330:10:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "342:1:7",
																		"nodeType": "YulLiteral",
																		"src": "342:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "326:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "326:3:7"
																},
																"nativeSrc": "326:18:7",
																"nodeType": "YulFunctionCall",
																"src": "326:18:7"
															},
															"variables": [
																{
																	"name": "_2",
																	"nativeSrc": "320:2:7",
																	"nodeType": "YulTypedName",
																	"src": "320:2:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "367:22:7",
																"nodeType": "YulBlock",
																"src": "367:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "369:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "369:16:7"
																			},
																			"nativeSrc": "369:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "369:18:7"
																		},
																		"nativeSrc": "369:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "369:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "359:2:7",
																		"nodeType": "YulIdentifier",
																		"src": "359:2:7"
																	},
																	{
																		"name": "_2",
																		"nativeSrc": "363:2:7",
																		"nodeType": "YulIdentifier",
																		"src": "363:2:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "356:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "356:2:7"
																},
																"nativeSrc": "356:10:7",
																"nodeType": "YulFunctionCall",
																"src": "356:10:7"
															},
															"nativeSrc": "353:36:7",
															"nodeType": "YulIf",
															"src": "353:36:7"
														},
														{
															"nativeSrc": "398:17:7",
															"nodeType": "YulVariableDeclaration",
															"src": "398:17:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "412:2:7",
																		"nodeType": "YulLiteral",
																		"src": "412:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "408:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "408:3:7"
																},
																"nativeSrc": "408:7:7",
																"nodeType": "YulFunctionCall",
																"src": "408:7:7"
															},
															"variables": [
																{
																	"name": "_3",
																	"nativeSrc": "402:2:7",
																	"nodeType": "YulTypedName",
																	"src": "402:2:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "424:23:7",
															"nodeType": "YulVariableDeclaration",
															"src": "424:23:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "444:2:7",
																		"nodeType": "YulLiteral",
																		"src": "444:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "438:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "438:5:7"
																},
																"nativeSrc": "438:9:7",
																"nodeType": "YulFunctionCall",
																"src": "438:9:7"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "428:6:7",
																	"nodeType": "YulTypedName",
																	"src": "428:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "456:71:7",
															"nodeType": "YulVariableDeclaration",
															"src": "456:71:7",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "478:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "478:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nativeSrc": "502:2:7",
																										"nodeType": "YulIdentifier",
																										"src": "502:2:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "506:4:7",
																										"nodeType": "YulLiteral",
																										"src": "506:4:7",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "498:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "498:3:7"
																								},
																								"nativeSrc": "498:13:7",
																								"nodeType": "YulFunctionCall",
																								"src": "498:13:7"
																							},
																							{
																								"name": "_3",
																								"nativeSrc": "513:2:7",
																								"nodeType": "YulIdentifier",
																								"src": "513:2:7"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "494:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "494:3:7"
																						},
																						"nativeSrc": "494:22:7",
																						"nodeType": "YulFunctionCall",
																						"src": "494:22:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "518:2:7",
																						"nodeType": "YulLiteral",
																						"src": "518:2:7",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "490:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "490:3:7"
																				},
																				"nativeSrc": "490:31:7",
																				"nodeType": "YulFunctionCall",
																				"src": "490:31:7"
																			},
																			{
																				"name": "_3",
																				"nativeSrc": "523:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "523:2:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "486:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "486:3:7"
																		},
																		"nativeSrc": "486:40:7",
																		"nodeType": "YulFunctionCall",
																		"src": "486:40:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "474:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "474:3:7"
																},
																"nativeSrc": "474:53:7",
																"nodeType": "YulFunctionCall",
																"src": "474:53:7"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "460:10:7",
																	"nodeType": "YulTypedName",
																	"src": "460:10:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "586:22:7",
																"nodeType": "YulBlock",
																"src": "586:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "588:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "588:16:7"
																			},
																			"nativeSrc": "588:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "588:18:7"
																		},
																		"nativeSrc": "588:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "588:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "545:10:7",
																				"nodeType": "YulIdentifier",
																				"src": "545:10:7"
																			},
																			{
																				"name": "_2",
																				"nativeSrc": "557:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "557:2:7"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "542:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "542:2:7"
																		},
																		"nativeSrc": "542:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "542:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "565:10:7",
																				"nodeType": "YulIdentifier",
																				"src": "565:10:7"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "577:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "577:6:7"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "562:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "562:2:7"
																		},
																		"nativeSrc": "562:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "562:22:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "539:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "539:2:7"
																},
																"nativeSrc": "539:46:7",
																"nodeType": "YulFunctionCall",
																"src": "539:46:7"
															},
															"nativeSrc": "536:72:7",
															"nodeType": "YulIf",
															"src": "536:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "624:2:7",
																		"nodeType": "YulLiteral",
																		"src": "624:2:7",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "628:10:7",
																		"nodeType": "YulIdentifier",
																		"src": "628:10:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "617:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "617:6:7"
																},
																"nativeSrc": "617:22:7",
																"nodeType": "YulFunctionCall",
																"src": "617:22:7"
															},
															"nativeSrc": "617:22:7",
															"nodeType": "YulExpressionStatement",
															"src": "617:22:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "655:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "655:6:7"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "663:2:7",
																		"nodeType": "YulIdentifier",
																		"src": "663:2:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "648:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "648:6:7"
																},
																"nativeSrc": "648:18:7",
																"nodeType": "YulFunctionCall",
																"src": "648:18:7"
															},
															"nativeSrc": "648:18:7",
															"nodeType": "YulExpressionStatement",
															"src": "648:18:7"
														},
														{
															"body": {
																"nativeSrc": "714:16:7",
																"nodeType": "YulBlock",
																"src": "714:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "723:1:7",
																					"nodeType": "YulLiteral",
																					"src": "723:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "726:1:7",
																					"nodeType": "YulLiteral",
																					"src": "726:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "716:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "716:6:7"
																			},
																			"nativeSrc": "716:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "716:12:7"
																		},
																		"nativeSrc": "716:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "716:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "689:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "689:6:7"
																					},
																					{
																						"name": "_1",
																						"nativeSrc": "697:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "697:2:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "685:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "685:3:7"
																				},
																				"nativeSrc": "685:15:7",
																				"nodeType": "YulFunctionCall",
																				"src": "685:15:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "702:4:7",
																				"nodeType": "YulLiteral",
																				"src": "702:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "681:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "681:3:7"
																		},
																		"nativeSrc": "681:26:7",
																		"nodeType": "YulFunctionCall",
																		"src": "681:26:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "709:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "709:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "678:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "678:2:7"
																},
																"nativeSrc": "678:35:7",
																"nodeType": "YulFunctionCall",
																"src": "678:35:7"
															},
															"nativeSrc": "675:55:7",
															"nodeType": "YulIf",
															"src": "675:55:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "749:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "749:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "757:4:7",
																				"nodeType": "YulLiteral",
																				"src": "757:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "745:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "745:3:7"
																		},
																		"nativeSrc": "745:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "745:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "768:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "768:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "776:4:7",
																				"nodeType": "YulLiteral",
																				"src": "776:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "764:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "764:3:7"
																		},
																		"nativeSrc": "764:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "764:17:7"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "783:2:7",
																		"nodeType": "YulIdentifier",
																		"src": "783:2:7"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "739:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "739:5:7"
																},
																"nativeSrc": "739:47:7",
																"nodeType": "YulFunctionCall",
																"src": "739:47:7"
															},
															"nativeSrc": "739:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "739:47:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nativeSrc": "810:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "810:6:7"
																					},
																					{
																						"name": "_1",
																						"nativeSrc": "818:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "818:2:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "806:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "806:3:7"
																				},
																				"nativeSrc": "806:15:7",
																				"nodeType": "YulFunctionCall",
																				"src": "806:15:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "823:4:7",
																				"nodeType": "YulLiteral",
																				"src": "823:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "802:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "802:3:7"
																		},
																		"nativeSrc": "802:26:7",
																		"nodeType": "YulFunctionCall",
																		"src": "802:26:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "830:1:7",
																		"nodeType": "YulLiteral",
																		"src": "830:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "795:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "795:6:7"
																},
																"nativeSrc": "795:37:7",
																"nodeType": "YulFunctionCall",
																"src": "795:37:7"
															},
															"nativeSrc": "795:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "795:37:7"
														},
														{
															"nativeSrc": "841:15:7",
															"nodeType": "YulAssignment",
															"src": "841:15:7",
															"value": {
																"name": "memPtr",
																"nativeSrc": "850:6:7",
																"nodeType": "YulIdentifier",
																"src": "850:6:7"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "841:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "841:5:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nativeSrc": "146:716:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "184:6:7",
														"nodeType": "YulTypedName",
														"src": "184:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "192:3:7",
														"nodeType": "YulTypedName",
														"src": "192:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "200:5:7",
														"nodeType": "YulTypedName",
														"src": "200:5:7",
														"type": ""
													}
												],
												"src": "146:716:7"
											},
											{
												"body": {
													"nativeSrc": "985:444:7",
													"nodeType": "YulBlock",
													"src": "985:444:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1031:16:7",
																"nodeType": "YulBlock",
																"src": "1031:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1040:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1040:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1043:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1043:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1033:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1033:6:7"
																			},
																			"nativeSrc": "1033:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1033:12:7"
																		},
																		"nativeSrc": "1033:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1033:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1006:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1006:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1015:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1015:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1002:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1002:3:7"
																		},
																		"nativeSrc": "1002:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1002:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1027:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1027:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "998:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "998:3:7"
																},
																"nativeSrc": "998:32:7",
																"nodeType": "YulFunctionCall",
																"src": "998:32:7"
															},
															"nativeSrc": "995:52:7",
															"nodeType": "YulIf",
															"src": "995:52:7"
														},
														{
															"nativeSrc": "1056:30:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1056:30:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1076:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1076:9:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1070:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1070:5:7"
																},
																"nativeSrc": "1070:16:7",
																"nodeType": "YulFunctionCall",
																"src": "1070:16:7"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "1060:6:7",
																	"nodeType": "YulTypedName",
																	"src": "1060:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1095:28:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1095:28:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1113:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1113:2:7",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1117:1:7",
																				"nodeType": "YulLiteral",
																				"src": "1117:1:7",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1109:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1109:3:7"
																		},
																		"nativeSrc": "1109:10:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1109:10:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1121:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1121:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "1105:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1105:3:7"
																},
																"nativeSrc": "1105:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1105:18:7"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "1099:2:7",
																	"nodeType": "YulTypedName",
																	"src": "1099:2:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1150:16:7",
																"nodeType": "YulBlock",
																"src": "1150:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1159:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1159:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1162:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1162:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1152:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1152:6:7"
																			},
																			"nativeSrc": "1152:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1152:12:7"
																		},
																		"nativeSrc": "1152:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1152:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1138:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1138:6:7"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "1146:2:7",
																		"nodeType": "YulIdentifier",
																		"src": "1146:2:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1135:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "1135:2:7"
																},
																"nativeSrc": "1135:14:7",
																"nodeType": "YulFunctionCall",
																"src": "1135:14:7"
															},
															"nativeSrc": "1132:34:7",
															"nodeType": "YulIf",
															"src": "1132:34:7"
														},
														{
															"nativeSrc": "1175:71:7",
															"nodeType": "YulAssignment",
															"src": "1175:71:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1218:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1218:9:7"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "1229:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1229:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1214:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1214:3:7"
																		},
																		"nativeSrc": "1214:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1214:22:7"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1238:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "1238:7:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nativeSrc": "1185:28:7",
																	"nodeType": "YulIdentifier",
																	"src": "1185:28:7"
																},
																"nativeSrc": "1185:61:7",
																"nodeType": "YulFunctionCall",
																"src": "1185:61:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1175:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1175:6:7"
																}
															]
														},
														{
															"nativeSrc": "1255:41:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1255:41:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1281:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1281:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1292:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1292:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1277:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1277:3:7"
																		},
																		"nativeSrc": "1277:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1277:18:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1271:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1271:5:7"
																},
																"nativeSrc": "1271:25:7",
																"nodeType": "YulFunctionCall",
																"src": "1271:25:7"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nativeSrc": "1259:8:7",
																	"nodeType": "YulTypedName",
																	"src": "1259:8:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1325:16:7",
																"nodeType": "YulBlock",
																"src": "1325:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1334:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1334:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1337:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1337:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1327:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1327:6:7"
																			},
																			"nativeSrc": "1327:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1327:12:7"
																		},
																		"nativeSrc": "1327:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1327:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nativeSrc": "1311:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "1311:8:7"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "1321:2:7",
																		"nodeType": "YulIdentifier",
																		"src": "1321:2:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1308:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "1308:2:7"
																},
																"nativeSrc": "1308:16:7",
																"nodeType": "YulFunctionCall",
																"src": "1308:16:7"
															},
															"nativeSrc": "1305:36:7",
															"nodeType": "YulIf",
															"src": "1305:36:7"
														},
														{
															"nativeSrc": "1350:73:7",
															"nodeType": "YulAssignment",
															"src": "1350:73:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1393:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1393:9:7"
																			},
																			{
																				"name": "offset_1",
																				"nativeSrc": "1404:8:7",
																				"nodeType": "YulIdentifier",
																				"src": "1404:8:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1389:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1389:3:7"
																		},
																		"nativeSrc": "1389:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1389:24:7"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1415:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "1415:7:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nativeSrc": "1360:28:7",
																	"nodeType": "YulIdentifier",
																	"src": "1360:28:7"
																},
																"nativeSrc": "1360:63:7",
																"nodeType": "YulFunctionCall",
																"src": "1360:63:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1350:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1350:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nativeSrc": "867:562:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "943:9:7",
														"nodeType": "YulTypedName",
														"src": "943:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "954:7:7",
														"nodeType": "YulTypedName",
														"src": "954:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "966:6:7",
														"nodeType": "YulTypedName",
														"src": "966:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "974:6:7",
														"nodeType": "YulTypedName",
														"src": "974:6:7",
														"type": ""
													}
												],
												"src": "867:562:7"
											},
											{
												"body": {
													"nativeSrc": "1489:325:7",
													"nodeType": "YulBlock",
													"src": "1489:325:7",
													"statements": [
														{
															"nativeSrc": "1499:22:7",
															"nodeType": "YulAssignment",
															"src": "1499:22:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1513:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1513:1:7",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "1516:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "1516:4:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "1509:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1509:3:7"
																},
																"nativeSrc": "1509:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1509:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1499:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1499:6:7"
																}
															]
														},
														{
															"nativeSrc": "1530:38:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1530:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1560:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "1560:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1566:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1566:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1556:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1556:3:7"
																},
																"nativeSrc": "1556:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1556:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "1534:18:7",
																	"nodeType": "YulTypedName",
																	"src": "1534:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1607:31:7",
																"nodeType": "YulBlock",
																"src": "1607:31:7",
																"statements": [
																	{
																		"nativeSrc": "1609:27:7",
																		"nodeType": "YulAssignment",
																		"src": "1609:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "1623:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "1623:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1631:4:7",
																					"nodeType": "YulLiteral",
																					"src": "1631:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "1619:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "1619:3:7"
																			},
																			"nativeSrc": "1619:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1619:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "1609:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1609:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1587:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "1587:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1580:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1580:6:7"
																},
																"nativeSrc": "1580:26:7",
																"nodeType": "YulFunctionCall",
																"src": "1580:26:7"
															},
															"nativeSrc": "1577:61:7",
															"nodeType": "YulIf",
															"src": "1577:61:7"
														},
														{
															"body": {
																"nativeSrc": "1697:111:7",
																"nodeType": "YulBlock",
																"src": "1697:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1718:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1718:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1725:3:7",
																							"nodeType": "YulLiteral",
																							"src": "1725:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "1730:10:7",
																							"nodeType": "YulLiteral",
																							"src": "1730:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "1721:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "1721:3:7"
																					},
																					"nativeSrc": "1721:20:7",
																					"nodeType": "YulFunctionCall",
																					"src": "1721:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1711:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1711:6:7"
																			},
																			"nativeSrc": "1711:31:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1711:31:7"
																		},
																		"nativeSrc": "1711:31:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1711:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1762:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1762:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1765:4:7",
																					"nodeType": "YulLiteral",
																					"src": "1765:4:7",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1755:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1755:6:7"
																			},
																			"nativeSrc": "1755:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1755:15:7"
																		},
																		"nativeSrc": "1755:15:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1755:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1790:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1790:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1793:4:7",
																					"nodeType": "YulLiteral",
																					"src": "1793:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1783:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1783:6:7"
																			},
																			"nativeSrc": "1783:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1783:15:7"
																		},
																		"nativeSrc": "1783:15:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1783:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1653:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "1653:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1676:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1676:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1684:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1684:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1673:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "1673:2:7"
																		},
																		"nativeSrc": "1673:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1673:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "1650:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "1650:2:7"
																},
																"nativeSrc": "1650:38:7",
																"nodeType": "YulFunctionCall",
																"src": "1650:38:7"
															},
															"nativeSrc": "1647:161:7",
															"nodeType": "YulIf",
															"src": "1647:161:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "1434:380:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1469:4:7",
														"nodeType": "YulTypedName",
														"src": "1469:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1478:6:7",
														"nodeType": "YulTypedName",
														"src": "1478:6:7",
														"type": ""
													}
												],
												"src": "1434:380:7"
											},
											{
												"body": {
													"nativeSrc": "1875:65:7",
													"nodeType": "YulBlock",
													"src": "1875:65:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1892:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1892:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "1895:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1895:3:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1885:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1885:6:7"
																},
																"nativeSrc": "1885:14:7",
																"nodeType": "YulFunctionCall",
																"src": "1885:14:7"
															},
															"nativeSrc": "1885:14:7",
															"nodeType": "YulExpressionStatement",
															"src": "1885:14:7"
														},
														{
															"nativeSrc": "1908:26:7",
															"nodeType": "YulAssignment",
															"src": "1908:26:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1926:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1926:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1929:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1929:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "1916:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "1916:9:7"
																},
																"nativeSrc": "1916:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1916:18:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "1908:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1908:4:7"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "1819:121:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "1858:3:7",
														"nodeType": "YulTypedName",
														"src": "1858:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "1866:4:7",
														"nodeType": "YulTypedName",
														"src": "1866:4:7",
														"type": ""
													}
												],
												"src": "1819:121:7"
											},
											{
												"body": {
													"nativeSrc": "2026:437:7",
													"nodeType": "YulBlock",
													"src": "2026:437:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2059:398:7",
																"nodeType": "YulBlock",
																"src": "2059:398:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2080:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2080:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "2083:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "2083:5:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2073:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2073:6:7"
																			},
																			"nativeSrc": "2073:16:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2073:16:7"
																		},
																		"nativeSrc": "2073:16:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2073:16:7"
																	},
																	{
																		"nativeSrc": "2102:30:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2102:30:7",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2124:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2124:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2127:4:7",
																					"nodeType": "YulLiteral",
																					"src": "2127:4:7",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "2114:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2114:9:7"
																			},
																			"nativeSrc": "2114:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2114:18:7"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "2106:4:7",
																				"nodeType": "YulTypedName",
																				"src": "2106:4:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2145:57:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2145:57:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "2168:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "2168:4:7"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2178:1:7",
																							"nodeType": "YulLiteral",
																							"src": "2178:1:7",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "2185:10:7",
																									"nodeType": "YulIdentifier",
																									"src": "2185:10:7"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2197:2:7",
																									"nodeType": "YulLiteral",
																									"src": "2197:2:7",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2181:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "2181:3:7"
																							},
																							"nativeSrc": "2181:19:7",
																							"nodeType": "YulFunctionCall",
																							"src": "2181:19:7"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "2174:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "2174:3:7"
																					},
																					"nativeSrc": "2174:27:7",
																					"nodeType": "YulFunctionCall",
																					"src": "2174:27:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2164:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2164:3:7"
																			},
																			"nativeSrc": "2164:38:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2164:38:7"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2149:11:7",
																				"nodeType": "YulTypedName",
																				"src": "2149:11:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "2239:23:7",
																			"nodeType": "YulBlock",
																			"src": "2239:23:7",
																			"statements": [
																				{
																					"nativeSrc": "2241:19:7",
																					"nodeType": "YulAssignment",
																					"src": "2241:19:7",
																					"value": {
																						"name": "data",
																						"nativeSrc": "2256:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "2256:4:7"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "2241:11:7",
																							"nodeType": "YulIdentifier",
																							"src": "2241:11:7"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "2221:10:7",
																					"nodeType": "YulIdentifier",
																					"src": "2221:10:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2233:4:7",
																					"nodeType": "YulLiteral",
																					"src": "2233:4:7",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "2218:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "2218:2:7"
																			},
																			"nativeSrc": "2218:20:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2218:20:7"
																		},
																		"nativeSrc": "2215:47:7",
																		"nodeType": "YulIf",
																		"src": "2215:47:7"
																	},
																	{
																		"nativeSrc": "2275:41:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2275:41:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "2289:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "2289:4:7"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2299:1:7",
																							"nodeType": "YulLiteral",
																							"src": "2299:1:7",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "2306:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "2306:3:7"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2311:2:7",
																									"nodeType": "YulLiteral",
																									"src": "2311:2:7",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2302:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "2302:3:7"
																							},
																							"nativeSrc": "2302:12:7",
																							"nodeType": "YulFunctionCall",
																							"src": "2302:12:7"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "2295:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "2295:3:7"
																					},
																					"nativeSrc": "2295:20:7",
																					"nodeType": "YulFunctionCall",
																					"src": "2295:20:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2285:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2285:3:7"
																			},
																			"nativeSrc": "2285:31:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2285:31:7"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "2279:2:7",
																				"nodeType": "YulTypedName",
																				"src": "2279:2:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2329:24:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2329:24:7",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "2342:11:7",
																			"nodeType": "YulIdentifier",
																			"src": "2342:11:7"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "2333:5:7",
																				"nodeType": "YulTypedName",
																				"src": "2333:5:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "2427:20:7",
																			"nodeType": "YulBlock",
																			"src": "2427:20:7",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "2436:5:7",
																								"nodeType": "YulIdentifier",
																								"src": "2436:5:7"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2443:1:7",
																								"nodeType": "YulLiteral",
																								"src": "2443:1:7",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "2429:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "2429:6:7"
																						},
																						"nativeSrc": "2429:16:7",
																						"nodeType": "YulFunctionCall",
																						"src": "2429:16:7"
																					},
																					"nativeSrc": "2429:16:7",
																					"nodeType": "YulExpressionStatement",
																					"src": "2429:16:7"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2377:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "2377:5:7"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "2384:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "2384:2:7"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "2374:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "2374:2:7"
																			},
																			"nativeSrc": "2374:13:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2374:13:7"
																		},
																		"nativeSrc": "2366:81:7",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "2388:26:7",
																			"nodeType": "YulBlock",
																			"src": "2388:26:7",
																			"statements": [
																				{
																					"nativeSrc": "2390:22:7",
																					"nodeType": "YulAssignment",
																					"src": "2390:22:7",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "2403:5:7",
																								"nodeType": "YulIdentifier",
																								"src": "2403:5:7"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2410:1:7",
																								"nodeType": "YulLiteral",
																								"src": "2410:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "2399:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "2399:3:7"
																						},
																						"nativeSrc": "2399:13:7",
																						"nodeType": "YulFunctionCall",
																						"src": "2399:13:7"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "2390:5:7",
																							"nodeType": "YulIdentifier",
																							"src": "2390:5:7"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "2370:3:7",
																			"nodeType": "YulBlock",
																			"src": "2370:3:7",
																			"statements": []
																		},
																		"src": "2366:81:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2042:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2042:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2047:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2047:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2039:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "2039:2:7"
																},
																"nativeSrc": "2039:11:7",
																"nodeType": "YulFunctionCall",
																"src": "2039:11:7"
															},
															"nativeSrc": "2036:421:7",
															"nodeType": "YulIf",
															"src": "2036:421:7"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "1945:518:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "1998:5:7",
														"nodeType": "YulTypedName",
														"src": "1998:5:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2005:3:7",
														"nodeType": "YulTypedName",
														"src": "2005:3:7",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2010:10:7",
														"nodeType": "YulTypedName",
														"src": "2010:10:7",
														"type": ""
													}
												],
												"src": "1945:518:7"
											},
											{
												"body": {
													"nativeSrc": "2553:81:7",
													"nodeType": "YulBlock",
													"src": "2553:81:7",
													"statements": [
														{
															"nativeSrc": "2563:65:7",
															"nodeType": "YulAssignment",
															"src": "2563:65:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "2578:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "2578:4:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "2596:1:7",
																										"nodeType": "YulLiteral",
																										"src": "2596:1:7",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "2599:3:7",
																										"nodeType": "YulIdentifier",
																										"src": "2599:3:7"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "2592:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "2592:3:7"
																								},
																								"nativeSrc": "2592:11:7",
																								"nodeType": "YulFunctionCall",
																								"src": "2592:11:7"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "2609:1:7",
																										"nodeType": "YulLiteral",
																										"src": "2609:1:7",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "2605:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "2605:3:7"
																								},
																								"nativeSrc": "2605:6:7",
																								"nodeType": "YulFunctionCall",
																								"src": "2605:6:7"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "2588:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "2588:3:7"
																						},
																						"nativeSrc": "2588:24:7",
																						"nodeType": "YulFunctionCall",
																						"src": "2588:24:7"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "2584:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2584:3:7"
																				},
																				"nativeSrc": "2584:29:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2584:29:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2574:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2574:3:7"
																		},
																		"nativeSrc": "2574:40:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2574:40:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2620:1:7",
																				"nodeType": "YulLiteral",
																				"src": "2620:1:7",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "2623:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2623:3:7"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "2616:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2616:3:7"
																		},
																		"nativeSrc": "2616:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2616:11:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2571:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "2571:2:7"
																},
																"nativeSrc": "2571:57:7",
																"nodeType": "YulFunctionCall",
																"src": "2571:57:7"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "2563:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2563:4:7"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "2468:166:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2530:4:7",
														"nodeType": "YulTypedName",
														"src": "2530:4:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2536:3:7",
														"nodeType": "YulTypedName",
														"src": "2536:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "2544:4:7",
														"nodeType": "YulTypedName",
														"src": "2544:4:7",
														"type": ""
													}
												],
												"src": "2468:166:7"
											},
											{
												"body": {
													"nativeSrc": "2735:1249:7",
													"nodeType": "YulBlock",
													"src": "2735:1249:7",
													"statements": [
														{
															"nativeSrc": "2745:24:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2745:24:7",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2765:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2765:3:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2759:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2759:5:7"
																},
																"nativeSrc": "2759:10:7",
																"nodeType": "YulFunctionCall",
																"src": "2759:10:7"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "2749:6:7",
																	"nodeType": "YulTypedName",
																	"src": "2749:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2812:22:7",
																"nodeType": "YulBlock",
																"src": "2812:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "2814:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "2814:16:7"
																			},
																			"nativeSrc": "2814:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2814:18:7"
																		},
																		"nativeSrc": "2814:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2814:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "2784:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2784:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2800:2:7",
																						"nodeType": "YulLiteral",
																						"src": "2800:2:7",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2804:1:7",
																						"nodeType": "YulLiteral",
																						"src": "2804:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "2796:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2796:3:7"
																				},
																				"nativeSrc": "2796:10:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2796:10:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2808:1:7",
																				"nodeType": "YulLiteral",
																				"src": "2808:1:7",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2792:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2792:3:7"
																		},
																		"nativeSrc": "2792:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2792:18:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2781:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "2781:2:7"
																},
																"nativeSrc": "2781:30:7",
																"nodeType": "YulFunctionCall",
																"src": "2781:30:7"
															},
															"nativeSrc": "2778:56:7",
															"nodeType": "YulIf",
															"src": "2778:56:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2887:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "2887:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "2925:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "2925:4:7"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "2919:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "2919:5:7"
																				},
																				"nativeSrc": "2919:11:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2919:11:7"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "2893:25:7",
																			"nodeType": "YulIdentifier",
																			"src": "2893:25:7"
																		},
																		"nativeSrc": "2893:38:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2893:38:7"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "2933:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2933:6:7"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "2843:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "2843:43:7"
																},
																"nativeSrc": "2843:97:7",
																"nodeType": "YulFunctionCall",
																"src": "2843:97:7"
															},
															"nativeSrc": "2843:97:7",
															"nodeType": "YulExpressionStatement",
															"src": "2843:97:7"
														},
														{
															"nativeSrc": "2949:18:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2949:18:7",
															"value": {
																"kind": "number",
																"nativeSrc": "2966:1:7",
																"nodeType": "YulLiteral",
																"src": "2966:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "2953:9:7",
																	"nodeType": "YulTypedName",
																	"src": "2953:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2976:23:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2976:23:7",
															"value": {
																"kind": "number",
																"nativeSrc": "2995:4:7",
																"nodeType": "YulLiteral",
																"src": "2995:4:7",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nativeSrc": "2980:11:7",
																	"nodeType": "YulTypedName",
																	"src": "2980:11:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3008:17:7",
															"nodeType": "YulAssignment",
															"src": "3008:17:7",
															"value": {
																"kind": "number",
																"nativeSrc": "3021:4:7",
																"nodeType": "YulLiteral",
																"src": "3021:4:7",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "3008:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "3008:9:7"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "3071:656:7",
																		"nodeType": "YulBlock",
																		"src": "3071:656:7",
																		"statements": [
																			{
																				"nativeSrc": "3085:35:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3085:35:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "3104:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "3104:6:7"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "3116:2:7",
																									"nodeType": "YulLiteral",
																									"src": "3116:2:7",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "3112:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "3112:3:7"
																							},
																							"nativeSrc": "3112:7:7",
																							"nodeType": "YulFunctionCall",
																							"src": "3112:7:7"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "3100:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "3100:3:7"
																					},
																					"nativeSrc": "3100:20:7",
																					"nodeType": "YulFunctionCall",
																					"src": "3100:20:7"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "3089:7:7",
																						"nodeType": "YulTypedName",
																						"src": "3089:7:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "3133:49:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3133:49:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3177:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "3177:4:7"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "3147:29:7",
																						"nodeType": "YulIdentifier",
																						"src": "3147:29:7"
																					},
																					"nativeSrc": "3147:35:7",
																					"nodeType": "YulFunctionCall",
																					"src": "3147:35:7"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "3137:6:7",
																						"nodeType": "YulTypedName",
																						"src": "3137:6:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "3195:10:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3195:10:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "3204:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3204:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "3199:1:7",
																						"nodeType": "YulTypedName",
																						"src": "3199:1:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "3282:172:7",
																					"nodeType": "YulBlock",
																					"src": "3282:172:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3307:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "3307:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "3325:3:7",
																														"nodeType": "YulIdentifier",
																														"src": "3325:3:7"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "3330:9:7",
																														"nodeType": "YulIdentifier",
																														"src": "3330:9:7"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "3321:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "3321:3:7"
																												},
																												"nativeSrc": "3321:19:7",
																												"nodeType": "YulFunctionCall",
																												"src": "3321:19:7"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "3315:5:7",
																											"nodeType": "YulIdentifier",
																											"src": "3315:5:7"
																										},
																										"nativeSrc": "3315:26:7",
																										"nodeType": "YulFunctionCall",
																										"src": "3315:26:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "3300:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "3300:6:7"
																								},
																								"nativeSrc": "3300:42:7",
																								"nodeType": "YulFunctionCall",
																								"src": "3300:42:7"
																							},
																							"nativeSrc": "3300:42:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "3300:42:7"
																						},
																						{
																							"nativeSrc": "3359:24:7",
																							"nodeType": "YulAssignment",
																							"src": "3359:24:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3373:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "3373:6:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "3381:1:7",
																										"nodeType": "YulLiteral",
																										"src": "3381:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3369:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "3369:3:7"
																								},
																								"nativeSrc": "3369:14:7",
																								"nodeType": "YulFunctionCall",
																								"src": "3369:14:7"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "3359:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "3359:6:7"
																								}
																							]
																						},
																						{
																							"nativeSrc": "3400:40:7",
																							"nodeType": "YulAssignment",
																							"src": "3400:40:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "3417:9:7",
																										"nodeType": "YulIdentifier",
																										"src": "3417:9:7"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "3428:11:7",
																										"nodeType": "YulIdentifier",
																										"src": "3428:11:7"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3413:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "3413:3:7"
																								},
																								"nativeSrc": "3413:27:7",
																								"nodeType": "YulFunctionCall",
																								"src": "3413:27:7"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "3400:9:7",
																									"nodeType": "YulIdentifier",
																									"src": "3400:9:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "3229:1:7",
																							"nodeType": "YulIdentifier",
																							"src": "3229:1:7"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "3232:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "3232:7:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "3226:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "3226:2:7"
																					},
																					"nativeSrc": "3226:14:7",
																					"nodeType": "YulFunctionCall",
																					"src": "3226:14:7"
																				},
																				"nativeSrc": "3218:236:7",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "3241:28:7",
																					"nodeType": "YulBlock",
																					"src": "3241:28:7",
																					"statements": [
																						{
																							"nativeSrc": "3243:24:7",
																							"nodeType": "YulAssignment",
																							"src": "3243:24:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "3252:1:7",
																										"nodeType": "YulIdentifier",
																										"src": "3252:1:7"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "3255:11:7",
																										"nodeType": "YulIdentifier",
																										"src": "3255:11:7"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3248:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "3248:3:7"
																								},
																								"nativeSrc": "3248:19:7",
																								"nodeType": "YulFunctionCall",
																								"src": "3248:19:7"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "3243:1:7",
																									"nodeType": "YulIdentifier",
																									"src": "3243:1:7"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "3222:3:7",
																					"nodeType": "YulBlock",
																					"src": "3222:3:7",
																					"statements": []
																				},
																				"src": "3218:236:7"
																			},
																			{
																				"body": {
																					"nativeSrc": "3502:166:7",
																					"nodeType": "YulBlock",
																					"src": "3502:166:7",
																					"statements": [
																						{
																							"nativeSrc": "3520:43:7",
																							"nodeType": "YulVariableDeclaration",
																							"src": "3520:43:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "3547:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "3547:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "3552:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "3552:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "3543:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "3543:3:7"
																										},
																										"nativeSrc": "3543:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "3543:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "3537:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "3537:5:7"
																								},
																								"nativeSrc": "3537:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "3537:26:7"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "3524:9:7",
																									"nodeType": "YulTypedName",
																									"src": "3524:9:7",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3587:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "3587:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "3599:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "3599:9:7"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "3626:1:7",
																																				"nodeType": "YulLiteral",
																																				"src": "3626:1:7",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "3629:6:7",
																																				"nodeType": "YulIdentifier",
																																				"src": "3629:6:7"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "3622:3:7",
																																			"nodeType": "YulIdentifier",
																																			"src": "3622:3:7"
																																		},
																																		"nativeSrc": "3622:14:7",
																																		"nodeType": "YulFunctionCall",
																																		"src": "3622:14:7"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "3638:3:7",
																																		"nodeType": "YulLiteral",
																																		"src": "3638:3:7",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "3618:3:7",
																																	"nodeType": "YulIdentifier",
																																	"src": "3618:3:7"
																																},
																																"nativeSrc": "3618:24:7",
																																"nodeType": "YulFunctionCall",
																																"src": "3618:24:7"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "3648:1:7",
																																		"nodeType": "YulLiteral",
																																		"src": "3648:1:7",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "3644:3:7",
																																	"nodeType": "YulIdentifier",
																																	"src": "3644:3:7"
																																},
																																"nativeSrc": "3644:6:7",
																																"nodeType": "YulFunctionCall",
																																"src": "3644:6:7"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "3614:3:7",
																															"nodeType": "YulIdentifier",
																															"src": "3614:3:7"
																														},
																														"nativeSrc": "3614:37:7",
																														"nodeType": "YulFunctionCall",
																														"src": "3614:37:7"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "3610:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "3610:3:7"
																												},
																												"nativeSrc": "3610:42:7",
																												"nodeType": "YulFunctionCall",
																												"src": "3610:42:7"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "3595:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "3595:3:7"
																										},
																										"nativeSrc": "3595:58:7",
																										"nodeType": "YulFunctionCall",
																										"src": "3595:58:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "3580:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "3580:6:7"
																								},
																								"nativeSrc": "3580:74:7",
																								"nodeType": "YulFunctionCall",
																								"src": "3580:74:7"
																							},
																							"nativeSrc": "3580:74:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "3580:74:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "3473:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "3473:7:7"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "3482:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "3482:6:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "3470:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "3470:2:7"
																					},
																					"nativeSrc": "3470:19:7",
																					"nodeType": "YulFunctionCall",
																					"src": "3470:19:7"
																				},
																				"nativeSrc": "3467:201:7",
																				"nodeType": "YulIf",
																				"src": "3467:201:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3688:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "3688:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "3702:1:7",
																											"nodeType": "YulLiteral",
																											"src": "3702:1:7",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "3705:6:7",
																											"nodeType": "YulIdentifier",
																											"src": "3705:6:7"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "3698:3:7",
																										"nodeType": "YulIdentifier",
																										"src": "3698:3:7"
																									},
																									"nativeSrc": "3698:14:7",
																									"nodeType": "YulFunctionCall",
																									"src": "3698:14:7"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "3714:1:7",
																									"nodeType": "YulLiteral",
																									"src": "3714:1:7",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "3694:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "3694:3:7"
																							},
																							"nativeSrc": "3694:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "3694:22:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "3681:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "3681:6:7"
																					},
																					"nativeSrc": "3681:36:7",
																					"nodeType": "YulFunctionCall",
																					"src": "3681:36:7"
																				},
																				"nativeSrc": "3681:36:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "3681:36:7"
																			}
																		]
																	},
																	"nativeSrc": "3064:663:7",
																	"nodeType": "YulCase",
																	"src": "3064:663:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3069:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3069:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "3744:234:7",
																		"nodeType": "YulBlock",
																		"src": "3744:234:7",
																		"statements": [
																			{
																				"nativeSrc": "3758:14:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3758:14:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "3771:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3771:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "3762:5:7",
																						"nodeType": "YulTypedName",
																						"src": "3762:5:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "3807:67:7",
																					"nodeType": "YulBlock",
																					"src": "3807:67:7",
																					"statements": [
																						{
																							"nativeSrc": "3825:35:7",
																							"nodeType": "YulAssignment",
																							"src": "3825:35:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "3844:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "3844:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "3849:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "3849:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "3840:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "3840:3:7"
																										},
																										"nativeSrc": "3840:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "3840:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "3834:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "3834:5:7"
																								},
																								"nativeSrc": "3834:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "3834:26:7"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "3825:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "3825:5:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "3788:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "3788:6:7"
																				},
																				"nativeSrc": "3785:89:7",
																				"nodeType": "YulIf",
																				"src": "3785:89:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3894:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "3894:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "3953:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "3953:5:7"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "3960:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "3960:6:7"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "3900:52:7",
																								"nodeType": "YulIdentifier",
																								"src": "3900:52:7"
																							},
																							"nativeSrc": "3900:67:7",
																							"nodeType": "YulFunctionCall",
																							"src": "3900:67:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "3887:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "3887:6:7"
																					},
																					"nativeSrc": "3887:81:7",
																					"nodeType": "YulFunctionCall",
																					"src": "3887:81:7"
																				},
																				"nativeSrc": "3887:81:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "3887:81:7"
																			}
																		]
																	},
																	"nativeSrc": "3736:242:7",
																	"nodeType": "YulCase",
																	"src": "3736:242:7",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "3044:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3044:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3052:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3052:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3041:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "3041:2:7"
																},
																"nativeSrc": "3041:14:7",
																"nodeType": "YulFunctionCall",
																"src": "3041:14:7"
															},
															"nativeSrc": "3034:944:7",
															"nodeType": "YulSwitch",
															"src": "3034:944:7"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "2639:1345:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2720:4:7",
														"nodeType": "YulTypedName",
														"src": "2720:4:7",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "2726:3:7",
														"nodeType": "YulTypedName",
														"src": "2726:3:7",
														"type": ""
													}
												],
												"src": "2639:1345:7"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        mcopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50604051610ab3380380610ab383398101604081905261002e916100eb565b600361003a83826101ce565b50600461004782826101ce565b50505061028d565b634e487b7160e01b5f52604160045260245ffd5b5f82601f830112610072575f80fd5b81516001600160401b038082111561008c5761008c61004f565b604051601f8301601f19908116603f011681019082821181831017156100b4576100b461004f565b816040528381528660208588010111156100cc575f80fd5b8360208701602083015e5f602085830101528094505050505092915050565b5f80604083850312156100fc575f80fd5b82516001600160401b0380821115610112575f80fd5b61011e86838701610063565b93506020850151915080821115610133575f80fd5b5061014085828601610063565b9150509250929050565b600181811c9082168061015e57607f821691505b60208210810361017c57634e487b7160e01b5f52602260045260245ffd5b50919050565b601f8211156101c957805f5260205f20601f840160051c810160208510156101a75750805b601f840160051c820191505b818110156101c6575f81556001016101b3565b50505b505050565b81516001600160401b038111156101e7576101e761004f565b6101fb816101f5845461014a565b84610182565b602080601f83116001811461022e575f84156102175750858301515b5f19600386901b1c1916600185901b178555610285565b5f85815260208120601f198616915b8281101561025c5788860151825594840194600190910190840161023d565b508582101561027957878501515f19600388901b60f8161c191681555b505060018460011b0185555b505050505050565b6108198061029a5f395ff3fe608060405234801561000f575f80fd5b50600436106100a6575f3560e01c8063395093511161006e578063395093511461011f57806370a082311461013257806395d89b411461015a578063a457c2d714610162578063a9059cbb14610175578063dd62ed3e14610188575f80fd5b806306fdde03146100aa578063095ea7b3146100c857806318160ddd146100eb57806323b872dd146100fd578063313ce56714610110575b5f80fd5b6100b261019b565b6040516100bf919061068a565b60405180910390f35b6100db6100d63660046106da565b61022b565b60405190151581526020016100bf565b6002545b6040519081526020016100bf565b6100db61010b366004610702565b610244565b604051601281526020016100bf565b6100db61012d3660046106da565b610267565b6100ef61014036600461073b565b6001600160a01b03165f9081526020819052604090205490565b6100b2610288565b6100db6101703660046106da565b610297565b6100db6101833660046106da565b610316565b6100ef61019636600461075b565b610323565b6060600380546101aa9061078c565b80601f01602080910402602001604051908101604052809291908181526020018280546101d69061078c565b80156102215780601f106101f857610100808354040283529160200191610221565b820191905f5260205f20905b81548152906001019060200180831161020457829003601f168201915b5050505050905090565b5f3361023881858561034d565b60019150505b92915050565b5f33610251858285610470565b61025c8585856104e8565b506001949350505050565b5f336102388185856102798383610323565b61028391906107c4565b61034d565b6060600480546101aa9061078c565b5f33816102a48286610323565b9050838110156103095760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b61025c828686840361034d565b5f336102388185856104e8565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103af5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610300565b6001600160a01b0382166104105760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610300565b6001600160a01b038381165f8181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b5f61047b8484610323565b90505f1981146104e257818110156104d55760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610300565b6104e2848484840361034d565b50505050565b6001600160a01b03831661054c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610300565b6001600160a01b0382166105ae5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610300565b6001600160a01b0383165f90815260208190526040902054818110156106255760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610300565b6001600160a01b038481165f81815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36104e2565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b03811681146106d5575f80fd5b919050565b5f80604083850312156106eb575f80fd5b6106f4836106bf565b946020939093013593505050565b5f805f60608486031215610714575f80fd5b61071d846106bf565b925061072b602085016106bf565b9150604084013590509250925092565b5f6020828403121561074b575f80fd5b610754826106bf565b9392505050565b5f806040838503121561076c575f80fd5b610775836106bf565b9150610783602084016106bf565b90509250929050565b600181811c908216806107a057607f821691505b6020821081036107be57634e487b7160e01b5f52602260045260245ffd5b50919050565b8082018082111561023e57634e487b7160e01b5f52601160045260245ffdfea264697066735822122090e4af7cd9ffb9b46c49a42bc69d404577b9bd08df0979ba0c2be62d9183cde364736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xAB3 CODESIZE SUB DUP1 PUSH2 0xAB3 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2E SWAP2 PUSH2 0xEB JUMP JUMPDEST PUSH1 0x3 PUSH2 0x3A DUP4 DUP3 PUSH2 0x1CE JUMP JUMPDEST POP PUSH1 0x4 PUSH2 0x47 DUP3 DUP3 PUSH2 0x1CE JUMP JUMPDEST POP POP POP PUSH2 0x28D JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x72 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x8C JUMPI PUSH2 0x8C PUSH2 0x4F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xB4 JUMPI PUSH2 0xB4 PUSH2 0x4F JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0xCC JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD MCOPY PUSH0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFC JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x112 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x11E DUP7 DUP4 DUP8 ADD PUSH2 0x63 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x133 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x140 DUP6 DUP3 DUP7 ADD PUSH2 0x63 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x15E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x17C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x1C9 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x1A7 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1C6 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1B3 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1E7 JUMPI PUSH2 0x1E7 PUSH2 0x4F JUMP JUMPDEST PUSH2 0x1FB DUP2 PUSH2 0x1F5 DUP5 SLOAD PUSH2 0x14A JUMP JUMPDEST DUP5 PUSH2 0x182 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x22E JUMPI PUSH0 DUP5 ISZERO PUSH2 0x217 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x285 JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x25C JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x23D JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x279 JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP5 PUSH1 0x1 SHL ADD DUP6 SSTORE JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x819 DUP1 PUSH2 0x29A PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA6 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x132 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x188 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xC8 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEB JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xFD JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x110 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xB2 PUSH2 0x19B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBF SWAP2 SWAP1 PUSH2 0x68A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDB PUSH2 0xD6 CALLDATASIZE PUSH1 0x4 PUSH2 0x6DA JUMP JUMPDEST PUSH2 0x22B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH2 0xDB PUSH2 0x10B CALLDATASIZE PUSH1 0x4 PUSH2 0x702 JUMP JUMPDEST PUSH2 0x244 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH2 0xDB PUSH2 0x12D CALLDATASIZE PUSH1 0x4 PUSH2 0x6DA JUMP JUMPDEST PUSH2 0x267 JUMP JUMPDEST PUSH2 0xEF PUSH2 0x140 CALLDATASIZE PUSH1 0x4 PUSH2 0x73B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB2 PUSH2 0x288 JUMP JUMPDEST PUSH2 0xDB PUSH2 0x170 CALLDATASIZE PUSH1 0x4 PUSH2 0x6DA JUMP JUMPDEST PUSH2 0x297 JUMP JUMPDEST PUSH2 0xDB PUSH2 0x183 CALLDATASIZE PUSH1 0x4 PUSH2 0x6DA JUMP JUMPDEST PUSH2 0x316 JUMP JUMPDEST PUSH2 0xEF PUSH2 0x196 CALLDATASIZE PUSH1 0x4 PUSH2 0x75B JUMP JUMPDEST PUSH2 0x323 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1AA SWAP1 PUSH2 0x78C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1D6 SWAP1 PUSH2 0x78C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x221 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1F8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x221 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x204 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x238 DUP2 DUP6 DUP6 PUSH2 0x34D JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x251 DUP6 DUP3 DUP6 PUSH2 0x470 JUMP JUMPDEST PUSH2 0x25C DUP6 DUP6 DUP6 PUSH2 0x4E8 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x238 DUP2 DUP6 DUP6 PUSH2 0x279 DUP4 DUP4 PUSH2 0x323 JUMP JUMPDEST PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x7C4 JUMP JUMPDEST PUSH2 0x34D JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1AA SWAP1 PUSH2 0x78C JUMP JUMPDEST PUSH0 CALLER DUP2 PUSH2 0x2A4 DUP3 DUP7 PUSH2 0x323 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x309 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x25C DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x34D JUMP JUMPDEST PUSH0 CALLER PUSH2 0x238 DUP2 DUP6 DUP6 PUSH2 0x4E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x410 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x47B DUP5 DUP5 PUSH2 0x323 JUMP JUMPDEST SWAP1 POP PUSH0 NOT DUP2 EQ PUSH2 0x4E2 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x300 JUMP JUMPDEST PUSH2 0x4E2 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x34D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x54C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5AE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x625 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4E2 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x6D5 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x6EB JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x6F4 DUP4 PUSH2 0x6BF JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x714 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x71D DUP5 PUSH2 0x6BF JUMP JUMPDEST SWAP3 POP PUSH2 0x72B PUSH1 0x20 DUP6 ADD PUSH2 0x6BF JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x74B JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x754 DUP3 PUSH2 0x6BF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x76C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x775 DUP4 PUSH2 0x6BF JUMP JUMPDEST SWAP2 POP PUSH2 0x783 PUSH1 0x20 DUP5 ADD PUSH2 0x6BF JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x7A0 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x7BE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x23E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP1 0xE4 0xAF PUSH29 0xD9FFB9B46C49A42BC69D404577B9BD08DF0979BA0C2BE62D9183CDE364 PUSH20 0x6F6C634300081900330000000000000000000000 ",
							"sourceMap": "1532:11312:2:-:0;;;1980:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2046:5;:13;2054:5;2046;:13;:::i;:::-;-1:-1:-1;2069:7:2;:17;2079:7;2069;:17;:::i;:::-;;1980:113;;1532:11312;;14:127:7;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:716;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:7;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:7;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;709:3;702:4;697:2;689:6;685:15;681:26;678:35;675:55;;;726:1;723;716:12;675:55;783:2;776:4;768:6;764:17;757:4;749:6;745:17;739:47;830:1;823:4;818:2;810:6;806:15;802:26;795:37;850:6;841:15;;;;;;146:716;;;;:::o;867:562::-;966:6;974;1027:2;1015:9;1006:7;1002:23;998:32;995:52;;;1043:1;1040;1033:12;995:52;1070:16;;-1:-1:-1;;;;;1135:14:7;;;1132:34;;;1162:1;1159;1152:12;1132:34;1185:61;1238:7;1229:6;1218:9;1214:22;1185:61;:::i;:::-;1175:71;;1292:2;1281:9;1277:18;1271:25;1255:41;;1321:2;1311:8;1308:16;1305:36;;;1337:1;1334;1327:12;1305:36;;1360:63;1415:7;1404:8;1393:9;1389:24;1360:63;:::i;:::-;1350:73;;;867:562;;;;;:::o;1434:380::-;1513:1;1509:12;;;;1556;;;1577:61;;1631:4;1623:6;1619:17;1609:27;;1577:61;1684:2;1676:6;1673:14;1653:18;1650:38;1647:161;;1730:10;1725:3;1721:20;1718:1;1711:31;1765:4;1762:1;1755:15;1793:4;1790:1;1783:15;1647:161;;1434:380;;;:::o;1945:518::-;2047:2;2042:3;2039:11;2036:421;;;2083:5;2080:1;2073:16;2127:4;2124:1;2114:18;2197:2;2185:10;2181:19;2178:1;2174:27;2168:4;2164:38;2233:4;2221:10;2218:20;2215:47;;;-1:-1:-1;2256:4:7;2215:47;2311:2;2306:3;2302:12;2299:1;2295:20;2289:4;2285:31;2275:41;;2366:81;2384:2;2377:5;2374:13;2366:81;;;2443:1;2429:16;;2410:1;2399:13;2366:81;;;2370:3;;2036:421;1945:518;;;:::o;2639:1345::-;2759:10;;-1:-1:-1;;;;;2781:30:7;;2778:56;;;2814:18;;:::i;:::-;2843:97;2933:6;2893:38;2925:4;2919:11;2893:38;:::i;:::-;2887:4;2843:97;:::i;:::-;2995:4;;3052:2;3041:14;;3069:1;3064:663;;;;3771:1;3788:6;3785:89;;;-1:-1:-1;3840:19:7;;;3834:26;3785:89;-1:-1:-1;;2596:1:7;2592:11;;;2588:24;2584:29;2574:40;2620:1;2616:11;;;2571:57;3887:81;;3034:944;;3064:663;1892:1;1885:14;;;1929:4;1916:18;;-1:-1:-1;;3100:20:7;;;3218:236;3232:7;3229:1;3226:14;3218:236;;;3321:19;;;3315:26;3300:42;;3413:27;;;;3381:1;3369:14;;;;3248:19;;3218:236;;;3222:3;3482:6;3473:7;3470:19;3467:201;;;3543:19;;;3537:26;-1:-1:-1;;3626:1:7;3622:14;;;3638:3;3618:24;3614:37;3610:42;3595:58;3580:74;;3467:201;;;3714:1;3705:6;3702:1;3698:14;3694:22;3688:4;3681:36;3034:944;;;;;2639:1345;;:::o;:::-;1532:11312:2;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_1010": {
									"entryPoint": null,
									"id": 1010,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_945": {
									"entryPoint": 845,
									"id": 945,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_999": {
									"entryPoint": null,
									"id": 999,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_msgSender_1126": {
									"entryPoint": null,
									"id": 1126,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_988": {
									"entryPoint": 1136,
									"id": 988,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_771": {
									"entryPoint": 1256,
									"id": 771,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_566": {
									"entryPoint": 803,
									"id": 566,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_591": {
									"entryPoint": 555,
									"id": 591,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_523": {
									"entryPoint": null,
									"id": 523,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_499": {
									"entryPoint": null,
									"id": 499,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_694": {
									"entryPoint": 663,
									"id": 694,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_653": {
									"entryPoint": 615,
									"id": 653,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_479": {
									"entryPoint": 411,
									"id": 479,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_489": {
									"entryPoint": 648,
									"id": 489,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_509": {
									"entryPoint": null,
									"id": 509,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_624": {
									"entryPoint": 580,
									"id": 624,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_548": {
									"entryPoint": 790,
									"id": 548,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 1727,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1851,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 1883,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 1794,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 1754,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1674,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1988,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1932,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5624:7",
										"nodeType": "YulBlock",
										"src": "0:5624:7",
										"statements": [
											{
												"nativeSrc": "6:3:7",
												"nodeType": "YulBlock",
												"src": "6:3:7",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "135:297:7",
													"nodeType": "YulBlock",
													"src": "135:297:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "152:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "152:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "163:2:7",
																		"nodeType": "YulLiteral",
																		"src": "163:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "145:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "145:6:7"
																},
																"nativeSrc": "145:21:7",
																"nodeType": "YulFunctionCall",
																"src": "145:21:7"
															},
															"nativeSrc": "145:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "145:21:7"
														},
														{
															"nativeSrc": "175:27:7",
															"nodeType": "YulVariableDeclaration",
															"src": "175:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "195:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "195:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "189:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "189:5:7"
																},
																"nativeSrc": "189:13:7",
																"nodeType": "YulFunctionCall",
																"src": "189:13:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "179:6:7",
																	"nodeType": "YulTypedName",
																	"src": "179:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "222:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "222:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "233:2:7",
																				"nodeType": "YulLiteral",
																				"src": "233:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "218:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "218:3:7"
																		},
																		"nativeSrc": "218:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "218:18:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "238:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "238:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "211:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "211:6:7"
																},
																"nativeSrc": "211:34:7",
																"nodeType": "YulFunctionCall",
																"src": "211:34:7"
															},
															"nativeSrc": "211:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "211:34:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "264:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "264:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "275:2:7",
																				"nodeType": "YulLiteral",
																				"src": "275:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "260:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "260:3:7"
																		},
																		"nativeSrc": "260:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "260:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "284:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "284:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "292:2:7",
																				"nodeType": "YulLiteral",
																				"src": "292:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "280:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "280:3:7"
																		},
																		"nativeSrc": "280:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "280:15:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "297:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "297:6:7"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "254:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "254:5:7"
																},
																"nativeSrc": "254:50:7",
																"nodeType": "YulFunctionCall",
																"src": "254:50:7"
															},
															"nativeSrc": "254:50:7",
															"nodeType": "YulExpressionStatement",
															"src": "254:50:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "328:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "328:9:7"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "339:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "339:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "324:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "324:3:7"
																				},
																				"nativeSrc": "324:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "324:22:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "348:2:7",
																				"nodeType": "YulLiteral",
																				"src": "348:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "320:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "320:3:7"
																		},
																		"nativeSrc": "320:31:7",
																		"nodeType": "YulFunctionCall",
																		"src": "320:31:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "353:1:7",
																		"nodeType": "YulLiteral",
																		"src": "353:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "313:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "313:6:7"
																},
																"nativeSrc": "313:42:7",
																"nodeType": "YulFunctionCall",
																"src": "313:42:7"
															},
															"nativeSrc": "313:42:7",
															"nodeType": "YulExpressionStatement",
															"src": "313:42:7"
														},
														{
															"nativeSrc": "364:62:7",
															"nodeType": "YulAssignment",
															"src": "364:62:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "380:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "380:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "399:6:7",
																								"nodeType": "YulIdentifier",
																								"src": "399:6:7"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "407:2:7",
																								"nodeType": "YulLiteral",
																								"src": "407:2:7",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "395:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "395:3:7"
																						},
																						"nativeSrc": "395:15:7",
																						"nodeType": "YulFunctionCall",
																						"src": "395:15:7"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "416:2:7",
																								"nodeType": "YulLiteral",
																								"src": "416:2:7",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "412:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "412:3:7"
																						},
																						"nativeSrc": "412:7:7",
																						"nodeType": "YulFunctionCall",
																						"src": "412:7:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "391:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "391:3:7"
																				},
																				"nativeSrc": "391:29:7",
																				"nodeType": "YulFunctionCall",
																				"src": "391:29:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "376:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "376:3:7"
																		},
																		"nativeSrc": "376:45:7",
																		"nodeType": "YulFunctionCall",
																		"src": "376:45:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "423:2:7",
																		"nodeType": "YulLiteral",
																		"src": "423:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "372:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "372:3:7"
																},
																"nativeSrc": "372:54:7",
																"nodeType": "YulFunctionCall",
																"src": "372:54:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "364:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "364:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14:418:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "104:9:7",
														"nodeType": "YulTypedName",
														"src": "104:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "115:6:7",
														"nodeType": "YulTypedName",
														"src": "115:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "126:4:7",
														"nodeType": "YulTypedName",
														"src": "126:4:7",
														"type": ""
													}
												],
												"src": "14:418:7"
											},
											{
												"body": {
													"nativeSrc": "486:124:7",
													"nodeType": "YulBlock",
													"src": "486:124:7",
													"statements": [
														{
															"nativeSrc": "496:29:7",
															"nodeType": "YulAssignment",
															"src": "496:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "518:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "518:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "505:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "505:12:7"
																},
																"nativeSrc": "505:20:7",
																"nodeType": "YulFunctionCall",
																"src": "505:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "496:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "496:5:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "588:16:7",
																"nodeType": "YulBlock",
																"src": "588:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "597:1:7",
																					"nodeType": "YulLiteral",
																					"src": "597:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "600:1:7",
																					"nodeType": "YulLiteral",
																					"src": "600:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "590:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "590:6:7"
																			},
																			"nativeSrc": "590:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "590:12:7"
																		},
																		"nativeSrc": "590:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "590:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "547:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "547:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "558:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "558:5:7"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "573:3:7",
																										"nodeType": "YulLiteral",
																										"src": "573:3:7",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "578:1:7",
																										"nodeType": "YulLiteral",
																										"src": "578:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "569:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "569:3:7"
																								},
																								"nativeSrc": "569:11:7",
																								"nodeType": "YulFunctionCall",
																								"src": "569:11:7"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "582:1:7",
																								"nodeType": "YulLiteral",
																								"src": "582:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "565:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "565:3:7"
																						},
																						"nativeSrc": "565:19:7",
																						"nodeType": "YulFunctionCall",
																						"src": "565:19:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "554:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "554:3:7"
																				},
																				"nativeSrc": "554:31:7",
																				"nodeType": "YulFunctionCall",
																				"src": "554:31:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "544:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "544:2:7"
																		},
																		"nativeSrc": "544:42:7",
																		"nodeType": "YulFunctionCall",
																		"src": "544:42:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "537:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "537:6:7"
																},
																"nativeSrc": "537:50:7",
																"nodeType": "YulFunctionCall",
																"src": "537:50:7"
															},
															"nativeSrc": "534:70:7",
															"nodeType": "YulIf",
															"src": "534:70:7"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "437:173:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "465:6:7",
														"nodeType": "YulTypedName",
														"src": "465:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "476:5:7",
														"nodeType": "YulTypedName",
														"src": "476:5:7",
														"type": ""
													}
												],
												"src": "437:173:7"
											},
											{
												"body": {
													"nativeSrc": "702:167:7",
													"nodeType": "YulBlock",
													"src": "702:167:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "748:16:7",
																"nodeType": "YulBlock",
																"src": "748:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "757:1:7",
																					"nodeType": "YulLiteral",
																					"src": "757:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "760:1:7",
																					"nodeType": "YulLiteral",
																					"src": "760:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "750:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "750:6:7"
																			},
																			"nativeSrc": "750:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "750:12:7"
																		},
																		"nativeSrc": "750:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "750:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "723:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "723:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "732:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "732:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "719:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "719:3:7"
																		},
																		"nativeSrc": "719:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "719:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "744:2:7",
																		"nodeType": "YulLiteral",
																		"src": "744:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "715:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "715:3:7"
																},
																"nativeSrc": "715:32:7",
																"nodeType": "YulFunctionCall",
																"src": "715:32:7"
															},
															"nativeSrc": "712:52:7",
															"nodeType": "YulIf",
															"src": "712:52:7"
														},
														{
															"nativeSrc": "773:39:7",
															"nodeType": "YulAssignment",
															"src": "773:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "802:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "802:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "783:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "783:18:7"
																},
																"nativeSrc": "783:29:7",
																"nodeType": "YulFunctionCall",
																"src": "783:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "773:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "773:6:7"
																}
															]
														},
														{
															"nativeSrc": "821:42:7",
															"nodeType": "YulAssignment",
															"src": "821:42:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "848:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "848:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "859:2:7",
																				"nodeType": "YulLiteral",
																				"src": "859:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "844:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "844:3:7"
																		},
																		"nativeSrc": "844:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "844:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "831:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "831:12:7"
																},
																"nativeSrc": "831:32:7",
																"nodeType": "YulFunctionCall",
																"src": "831:32:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "821:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "821:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "615:254:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "660:9:7",
														"nodeType": "YulTypedName",
														"src": "660:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "671:7:7",
														"nodeType": "YulTypedName",
														"src": "671:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "683:6:7",
														"nodeType": "YulTypedName",
														"src": "683:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "691:6:7",
														"nodeType": "YulTypedName",
														"src": "691:6:7",
														"type": ""
													}
												],
												"src": "615:254:7"
											},
											{
												"body": {
													"nativeSrc": "969:92:7",
													"nodeType": "YulBlock",
													"src": "969:92:7",
													"statements": [
														{
															"nativeSrc": "979:26:7",
															"nodeType": "YulAssignment",
															"src": "979:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "991:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "991:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1002:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1002:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "987:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "987:3:7"
																},
																"nativeSrc": "987:18:7",
																"nodeType": "YulFunctionCall",
																"src": "987:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "979:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "979:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1021:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1021:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1046:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "1046:6:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1039:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "1039:6:7"
																				},
																				"nativeSrc": "1039:14:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1039:14:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1032:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "1032:6:7"
																		},
																		"nativeSrc": "1032:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1032:22:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1014:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1014:6:7"
																},
																"nativeSrc": "1014:41:7",
																"nodeType": "YulFunctionCall",
																"src": "1014:41:7"
															},
															"nativeSrc": "1014:41:7",
															"nodeType": "YulExpressionStatement",
															"src": "1014:41:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "874:187:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "938:9:7",
														"nodeType": "YulTypedName",
														"src": "938:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "949:6:7",
														"nodeType": "YulTypedName",
														"src": "949:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "960:4:7",
														"nodeType": "YulTypedName",
														"src": "960:4:7",
														"type": ""
													}
												],
												"src": "874:187:7"
											},
											{
												"body": {
													"nativeSrc": "1167:76:7",
													"nodeType": "YulBlock",
													"src": "1167:76:7",
													"statements": [
														{
															"nativeSrc": "1177:26:7",
															"nodeType": "YulAssignment",
															"src": "1177:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1189:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1189:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1200:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1200:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1185:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1185:3:7"
																},
																"nativeSrc": "1185:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1185:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1177:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1177:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1219:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1219:9:7"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1230:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1230:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1212:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:7"
																},
																"nativeSrc": "1212:25:7",
																"nodeType": "YulFunctionCall",
																"src": "1212:25:7"
															},
															"nativeSrc": "1212:25:7",
															"nodeType": "YulExpressionStatement",
															"src": "1212:25:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1066:177:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1136:9:7",
														"nodeType": "YulTypedName",
														"src": "1136:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1147:6:7",
														"nodeType": "YulTypedName",
														"src": "1147:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1158:4:7",
														"nodeType": "YulTypedName",
														"src": "1158:4:7",
														"type": ""
													}
												],
												"src": "1066:177:7"
											},
											{
												"body": {
													"nativeSrc": "1352:224:7",
													"nodeType": "YulBlock",
													"src": "1352:224:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1398:16:7",
																"nodeType": "YulBlock",
																"src": "1398:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1407:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1407:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1410:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1410:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1400:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1400:6:7"
																			},
																			"nativeSrc": "1400:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1400:12:7"
																		},
																		"nativeSrc": "1400:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1400:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1373:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1373:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1382:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1382:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1369:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1369:3:7"
																		},
																		"nativeSrc": "1369:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1369:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1394:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1394:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1365:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1365:3:7"
																},
																"nativeSrc": "1365:32:7",
																"nodeType": "YulFunctionCall",
																"src": "1365:32:7"
															},
															"nativeSrc": "1362:52:7",
															"nodeType": "YulIf",
															"src": "1362:52:7"
														},
														{
															"nativeSrc": "1423:39:7",
															"nodeType": "YulAssignment",
															"src": "1423:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1452:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1452:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1433:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "1433:18:7"
																},
																"nativeSrc": "1433:29:7",
																"nodeType": "YulFunctionCall",
																"src": "1433:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1423:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1423:6:7"
																}
															]
														},
														{
															"nativeSrc": "1471:48:7",
															"nodeType": "YulAssignment",
															"src": "1471:48:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1504:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1504:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1515:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1515:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1500:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1500:3:7"
																		},
																		"nativeSrc": "1500:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1500:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1481:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "1481:18:7"
																},
																"nativeSrc": "1481:38:7",
																"nodeType": "YulFunctionCall",
																"src": "1481:38:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1471:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1471:6:7"
																}
															]
														},
														{
															"nativeSrc": "1528:42:7",
															"nodeType": "YulAssignment",
															"src": "1528:42:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1555:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1555:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1566:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1566:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1551:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1551:3:7"
																		},
																		"nativeSrc": "1551:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1551:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1538:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "1538:12:7"
																},
																"nativeSrc": "1538:32:7",
																"nodeType": "YulFunctionCall",
																"src": "1538:32:7"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1528:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1528:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "1248:328:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1302:9:7",
														"nodeType": "YulTypedName",
														"src": "1302:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1313:7:7",
														"nodeType": "YulTypedName",
														"src": "1313:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1325:6:7",
														"nodeType": "YulTypedName",
														"src": "1325:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1333:6:7",
														"nodeType": "YulTypedName",
														"src": "1333:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1341:6:7",
														"nodeType": "YulTypedName",
														"src": "1341:6:7",
														"type": ""
													}
												],
												"src": "1248:328:7"
											},
											{
												"body": {
													"nativeSrc": "1678:87:7",
													"nodeType": "YulBlock",
													"src": "1678:87:7",
													"statements": [
														{
															"nativeSrc": "1688:26:7",
															"nodeType": "YulAssignment",
															"src": "1688:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1700:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1700:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1711:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1711:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1696:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1696:3:7"
																},
																"nativeSrc": "1696:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1696:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1688:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1688:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1730:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1730:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1745:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1745:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1753:4:7",
																				"nodeType": "YulLiteral",
																				"src": "1753:4:7",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1741:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1741:3:7"
																		},
																		"nativeSrc": "1741:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1741:17:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1723:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1723:6:7"
																},
																"nativeSrc": "1723:36:7",
																"nodeType": "YulFunctionCall",
																"src": "1723:36:7"
															},
															"nativeSrc": "1723:36:7",
															"nodeType": "YulExpressionStatement",
															"src": "1723:36:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "1581:184:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1647:9:7",
														"nodeType": "YulTypedName",
														"src": "1647:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1658:6:7",
														"nodeType": "YulTypedName",
														"src": "1658:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1669:4:7",
														"nodeType": "YulTypedName",
														"src": "1669:4:7",
														"type": ""
													}
												],
												"src": "1581:184:7"
											},
											{
												"body": {
													"nativeSrc": "1840:116:7",
													"nodeType": "YulBlock",
													"src": "1840:116:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1886:16:7",
																"nodeType": "YulBlock",
																"src": "1886:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1895:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1895:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1898:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1898:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1888:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1888:6:7"
																			},
																			"nativeSrc": "1888:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1888:12:7"
																		},
																		"nativeSrc": "1888:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1888:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1861:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1861:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1870:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1870:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1857:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1857:3:7"
																		},
																		"nativeSrc": "1857:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1857:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1882:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1882:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1853:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1853:3:7"
																},
																"nativeSrc": "1853:32:7",
																"nodeType": "YulFunctionCall",
																"src": "1853:32:7"
															},
															"nativeSrc": "1850:52:7",
															"nodeType": "YulIf",
															"src": "1850:52:7"
														},
														{
															"nativeSrc": "1911:39:7",
															"nodeType": "YulAssignment",
															"src": "1911:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1940:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1940:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1921:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "1921:18:7"
																},
																"nativeSrc": "1921:29:7",
																"nodeType": "YulFunctionCall",
																"src": "1921:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1911:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1911:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1770:186:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1806:9:7",
														"nodeType": "YulTypedName",
														"src": "1806:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1817:7:7",
														"nodeType": "YulTypedName",
														"src": "1817:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1829:6:7",
														"nodeType": "YulTypedName",
														"src": "1829:6:7",
														"type": ""
													}
												],
												"src": "1770:186:7"
											},
											{
												"body": {
													"nativeSrc": "2048:173:7",
													"nodeType": "YulBlock",
													"src": "2048:173:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2094:16:7",
																"nodeType": "YulBlock",
																"src": "2094:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2103:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2103:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2106:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2106:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2096:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2096:6:7"
																			},
																			"nativeSrc": "2096:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2096:12:7"
																		},
																		"nativeSrc": "2096:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2096:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2069:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2069:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2078:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2078:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2065:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2065:3:7"
																		},
																		"nativeSrc": "2065:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2065:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2090:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2090:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2061:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2061:3:7"
																},
																"nativeSrc": "2061:32:7",
																"nodeType": "YulFunctionCall",
																"src": "2061:32:7"
															},
															"nativeSrc": "2058:52:7",
															"nodeType": "YulIf",
															"src": "2058:52:7"
														},
														{
															"nativeSrc": "2119:39:7",
															"nodeType": "YulAssignment",
															"src": "2119:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2148:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2148:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2129:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "2129:18:7"
																},
																"nativeSrc": "2129:29:7",
																"nodeType": "YulFunctionCall",
																"src": "2129:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2119:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2119:6:7"
																}
															]
														},
														{
															"nativeSrc": "2167:48:7",
															"nodeType": "YulAssignment",
															"src": "2167:48:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2200:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2200:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2211:2:7",
																				"nodeType": "YulLiteral",
																				"src": "2211:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2196:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2196:3:7"
																		},
																		"nativeSrc": "2196:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2196:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2177:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "2177:18:7"
																},
																"nativeSrc": "2177:38:7",
																"nodeType": "YulFunctionCall",
																"src": "2177:38:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2167:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2167:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "1961:260:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2006:9:7",
														"nodeType": "YulTypedName",
														"src": "2006:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2017:7:7",
														"nodeType": "YulTypedName",
														"src": "2017:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2029:6:7",
														"nodeType": "YulTypedName",
														"src": "2029:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2037:6:7",
														"nodeType": "YulTypedName",
														"src": "2037:6:7",
														"type": ""
													}
												],
												"src": "1961:260:7"
											},
											{
												"body": {
													"nativeSrc": "2281:325:7",
													"nodeType": "YulBlock",
													"src": "2281:325:7",
													"statements": [
														{
															"nativeSrc": "2291:22:7",
															"nodeType": "YulAssignment",
															"src": "2291:22:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2305:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2305:1:7",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "2308:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "2308:4:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "2301:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2301:3:7"
																},
																"nativeSrc": "2301:12:7",
																"nodeType": "YulFunctionCall",
																"src": "2301:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2291:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2291:6:7"
																}
															]
														},
														{
															"nativeSrc": "2322:38:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2322:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2352:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "2352:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2358:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2358:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2348:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2348:3:7"
																},
																"nativeSrc": "2348:12:7",
																"nodeType": "YulFunctionCall",
																"src": "2348:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "2326:18:7",
																	"nodeType": "YulTypedName",
																	"src": "2326:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2399:31:7",
																"nodeType": "YulBlock",
																"src": "2399:31:7",
																"statements": [
																	{
																		"nativeSrc": "2401:27:7",
																		"nodeType": "YulAssignment",
																		"src": "2401:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "2415:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "2415:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2423:4:7",
																					"nodeType": "YulLiteral",
																					"src": "2423:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "2411:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2411:3:7"
																			},
																			"nativeSrc": "2411:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2411:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "2401:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2401:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2379:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "2379:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2372:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2372:6:7"
																},
																"nativeSrc": "2372:26:7",
																"nodeType": "YulFunctionCall",
																"src": "2372:26:7"
															},
															"nativeSrc": "2369:61:7",
															"nodeType": "YulIf",
															"src": "2369:61:7"
														},
														{
															"body": {
																"nativeSrc": "2489:111:7",
																"nodeType": "YulBlock",
																"src": "2489:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2510:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2510:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2517:3:7",
																							"nodeType": "YulLiteral",
																							"src": "2517:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2522:10:7",
																							"nodeType": "YulLiteral",
																							"src": "2522:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "2513:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "2513:3:7"
																					},
																					"nativeSrc": "2513:20:7",
																					"nodeType": "YulFunctionCall",
																					"src": "2513:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2503:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2503:6:7"
																			},
																			"nativeSrc": "2503:31:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2503:31:7"
																		},
																		"nativeSrc": "2503:31:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2503:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2554:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2554:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2557:4:7",
																					"nodeType": "YulLiteral",
																					"src": "2557:4:7",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2547:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2547:6:7"
																			},
																			"nativeSrc": "2547:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2547:15:7"
																		},
																		"nativeSrc": "2547:15:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2547:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2582:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2582:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2585:4:7",
																					"nodeType": "YulLiteral",
																					"src": "2585:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2575:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2575:6:7"
																			},
																			"nativeSrc": "2575:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2575:15:7"
																		},
																		"nativeSrc": "2575:15:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2575:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2445:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "2445:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2468:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2468:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2476:2:7",
																				"nodeType": "YulLiteral",
																				"src": "2476:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2465:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "2465:2:7"
																		},
																		"nativeSrc": "2465:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2465:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "2442:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "2442:2:7"
																},
																"nativeSrc": "2442:38:7",
																"nodeType": "YulFunctionCall",
																"src": "2442:38:7"
															},
															"nativeSrc": "2439:161:7",
															"nodeType": "YulIf",
															"src": "2439:161:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "2226:380:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2261:4:7",
														"nodeType": "YulTypedName",
														"src": "2261:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2270:6:7",
														"nodeType": "YulTypedName",
														"src": "2270:6:7",
														"type": ""
													}
												],
												"src": "2226:380:7"
											},
											{
												"body": {
													"nativeSrc": "2659:174:7",
													"nodeType": "YulBlock",
													"src": "2659:174:7",
													"statements": [
														{
															"nativeSrc": "2669:16:7",
															"nodeType": "YulAssignment",
															"src": "2669:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2680:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "2680:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "2683:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "2683:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2676:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2676:3:7"
																},
																"nativeSrc": "2676:9:7",
																"nodeType": "YulFunctionCall",
																"src": "2676:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "2669:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2669:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2716:111:7",
																"nodeType": "YulBlock",
																"src": "2716:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2737:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2737:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2744:3:7",
																							"nodeType": "YulLiteral",
																							"src": "2744:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2749:10:7",
																							"nodeType": "YulLiteral",
																							"src": "2749:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "2740:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "2740:3:7"
																					},
																					"nativeSrc": "2740:20:7",
																					"nodeType": "YulFunctionCall",
																					"src": "2740:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2730:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2730:6:7"
																			},
																			"nativeSrc": "2730:31:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2730:31:7"
																		},
																		"nativeSrc": "2730:31:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2730:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2781:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2781:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2784:4:7",
																					"nodeType": "YulLiteral",
																					"src": "2784:4:7",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2774:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2774:6:7"
																			},
																			"nativeSrc": "2774:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2774:15:7"
																		},
																		"nativeSrc": "2774:15:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2774:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2809:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2809:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2812:4:7",
																					"nodeType": "YulLiteral",
																					"src": "2812:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2802:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2802:6:7"
																			},
																			"nativeSrc": "2802:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2802:15:7"
																		},
																		"nativeSrc": "2802:15:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2802:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2700:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "2700:1:7"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "2703:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2703:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2697:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "2697:2:7"
																},
																"nativeSrc": "2697:10:7",
																"nodeType": "YulFunctionCall",
																"src": "2697:10:7"
															},
															"nativeSrc": "2694:133:7",
															"nodeType": "YulIf",
															"src": "2694:133:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "2611:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "2642:1:7",
														"nodeType": "YulTypedName",
														"src": "2642:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "2645:1:7",
														"nodeType": "YulTypedName",
														"src": "2645:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "2651:3:7",
														"nodeType": "YulTypedName",
														"src": "2651:3:7",
														"type": ""
													}
												],
												"src": "2611:222:7"
											},
											{
												"body": {
													"nativeSrc": "3012:227:7",
													"nodeType": "YulBlock",
													"src": "3012:227:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3029:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3029:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3040:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3040:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3022:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3022:6:7"
																},
																"nativeSrc": "3022:21:7",
																"nodeType": "YulFunctionCall",
																"src": "3022:21:7"
															},
															"nativeSrc": "3022:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "3022:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3063:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3063:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3074:2:7",
																				"nodeType": "YulLiteral",
																				"src": "3074:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3059:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3059:3:7"
																		},
																		"nativeSrc": "3059:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3059:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3079:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3079:2:7",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3052:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3052:6:7"
																},
																"nativeSrc": "3052:30:7",
																"nodeType": "YulFunctionCall",
																"src": "3052:30:7"
															},
															"nativeSrc": "3052:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "3052:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3102:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3102:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3113:2:7",
																				"nodeType": "YulLiteral",
																				"src": "3113:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3098:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3098:3:7"
																		},
																		"nativeSrc": "3098:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3098:18:7"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nativeSrc": "3118:34:7",
																		"nodeType": "YulLiteral",
																		"src": "3118:34:7",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3091:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3091:6:7"
																},
																"nativeSrc": "3091:62:7",
																"nodeType": "YulFunctionCall",
																"src": "3091:62:7"
															},
															"nativeSrc": "3091:62:7",
															"nodeType": "YulExpressionStatement",
															"src": "3091:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3173:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3173:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3184:2:7",
																				"nodeType": "YulLiteral",
																				"src": "3184:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3169:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3169:3:7"
																		},
																		"nativeSrc": "3169:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3169:18:7"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nativeSrc": "3189:7:7",
																		"nodeType": "YulLiteral",
																		"src": "3189:7:7",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3162:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3162:6:7"
																},
																"nativeSrc": "3162:35:7",
																"nodeType": "YulFunctionCall",
																"src": "3162:35:7"
															},
															"nativeSrc": "3162:35:7",
															"nodeType": "YulExpressionStatement",
															"src": "3162:35:7"
														},
														{
															"nativeSrc": "3206:27:7",
															"nodeType": "YulAssignment",
															"src": "3206:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3218:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3218:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3229:3:7",
																		"nodeType": "YulLiteral",
																		"src": "3229:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3214:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3214:3:7"
																},
																"nativeSrc": "3214:19:7",
																"nodeType": "YulFunctionCall",
																"src": "3214:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3206:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3206:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2838:401:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2989:9:7",
														"nodeType": "YulTypedName",
														"src": "2989:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3003:4:7",
														"nodeType": "YulTypedName",
														"src": "3003:4:7",
														"type": ""
													}
												],
												"src": "2838:401:7"
											},
											{
												"body": {
													"nativeSrc": "3418:226:7",
													"nodeType": "YulBlock",
													"src": "3418:226:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3435:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3435:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3446:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3446:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3428:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3428:6:7"
																},
																"nativeSrc": "3428:21:7",
																"nodeType": "YulFunctionCall",
																"src": "3428:21:7"
															},
															"nativeSrc": "3428:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "3428:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3469:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3469:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3480:2:7",
																				"nodeType": "YulLiteral",
																				"src": "3480:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3465:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3465:3:7"
																		},
																		"nativeSrc": "3465:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3465:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3485:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3485:2:7",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3458:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3458:6:7"
																},
																"nativeSrc": "3458:30:7",
																"nodeType": "YulFunctionCall",
																"src": "3458:30:7"
															},
															"nativeSrc": "3458:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "3458:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3508:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3508:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3519:2:7",
																				"nodeType": "YulLiteral",
																				"src": "3519:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3504:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3504:3:7"
																		},
																		"nativeSrc": "3504:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3504:18:7"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nativeSrc": "3524:34:7",
																		"nodeType": "YulLiteral",
																		"src": "3524:34:7",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3497:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3497:6:7"
																},
																"nativeSrc": "3497:62:7",
																"nodeType": "YulFunctionCall",
																"src": "3497:62:7"
															},
															"nativeSrc": "3497:62:7",
															"nodeType": "YulExpressionStatement",
															"src": "3497:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3579:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3579:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3590:2:7",
																				"nodeType": "YulLiteral",
																				"src": "3590:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3575:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3575:3:7"
																		},
																		"nativeSrc": "3575:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3575:18:7"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nativeSrc": "3595:6:7",
																		"nodeType": "YulLiteral",
																		"src": "3595:6:7",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3568:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3568:6:7"
																},
																"nativeSrc": "3568:34:7",
																"nodeType": "YulFunctionCall",
																"src": "3568:34:7"
															},
															"nativeSrc": "3568:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "3568:34:7"
														},
														{
															"nativeSrc": "3611:27:7",
															"nodeType": "YulAssignment",
															"src": "3611:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3623:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3623:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3634:3:7",
																		"nodeType": "YulLiteral",
																		"src": "3634:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3619:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3619:3:7"
																},
																"nativeSrc": "3619:19:7",
																"nodeType": "YulFunctionCall",
																"src": "3619:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3611:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3611:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3244:400:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3395:9:7",
														"nodeType": "YulTypedName",
														"src": "3395:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3409:4:7",
														"nodeType": "YulTypedName",
														"src": "3409:4:7",
														"type": ""
													}
												],
												"src": "3244:400:7"
											},
											{
												"body": {
													"nativeSrc": "3823:224:7",
													"nodeType": "YulBlock",
													"src": "3823:224:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3840:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3840:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3851:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3851:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3833:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3833:6:7"
																},
																"nativeSrc": "3833:21:7",
																"nodeType": "YulFunctionCall",
																"src": "3833:21:7"
															},
															"nativeSrc": "3833:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "3833:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3874:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3874:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3885:2:7",
																				"nodeType": "YulLiteral",
																				"src": "3885:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3870:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3870:3:7"
																		},
																		"nativeSrc": "3870:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3870:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3890:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3890:2:7",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3863:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3863:6:7"
																},
																"nativeSrc": "3863:30:7",
																"nodeType": "YulFunctionCall",
																"src": "3863:30:7"
															},
															"nativeSrc": "3863:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "3863:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3913:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3913:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3924:2:7",
																				"nodeType": "YulLiteral",
																				"src": "3924:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3909:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3909:3:7"
																		},
																		"nativeSrc": "3909:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3909:18:7"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nativeSrc": "3929:34:7",
																		"nodeType": "YulLiteral",
																		"src": "3929:34:7",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3902:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3902:6:7"
																},
																"nativeSrc": "3902:62:7",
																"nodeType": "YulFunctionCall",
																"src": "3902:62:7"
															},
															"nativeSrc": "3902:62:7",
															"nodeType": "YulExpressionStatement",
															"src": "3902:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3984:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3984:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3995:2:7",
																				"nodeType": "YulLiteral",
																				"src": "3995:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3980:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3980:3:7"
																		},
																		"nativeSrc": "3980:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3980:18:7"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nativeSrc": "4000:4:7",
																		"nodeType": "YulLiteral",
																		"src": "4000:4:7",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3973:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3973:6:7"
																},
																"nativeSrc": "3973:32:7",
																"nodeType": "YulFunctionCall",
																"src": "3973:32:7"
															},
															"nativeSrc": "3973:32:7",
															"nodeType": "YulExpressionStatement",
															"src": "3973:32:7"
														},
														{
															"nativeSrc": "4014:27:7",
															"nodeType": "YulAssignment",
															"src": "4014:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4026:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4026:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4037:3:7",
																		"nodeType": "YulLiteral",
																		"src": "4037:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4022:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4022:3:7"
																},
																"nativeSrc": "4022:19:7",
																"nodeType": "YulFunctionCall",
																"src": "4022:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4014:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4014:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3649:398:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3800:9:7",
														"nodeType": "YulTypedName",
														"src": "3800:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3814:4:7",
														"nodeType": "YulTypedName",
														"src": "3814:4:7",
														"type": ""
													}
												],
												"src": "3649:398:7"
											},
											{
												"body": {
													"nativeSrc": "4226:179:7",
													"nodeType": "YulBlock",
													"src": "4226:179:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4243:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4243:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4254:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4254:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4236:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4236:6:7"
																},
																"nativeSrc": "4236:21:7",
																"nodeType": "YulFunctionCall",
																"src": "4236:21:7"
															},
															"nativeSrc": "4236:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "4236:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4277:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4277:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4288:2:7",
																				"nodeType": "YulLiteral",
																				"src": "4288:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4273:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4273:3:7"
																		},
																		"nativeSrc": "4273:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4273:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4293:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4293:2:7",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4266:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4266:6:7"
																},
																"nativeSrc": "4266:30:7",
																"nodeType": "YulFunctionCall",
																"src": "4266:30:7"
															},
															"nativeSrc": "4266:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "4266:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4316:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4316:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4327:2:7",
																				"nodeType": "YulLiteral",
																				"src": "4327:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4312:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4312:3:7"
																		},
																		"nativeSrc": "4312:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4312:18:7"
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nativeSrc": "4332:31:7",
																		"nodeType": "YulLiteral",
																		"src": "4332:31:7",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4305:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4305:6:7"
																},
																"nativeSrc": "4305:59:7",
																"nodeType": "YulFunctionCall",
																"src": "4305:59:7"
															},
															"nativeSrc": "4305:59:7",
															"nodeType": "YulExpressionStatement",
															"src": "4305:59:7"
														},
														{
															"nativeSrc": "4373:26:7",
															"nodeType": "YulAssignment",
															"src": "4373:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4385:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4385:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4396:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4396:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4381:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4381:3:7"
																},
																"nativeSrc": "4381:18:7",
																"nodeType": "YulFunctionCall",
																"src": "4381:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4373:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4373:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4052:353:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4203:9:7",
														"nodeType": "YulTypedName",
														"src": "4203:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4217:4:7",
														"nodeType": "YulTypedName",
														"src": "4217:4:7",
														"type": ""
													}
												],
												"src": "4052:353:7"
											},
											{
												"body": {
													"nativeSrc": "4584:227:7",
													"nodeType": "YulBlock",
													"src": "4584:227:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4601:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4601:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4612:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4612:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4594:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4594:6:7"
																},
																"nativeSrc": "4594:21:7",
																"nodeType": "YulFunctionCall",
																"src": "4594:21:7"
															},
															"nativeSrc": "4594:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "4594:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4635:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4635:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4646:2:7",
																				"nodeType": "YulLiteral",
																				"src": "4646:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4631:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4631:3:7"
																		},
																		"nativeSrc": "4631:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4631:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4651:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4651:2:7",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4624:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4624:6:7"
																},
																"nativeSrc": "4624:30:7",
																"nodeType": "YulFunctionCall",
																"src": "4624:30:7"
															},
															"nativeSrc": "4624:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "4624:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4674:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4674:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4685:2:7",
																				"nodeType": "YulLiteral",
																				"src": "4685:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4670:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4670:3:7"
																		},
																		"nativeSrc": "4670:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4670:18:7"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nativeSrc": "4690:34:7",
																		"nodeType": "YulLiteral",
																		"src": "4690:34:7",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4663:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4663:6:7"
																},
																"nativeSrc": "4663:62:7",
																"nodeType": "YulFunctionCall",
																"src": "4663:62:7"
															},
															"nativeSrc": "4663:62:7",
															"nodeType": "YulExpressionStatement",
															"src": "4663:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4745:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4745:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4756:2:7",
																				"nodeType": "YulLiteral",
																				"src": "4756:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4741:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4741:3:7"
																		},
																		"nativeSrc": "4741:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4741:18:7"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nativeSrc": "4761:7:7",
																		"nodeType": "YulLiteral",
																		"src": "4761:7:7",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4734:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4734:6:7"
																},
																"nativeSrc": "4734:35:7",
																"nodeType": "YulFunctionCall",
																"src": "4734:35:7"
															},
															"nativeSrc": "4734:35:7",
															"nodeType": "YulExpressionStatement",
															"src": "4734:35:7"
														},
														{
															"nativeSrc": "4778:27:7",
															"nodeType": "YulAssignment",
															"src": "4778:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4790:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4790:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4801:3:7",
																		"nodeType": "YulLiteral",
																		"src": "4801:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4786:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4786:3:7"
																},
																"nativeSrc": "4786:19:7",
																"nodeType": "YulFunctionCall",
																"src": "4786:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4778:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4778:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4410:401:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4561:9:7",
														"nodeType": "YulTypedName",
														"src": "4561:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4575:4:7",
														"nodeType": "YulTypedName",
														"src": "4575:4:7",
														"type": ""
													}
												],
												"src": "4410:401:7"
											},
											{
												"body": {
													"nativeSrc": "4990:225:7",
													"nodeType": "YulBlock",
													"src": "4990:225:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5007:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5007:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5018:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5018:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5000:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5000:6:7"
																},
																"nativeSrc": "5000:21:7",
																"nodeType": "YulFunctionCall",
																"src": "5000:21:7"
															},
															"nativeSrc": "5000:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "5000:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5041:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5041:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5052:2:7",
																				"nodeType": "YulLiteral",
																				"src": "5052:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5037:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5037:3:7"
																		},
																		"nativeSrc": "5037:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5037:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5057:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5057:2:7",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5030:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5030:6:7"
																},
																"nativeSrc": "5030:30:7",
																"nodeType": "YulFunctionCall",
																"src": "5030:30:7"
															},
															"nativeSrc": "5030:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "5030:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5080:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5080:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5091:2:7",
																				"nodeType": "YulLiteral",
																				"src": "5091:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5076:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5076:3:7"
																		},
																		"nativeSrc": "5076:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5076:18:7"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nativeSrc": "5096:34:7",
																		"nodeType": "YulLiteral",
																		"src": "5096:34:7",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5069:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5069:6:7"
																},
																"nativeSrc": "5069:62:7",
																"nodeType": "YulFunctionCall",
																"src": "5069:62:7"
															},
															"nativeSrc": "5069:62:7",
															"nodeType": "YulExpressionStatement",
															"src": "5069:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5151:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5151:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5162:2:7",
																				"nodeType": "YulLiteral",
																				"src": "5162:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5147:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5147:3:7"
																		},
																		"nativeSrc": "5147:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5147:18:7"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nativeSrc": "5167:5:7",
																		"nodeType": "YulLiteral",
																		"src": "5167:5:7",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5140:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5140:6:7"
																},
																"nativeSrc": "5140:33:7",
																"nodeType": "YulFunctionCall",
																"src": "5140:33:7"
															},
															"nativeSrc": "5140:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "5140:33:7"
														},
														{
															"nativeSrc": "5182:27:7",
															"nodeType": "YulAssignment",
															"src": "5182:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5194:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5194:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5205:3:7",
																		"nodeType": "YulLiteral",
																		"src": "5205:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5190:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5190:3:7"
																},
																"nativeSrc": "5190:19:7",
																"nodeType": "YulFunctionCall",
																"src": "5190:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5182:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5182:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4816:399:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4967:9:7",
														"nodeType": "YulTypedName",
														"src": "4967:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4981:4:7",
														"nodeType": "YulTypedName",
														"src": "4981:4:7",
														"type": ""
													}
												],
												"src": "4816:399:7"
											},
											{
												"body": {
													"nativeSrc": "5394:228:7",
													"nodeType": "YulBlock",
													"src": "5394:228:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5411:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5411:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5422:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5422:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5404:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5404:6:7"
																},
																"nativeSrc": "5404:21:7",
																"nodeType": "YulFunctionCall",
																"src": "5404:21:7"
															},
															"nativeSrc": "5404:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "5404:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5445:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5445:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5456:2:7",
																				"nodeType": "YulLiteral",
																				"src": "5456:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5441:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5441:3:7"
																		},
																		"nativeSrc": "5441:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5441:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5461:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5461:2:7",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5434:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5434:6:7"
																},
																"nativeSrc": "5434:30:7",
																"nodeType": "YulFunctionCall",
																"src": "5434:30:7"
															},
															"nativeSrc": "5434:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "5434:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5484:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5484:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5495:2:7",
																				"nodeType": "YulLiteral",
																				"src": "5495:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5480:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5480:3:7"
																		},
																		"nativeSrc": "5480:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5480:18:7"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nativeSrc": "5500:34:7",
																		"nodeType": "YulLiteral",
																		"src": "5500:34:7",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5473:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5473:6:7"
																},
																"nativeSrc": "5473:62:7",
																"nodeType": "YulFunctionCall",
																"src": "5473:62:7"
															},
															"nativeSrc": "5473:62:7",
															"nodeType": "YulExpressionStatement",
															"src": "5473:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5555:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5555:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5566:2:7",
																				"nodeType": "YulLiteral",
																				"src": "5566:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5551:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5551:3:7"
																		},
																		"nativeSrc": "5551:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5551:18:7"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nativeSrc": "5571:8:7",
																		"nodeType": "YulLiteral",
																		"src": "5571:8:7",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5544:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5544:6:7"
																},
																"nativeSrc": "5544:36:7",
																"nodeType": "YulFunctionCall",
																"src": "5544:36:7"
															},
															"nativeSrc": "5544:36:7",
															"nodeType": "YulExpressionStatement",
															"src": "5544:36:7"
														},
														{
															"nativeSrc": "5589:27:7",
															"nodeType": "YulAssignment",
															"src": "5589:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5601:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5601:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5612:3:7",
																		"nodeType": "YulLiteral",
																		"src": "5612:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5597:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5597:3:7"
																},
																"nativeSrc": "5597:19:7",
																"nodeType": "YulFunctionCall",
																"src": "5597:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5589:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5589:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5220:402:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5371:9:7",
														"nodeType": "YulTypedName",
														"src": "5371:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5385:4:7",
														"nodeType": "YulTypedName",
														"src": "5385:4:7",
														"type": ""
													}
												],
												"src": "5220:402:7"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        mcopy(add(headStart, 64), add(value0, 32), length)\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100a6575f3560e01c8063395093511161006e578063395093511461011f57806370a082311461013257806395d89b411461015a578063a457c2d714610162578063a9059cbb14610175578063dd62ed3e14610188575f80fd5b806306fdde03146100aa578063095ea7b3146100c857806318160ddd146100eb57806323b872dd146100fd578063313ce56714610110575b5f80fd5b6100b261019b565b6040516100bf919061068a565b60405180910390f35b6100db6100d63660046106da565b61022b565b60405190151581526020016100bf565b6002545b6040519081526020016100bf565b6100db61010b366004610702565b610244565b604051601281526020016100bf565b6100db61012d3660046106da565b610267565b6100ef61014036600461073b565b6001600160a01b03165f9081526020819052604090205490565b6100b2610288565b6100db6101703660046106da565b610297565b6100db6101833660046106da565b610316565b6100ef61019636600461075b565b610323565b6060600380546101aa9061078c565b80601f01602080910402602001604051908101604052809291908181526020018280546101d69061078c565b80156102215780601f106101f857610100808354040283529160200191610221565b820191905f5260205f20905b81548152906001019060200180831161020457829003601f168201915b5050505050905090565b5f3361023881858561034d565b60019150505b92915050565b5f33610251858285610470565b61025c8585856104e8565b506001949350505050565b5f336102388185856102798383610323565b61028391906107c4565b61034d565b6060600480546101aa9061078c565b5f33816102a48286610323565b9050838110156103095760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b61025c828686840361034d565b5f336102388185856104e8565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103af5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610300565b6001600160a01b0382166104105760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610300565b6001600160a01b038381165f8181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b5f61047b8484610323565b90505f1981146104e257818110156104d55760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610300565b6104e2848484840361034d565b50505050565b6001600160a01b03831661054c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610300565b6001600160a01b0382166105ae5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610300565b6001600160a01b0383165f90815260208190526040902054818110156106255760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610300565b6001600160a01b038481165f81815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36104e2565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b03811681146106d5575f80fd5b919050565b5f80604083850312156106eb575f80fd5b6106f4836106bf565b946020939093013593505050565b5f805f60608486031215610714575f80fd5b61071d846106bf565b925061072b602085016106bf565b9150604084013590509250925092565b5f6020828403121561074b575f80fd5b610754826106bf565b9392505050565b5f806040838503121561076c575f80fd5b610775836106bf565b9150610783602084016106bf565b90509250929050565b600181811c908216806107a057607f821691505b6020821081036107be57634e487b7160e01b5f52602260045260245ffd5b50919050565b8082018082111561023e57634e487b7160e01b5f52601160045260245ffdfea264697066735822122090e4af7cd9ffb9b46c49a42bc69d404577b9bd08df0979ba0c2be62d9183cde364736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA6 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x132 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x188 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xC8 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEB JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xFD JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x110 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xB2 PUSH2 0x19B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBF SWAP2 SWAP1 PUSH2 0x68A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDB PUSH2 0xD6 CALLDATASIZE PUSH1 0x4 PUSH2 0x6DA JUMP JUMPDEST PUSH2 0x22B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH2 0xDB PUSH2 0x10B CALLDATASIZE PUSH1 0x4 PUSH2 0x702 JUMP JUMPDEST PUSH2 0x244 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH2 0xDB PUSH2 0x12D CALLDATASIZE PUSH1 0x4 PUSH2 0x6DA JUMP JUMPDEST PUSH2 0x267 JUMP JUMPDEST PUSH2 0xEF PUSH2 0x140 CALLDATASIZE PUSH1 0x4 PUSH2 0x73B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB2 PUSH2 0x288 JUMP JUMPDEST PUSH2 0xDB PUSH2 0x170 CALLDATASIZE PUSH1 0x4 PUSH2 0x6DA JUMP JUMPDEST PUSH2 0x297 JUMP JUMPDEST PUSH2 0xDB PUSH2 0x183 CALLDATASIZE PUSH1 0x4 PUSH2 0x6DA JUMP JUMPDEST PUSH2 0x316 JUMP JUMPDEST PUSH2 0xEF PUSH2 0x196 CALLDATASIZE PUSH1 0x4 PUSH2 0x75B JUMP JUMPDEST PUSH2 0x323 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1AA SWAP1 PUSH2 0x78C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1D6 SWAP1 PUSH2 0x78C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x221 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1F8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x221 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x204 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x238 DUP2 DUP6 DUP6 PUSH2 0x34D JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x251 DUP6 DUP3 DUP6 PUSH2 0x470 JUMP JUMPDEST PUSH2 0x25C DUP6 DUP6 DUP6 PUSH2 0x4E8 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x238 DUP2 DUP6 DUP6 PUSH2 0x279 DUP4 DUP4 PUSH2 0x323 JUMP JUMPDEST PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x7C4 JUMP JUMPDEST PUSH2 0x34D JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1AA SWAP1 PUSH2 0x78C JUMP JUMPDEST PUSH0 CALLER DUP2 PUSH2 0x2A4 DUP3 DUP7 PUSH2 0x323 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x309 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x25C DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x34D JUMP JUMPDEST PUSH0 CALLER PUSH2 0x238 DUP2 DUP6 DUP6 PUSH2 0x4E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x410 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x47B DUP5 DUP5 PUSH2 0x323 JUMP JUMPDEST SWAP1 POP PUSH0 NOT DUP2 EQ PUSH2 0x4E2 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x300 JUMP JUMPDEST PUSH2 0x4E2 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x34D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x54C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5AE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x625 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4E2 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x6D5 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x6EB JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x6F4 DUP4 PUSH2 0x6BF JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x714 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x71D DUP5 PUSH2 0x6BF JUMP JUMPDEST SWAP3 POP PUSH2 0x72B PUSH1 0x20 DUP6 ADD PUSH2 0x6BF JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x74B JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x754 DUP3 PUSH2 0x6BF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x76C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x775 DUP4 PUSH2 0x6BF JUMP JUMPDEST SWAP2 POP PUSH2 0x783 PUSH1 0x20 DUP5 ADD PUSH2 0x6BF JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x7A0 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x7BE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x23E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP1 0xE4 0xAF PUSH29 0xD9FFB9B46C49A42BC69D404577B9BD08DF0979BA0C2BE62D9183CDE364 PUSH20 0x6F6C634300081900330000000000000000000000 ",
							"sourceMap": "1532:11312:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4444:197;;;;;;:::i;:::-;;:::i;:::-;;;1039:14:7;;1032:22;1014:41;;1002:2;987:18;4444:197:2;874:187:7;3255:106:2;3342:12;;3255:106;;;1212:25:7;;;1200:2;1185:18;3255:106:2;1066:177:7;5203:256:2;;;;;;:::i;:::-;;:::i;3104:91::-;;;3186:2;1723:36:7;;1711:2;1696:18;3104:91:2;1581:184:7;5854:234:2;;;;;;:::i;:::-;;:::i;3419:125::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3519:18:2;3493:7;3519:18;;;;;;;;;;;;3419:125;2369:102;;;:::i;6575:427::-;;;;;;:::i;:::-;;:::i;3740:189::-;;;;;;:::i;:::-;;:::i;3987:149::-;;;;;;:::i;:::-;;:::i;2158:98::-;2212:13;2244:5;2237:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98;:::o;4444:197::-;4527:4;719:10:5;4581:32:2;719:10:5;4597:7:2;4606:6;4581:8;:32::i;:::-;4630:4;4623:11;;;4444:197;;;;;:::o;5203:256::-;5300:4;719:10:5;5356:38:2;5372:4;719:10:5;5387:6:2;5356:15;:38::i;:::-;5404:27;5414:4;5420:2;5424:6;5404:9;:27::i;:::-;-1:-1:-1;5448:4:2;;5203:256;-1:-1:-1;;;;5203:256:2:o;5854:234::-;5942:4;719:10:5;5996:64:2;719:10:5;6012:7:2;6049:10;6021:25;719:10:5;6012:7:2;6021:9;:25::i;:::-;:38;;;;:::i;:::-;5996:8;:64::i;2369:102::-;2425:13;2457:7;2450:14;;;;;:::i;6575:427::-;6668:4;719:10:5;6668:4:2;6749:25;719:10:5;6766:7:2;6749:9;:25::i;:::-;6722:52;;6812:15;6792:16;:35;;6784:85;;;;-1:-1:-1;;;6784:85:2;;3040:2:7;6784:85:2;;;3022:21:7;3079:2;3059:18;;;3052:30;3118:34;3098:18;;;3091:62;-1:-1:-1;;;3169:18:7;;;3162:35;3214:19;;6784:85:2;;;;;;;;;6903:60;6912:5;6919:7;6947:15;6928:16;:34;6903:8;:60::i;3740:189::-;3819:4;719:10:5;3873:28:2;719:10:5;3890:2:2;3894:6;3873:9;:28::i;3987:149::-;-1:-1:-1;;;;;4102:18:2;;;4076:7;4102:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3987:149::o;10457:340::-;-1:-1:-1;;;;;10558:19:2;;10550:68;;;;-1:-1:-1;;;10550:68:2;;3446:2:7;10550:68:2;;;3428:21:7;3485:2;3465:18;;;3458:30;3524:34;3504:18;;;3497:62;-1:-1:-1;;;3575:18:7;;;3568:34;3619:19;;10550:68:2;3244:400:7;10550:68:2;-1:-1:-1;;;;;10636:21:2;;10628:68;;;;-1:-1:-1;;;10628:68:2;;3851:2:7;10628:68:2;;;3833:21:7;3890:2;3870:18;;;3863:30;3929:34;3909:18;;;3902:62;-1:-1:-1;;;3980:18:7;;;3973:32;4022:19;;10628:68:2;3649:398:7;10628:68:2;-1:-1:-1;;;;;10707:18:2;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10758:32;;1212:25:7;;;10758:32:2;;1185:18:7;10758:32:2;;;;;;;10457:340;;;:::o;11078:411::-;11178:24;11205:25;11215:5;11222:7;11205:9;:25::i;:::-;11178:52;;-1:-1:-1;;11244:16:2;:37;11240:243;;11325:6;11305:16;:26;;11297:68;;;;-1:-1:-1;;;11297:68:2;;4254:2:7;11297:68:2;;;4236:21:7;4293:2;4273:18;;;4266:30;4332:31;4312:18;;;4305:59;4381:18;;11297:68:2;4052:353:7;11297:68:2;11407:51;11416:5;11423:7;11451:6;11432:16;:25;11407:8;:51::i;:::-;11168:321;11078:411;;;:::o;7456:788::-;-1:-1:-1;;;;;7552:18:2;;7544:68;;;;-1:-1:-1;;;7544:68:2;;4612:2:7;7544:68:2;;;4594:21:7;4651:2;4631:18;;;4624:30;4690:34;4670:18;;;4663:62;-1:-1:-1;;;4741:18:7;;;4734:35;4786:19;;7544:68:2;4410:401:7;7544:68:2;-1:-1:-1;;;;;7630:16:2;;7622:64;;;;-1:-1:-1;;;7622:64:2;;5018:2:7;7622:64:2;;;5000:21:7;5057:2;5037:18;;;5030:30;5096:34;5076:18;;;5069:62;-1:-1:-1;;;5147:18:7;;;5140:33;5190:19;;7622:64:2;4816:399:7;7622:64:2;-1:-1:-1;;;;;7768:15:2;;7746:19;7768:15;;;;;;;;;;;7801:21;;;;7793:72;;;;-1:-1:-1;;;7793:72:2;;5422:2:7;7793:72:2;;;5404:21:7;5461:2;5441:18;;;5434:30;5500:34;5480:18;;;5473:62;-1:-1:-1;;;5551:18:7;;;5544:36;5597:19;;7793:72:2;5220:402:7;7793:72:2;-1:-1:-1;;;;;7899:15:2;;;:9;:15;;;;;;;;;;;7917:20;;;7899:38;;8114:13;;;;;;;;;;:23;;;;;;8163:26;;1212:25:7;;;8114:13:2;;8163:26;;1185:18:7;8163:26:2;;;;;;;8200:37;12073:91;14:418:7;163:2;152:9;145:21;126:4;195:6;189:13;238:6;233:2;222:9;218:18;211:34;297:6;292:2;284:6;280:15;275:2;264:9;260:18;254:50;353:1;348:2;339:6;328:9;324:22;320:31;313:42;423:2;416;412:7;407:2;399:6;395:15;391:29;380:9;376:45;372:54;364:62;;;14:418;;;;:::o;437:173::-;505:20;;-1:-1:-1;;;;;554:31:7;;544:42;;534:70;;600:1;597;590:12;534:70;437:173;;;:::o;615:254::-;683:6;691;744:2;732:9;723:7;719:23;715:32;712:52;;;760:1;757;750:12;712:52;783:29;802:9;783:29;:::i;:::-;773:39;859:2;844:18;;;;831:32;;-1:-1:-1;;;615:254:7:o;1248:328::-;1325:6;1333;1341;1394:2;1382:9;1373:7;1369:23;1365:32;1362:52;;;1410:1;1407;1400:12;1362:52;1433:29;1452:9;1433:29;:::i;:::-;1423:39;;1481:38;1515:2;1504:9;1500:18;1481:38;:::i;:::-;1471:48;;1566:2;1555:9;1551:18;1538:32;1528:42;;1248:328;;;;;:::o;1770:186::-;1829:6;1882:2;1870:9;1861:7;1857:23;1853:32;1850:52;;;1898:1;1895;1888:12;1850:52;1921:29;1940:9;1921:29;:::i;:::-;1911:39;1770:186;-1:-1:-1;;;1770:186:7:o;1961:260::-;2029:6;2037;2090:2;2078:9;2069:7;2065:23;2061:32;2058:52;;;2106:1;2103;2096:12;2058:52;2129:29;2148:9;2129:29;:::i;:::-;2119:39;;2177:38;2211:2;2200:9;2196:18;2177:38;:::i;:::-;2167:48;;1961:260;;;;;:::o;2226:380::-;2305:1;2301:12;;;;2348;;;2369:61;;2423:4;2415:6;2411:17;2401:27;;2369:61;2476:2;2468:6;2465:14;2445:18;2442:38;2439:161;;2522:10;2517:3;2513:20;2510:1;2503:31;2557:4;2554:1;2547:15;2585:4;2582:1;2575:15;2439:161;;2226:380;;;:::o;2611:222::-;2676:9;;;2697:10;;;2694:133;;;2749:10;2744:3;2740:20;2737:1;2730:31;2784:4;2781:1;2774:15;2812:4;2809:1;2802:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "414600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24624",
								"balanceOf(address)": "2559",
								"decimals()": "265",
								"decreaseAllowance(address,uint256)": "27011",
								"increaseAllowance(address,uint256)": "infinite",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2325",
								"transfer(address,uint256)": "51133",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,uint256)": "infinite",
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_spendAllowance(address,address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "CODESIZE",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1980,
									"end": 2093,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "tag",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2046,
									"end": 2051,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 2054,
									"end": 2059,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 2046,
									"end": 2051,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 2046,
									"end": 2059,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "tag",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2069,
									"end": 2076,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 2079,
									"end": 2086,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2069,
									"end": 2076,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 2069,
									"end": 2086,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 146,
									"end": 862,
									"name": "tag",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 146,
									"end": 862,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 200,
									"end": 205,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 253,
									"end": 256,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 246,
									"end": 250,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 238,
									"end": 244,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 234,
									"end": 251,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 230,
									"end": 257,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 220,
									"end": 275,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 271,
									"end": 272,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 268,
									"end": 269,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 261,
									"end": 273,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 220,
									"end": 275,
									"name": "tag",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 294,
									"end": 307,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 294,
									"end": 307,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 356,
									"end": 366,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 353,
									"end": 389,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 353,
									"end": 389,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 353,
									"end": 389,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 369,
									"end": 387,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 369,
									"end": 387,
									"name": "tag",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 444,
									"end": 446,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 438,
									"end": 447,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 412,
									"end": 414,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 498,
									"end": 511,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 498,
									"end": 511,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 494,
									"end": 516,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 494,
									"end": 516,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 494,
									"end": 516,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 518,
									"end": 520,
									"name": "PUSH",
									"source": 7,
									"value": "3F"
								},
								{
									"begin": 490,
									"end": 521,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 486,
									"end": 526,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 474,
									"end": 527,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 474,
									"end": 527,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 474,
									"end": 527,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 542,
									"end": 560,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 562,
									"end": 584,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 539,
									"end": 585,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 536,
									"end": 608,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 536,
									"end": 608,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 536,
									"end": 608,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 588,
									"end": 606,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 588,
									"end": 606,
									"name": "tag",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 628,
									"end": 638,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 624,
									"end": 626,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 617,
									"end": 639,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 663,
									"end": 665,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 655,
									"end": 661,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 648,
									"end": 666,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 709,
									"end": 712,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 702,
									"end": 706,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 697,
									"end": 699,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 689,
									"end": 695,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 685,
									"end": 700,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 681,
									"end": 707,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 678,
									"end": 713,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 675,
									"end": 730,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 675,
									"end": 730,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 675,
									"end": 730,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 726,
									"end": 727,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 723,
									"end": 724,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 716,
									"end": 728,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 675,
									"end": 730,
									"name": "tag",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 675,
									"end": 730,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 783,
									"end": 785,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 776,
									"end": 780,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 768,
									"end": 774,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 764,
									"end": 781,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 757,
									"end": 761,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 749,
									"end": 755,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 745,
									"end": 762,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 739,
									"end": 786,
									"name": "MCOPY",
									"source": 7
								},
								{
									"begin": 830,
									"end": 831,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 823,
									"end": 827,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 818,
									"end": 820,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 810,
									"end": 816,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 806,
									"end": 821,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 802,
									"end": 828,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 795,
									"end": 832,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 850,
									"end": 856,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 841,
									"end": 856,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 841,
									"end": 856,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 841,
									"end": 856,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 841,
									"end": 856,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 841,
									"end": 856,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 841,
									"end": 856,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 146,
									"end": 862,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 146,
									"end": 862,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 146,
									"end": 862,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 146,
									"end": 862,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 146,
									"end": 862,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 867,
									"end": 1429,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 867,
									"end": 1429,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 966,
									"end": 972,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 974,
									"end": 980,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1027,
									"end": 1029,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1015,
									"end": 1024,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1006,
									"end": 1013,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1002,
									"end": 1025,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 998,
									"end": 1030,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 995,
									"end": 1047,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 995,
									"end": 1047,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 995,
									"end": 1047,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1043,
									"end": 1044,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1040,
									"end": 1041,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1033,
									"end": 1045,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 995,
									"end": 1047,
									"name": "tag",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 995,
									"end": 1047,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1070,
									"end": 1086,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1070,
									"end": 1086,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1135,
									"end": 1149,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1135,
									"end": 1149,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1135,
									"end": 1149,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 1132,
									"end": 1166,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1132,
									"end": 1166,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 1132,
									"end": 1166,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1162,
									"end": 1163,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1159,
									"end": 1160,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1152,
									"end": 1164,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1132,
									"end": 1166,
									"name": "tag",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 1132,
									"end": 1166,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1185,
									"end": 1246,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 1238,
									"end": 1245,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1229,
									"end": 1235,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1218,
									"end": 1227,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 1214,
									"end": 1236,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1185,
									"end": 1246,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 1185,
									"end": 1246,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1185,
									"end": 1246,
									"name": "tag",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 1185,
									"end": 1246,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1175,
									"end": 1246,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 1175,
									"end": 1246,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1292,
									"end": 1294,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1281,
									"end": 1290,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1277,
									"end": 1295,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1271,
									"end": 1296,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1255,
									"end": 1296,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1255,
									"end": 1296,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1321,
									"end": 1323,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1311,
									"end": 1319,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1308,
									"end": 1324,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 1305,
									"end": 1341,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1305,
									"end": 1341,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 1305,
									"end": 1341,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1337,
									"end": 1338,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1334,
									"end": 1335,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1327,
									"end": 1339,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1305,
									"end": 1341,
									"name": "tag",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 1305,
									"end": 1341,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1305,
									"end": 1341,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1360,
									"end": 1423,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 1415,
									"end": 1422,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1404,
									"end": 1412,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1393,
									"end": 1402,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1389,
									"end": 1413,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1360,
									"end": 1423,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 1360,
									"end": 1423,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1360,
									"end": 1423,
									"name": "tag",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 1360,
									"end": 1423,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1350,
									"end": 1423,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1350,
									"end": 1423,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1350,
									"end": 1423,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 867,
									"end": 1429,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 867,
									"end": 1429,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 867,
									"end": 1429,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 867,
									"end": 1429,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 867,
									"end": 1429,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 867,
									"end": 1429,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1434,
									"end": 1814,
									"name": "tag",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 1434,
									"end": 1814,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1513,
									"end": 1514,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1509,
									"end": 1521,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1509,
									"end": 1521,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1509,
									"end": 1521,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 1509,
									"end": 1521,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1556,
									"end": 1568,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1556,
									"end": 1568,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1556,
									"end": 1568,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1577,
									"end": 1638,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 1577,
									"end": 1638,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1631,
									"end": 1635,
									"name": "PUSH",
									"source": 7,
									"value": "7F"
								},
								{
									"begin": 1623,
									"end": 1629,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1619,
									"end": 1636,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1609,
									"end": 1636,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1609,
									"end": 1636,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1577,
									"end": 1638,
									"name": "tag",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 1577,
									"end": 1638,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1684,
									"end": 1686,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1676,
									"end": 1682,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1673,
									"end": 1687,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 1653,
									"end": 1671,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1650,
									"end": 1688,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 1647,
									"end": 1808,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 1647,
									"end": 1808,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1730,
									"end": 1740,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B71"
								},
								{
									"begin": 1725,
									"end": 1728,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 1721,
									"end": 1741,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 1718,
									"end": 1719,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1711,
									"end": 1742,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1765,
									"end": 1769,
									"name": "PUSH",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 1762,
									"end": 1763,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1755,
									"end": 1770,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1793,
									"end": 1797,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1790,
									"end": 1791,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1783,
									"end": 1798,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1647,
									"end": 1808,
									"name": "tag",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 1647,
									"end": 1808,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1647,
									"end": 1808,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1434,
									"end": 1814,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1434,
									"end": 1814,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1434,
									"end": 1814,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1434,
									"end": 1814,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1945,
									"end": 2463,
									"name": "tag",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 1945,
									"end": 2463,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2047,
									"end": 2049,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 2042,
									"end": 2045,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2039,
									"end": 2050,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 2036,
									"end": 2457,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2036,
									"end": 2457,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 2036,
									"end": 2457,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2083,
									"end": 2088,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2080,
									"end": 2081,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2073,
									"end": 2089,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2127,
									"end": 2131,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2124,
									"end": 2125,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2114,
									"end": 2132,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 2197,
									"end": 2199,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 2185,
									"end": 2195,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2181,
									"end": 2200,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2178,
									"end": 2179,
									"name": "PUSH",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 2174,
									"end": 2201,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 2168,
									"end": 2172,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2164,
									"end": 2202,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2233,
									"end": 2237,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2221,
									"end": 2231,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 2218,
									"end": 2238,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 2215,
									"end": 2262,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2215,
									"end": 2262,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 2215,
									"end": 2262,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2256,
									"end": 2260,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2215,
									"end": 2262,
									"name": "tag",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 2215,
									"end": 2262,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2311,
									"end": 2313,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 2306,
									"end": 2309,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2302,
									"end": 2314,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2299,
									"end": 2300,
									"name": "PUSH",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 2295,
									"end": 2315,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 2289,
									"end": 2293,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2285,
									"end": 2316,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2275,
									"end": 2316,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2275,
									"end": 2316,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2366,
									"end": 2447,
									"name": "tag",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 2366,
									"end": 2447,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2384,
									"end": 2386,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2377,
									"end": 2382,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2374,
									"end": 2387,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 2366,
									"end": 2447,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2366,
									"end": 2447,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 2366,
									"end": 2447,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2443,
									"end": 2444,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2429,
									"end": 2445,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2429,
									"end": 2445,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 2410,
									"end": 2411,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 2399,
									"end": 2412,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2366,
									"end": 2447,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 2366,
									"end": 2447,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2366,
									"end": 2447,
									"name": "tag",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 2366,
									"end": 2447,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2370,
									"end": 2373,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2370,
									"end": 2373,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2036,
									"end": 2457,
									"name": "tag",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 2036,
									"end": 2457,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1945,
									"end": 2463,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1945,
									"end": 2463,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1945,
									"end": 2463,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1945,
									"end": 2463,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2639,
									"end": 3984,
									"name": "tag",
									"source": 7,
									"value": "7"
								},
								{
									"begin": 2639,
									"end": 3984,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2759,
									"end": 2769,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2759,
									"end": 2769,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2781,
									"end": 2811,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2781,
									"end": 2811,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 2778,
									"end": 2834,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2778,
									"end": 2834,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 2778,
									"end": 2834,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2814,
									"end": 2832,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 2814,
									"end": 2832,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 2814,
									"end": 2832,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2814,
									"end": 2832,
									"name": "tag",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 2814,
									"end": 2832,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2843,
									"end": 2940,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 2933,
									"end": 2939,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2893,
									"end": 2931,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 2925,
									"end": 2929,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2919,
									"end": 2930,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 2893,
									"end": 2931,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 2893,
									"end": 2931,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2893,
									"end": 2931,
									"name": "tag",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 2893,
									"end": 2931,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2887,
									"end": 2891,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2843,
									"end": 2940,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 2843,
									"end": 2940,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2843,
									"end": 2940,
									"name": "tag",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 2843,
									"end": 2940,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2995,
									"end": 2999,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2995,
									"end": 2999,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3052,
									"end": 3054,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 3041,
									"end": 3055,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3041,
									"end": 3055,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 3069,
									"end": 3070,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 3064,
									"end": 3727,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3064,
									"end": 3727,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 3064,
									"end": 3727,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 3064,
									"end": 3727,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3771,
									"end": 3772,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3788,
									"end": 3794,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3785,
									"end": 3874,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3785,
									"end": 3874,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 3785,
									"end": 3874,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3840,
									"end": 3859,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 3840,
									"end": 3859,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3840,
									"end": 3859,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3834,
									"end": 3860,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 3785,
									"end": 3874,
									"name": "tag",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 3785,
									"end": 3874,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2596,
									"end": 2597,
									"name": "PUSH",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 2592,
									"end": 2603,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 2592,
									"end": 2603,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2592,
									"end": 2603,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 2588,
									"end": 2612,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 2584,
									"end": 2613,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 2574,
									"end": 2614,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2620,
									"end": 2621,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 2616,
									"end": 2627,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 2616,
									"end": 2627,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2616,
									"end": 2627,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 2571,
									"end": 2628,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 3887,
									"end": 3968,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 3887,
									"end": 3968,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 3034,
									"end": 3978,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 3034,
									"end": 3978,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3064,
									"end": 3727,
									"name": "tag",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 3064,
									"end": 3727,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1892,
									"end": 1893,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1885,
									"end": 1899,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1885,
									"end": 1899,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1885,
									"end": 1899,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1929,
									"end": 1933,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1916,
									"end": 1934,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1916,
									"end": 1934,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3100,
									"end": 3120,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 3100,
									"end": 3120,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3100,
									"end": 3120,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3218,
									"end": 3454,
									"name": "tag",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 3218,
									"end": 3454,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3232,
									"end": 3239,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3229,
									"end": 3230,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3226,
									"end": 3240,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 3218,
									"end": 3454,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3218,
									"end": 3454,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 3218,
									"end": 3454,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3321,
									"end": 3340,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 3321,
									"end": 3340,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 3321,
									"end": 3340,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3315,
									"end": 3341,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 3300,
									"end": 3342,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3300,
									"end": 3342,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 3413,
									"end": 3440,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 3413,
									"end": 3440,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3413,
									"end": 3440,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3413,
									"end": 3440,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 3381,
									"end": 3382,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 3369,
									"end": 3383,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3369,
									"end": 3383,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3369,
									"end": 3383,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3369,
									"end": 3383,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3248,
									"end": 3267,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3248,
									"end": 3267,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3218,
									"end": 3454,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 3218,
									"end": 3454,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3218,
									"end": 3454,
									"name": "tag",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 3218,
									"end": 3454,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3222,
									"end": 3225,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3482,
									"end": 3488,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 3473,
									"end": 3480,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3470,
									"end": 3489,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 3467,
									"end": 3668,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3467,
									"end": 3668,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 3467,
									"end": 3668,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3543,
									"end": 3562,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 3543,
									"end": 3562,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 3543,
									"end": 3562,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3537,
									"end": 3563,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3626,
									"end": 3627,
									"name": "PUSH",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 3622,
									"end": 3636,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 3622,
									"end": 3636,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3622,
									"end": 3636,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 3638,
									"end": 3641,
									"name": "PUSH",
									"source": 7,
									"value": "F8"
								},
								{
									"begin": 3618,
									"end": 3642,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3614,
									"end": 3651,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 3610,
									"end": 3652,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 3595,
									"end": 3653,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3580,
									"end": 3654,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3580,
									"end": 3654,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 3467,
									"end": 3668,
									"name": "tag",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 3467,
									"end": 3668,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3467,
									"end": 3668,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3467,
									"end": 3668,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3714,
									"end": 3715,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 3705,
									"end": 3711,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3702,
									"end": 3703,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 3698,
									"end": 3712,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 3694,
									"end": 3716,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3688,
									"end": 3692,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 3681,
									"end": 3717,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 3034,
									"end": 3978,
									"name": "tag",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 3034,
									"end": 3978,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3034,
									"end": 3978,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3034,
									"end": 3978,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3034,
									"end": 3978,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3034,
									"end": 3978,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2639,
									"end": 3984,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2639,
									"end": 3984,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2639,
									"end": 3984,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2639,
									"end": 3984,
									"name": "tag",
									"source": 7,
									"value": "16"
								},
								{
									"begin": 2639,
									"end": 3984,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122090e4af7cd9ffb9b46c49a42bc69d404577b9bd08df0979ba0c2be62d9183cde364736f6c63430008190033",
									".code": [
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "39509351"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "39509351"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "95D89B41"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "A457C2D7"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "DD62ED3E"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "6FDDE03"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "95EA7B3"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "18160DDD"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "23B872DD"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "313CE567"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 2158,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 2158,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 4444,
											"end": 4641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 4444,
											"end": 4641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1039,
											"end": 1053,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1039,
											"end": 1053,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1032,
											"end": 1054,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1014,
											"end": 1055,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1014,
											"end": 1055,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1002,
											"end": 1004,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 987,
											"end": 1005,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 874,
											"end": 1061,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3342,
											"end": 3354,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3342,
											"end": 3354,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1212,
											"end": 1237,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1212,
											"end": 1237,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1212,
											"end": 1237,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1200,
											"end": 1202,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1185,
											"end": 1203,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1066,
											"end": 1243,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 5203,
											"end": 5459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 5203,
											"end": 5459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3186,
											"end": 3188,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1723,
											"end": 1759,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1723,
											"end": 1759,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1711,
											"end": 1713,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1696,
											"end": 1714,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1581,
											"end": 1765,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 5854,
											"end": 6088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5854,
											"end": 6088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3419,
											"end": 3544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3493,
											"end": 3500,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 2369,
											"end": 2471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 6575,
											"end": 7002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 6575,
											"end": 7002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 3740,
											"end": 3929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 3740,
											"end": 3929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3987,
											"end": 4136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 3987,
											"end": 4136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2212,
											"end": 2225,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2244,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2237,
											"end": 2249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2237,
											"end": 2249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4527,
											"end": 4531,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 4581,
											"end": 4613,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4597,
											"end": 4604,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4606,
											"end": 4612,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4581,
											"end": 4589,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 4581,
											"end": 4613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4581,
											"end": 4613,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 4581,
											"end": 4613,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4630,
											"end": 4634,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4623,
											"end": 4634,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4623,
											"end": 4634,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4623,
											"end": 4634,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5300,
											"end": 5304,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 5356,
											"end": 5394,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 5372,
											"end": 5376,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5387,
											"end": 5393,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5356,
											"end": 5371,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 5356,
											"end": 5394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5356,
											"end": 5394,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 5356,
											"end": 5394,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5404,
											"end": 5431,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 5414,
											"end": 5418,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5420,
											"end": 5422,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5424,
											"end": 5430,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5404,
											"end": 5413,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 5404,
											"end": 5431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5404,
											"end": 5431,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 5404,
											"end": 5431,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5448,
											"end": 5452,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5448,
											"end": 5452,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5203,
											"end": 5459,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5946,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 5996,
											"end": 6060,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6012,
											"end": 6019,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6049,
											"end": 6059,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6021,
											"end": 6046,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6012,
											"end": 6019,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6021,
											"end": 6030,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 6021,
											"end": 6046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6021,
											"end": 6046,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 6021,
											"end": 6046,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 6021,
											"end": 6059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5996,
											"end": 6004,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 5996,
											"end": 6060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2425,
											"end": 2438,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2457,
											"end": 2464,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2450,
											"end": 2464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6668,
											"end": 6672,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 6668,
											"end": 6672,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6749,
											"end": 6774,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6766,
											"end": 6773,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6749,
											"end": 6758,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 6749,
											"end": 6774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6749,
											"end": 6774,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 6749,
											"end": 6774,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6722,
											"end": 6774,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6722,
											"end": 6774,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6812,
											"end": 6827,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6792,
											"end": 6808,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6792,
											"end": 6827,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6792,
											"end": 6827,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3040,
											"end": 3042,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3022,
											"end": 3043,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3079,
											"end": 3081,
											"name": "PUSH",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 3059,
											"end": 3077,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3059,
											"end": 3077,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3077,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3052,
											"end": 3082,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3118,
											"end": 3152,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 3098,
											"end": 3116,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 3098,
											"end": 3116,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3098,
											"end": 3116,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3091,
											"end": 3153,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3169,
											"end": 3187,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 3169,
											"end": 3187,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3169,
											"end": 3187,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3162,
											"end": 3197,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3214,
											"end": 3233,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 3214,
											"end": 3233,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6903,
											"end": 6963,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 6912,
											"end": 6917,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6919,
											"end": 6926,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6947,
											"end": 6962,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6928,
											"end": 6944,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6928,
											"end": 6962,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6903,
											"end": 6911,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 6903,
											"end": 6963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3819,
											"end": 3823,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3873,
											"end": 3901,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3890,
											"end": 3892,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3894,
											"end": 3900,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3873,
											"end": 3882,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 3873,
											"end": 3901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4076,
											"end": 4083,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4113,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3987,
											"end": 4136,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10558,
											"end": 10577,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10558,
											"end": 10577,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3446,
											"end": 3448,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3428,
											"end": 3449,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3485,
											"end": 3487,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3465,
											"end": 3483,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3483,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3483,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3458,
											"end": 3488,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3524,
											"end": 3558,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 3504,
											"end": 3522,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 3504,
											"end": 3522,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3504,
											"end": 3522,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3497,
											"end": 3559,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3575,
											"end": 3593,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 3575,
											"end": 3593,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3575,
											"end": 3593,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3568,
											"end": 3602,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3619,
											"end": 3638,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 3619,
											"end": 3638,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3244,
											"end": 3644,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10636,
											"end": 10657,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10636,
											"end": 10657,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3851,
											"end": 3853,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3833,
											"end": 3854,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3890,
											"end": 3892,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 3870,
											"end": 3888,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3870,
											"end": 3888,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3870,
											"end": 3888,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3863,
											"end": 3893,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3929,
											"end": 3963,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 3909,
											"end": 3927,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 3909,
											"end": 3927,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3909,
											"end": 3927,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3902,
											"end": 3964,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3980,
											"end": 3998,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 3980,
											"end": 3998,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3980,
											"end": 3998,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3973,
											"end": 4005,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4022,
											"end": 4041,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 4022,
											"end": 4041,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3649,
											"end": 4047,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10718,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10743,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10743,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10743,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1212,
											"end": 1237,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1212,
											"end": 1237,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1212,
											"end": 1237,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1185,
											"end": 1203,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10457,
											"end": 10797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11178,
											"end": 11202,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11205,
											"end": 11230,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 11215,
											"end": 11220,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11222,
											"end": 11229,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11205,
											"end": 11214,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 11205,
											"end": 11230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11205,
											"end": 11230,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 11205,
											"end": 11230,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11178,
											"end": 11230,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11178,
											"end": 11230,
											"name": "POP",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11244,
											"end": 11260,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11244,
											"end": 11281,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 11240,
											"end": 11483,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 11240,
											"end": 11483,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11325,
											"end": 11331,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11305,
											"end": 11321,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11305,
											"end": 11331,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 11305,
											"end": 11331,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4254,
											"end": 4256,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4236,
											"end": 4257,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4293,
											"end": 4295,
											"name": "PUSH",
											"source": 7,
											"value": "1D"
										},
										{
											"begin": 4273,
											"end": 4291,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4273,
											"end": 4291,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4273,
											"end": 4291,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4266,
											"end": 4296,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4332,
											"end": 4363,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 4312,
											"end": 4330,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 4312,
											"end": 4330,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4312,
											"end": 4330,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4305,
											"end": 4364,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4381,
											"end": 4399,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 4381,
											"end": 4399,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 4052,
											"end": 4405,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11407,
											"end": 11458,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 11416,
											"end": 11421,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11423,
											"end": 11430,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11451,
											"end": 11457,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11432,
											"end": 11448,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11432,
											"end": 11457,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11407,
											"end": 11415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 11407,
											"end": 11458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11407,
											"end": 11458,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 11407,
											"end": 11458,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11168,
											"end": 11489,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11078,
											"end": 11489,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7456,
											"end": 8244,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 7456,
											"end": 8244,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7552,
											"end": 7570,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7552,
											"end": 7570,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4612,
											"end": 4614,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4594,
											"end": 4615,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4651,
											"end": 4653,
											"name": "PUSH",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 4631,
											"end": 4649,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4631,
											"end": 4649,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4631,
											"end": 4649,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4624,
											"end": 4654,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4690,
											"end": 4724,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 4670,
											"end": 4688,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 4670,
											"end": 4688,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4670,
											"end": 4688,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4663,
											"end": 4725,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4741,
											"end": 4759,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 4741,
											"end": 4759,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4741,
											"end": 4759,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4734,
											"end": 4769,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4786,
											"end": 4805,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 4786,
											"end": 4805,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 4410,
											"end": 4811,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7630,
											"end": 7646,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7630,
											"end": 7646,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5018,
											"end": 5020,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5000,
											"end": 5021,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5057,
											"end": 5059,
											"name": "PUSH",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 5037,
											"end": 5055,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 5037,
											"end": 5055,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5037,
											"end": 5055,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5030,
											"end": 5060,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5096,
											"end": 5130,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 5076,
											"end": 5094,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 5076,
											"end": 5094,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5076,
											"end": 5094,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5069,
											"end": 5131,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5147,
											"end": 5165,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 5147,
											"end": 5165,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5147,
											"end": 5165,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5140,
											"end": 5173,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5190,
											"end": 5209,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 5190,
											"end": 5209,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 4816,
											"end": 5215,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7746,
											"end": 7765,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5422,
											"end": 5424,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5404,
											"end": 5425,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5461,
											"end": 5463,
											"name": "PUSH",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 5441,
											"end": 5459,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 5441,
											"end": 5459,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5441,
											"end": 5459,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5434,
											"end": 5464,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5500,
											"end": 5534,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 5480,
											"end": 5498,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 5480,
											"end": 5498,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5480,
											"end": 5498,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5473,
											"end": 5535,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5551,
											"end": 5569,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 5551,
											"end": 5569,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5551,
											"end": 5569,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5544,
											"end": 5580,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5597,
											"end": 5616,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 5597,
											"end": 5616,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 5220,
											"end": 5622,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7908,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7917,
											"end": 7937,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7917,
											"end": 7937,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7917,
											"end": 7937,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7937,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7937,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1212,
											"end": 1237,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1212,
											"end": 1237,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1212,
											"end": 1237,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1185,
											"end": 1203,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 8200,
											"end": 8237,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 12073,
											"end": 12164,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14,
											"end": 432,
											"name": "tag",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 14,
											"end": 432,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 163,
											"end": 165,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 152,
											"end": 161,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 145,
											"end": 166,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 201,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 189,
											"end": 202,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 238,
											"end": 244,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 233,
											"end": 235,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 222,
											"end": 231,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 218,
											"end": 236,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 211,
											"end": 245,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 297,
											"end": 303,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 292,
											"end": 294,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 284,
											"end": 290,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 280,
											"end": 295,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 275,
											"end": 277,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 264,
											"end": 273,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 260,
											"end": 278,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 254,
											"end": 304,
											"name": "MCOPY",
											"source": 7
										},
										{
											"begin": 353,
											"end": 354,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 348,
											"end": 350,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 339,
											"end": 345,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 328,
											"end": 337,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 324,
											"end": 346,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 320,
											"end": 351,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 313,
											"end": 355,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 423,
											"end": 425,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 416,
											"end": 418,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 412,
											"end": 419,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 407,
											"end": 409,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 399,
											"end": 405,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 395,
											"end": 410,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 391,
											"end": 420,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 380,
											"end": 389,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 376,
											"end": 421,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 372,
											"end": 426,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 364,
											"end": 426,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 364,
											"end": 426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 364,
											"end": 426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14,
											"end": 432,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 14,
											"end": 432,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14,
											"end": 432,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14,
											"end": 432,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14,
											"end": 432,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 437,
											"end": 610,
											"name": "tag",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 437,
											"end": 610,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 505,
											"end": 525,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 505,
											"end": 525,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 554,
											"end": 585,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 554,
											"end": 585,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 544,
											"end": 586,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 544,
											"end": 586,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 534,
											"end": 604,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 534,
											"end": 604,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 600,
											"end": 601,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 597,
											"end": 598,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 590,
											"end": 602,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 534,
											"end": 604,
											"name": "tag",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 534,
											"end": 604,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 437,
											"end": 610,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 437,
											"end": 610,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 437,
											"end": 610,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 437,
											"end": 610,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 615,
											"end": 869,
											"name": "tag",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 615,
											"end": 869,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 683,
											"end": 689,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 691,
											"end": 697,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 744,
											"end": 746,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 732,
											"end": 741,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 723,
											"end": 730,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 719,
											"end": 742,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 715,
											"end": 747,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 712,
											"end": 764,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 712,
											"end": 764,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 712,
											"end": 764,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 760,
											"end": 761,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 757,
											"end": 758,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 750,
											"end": 762,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 712,
											"end": 764,
											"name": "tag",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 712,
											"end": 764,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 783,
											"end": 812,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 802,
											"end": 811,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 783,
											"end": 812,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 783,
											"end": 812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 783,
											"end": 812,
											"name": "tag",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 783,
											"end": 812,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 773,
											"end": 812,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 859,
											"end": 861,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 844,
											"end": 862,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 844,
											"end": 862,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 844,
											"end": 862,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 844,
											"end": 862,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 831,
											"end": 863,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 831,
											"end": 863,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 615,
											"end": 869,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1248,
											"end": 1576,
											"name": "tag",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 1248,
											"end": 1576,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1325,
											"end": 1331,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1333,
											"end": 1339,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1347,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1394,
											"end": 1396,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1382,
											"end": 1391,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1373,
											"end": 1380,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1369,
											"end": 1392,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1365,
											"end": 1397,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1362,
											"end": 1414,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1362,
											"end": 1414,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 1362,
											"end": 1414,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1410,
											"end": 1411,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1407,
											"end": 1408,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1400,
											"end": 1412,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1362,
											"end": 1414,
											"name": "tag",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 1362,
											"end": 1414,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1433,
											"end": 1462,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 1452,
											"end": 1461,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1433,
											"end": 1462,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 1433,
											"end": 1462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1433,
											"end": 1462,
											"name": "tag",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 1433,
											"end": 1462,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1423,
											"end": 1462,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1423,
											"end": 1462,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1481,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 1515,
											"end": 1517,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1504,
											"end": 1513,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1500,
											"end": 1518,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1481,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 1481,
											"end": 1519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1481,
											"end": 1519,
											"name": "tag",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 1481,
											"end": 1519,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1471,
											"end": 1519,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1471,
											"end": 1519,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1566,
											"end": 1568,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1555,
											"end": 1564,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1551,
											"end": 1569,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1538,
											"end": 1570,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1528,
											"end": 1570,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1528,
											"end": 1570,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1248,
											"end": 1576,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1248,
											"end": 1576,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1248,
											"end": 1576,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1248,
											"end": 1576,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1248,
											"end": 1576,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1248,
											"end": 1576,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1770,
											"end": 1956,
											"name": "tag",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 1770,
											"end": 1956,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1829,
											"end": 1835,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1882,
											"end": 1884,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1870,
											"end": 1879,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1861,
											"end": 1868,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1857,
											"end": 1880,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1853,
											"end": 1885,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1850,
											"end": 1902,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1850,
											"end": 1902,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 1850,
											"end": 1902,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1898,
											"end": 1899,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1895,
											"end": 1896,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1888,
											"end": 1900,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1850,
											"end": 1902,
											"name": "tag",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 1850,
											"end": 1902,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 1940,
											"end": 1949,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 1921,
											"end": 1950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "tag",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1911,
											"end": 1950,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1770,
											"end": 1956,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1770,
											"end": 1956,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1961,
											"end": 2221,
											"name": "tag",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1961,
											"end": 2221,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2029,
											"end": 2035,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2037,
											"end": 2043,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2090,
											"end": 2092,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2078,
											"end": 2087,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2069,
											"end": 2076,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2065,
											"end": 2088,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2061,
											"end": 2093,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2058,
											"end": 2110,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2058,
											"end": 2110,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 2058,
											"end": 2110,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2106,
											"end": 2107,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2103,
											"end": 2104,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2096,
											"end": 2108,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2058,
											"end": 2110,
											"name": "tag",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 2058,
											"end": 2110,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2129,
											"end": 2158,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 2148,
											"end": 2157,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2129,
											"end": 2158,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 2129,
											"end": 2158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2129,
											"end": 2158,
											"name": "tag",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 2129,
											"end": 2158,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2119,
											"end": 2158,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2119,
											"end": 2158,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2177,
											"end": 2215,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 2211,
											"end": 2213,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2200,
											"end": 2209,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2196,
											"end": 2214,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2177,
											"end": 2215,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 2177,
											"end": 2215,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2177,
											"end": 2215,
											"name": "tag",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 2177,
											"end": 2215,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2167,
											"end": 2215,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2167,
											"end": 2215,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1961,
											"end": 2221,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1961,
											"end": 2221,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1961,
											"end": 2221,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1961,
											"end": 2221,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1961,
											"end": 2221,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1961,
											"end": 2221,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2226,
											"end": 2606,
											"name": "tag",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 2226,
											"end": 2606,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2305,
											"end": 2306,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2301,
											"end": 2313,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2301,
											"end": 2313,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2301,
											"end": 2313,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 2301,
											"end": 2313,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2348,
											"end": 2360,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2348,
											"end": 2360,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2348,
											"end": 2360,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2369,
											"end": 2430,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 2369,
											"end": 2430,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2423,
											"end": 2427,
											"name": "PUSH",
											"source": 7,
											"value": "7F"
										},
										{
											"begin": 2415,
											"end": 2421,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2411,
											"end": 2428,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2401,
											"end": 2428,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2401,
											"end": 2428,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2369,
											"end": 2430,
											"name": "tag",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 2369,
											"end": 2430,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2476,
											"end": 2478,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2468,
											"end": 2474,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2465,
											"end": 2479,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 2445,
											"end": 2463,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2442,
											"end": 2480,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2439,
											"end": 2600,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 2439,
											"end": 2600,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2522,
											"end": 2532,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 2517,
											"end": 2520,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 2513,
											"end": 2533,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 2510,
											"end": 2511,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2503,
											"end": 2534,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2557,
											"end": 2561,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 2554,
											"end": 2555,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2547,
											"end": 2562,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2585,
											"end": 2589,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 2582,
											"end": 2583,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2575,
											"end": 2590,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2439,
											"end": 2600,
											"name": "tag",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 2439,
											"end": 2600,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2439,
											"end": 2600,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2226,
											"end": 2606,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2226,
											"end": 2606,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2226,
											"end": 2606,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2226,
											"end": 2606,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2611,
											"end": 2833,
											"name": "tag",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 2611,
											"end": 2833,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2676,
											"end": 2685,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2676,
											"end": 2685,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2676,
											"end": 2685,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2697,
											"end": 2707,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2697,
											"end": 2707,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2697,
											"end": 2707,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 2694,
											"end": 2827,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2694,
											"end": 2827,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 2694,
											"end": 2827,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2749,
											"end": 2759,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 2744,
											"end": 2747,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 2737,
											"end": 2738,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2730,
											"end": 2761,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2784,
											"end": 2788,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 2781,
											"end": 2782,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2774,
											"end": 2789,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2812,
											"end": 2816,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 2809,
											"end": 2810,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2802,
											"end": 2817,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"@openzeppelin/contracts@4.9.3/access/Ownable.sol",
								"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts@4.9.3/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts@4.9.3/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts@4.9.3/utils/Context.sol",
								"contracts/gainzilla.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"@openzeppelin/contracts@4.9.3/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts@4.9.3/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts@4.9.3/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 440,
								"contract": "@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 446,
								"contract": "@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 448,
								"contract": "@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 450,
								"contract": "@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 452,
								"contract": "@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@4.9.3/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@4.9.3/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.9.3/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@4.9.3/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@4.9.3/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.9.3/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts@4.9.3/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@4.9.3/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@4.9.3/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.9.3/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/gainzilla.sol": {
				"IUniswapV2Factory": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								}
							],
							"name": "createPair",
							"outputs": [
								{
									"internalType": "address",
									"name": "pair",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"createPair(address,address)": "c9c65396"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"createPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/gainzilla.sol\":\"IUniswapV2Factory\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]},\"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"@openzeppelin/contracts@4.9.3/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts@4.9.3/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts@4.9.3/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/gainzilla.sol\":{\"keccak256\":\"0xaf24b2443607f3081fbd12dba1576dfb037d438656eb72f314d83e1ceff98cb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7496ef2ce61329758ebef813381458d5f6bd216f0beb914574045f2ad4dffd0f\",\"dweb:/ipfs/QmRLcUZ522vYzzzK2JdQ3pCpDq2bdCndUN8s9sae7n8Lq1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IUniswapV2Pair": {
					"abi": [
						{
							"inputs": [],
							"name": "getReserves",
							"outputs": [
								{
									"internalType": "uint112",
									"name": "reserve0",
									"type": "uint112"
								},
								{
									"internalType": "uint112",
									"name": "reserve1",
									"type": "uint112"
								},
								{
									"internalType": "uint32",
									"name": "blockTimestampLast",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getReserves()": "0902f1ac",
							"token0()": "0dfe1681",
							"token1()": "d21220a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getReserves\",\"outputs\":[{\"internalType\":\"uint112\",\"name\":\"reserve0\",\"type\":\"uint112\"},{\"internalType\":\"uint112\",\"name\":\"reserve1\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"blockTimestampLast\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/gainzilla.sol\":\"IUniswapV2Pair\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]},\"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"@openzeppelin/contracts@4.9.3/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts@4.9.3/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts@4.9.3/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/gainzilla.sol\":{\"keccak256\":\"0xaf24b2443607f3081fbd12dba1576dfb037d438656eb72f314d83e1ceff98cb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7496ef2ce61329758ebef813381458d5f6bd216f0beb914574045f2ad4dffd0f\",\"dweb:/ipfs/QmRLcUZ522vYzzzK2JdQ3pCpDq2bdCndUN8s9sae7n8Lq1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IUniswapV2Router": {
					"abi": [
						{
							"inputs": [],
							"name": "WETH",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForETH",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"WETH()": "ad5c4648",
							"addLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "f305d719",
							"factory()": "c45a0155",
							"swapExactTokensForETH(uint256,uint256,address[],address,uint256)": "18cbafe5"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/gainzilla.sol\":\"IUniswapV2Router\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]},\"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"@openzeppelin/contracts@4.9.3/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts@4.9.3/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts@4.9.3/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/gainzilla.sol\":{\"keccak256\":\"0xaf24b2443607f3081fbd12dba1576dfb037d438656eb72f314d83e1ceff98cb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7496ef2ce61329758ebef813381458d5f6bd216f0beb914574045f2ad4dffd0f\",\"dweb:/ipfs/QmRLcUZ522vYzzzK2JdQ3pCpDq2bdCndUN8s9sae7n8Lq1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"MemeCoin": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "ethAmount",
									"type": "uint256"
								}
							],
							"name": "LiquidityAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "newRouter",
									"type": "address"
								}
							],
							"name": "RouterUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "lpAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "ecoAmount",
									"type": "uint256"
								}
							],
							"name": "TaxesCollected",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "_maxWalletSize",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "accumulatedEco",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "accumulatedLp",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "enabled",
									"type": "bool"
								},
								{
									"internalType": "uint32",
									"name": "duration",
									"type": "uint32"
								}
							],
							"name": "configureCooldown",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "enabled",
									"type": "bool"
								},
								{
									"internalType": "uint16",
									"name": "triggerPercent",
									"type": "uint16"
								}
							],
							"name": "configureDiamondFloor",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "cooldown",
							"outputs": [
								{
									"internalType": "bool",
									"name": "enabled",
									"type": "bool"
								},
								{
									"internalType": "uint32",
									"name": "duration",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "cooldownRemaining",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "days_",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "hours_",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "minutes_",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "seconds_",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "diamondFloor",
							"outputs": [
								{
									"internalType": "bool",
									"name": "enabled",
									"type": "bool"
								},
								{
									"internalType": "uint16",
									"name": "triggerPercentage",
									"type": "uint16"
								},
								{
									"internalType": "uint256",
									"name": "athPrice",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "sellStopped",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "blockedAth",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "isExempt",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxWalletPercentage",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pairAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pairPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "priceDeviation",
							"outputs": [
								{
									"internalType": "int256",
									"name": "",
									"type": "int256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "routerAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "exempt",
									"type": "bool"
								}
							],
							"name": "setExempt",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newRouter",
									"type": "address"
								}
							],
							"name": "setRouter",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "buyLp",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "buyEco",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "sellLp",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "sellEco",
									"type": "uint16"
								}
							],
							"name": "setTaxRates",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "threshold",
									"type": "uint256"
								}
							],
							"name": "setThreshold",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "swapThreshold",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "taxRates",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "buyLp",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "buyEco",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "sellLp",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "sellEco",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/gainzilla.sol\":1203:11032  contract MemeCoin is ERC20, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/gainzilla.sol\":1383:1386  100 */\n  0x64\n    /* \"contracts/gainzilla.sol\":1346:1386  uint256 public maxWalletPercentage = 100 */\n  0x06\n  sstore\n    /* \"contracts/gainzilla.sol\":1630:1632  35 */\n  0x23\n    /* \"contracts/gainzilla.sol\":1593:1632  uint256 private transferMultiplier = 35 */\n  0x08\n  sstore\n    /* \"contracts/gainzilla.sol\":1670:1689  TOTAL_SUPPLY / 1000 */\n  tag_1\n    /* \"contracts/gainzilla.sol\":1685:1689  1000 */\n  0x03e8\n    /* \"contracts/gainzilla.sol\":1318:1340  1_000_000_000 * 10**18 */\n  0x033b2e3c9fd0803ce8000000\n    /* \"contracts/gainzilla.sol\":1670:1689  TOTAL_SUPPLY / 1000 */\n  tag_2\n  jump\t// in\ntag_1:\n    /* \"contracts/gainzilla.sol\":1639:1689  uint256 public swapThreshold = TOTAL_SUPPLY / 1000 */\n  0x09\n  sstore\n    /* \"contracts/gainzilla.sol\":2542:2835  constructor() ERC20(\"Meme Coin\", \"MEME\") Ownable() {... */\n  callvalue\n  dup1\n  iszero\n  tag_3\n  jumpi\n  0x00\n  dup1\n  revert\ntag_3:\n  pop\n    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":1980:2093  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x09\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xb9, 0x26b2b6b29021b7b4b7)\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x04\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xe0, 0x4d454d45)\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":2054:2059  name_ */\n  dup2\n    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":2046:2051  _name */\n  0x03\n    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":2046:2059  _name = name_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":2069:2076  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":2069:2086  _symbol = symbol_ */\n  tag_10\n    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":2079:2086  symbol_ */\n  dup3\n    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":2069:2076  _symbol */\n  dup3\n    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":2069:2086  _symbol = symbol_ */\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":1980:2093  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_12\n    /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":955:967  _msgSender() */\n  tag_13\n    /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":955:965  _msgSender */\n  shl(0x20, tag_14)\n    /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":955:967  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_13:\n    /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":936:954  _transferOwnership */\n  tag_15\n    /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_12:\n    /* \"contracts/gainzilla.sol\":2603:2634  _mint(msg.sender, TOTAL_SUPPLY) */\n  tag_17\n    /* \"contracts/gainzilla.sol\":2609:2619  msg.sender */\n  caller\n    /* \"contracts/gainzilla.sol\":1318:1340  1_000_000_000 * 10**18 */\n  0x033b2e3c9fd0803ce8000000\n    /* \"contracts/gainzilla.sol\":2603:2608  _mint */\n  tag_18\n    /* \"contracts/gainzilla.sol\":2603:2634  _mint(msg.sender, TOTAL_SUPPLY) */\n  jump\t// in\ntag_17:\n    /* \"contracts/gainzilla.sol\":2644:2657  routerAddress */\n  0x13\n    /* \"contracts/gainzilla.sol\":2644:2674  routerAddress = DEFAULT_ROUTER */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"contracts/gainzilla.sol\":2272:2314  0x10ED43C718714eb63d5aA57B78B54704E256024E */\n  0x10ed43c718714eb63d5aa57b78b54704e256024e\n    /* \"contracts/gainzilla.sol\":2644:2674  routerAddress = DEFAULT_ROUTER */\n  or\n  swap1\n  sstore\n    /* \"contracts/gainzilla.sol\":2684:2696  _setupPair() */\n  tag_19\n    /* \"contracts/gainzilla.sol\":2684:2694  _setupPair */\n  tag_20\n    /* \"contracts/gainzilla.sol\":2684:2696  _setupPair() */\n  jump\t// in\ntag_19:\n    /* \"contracts/gainzilla.sol\":2726:2746  TaxRates(0, 0, 0, 0) */\n  0x40\n  dup1\n  mload\n  0x80\n  dup2\n  add\n  dup3\n  mstore\n  0x00\n  dup1\n  dup3\n  mstore\n  0x20\n  dup1\n  dup4\n  add\n  dup3\n  swap1\n  mstore\n  dup3\n  dup5\n  add\n  dup3\n  swap1\n  mstore\n  0x60\n  swap1\n  swap3\n  add\n  dup2\n  swap1\n  mstore\n    /* \"contracts/gainzilla.sol\":2715:2723  taxRates */\n  0x07\n    /* \"contracts/gainzilla.sol\":2715:2746  taxRates = TaxRates(0, 0, 0, 0) */\n  dup1\n  sload\n  not(sub(shl(0x40, 0x01), 0x01))\n  and\n  swap1\n  sstore\n    /* \"contracts/gainzilla.sol\":2770:2780  msg.sender */\n  caller\n    /* \"contracts/gainzilla.sol\":2761:2781  isExempt[msg.sender] */\n  dup2\n  mstore\n    /* \"contracts/gainzilla.sol\":2761:2769  isExempt */\n  0x15\n    /* \"contracts/gainzilla.sol\":2761:2781  isExempt[msg.sender] */\n  swap1\n  swap2\n  mstore\n  dup2\n  dup2\n  keccak256\n    /* \"contracts/gainzilla.sol\":2761:2788  isExempt[msg.sender] = true */\n  dup1\n  sload\n  not(0xff)\n  swap1\n  dup2\n  and\n    /* \"contracts/gainzilla.sol\":2715:2746  taxRates = TaxRates(0, 0, 0, 0) */\n  0x01\n    /* \"contracts/gainzilla.sol\":2761:2788  isExempt[msg.sender] = true */\n  swap1\n  dup2\n  or\n  swap1\n  swap3\n  sstore\n    /* \"contracts/gainzilla.sol\":2815:2819  this */\n  address\n    /* \"contracts/gainzilla.sol\":2798:2821  isExempt[address(this)] */\n  dup4\n  mstore\n  swap3\n  swap1\n  swap2\n  keccak256\n    /* \"contracts/gainzilla.sol\":2798:2828  isExempt[address(this)] = true */\n  dup1\n  sload\n  swap1\n  swap3\n  and\n  or\n  swap1\n  sstore\n    /* \"contracts/gainzilla.sol\":1203:11032  contract MemeCoin is ERC20, Ownable {... */\n  jump(tag_56)\n    /* \"@openzeppelin/contracts@4.9.3/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_14:\n    /* \"@openzeppelin/contracts@4.9.3/utils/Context.sol\":719:729  msg.sender */\n  caller\n  swap1\n    /* \"@openzeppelin/contracts@4.9.3/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  jump\t// out\n    /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\ntag_15:\n    /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":2518:2524  _owner */\n  0x05\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":2534:2551  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  swap1\n  swap4\n  sstore\n    /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":2518:2524  _owner */\n  swap2\n  and\n  swap2\n    /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":2534:2551  _owner = newOwner */\n  swap1\n    /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":2518:2524  _owner */\n  dup3\n  swap1\n    /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":2499:2515  address oldOwner */\n  0x00\n  swap1\n    /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":2489:2613  {... */\n  pop\n    /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":8520:9055  function _mint(address account, uint256 amount) internal virtual {... */\ntag_18:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":8603:8624  account != address(0) */\n  dup3\n  and\n    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":8595:8660  require(account != address(0), \"ERC20: mint to the zero address\") */\n  tag_25\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":3125:3127   */\n  0x20\n    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":8595:8660  require(account != address(0), \"ERC20: mint to the zero address\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":3107:3128   */\n  mstore\n    /* \"#utility.yul\":3164:3166   */\n  0x1f\n    /* \"#utility.yul\":3144:3162   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":3137:3167   */\n  mstore\n    /* \"#utility.yul\":3203:3236   */\n  0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n    /* \"#utility.yul\":3183:3201   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":3176:3237   */\n  mstore\n    /* \"#utility.yul\":3254:3272   */\n  0x64\n  add\n    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":8595:8660  require(account != address(0), \"ERC20: mint to the zero address\") */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_25:\n    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":8747:8753  amount */\n  dup1\n    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":8731:8743  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":8731:8753  _totalSupply += amount */\n  dup3\n  dup3\n  sload\n  tag_30\n  swap2\n  swap1\n  tag_31\n  jump\t// in\ntag_30:\n  swap1\n  swap2\n  sstore\n  pop\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":8899:8917  _balances[account] */\n  dup3\n  and\n    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":8899:8908  _balances */\n  0x00\n    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":8899:8917  _balances[account] */\n  dup2\n  dup2\n  mstore\n  0x20\n  dup2\n  dup2\n  mstore\n  0x40\n  dup1\n  dup4\n  keccak256\n    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":8899:8927  _balances[account] += amount */\n  dup1\n  sload\n  dup7\n  add\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":8952:8989  Transfer(address(0), account, amount) */\n  mload\n    /* \"#utility.yul\":3656:3681   */\n  dup5\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":8952:8989  Transfer(address(0), account, amount) */\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n  swap2\n    /* \"#utility.yul\":3629:3647   */\n  add\n    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":8952:8989  Transfer(address(0), account, amount) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":8520:9055  function _mint(address account, uint256 amount) internal virtual {... */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/gainzilla.sol\":9596:9796  function _setupPair() private {... */\ntag_20:\n    /* \"contracts/gainzilla.sol\":9685:9698  routerAddress */\n  0x13\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  sub(shl(0xa0, 0x01), 0x01)\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/gainzilla.sol\":9668:9707  IUniswapV2Router(routerAddress).factory */\n  and\n  0xc45a0155\n    /* \"contracts/gainzilla.sol\":9668:9709  IUniswapV2Router(routerAddress).factory() */\n  mload(0x40)\n  dup2\n  0xffffffff\n  and\n  0xe0\n  shl\n  dup2\n  mstore\n  0x04\n  add\n  0x20\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  dup7\n  gas\n  staticcall\n  iszero\n  dup1\n  iszero\n  tag_38\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_38:\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  returndatasize\n  not(0x1f)\n  0x1f\n  dup3\n  add\n  and\n  dup3\n  add\n  dup1\n  0x40\n  mstore\n  pop\n  dup2\n  add\n  swap1\n  tag_39\n  swap2\n  swap1\n  tag_40\n  jump\t// in\ntag_39:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/gainzilla.sol\":9650:9734  IUniswapV2Factory(IUniswapV2Router(routerAddress).factory())... */\n  and\n  0xc9c65396\n    /* \"contracts/gainzilla.sol\":9743:9747  this */\n  address\n    /* \"contracts/gainzilla.sol\":9767:9780  routerAddress */\n  0x13\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  sub(shl(0xa0, 0x01), 0x01)\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/gainzilla.sol\":9750:9786  IUniswapV2Router(routerAddress).WETH */\n  and\n  0xad5c4648\n    /* \"contracts/gainzilla.sol\":9750:9788  IUniswapV2Router(routerAddress).WETH() */\n  mload(0x40)\n  dup2\n  0xffffffff\n  and\n  0xe0\n  shl\n  dup2\n  mstore\n  0x04\n  add\n  0x20\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  dup7\n  gas\n  staticcall\n  iszero\n  dup1\n  iszero\n  tag_42\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_42:\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  returndatasize\n  not(0x1f)\n  0x1f\n  dup3\n  add\n  and\n  dup3\n  add\n  dup1\n  0x40\n  mstore\n  pop\n  dup2\n  add\n  swap1\n  tag_43\n  swap2\n  swap1\n  tag_40\n  jump\t// in\ntag_43:\n    /* \"contracts/gainzilla.sol\":9650:9789  IUniswapV2Factory(IUniswapV2Router(routerAddress).factory())... */\n  mload(0x40)\n  not(sub(shl(0xe0, 0x01), 0x01))\n  0xe0\n  dup6\n  swap1\n  shl\n  and\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":4217:4232   */\n  swap3\n  dup4\n  and\n    /* \"contracts/gainzilla.sol\":9650:9789  IUniswapV2Factory(IUniswapV2Router(routerAddress).factory())... */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":4199:4233   */\n  mstore\n    /* \"#utility.yul\":4269:4284   */\n  swap2\n  and\n    /* \"#utility.yul\":4249:4267   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":4242:4285   */\n  mstore\n    /* \"#utility.yul\":4134:4152   */\n  0x44\n  add\n    /* \"contracts/gainzilla.sol\":9650:9789  IUniswapV2Factory(IUniswapV2Router(routerAddress).factory())... */\n  0x20\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  0x00\n  dup8\n  gas\n  call\n  iszero\n  dup1\n  iszero\n  tag_47\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_47:\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  returndatasize\n  not(0x1f)\n  0x1f\n  dup3\n  add\n  and\n  dup3\n  add\n  dup1\n  0x40\n  mstore\n  pop\n  dup2\n  add\n  swap1\n  tag_48\n  swap2\n  swap1\n  tag_40\n  jump\t// in\ntag_48:\n    /* \"contracts/gainzilla.sol\":9636:9647  pairAddress */\n  0x14\n    /* \"contracts/gainzilla.sol\":9636:9789  pairAddress = IUniswapV2Factory(IUniswapV2Router(routerAddress).factory())... */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap3\n  swap1\n  swap3\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"contracts/gainzilla.sol\":9596:9796  function _setupPair() private {... */\n  jump\t// out\n    /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":12073:12164  function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {} */\ntag_29:\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:231   */\ntag_2:\n    /* \"#utility.yul\":54:55   */\n  0x00\n    /* \"#utility.yul\":80:81   */\n  dup3\n    /* \"#utility.yul\":70:202   */\n  tag_58\n  jumpi\n    /* \"#utility.yul\":124:134   */\n  0x4e487b71\n    /* \"#utility.yul\":119:122   */\n  0xe0\n    /* \"#utility.yul\":115:135   */\n  shl\n    /* \"#utility.yul\":112:113   */\n  0x00\n    /* \"#utility.yul\":105:136   */\n  mstore\n    /* \"#utility.yul\":159:163   */\n  0x12\n    /* \"#utility.yul\":156:157   */\n  0x04\n    /* \"#utility.yul\":149:164   */\n  mstore\n    /* \"#utility.yul\":187:191   */\n  0x24\n    /* \"#utility.yul\":184:185   */\n  0x00\n    /* \"#utility.yul\":177:192   */\n  revert\n    /* \"#utility.yul\":70:202   */\ntag_58:\n  pop\n    /* \"#utility.yul\":216:225   */\n  div\n  swap1\n    /* \"#utility.yul\":14:231   */\n  jump\t// out\n    /* \"#utility.yul\":236:363   */\ntag_51:\n    /* \"#utility.yul\":297:307   */\n  0x4e487b71\n    /* \"#utility.yul\":292:295   */\n  0xe0\n    /* \"#utility.yul\":288:308   */\n  shl\n    /* \"#utility.yul\":285:286   */\n  0x00\n    /* \"#utility.yul\":278:309   */\n  mstore\n    /* \"#utility.yul\":328:332   */\n  0x41\n    /* \"#utility.yul\":325:326   */\n  0x04\n    /* \"#utility.yul\":318:333   */\n  mstore\n    /* \"#utility.yul\":352:356   */\n  0x24\n    /* \"#utility.yul\":349:350   */\n  0x00\n    /* \"#utility.yul\":342:357   */\n  revert\n    /* \"#utility.yul\":368:748   */\ntag_52:\n    /* \"#utility.yul\":447:448   */\n  0x01\n    /* \"#utility.yul\":443:455   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":490:502   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":511:572   */\n  tag_61\n  jumpi\n    /* \"#utility.yul\":565:569   */\n  0x7f\n    /* \"#utility.yul\":557:563   */\n  dup3\n    /* \"#utility.yul\":553:570   */\n  and\n    /* \"#utility.yul\":543:570   */\n  swap2\n  pop\n    /* \"#utility.yul\":511:572   */\ntag_61:\n    /* \"#utility.yul\":618:620   */\n  0x20\n    /* \"#utility.yul\":610:616   */\n  dup3\n    /* \"#utility.yul\":607:621   */\n  lt\n    /* \"#utility.yul\":587:605   */\n  dup2\n    /* \"#utility.yul\":584:622   */\n  sub\n    /* \"#utility.yul\":581:742   */\n  tag_62\n  jumpi\n    /* \"#utility.yul\":664:674   */\n  0x4e487b71\n    /* \"#utility.yul\":659:662   */\n  0xe0\n    /* \"#utility.yul\":655:675   */\n  shl\n    /* \"#utility.yul\":652:653   */\n  0x00\n    /* \"#utility.yul\":645:676   */\n  mstore\n    /* \"#utility.yul\":699:703   */\n  0x22\n    /* \"#utility.yul\":696:697   */\n  0x04\n    /* \"#utility.yul\":689:704   */\n  mstore\n    /* \"#utility.yul\":727:731   */\n  0x24\n    /* \"#utility.yul\":724:725   */\n  0x00\n    /* \"#utility.yul\":717:732   */\n  revert\n    /* \"#utility.yul\":581:742   */\ntag_62:\n  pop\n    /* \"#utility.yul\":368:748   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":879:1397   */\ntag_54:\n    /* \"#utility.yul\":981:983   */\n  0x1f\n    /* \"#utility.yul\":976:979   */\n  dup3\n    /* \"#utility.yul\":973:984   */\n  gt\n    /* \"#utility.yul\":970:1391   */\n  iszero\n  tag_29\n  jumpi\n    /* \"#utility.yul\":1017:1022   */\n  dup1\n    /* \"#utility.yul\":1014:1015   */\n  0x00\n    /* \"#utility.yul\":1007:1023   */\n  mstore\n    /* \"#utility.yul\":1061:1065   */\n  0x20\n    /* \"#utility.yul\":1058:1059   */\n  0x00\n    /* \"#utility.yul\":1048:1066   */\n  keccak256\n    /* \"#utility.yul\":1131:1133   */\n  0x1f\n    /* \"#utility.yul\":1119:1129   */\n  dup5\n    /* \"#utility.yul\":1115:1134   */\n  add\n    /* \"#utility.yul\":1112:1113   */\n  0x05\n    /* \"#utility.yul\":1108:1135   */\n  shr\n    /* \"#utility.yul\":1102:1106   */\n  dup2\n    /* \"#utility.yul\":1098:1136   */\n  add\n    /* \"#utility.yul\":1167:1171   */\n  0x20\n    /* \"#utility.yul\":1155:1165   */\n  dup6\n    /* \"#utility.yul\":1152:1172   */\n  lt\n    /* \"#utility.yul\":1149:1196   */\n  iszero\n  tag_66\n  jumpi\n  pop\n    /* \"#utility.yul\":1190:1194   */\n  dup1\n    /* \"#utility.yul\":1149:1196   */\ntag_66:\n    /* \"#utility.yul\":1245:1247   */\n  0x1f\n    /* \"#utility.yul\":1240:1243   */\n  dup5\n    /* \"#utility.yul\":1236:1248   */\n  add\n    /* \"#utility.yul\":1233:1234   */\n  0x05\n    /* \"#utility.yul\":1229:1249   */\n  shr\n    /* \"#utility.yul\":1223:1227   */\n  dup3\n    /* \"#utility.yul\":1219:1250   */\n  add\n    /* \"#utility.yul\":1209:1250   */\n  swap2\n  pop\n    /* \"#utility.yul\":1300:1381   */\ntag_67:\n    /* \"#utility.yul\":1318:1320   */\n  dup2\n    /* \"#utility.yul\":1311:1316   */\n  dup2\n    /* \"#utility.yul\":1308:1321   */\n  lt\n    /* \"#utility.yul\":1300:1381   */\n  iszero\n  tag_69\n  jumpi\n    /* \"#utility.yul\":1377:1378   */\n  0x00\n    /* \"#utility.yul\":1363:1379   */\n  dup2\n  sstore\n    /* \"#utility.yul\":1344:1345   */\n  0x01\n    /* \"#utility.yul\":1333:1346   */\n  add\n    /* \"#utility.yul\":1300:1381   */\n  jump(tag_67)\ntag_69:\n    /* \"#utility.yul\":1304:1307   */\n  pop\n  pop\n    /* \"#utility.yul\":879:1397   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1573:2918   */\ntag_9:\n    /* \"#utility.yul\":1693:1703   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1715:1745   */\n  dup2\n  gt\n    /* \"#utility.yul\":1712:1768   */\n  iszero\n  tag_73\n  jumpi\n    /* \"#utility.yul\":1748:1766   */\n  tag_73\n  tag_51\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":1777:1874   */\n  tag_74\n    /* \"#utility.yul\":1867:1873   */\n  dup2\n    /* \"#utility.yul\":1827:1865   */\n  tag_75\n    /* \"#utility.yul\":1859:1863   */\n  dup5\n    /* \"#utility.yul\":1853:1864   */\n  sload\n    /* \"#utility.yul\":1827:1865   */\n  tag_52\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":1821:1825   */\n  dup5\n    /* \"#utility.yul\":1777:1874   */\n  tag_54\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":1929:1933   */\n  0x20\n  dup1\n    /* \"#utility.yul\":1986:1988   */\n  0x1f\n    /* \"#utility.yul\":1975:1989   */\n  dup4\n  gt\n    /* \"#utility.yul\":2003:2004   */\n  0x01\n    /* \"#utility.yul\":1998:2661   */\n  dup2\n  eq\n  tag_77\n  jumpi\n    /* \"#utility.yul\":2705:2706   */\n  0x00\n    /* \"#utility.yul\":2722:2728   */\n  dup5\n    /* \"#utility.yul\":2719:2808   */\n  iszero\n  tag_78\n  jumpi\n  pop\n    /* \"#utility.yul\":2774:2793   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":2768:2794   */\n  mload\n    /* \"#utility.yul\":2719:2808   */\ntag_78:\n  not(0x00)\n    /* \"#utility.yul\":1530:1531   */\n  0x03\n    /* \"#utility.yul\":1526:1537   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":1522:1546   */\n  shr\n    /* \"#utility.yul\":1518:1547   */\n  not\n    /* \"#utility.yul\":1508:1548   */\n  and\n    /* \"#utility.yul\":1554:1555   */\n  0x01\n    /* \"#utility.yul\":1550:1561   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":1505:1562   */\n  or\n    /* \"#utility.yul\":2821:2902   */\n  dup6\n  sstore\n    /* \"#utility.yul\":1968:2912   */\n  jump(tag_76)\n    /* \"#utility.yul\":1998:2661   */\ntag_77:\n    /* \"#utility.yul\":826:827   */\n  0x00\n    /* \"#utility.yul\":819:833   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":863:867   */\n  0x20\n    /* \"#utility.yul\":850:868   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":2034:2054   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":2152:2388   */\ntag_81:\n    /* \"#utility.yul\":2166:2173   */\n  dup3\n    /* \"#utility.yul\":2163:2164   */\n  dup2\n    /* \"#utility.yul\":2160:2174   */\n  lt\n    /* \"#utility.yul\":2152:2388   */\n  iszero\n  tag_83\n  jumpi\n    /* \"#utility.yul\":2255:2274   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":2249:2275   */\n  mload\n    /* \"#utility.yul\":2234:2276   */\n  dup3\n  sstore\n    /* \"#utility.yul\":2347:2374   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":2315:2316   */\n  0x01\n    /* \"#utility.yul\":2303:2317   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":2182:2201   */\n  dup5\n  add\n    /* \"#utility.yul\":2152:2388   */\n  jump(tag_81)\ntag_83:\n    /* \"#utility.yul\":2156:2159   */\n  pop\n    /* \"#utility.yul\":2416:2422   */\n  dup6\n    /* \"#utility.yul\":2407:2414   */\n  dup3\n    /* \"#utility.yul\":2404:2423   */\n  lt\n    /* \"#utility.yul\":2401:2602   */\n  iszero\n  tag_84\n  jumpi\n    /* \"#utility.yul\":2477:2496   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":2471:2497   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":2560:2561   */\n  0x03\n    /* \"#utility.yul\":2556:2570   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":2572:2575   */\n  0xf8\n    /* \"#utility.yul\":2552:2576   */\n  and\n    /* \"#utility.yul\":2548:2585   */\n  shr\n    /* \"#utility.yul\":2544:2586   */\n  not\n    /* \"#utility.yul\":2529:2587   */\n  and\n    /* \"#utility.yul\":2514:2588   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2401:2602   */\ntag_84:\n  pop\n  pop\n    /* \"#utility.yul\":2648:2649   */\n  0x01\n    /* \"#utility.yul\":2639:2645   */\n  dup5\n    /* \"#utility.yul\":2636:2637   */\n  0x01\n    /* \"#utility.yul\":2632:2646   */\n  shl\n    /* \"#utility.yul\":2628:2650   */\n  add\n    /* \"#utility.yul\":2622:2626   */\n  dup6\n    /* \"#utility.yul\":2615:2651   */\n  sstore\n    /* \"#utility.yul\":1968:2912   */\ntag_76:\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":1573:2918   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3283:3505   */\ntag_31:\n    /* \"#utility.yul\":3348:3357   */\n  dup1\n  dup3\n  add\n    /* \"#utility.yul\":3369:3379   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":3366:3499   */\n  iszero\n  tag_87\n  jumpi\n    /* \"#utility.yul\":3421:3431   */\n  0x4e487b71\n    /* \"#utility.yul\":3416:3419   */\n  0xe0\n    /* \"#utility.yul\":3412:3432   */\n  shl\n    /* \"#utility.yul\":3409:3410   */\n  0x00\n    /* \"#utility.yul\":3402:3433   */\n  mstore\n    /* \"#utility.yul\":3456:3460   */\n  0x11\n    /* \"#utility.yul\":3453:3454   */\n  0x04\n    /* \"#utility.yul\":3446:3461   */\n  mstore\n    /* \"#utility.yul\":3484:3488   */\n  0x24\n    /* \"#utility.yul\":3481:3482   */\n  0x00\n    /* \"#utility.yul\":3474:3489   */\n  revert\n    /* \"#utility.yul\":3366:3499   */\ntag_87:\n    /* \"#utility.yul\":3283:3505   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3692:3982   */\ntag_40:\n    /* \"#utility.yul\":3762:3768   */\n  0x00\n    /* \"#utility.yul\":3815:3817   */\n  0x20\n    /* \"#utility.yul\":3803:3812   */\n  dup3\n    /* \"#utility.yul\":3794:3801   */\n  dup5\n    /* \"#utility.yul\":3790:3813   */\n  sub\n    /* \"#utility.yul\":3786:3818   */\n  slt\n    /* \"#utility.yul\":3783:3835   */\n  iszero\n  tag_90\n  jumpi\n    /* \"#utility.yul\":3831:3832   */\n  0x00\n    /* \"#utility.yul\":3828:3829   */\n  dup1\n    /* \"#utility.yul\":3821:3833   */\n  revert\n    /* \"#utility.yul\":3783:3835   */\ntag_90:\n    /* \"#utility.yul\":3857:3873   */\n  dup2\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":3902:3933   */\n  dup2\n  and\n    /* \"#utility.yul\":3892:3934   */\n  dup2\n  eq\n    /* \"#utility.yul\":3882:3952   */\n  tag_91\n  jumpi\n    /* \"#utility.yul\":3948:3949   */\n  0x00\n    /* \"#utility.yul\":3945:3946   */\n  dup1\n    /* \"#utility.yul\":3938:3950   */\n  revert\n    /* \"#utility.yul\":3882:3952   */\ntag_91:\n    /* \"#utility.yul\":3971:3976   */\n  swap4\n    /* \"#utility.yul\":3692:3982   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3987:4291   */\ntag_56:\n    /* \"contracts/gainzilla.sol\":1203:11032  contract MemeCoin is ERC20, Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/gainzilla.sol\":1203:11032  contract MemeCoin is ERC20, Ownable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x9491f94d\n      gt\n      tag_37\n      jumpi\n      dup1\n      0xad5dff73\n      gt\n      tag_38\n      jumpi\n      dup1\n      0xd8d61c40\n      gt\n      tag_39\n      jumpi\n      dup1\n      0xd8d61c40\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_33\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_34\n      jumpi\n      dup1\n      0xfe0bb982\n      eq\n      tag_35\n      jumpi\n      dup1\n      0xfe6b751e\n      eq\n      tag_36\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      dup1\n      0xad5dff73\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xc0d78655\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xc531b108\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xc95457ff\n      eq\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      dup1\n      0x9fde54f5\n      gt\n      tag_40\n      jumpi\n      dup1\n      0x9fde54f5\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xa8b08982\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      dup1\n      0x9491f94d\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x960bfe04\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x9d82190f\n      eq\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      dup1\n      0x333f4b3d\n      gt\n      tag_41\n      jumpi\n      dup1\n      0x715018a6\n      gt\n      tag_42\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x7773168f\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x787a08a6\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x8f9a55c0\n      eq\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_42:\n      dup1\n      0x333f4b3d\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x599ca397\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n      dup1\n      0x18160ddd\n      gt\n      tag_43\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x3268cc56\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_43:\n      dup1\n      0x0445b667\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x1569d181\n      eq\n      tag_6\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/gainzilla.sol\":1639:1689  uint256 public swapThreshold = TOTAL_SUPPLY / 1000 */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_46\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_46:\n      pop\n      tag_47\n      sload(0x09)\n      dup2\n      jump\n    tag_47:\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"contracts/gainzilla.sol\":1639:1689  uint256 public swapThreshold = TOTAL_SUPPLY / 1000 */\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":2158:2256  function name() public view virtual override returns (string memory) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_51\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_51:\n      pop\n      tag_52\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":4444:4641  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_56\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_56:\n      pop\n      tag_57\n      tag_58\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_58:\n      tag_60\n      jump\t// in\n    tag_57:\n      mload(0x40)\n        /* \"#utility.yul\":1240:1254   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1233:1255   */\n      iszero\n        /* \"#utility.yul\":1215:1256   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1203:1205   */\n      0x20\n        /* \"#utility.yul\":1188:1206   */\n      add\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":4444:4641  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      tag_49\n        /* \"#utility.yul\":1075:1262   */\n      jump\n        /* \"contracts/gainzilla.sol\":8699:8992  function setTaxRates(uint16 buyLp, uint16 buyEco, uint16 sellLp, uint16 sellEco) external onlyOwner {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_63\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_63:\n      pop\n      tag_64\n      tag_65\n      calldatasize\n      0x04\n      tag_66\n      jump\t// in\n    tag_65:\n      tag_67\n      jump\t// in\n    tag_64:\n      stop\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3255:3361  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_68\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_68:\n      pop\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3342:3354  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3255:3361  function totalSupply() public view virtual override returns (uint256) {... */\n      jump(tag_47)\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5203:5459  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_72\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_72:\n      pop\n      tag_57\n      tag_74\n      calldatasize\n      0x04\n      tag_75\n      jump\t// in\n    tag_74:\n      tag_76\n      jump\t// in\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3104:3195  function decimals() public view virtual override returns (uint8) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_78\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_78:\n      pop\n      mload(0x40)\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3186:3188  18 */\n      0x12\n        /* \"#utility.yul\":2440:2476   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2428:2430   */\n      0x20\n        /* \"#utility.yul\":2413:2431   */\n      add\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3104:3195  function decimals() public view virtual override returns (uint8) {... */\n      tag_49\n        /* \"#utility.yul\":2298:2482   */\n      jump\n        /* \"contracts/gainzilla.sol\":2164:2192  address public routerAddress */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_83\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_83:\n      pop\n      sload(0x13)\n      tag_84\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_84:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2651:2683   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2633:2684   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2621:2623   */\n      0x20\n        /* \"#utility.yul\":2606:2624   */\n      add\n        /* \"contracts/gainzilla.sol\":2164:2192  address public routerAddress */\n      tag_49\n        /* \"#utility.yul\":2487:2690   */\n      jump\n        /* \"contracts/gainzilla.sol\":1563:1587  TaxRates public taxRates */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_88\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_88:\n      pop\n      sload(0x07)\n      tag_89\n      swap1\n      0xffff\n      dup1\n      dup3\n      and\n      swap2\n      0x010000\n      dup2\n      div\n      dup3\n      and\n      swap2\n      shl(0x20, 0x01)\n      dup3\n      div\n      dup2\n      and\n      swap2\n      shl(0x30, 0x01)\n      swap1\n      div\n      and\n      dup5\n      jump\n    tag_89:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":2928:2934   */\n      0xffff\n        /* \"#utility.yul\":2961:2976   */\n      swap6\n      dup7\n      and\n        /* \"#utility.yul\":2943:2977   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3013:3028   */\n      swap4\n      dup6\n      and\n        /* \"#utility.yul\":3008:3010   */\n      0x20\n        /* \"#utility.yul\":2993:3011   */\n      dup6\n      add\n        /* \"#utility.yul\":2986:3029   */\n      mstore\n        /* \"#utility.yul\":3065:3080   */\n      swap2\n      dup5\n      and\n        /* \"#utility.yul\":3045:3063   */\n      swap2\n      dup4\n      add\n        /* \"#utility.yul\":3038:3081   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":3117:3132   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":3112:3114   */\n      0x60\n        /* \"#utility.yul\":3097:3115   */\n      dup3\n      add\n        /* \"#utility.yul\":3090:3133   */\n      mstore\n        /* \"#utility.yul\":2905:2908   */\n      0x80\n        /* \"#utility.yul\":2890:2909   */\n      add\n        /* \"contracts/gainzilla.sol\":1563:1587  TaxRates public taxRates */\n      tag_49\n        /* \"#utility.yul\":2695:3139   */\n      jump\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5854:6088  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_93\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_93:\n      pop\n      tag_57\n      tag_95\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_95:\n      tag_96\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":1346:1386  uint256 public maxWalletPercentage = 100 */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_98\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_98:\n      pop\n      tag_47\n      sload(0x06)\n      dup2\n      jump\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3419:3544  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_102\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_102:\n      pop\n      tag_47\n      tag_104\n      calldatasize\n      0x04\n      tag_105\n      jump\t// in\n    tag_104:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3519:3537  _balances[account] */\n      and\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3493:3500  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3519:3537  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3419:3544  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":1824:1925  function renounceOwnership() public virtual onlyOwner {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_108\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_108:\n      pop\n      tag_64\n      tag_110\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":8119:8527  function priceDeviation() public view returns (int256) {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_111\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_111:\n      pop\n      tag_47\n      tag_113\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":1920:1950  CooldownConfig public cooldown */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_116\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_116:\n      pop\n      sload(0x0d)\n      tag_117\n      swap1\n      0xff\n      dup2\n      and\n      swap1\n      0x0100\n      swap1\n      div\n      0xffffffff\n      and\n      dup3\n      jump\n    tag_117:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":3767:3781   */\n      swap3\n      iszero\n        /* \"#utility.yul\":3760:3782   */\n      iszero\n        /* \"#utility.yul\":3742:3783   */\n      dup4\n      mstore\n        /* \"#utility.yul\":3831:3841   */\n      0xffffffff\n        /* \"#utility.yul\":3819:3842   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":3814:3816   */\n      0x20\n        /* \"#utility.yul\":3799:3817   */\n      dup4\n      add\n        /* \"#utility.yul\":3792:3843   */\n      mstore\n        /* \"#utility.yul\":3715:3733   */\n      add\n        /* \"contracts/gainzilla.sol\":1920:1950  CooldownConfig public cooldown */\n      tag_49\n        /* \"#utility.yul\":3576:3849   */\n      jump\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_121\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_121:\n      pop\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":1273:1279  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      jump(tag_84)\n        /* \"contracts/gainzilla.sol\":10661:10794  function _maxWalletSize() public view returns (uint256) {... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_125\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_125:\n      pop\n      tag_47\n      tag_127\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":7218:7571  function pairPrice() public view returns (uint256) {... */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_129\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_129:\n      pop\n      tag_47\n      tag_131\n      jump\t// in\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":2369:2471  function symbol() public view virtual override returns (string memory) {... */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_133\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_133:\n      pop\n      tag_52\n      tag_135\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":8998:9100  function setThreshold(uint256 threshold) external onlyOwner {... */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_137\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_137:\n      pop\n      tag_64\n      tag_139\n      calldatasize\n      0x04\n      tag_140\n      jump\t// in\n    tag_139:\n      tag_141\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":7577:8113  function cooldownRemaining(address account) public view returns (... */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_142\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_142:\n      pop\n      tag_143\n      tag_144\n      calldatasize\n      0x04\n      tag_105\n      jump\t// in\n    tag_144:\n      tag_145\n      jump\t// in\n    tag_143:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":4270:4295   */\n      swap5\n      dup6\n      mstore\n        /* \"#utility.yul\":4326:4328   */\n      0x20\n        /* \"#utility.yul\":4311:4329   */\n      dup6\n      add\n        /* \"#utility.yul\":4304:4338   */\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"#utility.yul\":4354:4372   */\n      swap2\n      dup4\n      add\n        /* \"#utility.yul\":4347:4381   */\n      mstore\n        /* \"#utility.yul\":4412:4414   */\n      0x60\n        /* \"#utility.yul\":4397:4415   */\n      dup3\n      add\n        /* \"#utility.yul\":4390:4424   */\n      mstore\n        /* \"#utility.yul\":4257:4260   */\n      0x80\n        /* \"#utility.yul\":4242:4261   */\n      add\n        /* \"contracts/gainzilla.sol\":7577:8113  function cooldownRemaining(address account) public view returns (... */\n      tag_49\n        /* \"#utility.yul\":4039:4430   */\n      jump\n        /* \"contracts/gainzilla.sol\":9479:9590  function setExempt(address account, bool exempt) external onlyOwner {... */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_148\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_148:\n      pop\n      tag_64\n      tag_150\n      calldatasize\n      0x04\n      tag_151\n      jump\t// in\n    tag_150:\n      tag_152\n      jump\t// in\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6575:7002  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_25:\n      callvalue\n      dup1\n      iszero\n      tag_153\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_153:\n      pop\n      tag_57\n      tag_155\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_155:\n      tag_156\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":2198:2224  address public pairAddress */\n    tag_26:\n      callvalue\n      dup1\n      iszero\n      tag_158\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_158:\n      pop\n      sload(0x14)\n      tag_84\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3740:3929  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_27:\n      callvalue\n      dup1\n      iszero\n      tag_162\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_162:\n      pop\n      tag_57\n      tag_164\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_164:\n      tag_165\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":2321:2361  mapping(address => bool) public isExempt */\n    tag_28:\n      callvalue\n      dup1\n      iszero\n      tag_167\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_167:\n      pop\n      tag_57\n      tag_169\n      calldatasize\n      0x04\n      tag_105\n      jump\t// in\n    tag_169:\n      mstore(0x20, 0x15)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\n        /* \"contracts/gainzilla.sol\":8533:8693  function setRouter(address newRouter) external onlyOwner {... */\n    tag_29:\n      callvalue\n      dup1\n      iszero\n      tag_172\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_172:\n      pop\n      tag_64\n      tag_174\n      calldatasize\n      0x04\n      tag_105\n      jump\t// in\n    tag_174:\n      tag_175\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":1729:1758  uint256 public accumulatedEco */\n    tag_30:\n      callvalue\n      dup1\n      iszero\n      tag_176\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_176:\n      pop\n      tag_47\n      sload(0x0b)\n      dup2\n      jump\n        /* \"contracts/gainzilla.sol\":2125:2157  DiamondFloor public diamondFloor */\n    tag_31:\n      callvalue\n      dup1\n      iszero\n      tag_180\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_180:\n      pop\n      sload(0x0f)\n      sload(0x10)\n      sload(0x11)\n      sload(0x12)\n      tag_181\n      swap4\n      0xff\n      dup1\n      dup3\n      and\n      swap5\n      0x0100\n      swap1\n      swap3\n      div\n      0xffff\n      and\n      swap4\n      swap2\n      swap3\n      swap2\n      and\n      swap1\n      dup6\n      jump\n    tag_181:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":5190:5204   */\n      swap6\n      iszero\n        /* \"#utility.yul\":5183:5205   */\n      iszero\n        /* \"#utility.yul\":5165:5206   */\n      dup7\n      mstore\n        /* \"#utility.yul\":5254:5260   */\n      0xffff\n        /* \"#utility.yul\":5242:5261   */\n      swap1\n      swap5\n      and\n        /* \"#utility.yul\":5237:5239   */\n      0x20\n        /* \"#utility.yul\":5222:5240   */\n      dup7\n      add\n        /* \"#utility.yul\":5215:5262   */\n      mstore\n        /* \"#utility.yul\":5278:5296   */\n      swap3\n      dup5\n      add\n        /* \"#utility.yul\":5271:5305   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":5348:5362   */\n      iszero\n        /* \"#utility.yul\":5341:5363   */\n      iszero\n        /* \"#utility.yul\":5336:5338   */\n      0x60\n        /* \"#utility.yul\":5321:5339   */\n      dup4\n      add\n        /* \"#utility.yul\":5314:5364   */\n      mstore\n        /* \"#utility.yul\":5395:5398   */\n      0x80\n        /* \"#utility.yul\":5380:5399   */\n      dup3\n      add\n        /* \"#utility.yul\":5373:5408   */\n      mstore\n        /* \"#utility.yul\":5152:5155   */\n      0xa0\n        /* \"#utility.yul\":5137:5156   */\n      add\n        /* \"contracts/gainzilla.sol\":2125:2157  DiamondFloor public diamondFloor */\n      tag_49\n        /* \"#utility.yul\":4920:5414   */\n      jump\n        /* \"contracts/gainzilla.sol\":1695:1723  uint256 public accumulatedLp */\n    tag_32:\n      callvalue\n      dup1\n      iszero\n      tag_185\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_185:\n      pop\n      tag_47\n      sload(0x0a)\n      dup2\n      jump\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3987:4136  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_33:\n      callvalue\n      dup1\n      iszero\n      tag_189\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_189:\n      pop\n      tag_47\n      tag_191\n      calldatasize\n      0x04\n      tag_192\n      jump\t// in\n    tag_191:\n      tag_193\n      jump\t// in\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":2074:2272  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_34:\n      callvalue\n      dup1\n      iszero\n      tag_195\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_195:\n      pop\n      tag_64\n      tag_197\n      calldatasize\n      0x04\n      tag_105\n      jump\t// in\n    tag_197:\n      tag_198\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":9282:9473  function configureDiamondFloor(bool enabled, uint16 triggerPercent) external onlyOwner {... */\n    tag_35:\n      callvalue\n      dup1\n      iszero\n      tag_199\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_199:\n      pop\n      tag_64\n      tag_201\n      calldatasize\n      0x04\n      tag_202\n      jump\t// in\n    tag_201:\n      tag_203\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":9106:9276  function configureCooldown(bool enabled, uint32 duration) external onlyOwner {... */\n    tag_36:\n      callvalue\n      dup1\n      iszero\n      tag_204\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_204:\n      pop\n      tag_64\n      tag_206\n      calldatasize\n      0x04\n      tag_207\n      jump\t// in\n    tag_206:\n      tag_208\n      jump\t// in\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":2158:2256  function name() public view virtual override returns (string memory) {... */\n    tag_53:\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":2212:2225  string memory */\n      0x60\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":2244:2249  _name */\n      0x03\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":2237:2249  return _name */\n      dup1\n      sload\n      tag_210\n      swap1\n      tag_211\n      jump\t// in\n    tag_210:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_212\n      swap1\n      tag_211\n      jump\t// in\n    tag_212:\n      dup1\n      iszero\n      tag_213\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_214\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_213)\n    tag_214:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_215:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_215\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_213:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":2158:2256  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":4444:4641  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_60:\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":4527:4531  bool */\n      0x00\n        /* \"@openzeppelin/contracts@4.9.3/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":4581:4613  _approve(owner, spender, amount) */\n      tag_219\n        /* \"@openzeppelin/contracts@4.9.3/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":4597:4604  spender */\n      dup6\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":4606:4612  amount */\n      dup6\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":4581:4589  _approve */\n      tag_220\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":4581:4613  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_219:\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":4630:4634  true */\n      0x01\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":4623:4634  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":4444:4641  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_216:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/gainzilla.sol\":8699:8992  function setTaxRates(uint16 buyLp, uint16 buyEco, uint16 sellLp, uint16 sellEco) external onlyOwner {... */\n    tag_67:\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_222\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_223\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_222:\n        /* \"contracts/gainzilla.sol\":8835:8839  2500 */\n      0x09c4\n        /* \"contracts/gainzilla.sol\":8817:8831  buyLp + buyEco */\n      tag_225\n        /* \"contracts/gainzilla.sol\":8825:8831  buyEco */\n      dup5\n        /* \"contracts/gainzilla.sol\":8817:8822  buyLp */\n      dup7\n        /* \"contracts/gainzilla.sol\":8817:8831  buyLp + buyEco */\n      tag_226\n      jump\t// in\n    tag_225:\n        /* \"contracts/gainzilla.sol\":8817:8839  buyLp + buyEco <= 2500 */\n      0xffff\n      and\n      gt\n      iszero\n        /* \"contracts/gainzilla.sol\":8809:8860  require(buyLp + buyEco <= 2500, \"Buy tax too high\") */\n      tag_227\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7405:7407   */\n      0x20\n        /* \"contracts/gainzilla.sol\":8809:8860  require(buyLp + buyEco <= 2500, \"Buy tax too high\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7387:7408   */\n      mstore\n        /* \"#utility.yul\":7444:7446   */\n      0x10\n        /* \"#utility.yul\":7424:7442   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7417:7447   */\n      mstore\n      shl(0x83, 0x084eaf240e8c2f040e8dede40d0d2ced)\n        /* \"#utility.yul\":7463:7481   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7456:7502   */\n      mstore\n        /* \"#utility.yul\":7519:7537   */\n      0x64\n      add\n        /* \"contracts/gainzilla.sol\":8809:8860  require(buyLp + buyEco <= 2500, \"Buy tax too high\") */\n    tag_228:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_227:\n        /* \"contracts/gainzilla.sol\":8898:8902  2500 */\n      0x09c4\n        /* \"contracts/gainzilla.sol\":8878:8894  sellLp + sellEco */\n      tag_230\n        /* \"contracts/gainzilla.sol\":8887:8894  sellEco */\n      dup3\n        /* \"contracts/gainzilla.sol\":8878:8884  sellLp */\n      dup5\n        /* \"contracts/gainzilla.sol\":8878:8894  sellLp + sellEco */\n      tag_226\n      jump\t// in\n    tag_230:\n        /* \"contracts/gainzilla.sol\":8878:8902  sellLp + sellEco <= 2500 */\n      0xffff\n      and\n      gt\n      iszero\n        /* \"contracts/gainzilla.sol\":8870:8924  require(sellLp + sellEco <= 2500, \"Sell tax too high\") */\n      tag_231\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7750:7752   */\n      0x20\n        /* \"contracts/gainzilla.sol\":8870:8924  require(sellLp + sellEco <= 2500, \"Sell tax too high\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7732:7753   */\n      mstore\n        /* \"#utility.yul\":7789:7791   */\n      0x11\n        /* \"#utility.yul\":7769:7787   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7762:7792   */\n      mstore\n      shl(0x7b, 0x0a6cad8d840e8c2f040e8dede40d0d2ced)\n        /* \"#utility.yul\":7808:7826   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7801:7848   */\n      mstore\n        /* \"#utility.yul\":7865:7883   */\n      0x64\n      add\n        /* \"contracts/gainzilla.sol\":8870:8924  require(sellLp + sellEco <= 2500, \"Sell tax too high\") */\n      tag_228\n        /* \"#utility.yul\":7548:7889   */\n      jump\n        /* \"contracts/gainzilla.sol\":8870:8924  require(sellLp + sellEco <= 2500, \"Sell tax too high\") */\n    tag_231:\n        /* \"contracts/gainzilla.sol\":8945:8985  TaxRates(buyLp, buyEco, sellLp, sellEco) */\n      0x40\n      dup1\n      mload\n      0x80\n      dup2\n      add\n      dup3\n      mstore\n      0xffff\n      swap6\n      dup7\n      and\n      dup1\n      dup3\n      mstore\n      swap5\n      dup7\n      and\n      0x20\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      swap4\n      dup7\n      and\n      swap2\n      dup2\n      add\n      dup3\n      swap1\n      mstore\n      swap2\n      swap1\n      swap5\n      and\n      0x60\n      swap1\n      swap2\n      add\n      dup2\n      swap1\n      mstore\n        /* \"contracts/gainzilla.sol\":8934:8942  taxRates */\n      0x07\n        /* \"contracts/gainzilla.sol\":8934:8985  taxRates = TaxRates(buyLp, buyEco, sellLp, sellEco) */\n      dup1\n      sload\n      not(0xffffffff)\n      and\n      swap1\n      swap4\n      or\n      0x010000\n      swap1\n      swap3\n      mul\n      swap2\n      swap1\n      swap2\n      or\n      not(0xffffffff00000000)\n      and\n      shl(0x20, 0x01)\n      swap1\n      swap4\n      mul\n      not(0xffff000000000000)\n      and\n      swap3\n      swap1\n      swap3\n      or\n      shl(0x30, 0x01)\n      swap1\n      swap3\n      mul\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/gainzilla.sol\":8699:8992  function setTaxRates(uint16 buyLp, uint16 buyEco, uint16 sellLp, uint16 sellEco) external onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5203:5459  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_76:\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5300:5304  bool */\n      0x00\n        /* \"@openzeppelin/contracts@4.9.3/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5356:5394  _spendAllowance(from, spender, amount) */\n      tag_237\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5372:5376  from */\n      dup6\n        /* \"@openzeppelin/contracts@4.9.3/utils/Context.sol\":719:729  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5387:5393  amount */\n      dup6\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5356:5371  _spendAllowance */\n      tag_238\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5356:5394  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_237:\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5404:5431  _transfer(from, to, amount) */\n      tag_239\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5414:5418  from */\n      dup6\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5420:5422  to */\n      dup6\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5424:5430  amount */\n      dup6\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5404:5413  _transfer */\n      tag_240\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5404:5431  _transfer(from, to, amount) */\n      jump\t// in\n    tag_239:\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5448:5452  true */\n      0x01\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5441:5452  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5203:5459  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_235:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5854:6088  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_96:\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5942:5946  bool */\n      0x00\n        /* \"@openzeppelin/contracts@4.9.3/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5996:6060  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_219\n        /* \"@openzeppelin/contracts@4.9.3/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6012:6019  spender */\n      dup6\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6049:6059  addedValue */\n      dup6\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6021:6046  allowance(owner, spender) */\n      tag_245\n        /* \"@openzeppelin/contracts@4.9.3/utils/Context.sol\":719:729  msg.sender */\n      dup4\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6012:6019  spender */\n      dup4\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6021:6030  allowance */\n      tag_193\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6021:6046  allowance(owner, spender) */\n      jump\t// in\n    tag_245:\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6021:6059  allowance(owner, spender) + addedValue */\n      tag_246\n      swap2\n      swap1\n      tag_247\n      jump\t// in\n    tag_246:\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5996:6004  _approve */\n      tag_220\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":5996:6060  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":1824:1925  function renounceOwnership() public virtual onlyOwner {... */\n    tag_110:\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_250\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_223\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_250:\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":1888:1918  _transferOwnership(address(0)) */\n      tag_252\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":1915:1916  0 */\n      0x00\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":1888:1906  _transferOwnership */\n      tag_253\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":1888:1918  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_252:\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":1824:1925  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/gainzilla.sol\":8119:8527  function priceDeviation() public view returns (int256) {... */\n    tag_113:\n        /* \"contracts/gainzilla.sol\":8188:8209  diamondFloor.athPrice */\n      sload(0x10)\n        /* \"contracts/gainzilla.sol\":8166:8172  int256 */\n      0x00\n      swap1\n        /* \"contracts/gainzilla.sol\":8188:8214  diamondFloor.athPrice == 0 */\n      dup2\n      sub\n        /* \"contracts/gainzilla.sol\":8184:8224  if (diamondFloor.athPrice == 0) return 0 */\n      tag_255\n      jumpi\n      pop\n        /* \"contracts/gainzilla.sol\":8223:8224  0 */\n      0x00\n      swap1\n        /* \"contracts/gainzilla.sol\":8119:8527  function priceDeviation() public view returns (int256) {... */\n      jump\t// out\n        /* \"contracts/gainzilla.sol\":8184:8224  if (diamondFloor.athPrice == 0) return 0 */\n    tag_255:\n        /* \"contracts/gainzilla.sol\":8234:8254  uint256 currentPrice */\n      0x00\n        /* \"contracts/gainzilla.sol\":8257:8268  pairPrice() */\n      tag_256\n        /* \"contracts/gainzilla.sol\":8257:8266  pairPrice */\n      tag_131\n        /* \"contracts/gainzilla.sol\":8257:8268  pairPrice() */\n      jump\t// in\n    tag_256:\n        /* \"contracts/gainzilla.sol\":8300:8321  diamondFloor.athPrice */\n      sload(0x10)\n        /* \"contracts/gainzilla.sol\":8234:8268  uint256 currentPrice = pairPrice() */\n      swap1\n      swap2\n      pop\n        /* \"contracts/gainzilla.sol\":8285:8321  currentPrice > diamondFloor.athPrice */\n      dup2\n      gt\n        /* \"contracts/gainzilla.sol\":8285:8520  currentPrice > diamondFloor.athPrice ?... */\n      tag_257\n      jumpi\n        /* \"contracts/gainzilla.sol\":8497:8518  diamondFloor.athPrice */\n      sload(0x10)\n        /* \"contracts/gainzilla.sol\":8443:8519  diamondFloor.athPrice.sub(currentPrice).mul(1e18).div(diamondFloor.athPrice) */\n      tag_258\n      swap1\n        /* \"contracts/gainzilla.sol\":8443:8492  diamondFloor.athPrice.sub(currentPrice).mul(1e18) */\n      tag_259\n        /* \"contracts/gainzilla.sol\":8487:8491  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/gainzilla.sol\":8443:8482  diamondFloor.athPrice.sub(currentPrice) */\n      tag_260\n        /* \"contracts/gainzilla.sol\":8497:8518  diamondFloor.athPrice */\n      dup4\n        /* \"contracts/gainzilla.sol\":8469:8481  currentPrice */\n      dup7\n        /* \"contracts/gainzilla.sol\":8443:8468  diamondFloor.athPrice.sub */\n      tag_261\n        /* \"contracts/gainzilla.sol\":8443:8482  diamondFloor.athPrice.sub(currentPrice) */\n      jump\t// in\n    tag_260:\n        /* \"contracts/gainzilla.sol\":8443:8486  diamondFloor.athPrice.sub(currentPrice).mul */\n      swap1\n      tag_262\n        /* \"contracts/gainzilla.sol\":8443:8492  diamondFloor.athPrice.sub(currentPrice).mul(1e18) */\n      jump\t// in\n    tag_259:\n        /* \"contracts/gainzilla.sol\":8443:8496  diamondFloor.athPrice.sub(currentPrice).mul(1e18).div */\n      swap1\n      tag_263\n        /* \"contracts/gainzilla.sol\":8443:8519  diamondFloor.athPrice.sub(currentPrice).mul(1e18).div(diamondFloor.athPrice) */\n      jump\t// in\n    tag_258:\n        /* \"contracts/gainzilla.sol\":8435:8520  -int256(diamondFloor.athPrice.sub(currentPrice).mul(1e18).div(diamondFloor.athPrice)) */\n      tag_264\n      swap1\n      tag_265\n      jump\t// in\n    tag_264:\n        /* \"contracts/gainzilla.sol\":8285:8520  currentPrice > diamondFloor.athPrice ?... */\n      jump(tag_267)\n    tag_257:\n        /* \"contracts/gainzilla.sol\":8397:8418  diamondFloor.athPrice */\n      sload(0x10)\n        /* \"contracts/gainzilla.sol\":8343:8419  currentPrice.sub(diamondFloor.athPrice).mul(1e18).div(diamondFloor.athPrice) */\n      tag_267\n      swap1\n        /* \"contracts/gainzilla.sol\":8343:8392  currentPrice.sub(diamondFloor.athPrice).mul(1e18) */\n      tag_259\n        /* \"contracts/gainzilla.sol\":8387:8391  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/gainzilla.sol\":8343:8382  currentPrice.sub(diamondFloor.athPrice) */\n      tag_260\n        /* \"contracts/gainzilla.sol\":8343:8355  currentPrice */\n      dup6\n        /* \"contracts/gainzilla.sol\":8397:8418  diamondFloor.athPrice */\n      dup5\n        /* \"contracts/gainzilla.sol\":8343:8359  currentPrice.sub */\n      tag_261\n        /* \"contracts/gainzilla.sol\":8343:8382  currentPrice.sub(diamondFloor.athPrice) */\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":8343:8419  currentPrice.sub(diamondFloor.athPrice).mul(1e18).div(diamondFloor.athPrice) */\n    tag_267:\n        /* \"contracts/gainzilla.sol\":8278:8520  return currentPrice > diamondFloor.athPrice ?... */\n      swap2\n      pop\n      pop\n        /* \"contracts/gainzilla.sol\":8119:8527  function priceDeviation() public view returns (int256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/gainzilla.sol\":10661:10794  function _maxWalletSize() public view returns (uint256) {... */\n    tag_127:\n        /* \"contracts/gainzilla.sol\":10708:10715  uint256 */\n      0x00\n        /* \"contracts/gainzilla.sol\":10734:10787  TOTAL_SUPPLY.mul(maxWalletPercentage).div(BP_DIVISOR) */\n      tag_272\n        /* \"contracts/gainzilla.sol\":1430:1436  10_000 */\n      0x2710\n        /* \"contracts/gainzilla.sol\":10734:10771  TOTAL_SUPPLY.mul(maxWalletPercentage) */\n      tag_259\n        /* \"contracts/gainzilla.sol\":10751:10770  maxWalletPercentage */\n      sload(0x06)\n        /* \"contracts/gainzilla.sol\":1318:1340  1_000_000_000 * 10**18 */\n      0x033b2e3c9fd0803ce8000000\n        /* \"contracts/gainzilla.sol\":10734:10750  TOTAL_SUPPLY.mul */\n      tag_262\n      swap1\n        /* \"contracts/gainzilla.sol\":10734:10771  TOTAL_SUPPLY.mul(maxWalletPercentage) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":10734:10787  TOTAL_SUPPLY.mul(maxWalletPercentage).div(BP_DIVISOR) */\n    tag_272:\n        /* \"contracts/gainzilla.sol\":10727:10787  return TOTAL_SUPPLY.mul(maxWalletPercentage).div(BP_DIVISOR) */\n      swap1\n      pop\n        /* \"contracts/gainzilla.sol\":10661:10794  function _maxWalletSize() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/gainzilla.sol\":7218:7571  function pairPrice() public view returns (uint256) {... */\n    tag_131:\n        /* \"contracts/gainzilla.sol\":7260:7267  uint256 */\n      0x00\n        /* \"contracts/gainzilla.sol\":7280:7296  uint112 reserve0 */\n      dup1\n        /* \"contracts/gainzilla.sol\":7298:7314  uint112 reserve1 */\n      0x00\n        /* \"contracts/gainzilla.sol\":7334:7345  pairAddress */\n      0x14\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":7319:7358  IUniswapV2Pair(pairAddress).getReserves */\n      and\n      0x0902f1ac\n        /* \"contracts/gainzilla.sol\":7319:7360  IUniswapV2Pair(pairAddress).getReserves() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x60\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_276\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_276:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_277\n      swap2\n      swap1\n      tag_278\n      jump\t// in\n    tag_277:\n        /* \"contracts/gainzilla.sol\":7279:7360  (uint112 reserve0, uint112 reserve1,) = IUniswapV2Pair(pairAddress).getReserves() */\n      pop\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/gainzilla.sol\":7425:7429  this */\n      address\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":7377:7430  IUniswapV2Pair(pairAddress).token0() == address(this) */\n      and\n        /* \"contracts/gainzilla.sol\":7392:7403  pairAddress */\n      0x14\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":7377:7411  IUniswapV2Pair(pairAddress).token0 */\n      and\n      0x0dfe1681\n        /* \"contracts/gainzilla.sol\":7377:7413  IUniswapV2Pair(pairAddress).token0() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_280\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_280:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_281\n      swap2\n      swap1\n      tag_282\n      jump\t// in\n    tag_281:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":7377:7430  IUniswapV2Pair(pairAddress).token0() == address(this) */\n      and\n      eq\n        /* \"contracts/gainzilla.sol\":7377:7564  IUniswapV2Pair(pairAddress).token0() == address(this) ?... */\n      tag_283\n      jumpi\n        /* \"contracts/gainzilla.sol\":7512:7564  (uint256(reserve0).mul(1e18)).div(uint256(reserve1)) */\n      tag_284\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":7546:7563  uint256(reserve1) */\n      dup1\n      dup4\n      and\n      swap1\n        /* \"contracts/gainzilla.sol\":7513:7540  uint256(reserve0).mul(1e18) */\n      tag_259\n      swap1\n        /* \"contracts/gainzilla.sol\":7513:7530  uint256(reserve0) */\n      dup6\n      and\n        /* \"contracts/gainzilla.sol\":7535:7539  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/gainzilla.sol\":7513:7534  uint256(reserve0).mul */\n      tag_262\n        /* \"contracts/gainzilla.sol\":7513:7540  uint256(reserve0).mul(1e18) */\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":7512:7564  (uint256(reserve0).mul(1e18)).div(uint256(reserve1)) */\n    tag_284:\n        /* \"contracts/gainzilla.sol\":7377:7564  IUniswapV2Pair(pairAddress).token0() == address(this) ?... */\n      jump(tag_287)\n    tag_283:\n        /* \"contracts/gainzilla.sol\":7445:7497  (uint256(reserve1).mul(1e18)).div(uint256(reserve0)) */\n      tag_287\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":7479:7496  uint256(reserve0) */\n      dup1\n      dup5\n      and\n      swap1\n        /* \"contracts/gainzilla.sol\":7446:7473  uint256(reserve1).mul(1e18) */\n      tag_259\n      swap1\n        /* \"contracts/gainzilla.sol\":7446:7463  uint256(reserve1) */\n      dup5\n      and\n        /* \"contracts/gainzilla.sol\":7468:7472  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/gainzilla.sol\":7446:7467  uint256(reserve1).mul */\n      tag_262\n        /* \"contracts/gainzilla.sol\":7446:7473  uint256(reserve1).mul(1e18) */\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":7445:7497  (uint256(reserve1).mul(1e18)).div(uint256(reserve0)) */\n    tag_287:\n        /* \"contracts/gainzilla.sol\":7370:7564  return IUniswapV2Pair(pairAddress).token0() == address(this) ?... */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/gainzilla.sol\":7218:7571  function pairPrice() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":2369:2471  function symbol() public view virtual override returns (string memory) {... */\n    tag_135:\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":2425:2438  string memory */\n      0x60\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":2457:2464  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":2450:2464  return _symbol */\n      dup1\n      sload\n      tag_210\n      swap1\n      tag_211\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":8998:9100  function setThreshold(uint256 threshold) external onlyOwner {... */\n    tag_141:\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_296\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_223\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_296:\n        /* \"contracts/gainzilla.sol\":9068:9081  swapThreshold */\n      0x09\n        /* \"contracts/gainzilla.sol\":9068:9093  swapThreshold = threshold */\n      sstore\n        /* \"contracts/gainzilla.sol\":8998:9100  function setThreshold(uint256 threshold) external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/gainzilla.sol\":7577:8113  function cooldownRemaining(address account) public view returns (... */\n    tag_145:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":7780:7807  cooldown.cooldowns[account] */\n      dup2\n      and\n        /* \"contracts/gainzilla.sol\":7651:7664  uint256 days_ */\n      0x00\n        /* \"contracts/gainzilla.sol\":7780:7807  cooldown.cooldowns[account] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/gainzilla.sol\":7780:7798  cooldown.cooldowns */\n      0x0e\n        /* \"contracts/gainzilla.sol\":7780:7807  cooldown.cooldowns[account] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"contracts/gainzilla.sol\":7651:7664  uint256 days_ */\n      dup2\n      swap1\n      dup2\n      swap1\n      dup2\n      swap1\n      dup2\n      swap1\n        /* \"contracts/gainzilla.sol\":7810:7825  block.timestamp */\n      timestamp\n      lt\n        /* \"contracts/gainzilla.sol\":7780:7893  cooldown.cooldowns[account] > block.timestamp ? ... */\n      tag_299\n      jumpi\n        /* \"contracts/gainzilla.sol\":7892:7893  0 */\n      0x00\n        /* \"contracts/gainzilla.sol\":7780:7893  cooldown.cooldowns[account] > block.timestamp ? ... */\n      jump(tag_301)\n    tag_299:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":7841:7868  cooldown.cooldowns[account] */\n      dup7\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/gainzilla.sol\":7841:7859  cooldown.cooldowns */\n      0x0e\n        /* \"contracts/gainzilla.sol\":7841:7868  cooldown.cooldowns[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/gainzilla.sol\":7841:7889  cooldown.cooldowns[account].sub(block.timestamp) */\n      tag_301\n      swap1\n        /* \"contracts/gainzilla.sol\":7873:7888  block.timestamp */\n      timestamp\n        /* \"contracts/gainzilla.sol\":7841:7872  cooldown.cooldowns[account].sub */\n      tag_261\n        /* \"contracts/gainzilla.sol\":7841:7889  cooldown.cooldowns[account].sub(block.timestamp) */\n      jump\t// in\n    tag_301:\n        /* \"contracts/gainzilla.sol\":7760:7893  uint256 remaining = cooldown.cooldowns[account] > block.timestamp ? ... */\n      swap1\n      pop\n        /* \"contracts/gainzilla.sol\":7920:7940  remaining.div(86400) */\n      tag_302\n        /* \"contracts/gainzilla.sol\":7760:7893  uint256 remaining = cooldown.cooldowns[account] > block.timestamp ? ... */\n      dup2\n        /* \"contracts/gainzilla.sol\":7934:7939  86400 */\n      0x015180\n        /* \"contracts/gainzilla.sol\":7920:7933  remaining.div */\n      tag_263\n        /* \"contracts/gainzilla.sol\":7920:7940  remaining.div(86400) */\n      jump\t// in\n    tag_302:\n        /* \"contracts/gainzilla.sol\":7912:7940  days_ = remaining.div(86400) */\n      swap5\n      pop\n        /* \"contracts/gainzilla.sol\":7950:7968  remaining %= 86400 */\n      tag_303\n        /* \"contracts/gainzilla.sol\":7963:7968  86400 */\n      0x015180\n        /* \"contracts/gainzilla.sol\":7950:7968  remaining %= 86400 */\n      dup3\n      tag_304\n      jump\t// in\n    tag_303:\n      swap1\n      pop\n        /* \"contracts/gainzilla.sol\":7987:8006  remaining.div(3600) */\n      tag_305\n        /* \"contracts/gainzilla.sol\":7950:7968  remaining %= 86400 */\n      dup2\n        /* \"contracts/gainzilla.sol\":8001:8005  3600 */\n      0x0e10\n        /* \"contracts/gainzilla.sol\":7987:8000  remaining.div */\n      tag_263\n        /* \"contracts/gainzilla.sol\":7987:8006  remaining.div(3600) */\n      jump\t// in\n    tag_305:\n        /* \"contracts/gainzilla.sol\":7978:8006  hours_ = remaining.div(3600) */\n      swap4\n      pop\n        /* \"contracts/gainzilla.sol\":8016:8033  remaining %= 3600 */\n      tag_306\n        /* \"contracts/gainzilla.sol\":8029:8033  3600 */\n      0x0e10\n        /* \"contracts/gainzilla.sol\":8016:8033  remaining %= 3600 */\n      dup3\n      tag_304\n      jump\t// in\n    tag_306:\n      swap1\n      pop\n        /* \"contracts/gainzilla.sol\":8054:8071  remaining.div(60) */\n      tag_307\n        /* \"contracts/gainzilla.sol\":8016:8033  remaining %= 3600 */\n      dup2\n        /* \"contracts/gainzilla.sol\":8068:8070  60 */\n      0x3c\n        /* \"contracts/gainzilla.sol\":8054:8067  remaining.div */\n      tag_263\n        /* \"contracts/gainzilla.sol\":8054:8071  remaining.div(60) */\n      jump\t// in\n    tag_307:\n        /* \"contracts/gainzilla.sol\":8043:8071  minutes_ = remaining.div(60) */\n      swap3\n      pop\n        /* \"contracts/gainzilla.sol\":8092:8106  remaining % 60 */\n      tag_308\n        /* \"contracts/gainzilla.sol\":8104:8106  60 */\n      0x3c\n        /* \"contracts/gainzilla.sol\":8092:8101  remaining */\n      dup3\n        /* \"contracts/gainzilla.sol\":8092:8106  remaining % 60 */\n      tag_304\n      jump\t// in\n    tag_308:\n        /* \"contracts/gainzilla.sol\":8081:8106  seconds_ = remaining % 60 */\n      swap2\n      pop\n        /* \"contracts/gainzilla.sol\":7750:8113  {... */\n      pop\n        /* \"contracts/gainzilla.sol\":7577:8113  function cooldownRemaining(address account) public view returns (... */\n      swap2\n      swap4\n      pop\n      swap2\n      swap4\n      jump\t// out\n        /* \"contracts/gainzilla.sol\":9479:9590  function setExempt(address account, bool exempt) external onlyOwner {... */\n    tag_152:\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_310\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_223\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_310:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":9557:9574  isExempt[account] */\n      swap2\n      swap1\n      swap2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/gainzilla.sol\":9557:9565  isExempt */\n      0x15\n        /* \"contracts/gainzilla.sol\":9557:9574  isExempt[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/gainzilla.sol\":9557:9583  isExempt[account] = exempt */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap2\n      iszero\n      iszero\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/gainzilla.sol\":9479:9590  function setExempt(address account, bool exempt) external onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6575:7002  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_156:\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6668:6672  bool */\n      0x00\n        /* \"@openzeppelin/contracts@4.9.3/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6668:6672  bool */\n      dup2\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6749:6774  allowance(owner, spender) */\n      tag_314\n        /* \"@openzeppelin/contracts@4.9.3/utils/Context.sol\":719:729  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6766:6773  spender */\n      dup7\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6749:6758  allowance */\n      tag_193\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6749:6774  allowance(owner, spender) */\n      jump\t// in\n    tag_314:\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6722:6774  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6812:6827  subtractedValue */\n      dup4\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6792:6808  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6792:6827  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6784:6869  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_315\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9489:9491   */\n      0x20\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6784:6869  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9471:9492   */\n      mstore\n        /* \"#utility.yul\":9528:9530   */\n      0x25\n        /* \"#utility.yul\":9508:9526   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9501:9531   */\n      mstore\n        /* \"#utility.yul\":9567:9601   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":9547:9565   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9540:9602   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":9618:9636   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9611:9646   */\n      mstore\n        /* \"#utility.yul\":9663:9682   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6784:6869  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_228\n        /* \"#utility.yul\":9287:9688   */\n      jump\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6784:6869  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_315:\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6903:6963  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_318\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6912:6917  owner */\n      dup3\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6919:6926  spender */\n      dup7\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6947:6962  subtractedValue */\n      dup7\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6928:6944  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6928:6962  currentAllowance - subtractedValue */\n      sub\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6903:6911  _approve */\n      tag_220\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6903:6963  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n    tag_318:\n      pop\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6991:6995  true */\n      0x01\n      swap5\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":6575:7002  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3740:3929  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_165:\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3819:3823  bool */\n      0x00\n        /* \"@openzeppelin/contracts@4.9.3/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3873:3901  _transfer(owner, to, amount) */\n      tag_219\n        /* \"@openzeppelin/contracts@4.9.3/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3890:3892  to */\n      dup6\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3894:3900  amount */\n      dup6\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3873:3882  _transfer */\n      tag_240\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3873:3901  _transfer(owner, to, amount) */\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":8533:8693  function setRouter(address newRouter) external onlyOwner {... */\n    tag_175:\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_323\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_223\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_323:\n        /* \"contracts/gainzilla.sol\":8600:8613  routerAddress */\n      0x13\n        /* \"contracts/gainzilla.sol\":8600:8625  routerAddress = newRouter */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      or\n      swap1\n      sstore\n        /* \"contracts/gainzilla.sol\":8635:8647  _setupPair() */\n      tag_325\n        /* \"contracts/gainzilla.sol\":8635:8645  _setupPair */\n      tag_326\n        /* \"contracts/gainzilla.sol\":8635:8647  _setupPair() */\n      jump\t// in\n    tag_325:\n        /* \"contracts/gainzilla.sol\":8662:8686  RouterUpdated(newRouter) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2651:2683   */\n      dup3\n      and\n        /* \"#utility.yul\":2633:2684   */\n      dup2\n      mstore\n        /* \"contracts/gainzilla.sol\":8662:8686  RouterUpdated(newRouter) */\n      0x7aed1d3e8155a07ccf395e44ea3109a0e2d6c9b29bbbe9f142d9790596f4dc80\n      swap1\n        /* \"#utility.yul\":2621:2623   */\n      0x20\n        /* \"#utility.yul\":2606:2624   */\n      add\n        /* \"contracts/gainzilla.sol\":8662:8686  RouterUpdated(newRouter) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/gainzilla.sol\":8533:8693  function setRouter(address newRouter) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3987:4136  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_193:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":4102:4120  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":4076:4083  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":4102:4120  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":4102:4113  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":4102:4120  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":4102:4129  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3987:4136  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":2074:2272  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_198:\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_330\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_223\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_330:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":2162:2184  newOwner != address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":2154:2227  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_332\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9895:9897   */\n      0x20\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":2154:2227  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9877:9898   */\n      mstore\n        /* \"#utility.yul\":9934:9936   */\n      0x26\n        /* \"#utility.yul\":9914:9932   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9907:9937   */\n      mstore\n        /* \"#utility.yul\":9973:10007   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":9953:9971   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9946:10008   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":10024:10042   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10017:10053   */\n      mstore\n        /* \"#utility.yul\":10070:10089   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":2154:2227  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_228\n        /* \"#utility.yul\":9693:10095   */\n      jump\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":2154:2227  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_332:\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":2237:2265  _transferOwnership(newOwner) */\n      tag_335\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":2256:2264  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":2237:2255  _transferOwnership */\n      tag_253\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":2237:2265  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_335:\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":2074:2272  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/gainzilla.sol\":9282:9473  function configureDiamondFloor(bool enabled, uint16 triggerPercent) external onlyOwner {... */\n    tag_203:\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_337\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_223\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_337:\n        /* \"contracts/gainzilla.sol\":9379:9391  diamondFloor */\n      0x0f\n        /* \"contracts/gainzilla.sol\":9379:9409  diamondFloor.enabled = enabled */\n      dup1\n      sload\n      not(0xffffff)\n        /* \"contracts/gainzilla.sol\":9419:9466  diamondFloor.triggerPercentage = triggerPercent */\n      and\n        /* \"contracts/gainzilla.sol\":9379:9409  diamondFloor.enabled = enabled */\n      swap3\n      iszero\n      iszero\n      not(0xffff00)\n        /* \"contracts/gainzilla.sol\":9419:9466  diamondFloor.triggerPercentage = triggerPercent */\n      and\n      swap3\n      swap1\n      swap3\n      or\n        /* \"contracts/gainzilla.sol\":9379:9409  diamondFloor.enabled = enabled */\n      0x0100\n        /* \"contracts/gainzilla.sol\":9419:9466  diamondFloor.triggerPercentage = triggerPercent */\n      0xffff\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      mul\n      or\n      swap1\n      sstore\n        /* \"contracts/gainzilla.sol\":9282:9473  function configureDiamondFloor(bool enabled, uint16 triggerPercent) external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/gainzilla.sol\":9106:9276  function configureCooldown(bool enabled, uint32 duration) external onlyOwner {... */\n    tag_208:\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_340\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_223\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_340:\n        /* \"contracts/gainzilla.sol\":9193:9201  cooldown */\n      0x0d\n        /* \"contracts/gainzilla.sol\":9193:9219  cooldown.enabled = enabled */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup4\n      iszero\n      iszero\n      or\n      swap1\n      sstore\n        /* \"contracts/gainzilla.sol\":9249:9269  duration * 1 minutes */\n      tag_342\n        /* \"contracts/gainzilla.sol\":9249:9257  duration */\n      dup2\n        /* \"contracts/gainzilla.sol\":9260:9269  1 minutes */\n      0x3c\n        /* \"contracts/gainzilla.sol\":9249:9269  duration * 1 minutes */\n      tag_343\n      jump\t// in\n    tag_342:\n        /* \"contracts/gainzilla.sol\":9229:9237  cooldown */\n      0x0d\n        /* \"contracts/gainzilla.sol\":9229:9269  cooldown.duration = duration * 1 minutes */\n      dup1\n      sload\n      0xffffffff\n      swap3\n      swap1\n      swap3\n      and\n      0x0100\n      mul\n      not(0xffffffff00)\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n      pop\n      pop\n        /* \"contracts/gainzilla.sol\":9106:9276  function configureCooldown(bool enabled, uint32 duration) external onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":10457:10797  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_220:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":10558:10577  owner != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":10550:10618  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_346\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10556:10558   */\n      0x20\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":10550:10618  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10538:10559   */\n      mstore\n        /* \"#utility.yul\":10595:10597   */\n      0x24\n        /* \"#utility.yul\":10575:10593   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":10568:10598   */\n      mstore\n        /* \"#utility.yul\":10634:10668   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":10614:10632   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10607:10669   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":10685:10703   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10678:10712   */\n      mstore\n        /* \"#utility.yul\":10729:10748   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":10550:10618  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_228\n        /* \"#utility.yul\":10354:10754   */\n      jump\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":10550:10618  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_346:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":10636:10657  spender != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":10628:10696  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_349\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10961:10963   */\n      0x20\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":10628:10696  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10943:10964   */\n      mstore\n        /* \"#utility.yul\":11000:11002   */\n      0x22\n        /* \"#utility.yul\":10980:10998   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10973:11003   */\n      mstore\n        /* \"#utility.yul\":11039:11073   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":11019:11037   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11012:11074   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":11090:11108   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":11083:11115   */\n      mstore\n        /* \"#utility.yul\":11132:11151   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":10628:10696  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_228\n        /* \"#utility.yul\":10759:11157   */\n      jump\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":10628:10696  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_349:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":10707:10725  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":10707:10718  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":10707:10725  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":10707:10734  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":10707:10743  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":10758:10790  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":160:185   */\n      dup5\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":10758:10790  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":10758:10790  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":10457:10797  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_223:\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":1273:1279  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"@openzeppelin/contracts@4.9.3/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_252\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11364:11366   */\n      0x20\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11346:11367   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":11383:11401   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11376:11406   */\n      mstore\n        /* \"#utility.yul\":11442:11476   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":11422:11440   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11415:11477   */\n      mstore\n        /* \"#utility.yul\":11494:11512   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_228\n        /* \"#utility.yul\":11162:11518   */\n      jump\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11078:11489  function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_238:\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11178:11202  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11205:11230  allowance(owner, spender) */\n      tag_360\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11215:11220  owner */\n      dup5\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11222:11229  spender */\n      dup5\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11205:11214  allowance */\n      tag_193\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11205:11230  allowance(owner, spender) */\n      jump\t// in\n    tag_360:\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11178:11230  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n      not(0x00)\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11244:11260  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11244:11281  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11240:11483  if (currentAllowance != type(uint256).max) {... */\n      tag_365\n      jumpi\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11325:11331  amount */\n      dup2\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11305:11321  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11305:11331  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11297:11365  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_362\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11725:11727   */\n      0x20\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11297:11365  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11707:11728   */\n      mstore\n        /* \"#utility.yul\":11764:11766   */\n      0x1d\n        /* \"#utility.yul\":11744:11762   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11737:11767   */\n      mstore\n        /* \"#utility.yul\":11803:11834   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":11783:11801   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11776:11835   */\n      mstore\n        /* \"#utility.yul\":11852:11870   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11297:11365  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_228\n        /* \"#utility.yul\":11523:11876   */\n      jump\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11297:11365  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n    tag_362:\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11407:11458  _approve(owner, spender, currentAllowance - amount) */\n      tag_365\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11416:11421  owner */\n      dup5\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11423:11430  spender */\n      dup5\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11451:11457  amount */\n      dup5\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11432:11448  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11432:11457  currentAllowance - amount */\n      sub\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11407:11415  _approve */\n      tag_220\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11407:11458  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_365:\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11168:11489  {... */\n      pop\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":11078:11489  function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/gainzilla.sol\":2841:4134  function _transfer(... */\n    tag_240:\n        /* \"contracts/gainzilla.sol\":2994:2995  0 */\n      0x00\n        /* \"contracts/gainzilla.sol\":2985:2991  amount */\n      dup2\n        /* \"contracts/gainzilla.sol\":2985:2995  amount > 0 */\n      gt\n        /* \"contracts/gainzilla.sol\":2977:3026  require(amount > 0, \"Transfer amount must be >0\") */\n      tag_367\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12083:12085   */\n      0x20\n        /* \"contracts/gainzilla.sol\":2977:3026  require(amount > 0, \"Transfer amount must be >0\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12065:12086   */\n      mstore\n        /* \"#utility.yul\":12122:12124   */\n      0x1a\n        /* \"#utility.yul\":12102:12120   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12095:12125   */\n      mstore\n        /* \"#utility.yul\":12161:12189   */\n      0x5472616e7366657220616d6f756e74206d757374206265203e30000000000000\n        /* \"#utility.yul\":12141:12159   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12134:12190   */\n      mstore\n        /* \"#utility.yul\":12207:12225   */\n      0x64\n      add\n        /* \"contracts/gainzilla.sol\":2977:3026  require(amount > 0, \"Transfer amount must be >0\") */\n      tag_228\n        /* \"#utility.yul\":11881:12231   */\n      jump\n        /* \"contracts/gainzilla.sol\":2977:3026  require(amount > 0, \"Transfer amount must be >0\") */\n    tag_367:\n        /* \"contracts/gainzilla.sol\":3060:3071  pairAddress */\n      sload(0x14)\n        /* \"contracts/gainzilla.sol\":3037:3047  bool isBuy */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":3050:3071  sender == pairAddress */\n      dup6\n      dup2\n      and\n        /* \"contracts/gainzilla.sol\":3060:3071  pairAddress */\n      swap2\n      and\n        /* \"contracts/gainzilla.sol\":3050:3071  sender == pairAddress */\n      eq\n        /* \"contracts/gainzilla.sol\":3050:3095  sender == pairAddress && !isExempt[recipient] */\n      dup1\n      iszero\n      tag_370\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":3076:3095  isExempt[recipient] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/gainzilla.sol\":3076:3084  isExempt */\n      0x15\n        /* \"contracts/gainzilla.sol\":3076:3095  isExempt[recipient] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/gainzilla.sol\":3075:3095  !isExempt[recipient] */\n      iszero\n        /* \"contracts/gainzilla.sol\":3050:3095  sender == pairAddress && !isExempt[recipient] */\n    tag_370:\n        /* \"contracts/gainzilla.sol\":3132:3143  pairAddress */\n      sload(0x14)\n        /* \"contracts/gainzilla.sol\":3037:3095  bool isBuy = sender == pairAddress && !isExempt[recipient] */\n      swap1\n      swap2\n      pop\n        /* \"contracts/gainzilla.sol\":3105:3116  bool isSell */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":3119:3143  recipient == pairAddress */\n      dup6\n      dup2\n      and\n        /* \"contracts/gainzilla.sol\":3132:3143  pairAddress */\n      swap2\n      and\n        /* \"contracts/gainzilla.sol\":3119:3143  recipient == pairAddress */\n      eq\n        /* \"contracts/gainzilla.sol\":3119:3164  recipient == pairAddress && !isExempt[sender] */\n      dup1\n      iszero\n      tag_371\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":3148:3164  isExempt[sender] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/gainzilla.sol\":3148:3156  isExempt */\n      0x15\n        /* \"contracts/gainzilla.sol\":3148:3164  isExempt[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/gainzilla.sol\":3147:3164  !isExempt[sender] */\n      iszero\n        /* \"contracts/gainzilla.sol\":3119:3164  recipient == pairAddress && !isExempt[sender] */\n    tag_371:\n        /* \"contracts/gainzilla.sol\":3179:3191  diamondFloor */\n      0x0f\n        /* \"contracts/gainzilla.sol\":3179:3199  diamondFloor.enabled */\n      sload\n        /* \"contracts/gainzilla.sol\":3105:3164  bool isSell = recipient == pairAddress && !isExempt[sender] */\n      swap1\n      swap2\n      pop\n        /* \"contracts/gainzilla.sol\":3179:3199  diamondFloor.enabled */\n      0xff\n      and\n        /* \"contracts/gainzilla.sol\":3179:3209  diamondFloor.enabled && isSell */\n      dup1\n      iszero\n      tag_372\n      jumpi\n      pop\n        /* \"contracts/gainzilla.sol\":3203:3209  isSell */\n      dup1\n        /* \"contracts/gainzilla.sol\":3179:3209  diamondFloor.enabled && isSell */\n    tag_372:\n        /* \"contracts/gainzilla.sol\":3175:3341  if (diamondFloor.enabled && isSell) {... */\n      iszero\n      tag_377\n      jumpi\n        /* \"contracts/gainzilla.sol\":3234:3258  diamondFloor.sellStopped */\n      and(0xff, sload(0x11))\n        /* \"contracts/gainzilla.sol\":3233:3258  !diamondFloor.sellStopped */\n      iszero\n        /* \"contracts/gainzilla.sol\":3225:3293  require(!diamondFloor.sellStopped, \"Sells stopped by Diamond Floor\") */\n      tag_374\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12438:12440   */\n      0x20\n        /* \"contracts/gainzilla.sol\":3225:3293  require(!diamondFloor.sellStopped, \"Sells stopped by Diamond Floor\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12420:12441   */\n      mstore\n        /* \"#utility.yul\":12477:12479   */\n      0x1e\n        /* \"#utility.yul\":12457:12475   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12450:12480   */\n      mstore\n        /* \"#utility.yul\":12516:12548   */\n      0x53656c6c732073746f70706564206279204469616d6f6e6420466c6f6f720000\n        /* \"#utility.yul\":12496:12514   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12489:12549   */\n      mstore\n        /* \"#utility.yul\":12566:12584   */\n      0x64\n      add\n        /* \"contracts/gainzilla.sol\":3225:3293  require(!diamondFloor.sellStopped, \"Sells stopped by Diamond Floor\") */\n      tag_228\n        /* \"#utility.yul\":12236:12590   */\n      jump\n        /* \"contracts/gainzilla.sol\":3225:3293  require(!diamondFloor.sellStopped, \"Sells stopped by Diamond Floor\") */\n    tag_374:\n        /* \"contracts/gainzilla.sol\":3307:3330  _checkPriceConditions() */\n      tag_377\n        /* \"contracts/gainzilla.sol\":3307:3328  _checkPriceConditions */\n      tag_378\n        /* \"contracts/gainzilla.sol\":3307:3330  _checkPriceConditions() */\n      jump\t// in\n    tag_377:\n        /* \"contracts/gainzilla.sol\":3355:3363  cooldown */\n      0x0d\n        /* \"contracts/gainzilla.sol\":3355:3371  cooldown.enabled */\n      sload\n      0xff\n      and\n        /* \"contracts/gainzilla.sol\":3355:3381  cooldown.enabled && isSell */\n      dup1\n      iszero\n      tag_379\n      jumpi\n      pop\n        /* \"contracts/gainzilla.sol\":3375:3381  isSell */\n      dup1\n        /* \"contracts/gainzilla.sol\":3355:3381  cooldown.enabled && isSell */\n    tag_379:\n        /* \"contracts/gainzilla.sol\":3351:3559  if (cooldown.enabled && isSell) {... */\n      iszero\n      tag_380\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":3424:3450  cooldown.cooldowns[sender] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/gainzilla.sol\":3424:3442  cooldown.cooldowns */\n      0x0e\n        /* \"contracts/gainzilla.sol\":3424:3450  cooldown.cooldowns[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/gainzilla.sol\":3405:3420  block.timestamp */\n      timestamp\n        /* \"contracts/gainzilla.sol\":3405:3450  block.timestamp >= cooldown.cooldowns[sender] */\n      lt\n      iszero\n        /* \"contracts/gainzilla.sol\":3397:3470  require(block.timestamp >= cooldown.cooldowns[sender], \"Cooldown active\") */\n      tag_381\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12797:12799   */\n      0x20\n        /* \"contracts/gainzilla.sol\":3397:3470  require(block.timestamp >= cooldown.cooldowns[sender], \"Cooldown active\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12779:12800   */\n      mstore\n        /* \"#utility.yul\":12836:12838   */\n      0x0f\n        /* \"#utility.yul\":12816:12834   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12809:12839   */\n      mstore\n      shl(0x88, 0x436f6f6c646f776e20616374697665)\n        /* \"#utility.yul\":12855:12873   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12848:12893   */\n      mstore\n        /* \"#utility.yul\":12910:12928   */\n      0x64\n      add\n        /* \"contracts/gainzilla.sol\":3397:3470  require(block.timestamp >= cooldown.cooldowns[sender], \"Cooldown active\") */\n      tag_228\n        /* \"#utility.yul\":12595:12934   */\n      jump\n        /* \"contracts/gainzilla.sol\":3397:3470  require(block.timestamp >= cooldown.cooldowns[sender], \"Cooldown active\") */\n    tag_381:\n        /* \"contracts/gainzilla.sol\":3531:3539  cooldown */\n      0x0d\n        /* \"contracts/gainzilla.sol\":3531:3548  cooldown.duration */\n      sload\n        /* \"contracts/gainzilla.sol\":3513:3548  block.timestamp + cooldown.duration */\n      tag_384\n      swap1\n        /* \"contracts/gainzilla.sol\":3531:3548  cooldown.duration */\n      0x0100\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"contracts/gainzilla.sol\":3513:3528  block.timestamp */\n      timestamp\n        /* \"contracts/gainzilla.sol\":3513:3548  block.timestamp + cooldown.duration */\n      tag_247\n      jump\t// in\n    tag_384:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":3484:3510  cooldown.cooldowns[sender] */\n      dup7\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/gainzilla.sol\":3484:3502  cooldown.cooldowns */\n      0x0e\n        /* \"contracts/gainzilla.sol\":3484:3510  cooldown.cooldowns[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/gainzilla.sol\":3484:3548  cooldown.cooldowns[sender] = block.timestamp + cooldown.duration */\n      sstore\n        /* \"contracts/gainzilla.sol\":3351:3559  if (cooldown.enabled && isSell) {... */\n    tag_380:\n        /* \"contracts/gainzilla.sol\":3569:3586  uint256 taxAmount */\n      0x00\n        /* \"contracts/gainzilla.sol\":3589:3629  _calculateTax(sender, recipient, amount) */\n      tag_385\n        /* \"contracts/gainzilla.sol\":3603:3609  sender */\n      dup7\n        /* \"contracts/gainzilla.sol\":3611:3620  recipient */\n      dup7\n        /* \"contracts/gainzilla.sol\":3622:3628  amount */\n      dup7\n        /* \"contracts/gainzilla.sol\":3589:3602  _calculateTax */\n      tag_386\n        /* \"contracts/gainzilla.sol\":3589:3629  _calculateTax(sender, recipient, amount) */\n      jump\t// in\n    tag_385:\n        /* \"contracts/gainzilla.sol\":3569:3629  uint256 taxAmount = _calculateTax(sender, recipient, amount) */\n      swap1\n      pop\n        /* \"contracts/gainzilla.sol\":3639:3656  uint256 netAmount */\n      0x00\n        /* \"contracts/gainzilla.sol\":3659:3680  amount.sub(taxAmount) */\n      tag_387\n        /* \"contracts/gainzilla.sol\":3659:3665  amount */\n      dup6\n        /* \"contracts/gainzilla.sol\":3569:3629  uint256 taxAmount = _calculateTax(sender, recipient, amount) */\n      dup4\n        /* \"contracts/gainzilla.sol\":3659:3669  amount.sub */\n      tag_261\n        /* \"contracts/gainzilla.sol\":3659:3680  amount.sub(taxAmount) */\n      jump\t// in\n    tag_387:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":3696:3715  isExempt[recipient] */\n      dup8\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/gainzilla.sol\":3696:3704  isExempt */\n      0x15\n        /* \"contracts/gainzilla.sol\":3696:3715  isExempt[recipient] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/gainzilla.sol\":3639:3680  uint256 netAmount = amount.sub(taxAmount) */\n      swap1\n      swap2\n      pop\n        /* \"contracts/gainzilla.sol\":3696:3715  isExempt[recipient] */\n      0xff\n      and\n        /* \"contracts/gainzilla.sol\":3695:3715  !isExempt[recipient] */\n      iszero\n        /* \"contracts/gainzilla.sol\":3695:3726  !isExempt[recipient] && !isSell */\n      dup1\n      iszero\n      tag_388\n      jumpi\n      pop\n        /* \"contracts/gainzilla.sol\":3720:3726  isSell */\n      dup3\n        /* \"contracts/gainzilla.sol\":3719:3726  !isSell */\n      iszero\n        /* \"contracts/gainzilla.sol\":3695:3726  !isExempt[recipient] && !isSell */\n    tag_388:\n        /* \"contracts/gainzilla.sol\":3691:3840  if (!isExempt[recipient] && !isSell) {... */\n      iszero\n      tag_394\n      jumpi\n        /* \"contracts/gainzilla.sol\":3789:3805  _maxWalletSize() */\n      tag_390\n        /* \"contracts/gainzilla.sol\":3789:3803  _maxWalletSize */\n      tag_127\n        /* \"contracts/gainzilla.sol\":3789:3805  _maxWalletSize() */\n      jump\t// in\n    tag_390:\n        /* \"contracts/gainzilla.sol\":3750:3785  balanceOf(recipient).add(netAmount) */\n      tag_391\n        /* \"contracts/gainzilla.sol\":3775:3784  netAmount */\n      dup3\n        /* \"contracts/gainzilla.sol\":3750:3770  balanceOf(recipient) */\n      tag_392\n        /* \"contracts/gainzilla.sol\":3760:3769  recipient */\n      dup10\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3519:3537  _balances[account] */\n      and\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3493:3500  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3519:3537  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":3419:3544  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\n        /* \"contracts/gainzilla.sol\":3750:3770  balanceOf(recipient) */\n    tag_392:\n        /* \"contracts/gainzilla.sol\":3750:3774  balanceOf(recipient).add */\n      swap1\n      tag_393\n        /* \"contracts/gainzilla.sol\":3750:3785  balanceOf(recipient).add(netAmount) */\n      jump\t// in\n    tag_391:\n        /* \"contracts/gainzilla.sol\":3750:3805  balanceOf(recipient).add(netAmount) <= _maxWalletSize() */\n      gt\n      iszero\n        /* \"contracts/gainzilla.sol\":3742:3829  require(balanceOf(recipient).add(netAmount) <= _maxWalletSize(), \"Max wallet exceeded\") */\n      tag_394\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13141:13143   */\n      0x20\n        /* \"contracts/gainzilla.sol\":3742:3829  require(balanceOf(recipient).add(netAmount) <= _maxWalletSize(), \"Max wallet exceeded\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13123:13144   */\n      mstore\n        /* \"#utility.yul\":13180:13182   */\n      0x13\n        /* \"#utility.yul\":13160:13178   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13153:13183   */\n      mstore\n      shl(0x6a, 0x13585e081dd85b1b195d08195e18d959591959)\n        /* \"#utility.yul\":13199:13217   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13192:13241   */\n      mstore\n        /* \"#utility.yul\":13258:13276   */\n      0x64\n      add\n        /* \"contracts/gainzilla.sol\":3742:3829  require(balanceOf(recipient).add(netAmount) <= _maxWalletSize(), \"Max wallet exceeded\") */\n      tag_228\n        /* \"#utility.yul\":12939:13282   */\n      jump\n        /* \"contracts/gainzilla.sol\":3742:3829  require(balanceOf(recipient).add(netAmount) <= _maxWalletSize(), \"Max wallet exceeded\") */\n    tag_394:\n        /* \"contracts/gainzilla.sol\":3854:3867  taxAmount > 0 */\n      dup2\n      iszero\n        /* \"contracts/gainzilla.sol\":3850:3997  if (taxAmount > 0) {... */\n      tag_400\n      jumpi\n        /* \"contracts/gainzilla.sol\":3883:3932  super._transfer(sender, address(this), taxAmount) */\n      tag_398\n        /* \"contracts/gainzilla.sol\":3899:3905  sender */\n      dup8\n        /* \"contracts/gainzilla.sol\":3915:3919  this */\n      address\n        /* \"contracts/gainzilla.sol\":3922:3931  taxAmount */\n      dup5\n        /* \"contracts/gainzilla.sol\":3883:3898  super._transfer */\n      tag_399\n        /* \"contracts/gainzilla.sol\":3883:3932  super._transfer(sender, address(this), taxAmount) */\n      jump\t// in\n    tag_398:\n        /* \"contracts/gainzilla.sol\":3946:3986  _distributeTax(taxAmount, isBuy, isSell) */\n      tag_400\n        /* \"contracts/gainzilla.sol\":3961:3970  taxAmount */\n      dup3\n        /* \"contracts/gainzilla.sol\":3972:3977  isBuy */\n      dup6\n        /* \"contracts/gainzilla.sol\":3979:3985  isSell */\n      dup6\n        /* \"contracts/gainzilla.sol\":3946:3960  _distributeTax */\n      tag_401\n        /* \"contracts/gainzilla.sol\":3946:3986  _distributeTax(taxAmount, isBuy, isSell) */\n      jump\t// in\n    tag_400:\n        /* \"contracts/gainzilla.sol\":4007:4052  super._transfer(sender, recipient, netAmount) */\n      tag_402\n        /* \"contracts/gainzilla.sol\":4023:4029  sender */\n      dup8\n        /* \"contracts/gainzilla.sol\":4031:4040  recipient */\n      dup8\n        /* \"contracts/gainzilla.sol\":4042:4051  netAmount */\n      dup4\n        /* \"contracts/gainzilla.sol\":4007:4022  super._transfer */\n      tag_399\n        /* \"contracts/gainzilla.sol\":4007:4052  super._transfer(sender, recipient, netAmount) */\n      jump\t// in\n    tag_402:\n        /* \"contracts/gainzilla.sol\":4067:4084  _shouldSwapBack() */\n      tag_403\n        /* \"contracts/gainzilla.sol\":4067:4082  _shouldSwapBack */\n      tag_404\n        /* \"contracts/gainzilla.sol\":4067:4084  _shouldSwapBack() */\n      jump\t// in\n    tag_403:\n        /* \"contracts/gainzilla.sol\":4063:4128  if (_shouldSwapBack()) {... */\n      iszero\n      tag_406\n      jumpi\n        /* \"contracts/gainzilla.sol\":4100:4117  _swapAndLiquify() */\n      tag_406\n        /* \"contracts/gainzilla.sol\":4100:4115  _swapAndLiquify */\n      tag_407\n        /* \"contracts/gainzilla.sol\":4100:4117  _swapAndLiquify() */\n      jump\t// in\n    tag_406:\n        /* \"contracts/gainzilla.sol\":2967:4134  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/gainzilla.sol\":2841:4134  function _transfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_253:\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":2518:2524  _owner */\n      0x05\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":2534:2551  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":2518:2524  _owner */\n      swap2\n      and\n      swap2\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":2534:2551  _owner = newOwner */\n      swap1\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":2518:2524  _owner */\n      dup3\n      swap1\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":2499:2515  address oldOwner */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":2489:2613  {... */\n      pop\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_261:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3180:3187  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3211  a - b */\n      tag_235\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3210:3211  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3207  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3211  a - b */\n      tag_411\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_262:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3523:3530  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3554  a * b */\n      tag_235\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3553:3554  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3550  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3554  a * b */\n      tag_414\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_263:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3908:3915  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3939  a / b */\n      tag_235\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3938:3939  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3935  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3939  a / b */\n      tag_417\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":9596:9796  function _setupPair() private {... */\n    tag_326:\n        /* \"contracts/gainzilla.sol\":9685:9698  routerAddress */\n      0x13\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":9668:9707  IUniswapV2Router(routerAddress).factory */\n      and\n      0xc45a0155\n        /* \"contracts/gainzilla.sol\":9668:9709  IUniswapV2Router(routerAddress).factory() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_420\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_420:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_421\n      swap2\n      swap1\n      tag_282\n      jump\t// in\n    tag_421:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":9650:9734  IUniswapV2Factory(IUniswapV2Router(routerAddress).factory())... */\n      and\n      0xc9c65396\n        /* \"contracts/gainzilla.sol\":9743:9747  this */\n      address\n        /* \"contracts/gainzilla.sol\":9767:9780  routerAddress */\n      0x13\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":9750:9786  IUniswapV2Router(routerAddress).WETH */\n      and\n      0xad5c4648\n        /* \"contracts/gainzilla.sol\":9750:9788  IUniswapV2Router(routerAddress).WETH() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_423\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_423:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_424\n      swap2\n      swap1\n      tag_282\n      jump\t// in\n    tag_424:\n        /* \"contracts/gainzilla.sol\":9650:9789  IUniswapV2Factory(IUniswapV2Router(routerAddress).factory())... */\n      mload(0x40)\n      not(sub(shl(0xe0, 0x01), 0x01))\n      0xe0\n      dup6\n      swap1\n      shl\n      and\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":13948:13963   */\n      swap3\n      dup4\n      and\n        /* \"contracts/gainzilla.sol\":9650:9789  IUniswapV2Factory(IUniswapV2Router(routerAddress).factory())... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13930:13964   */\n      mstore\n        /* \"#utility.yul\":14000:14015   */\n      swap2\n      and\n        /* \"#utility.yul\":13980:13998   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13973:14016   */\n      mstore\n        /* \"#utility.yul\":13865:13883   */\n      0x44\n      add\n        /* \"contracts/gainzilla.sol\":9650:9789  IUniswapV2Factory(IUniswapV2Router(routerAddress).factory())... */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_428\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_428:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_429\n      swap2\n      swap1\n      tag_282\n      jump\t// in\n    tag_429:\n        /* \"contracts/gainzilla.sol\":9636:9647  pairAddress */\n      0x14\n        /* \"contracts/gainzilla.sol\":9636:9789  pairAddress = IUniswapV2Factory(IUniswapV2Router(routerAddress).factory())... */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/gainzilla.sol\":9596:9796  function _setupPair() private {... */\n      jump\t// out\n        /* \"contracts/gainzilla.sol\":5660:6500  function _checkPriceConditions() private {... */\n    tag_378:\n        /* \"contracts/gainzilla.sol\":5711:5731  uint256 currentPrice */\n      0x00\n        /* \"contracts/gainzilla.sol\":5734:5745  pairPrice() */\n      tag_431\n        /* \"contracts/gainzilla.sol\":5734:5743  pairPrice */\n      tag_131\n        /* \"contracts/gainzilla.sol\":5734:5745  pairPrice() */\n      jump\t// in\n    tag_431:\n        /* \"contracts/gainzilla.sol\":5775:5796  diamondFloor.athPrice */\n      sload(0x10)\n        /* \"contracts/gainzilla.sol\":5711:5745  uint256 currentPrice = pairPrice() */\n      swap1\n      swap2\n      pop\n        /* \"contracts/gainzilla.sol\":5760:5796  currentPrice > diamondFloor.athPrice */\n      dup2\n      gt\n        /* \"contracts/gainzilla.sol\":5756:5987  if (currentPrice > diamondFloor.athPrice) {... */\n      iszero\n      tag_432\n      jumpi\n        /* \"contracts/gainzilla.sol\":5812:5833  diamondFloor.athPrice */\n      0x10\n        /* \"contracts/gainzilla.sol\":5812:5848  diamondFloor.athPrice = currentPrice */\n      dup2\n      swap1\n      sstore\n        /* \"contracts/gainzilla.sol\":5866:5890  diamondFloor.sellStopped */\n      and(0xff, sload(0x11))\n        /* \"contracts/gainzilla.sol\":5862:5957  if (diamondFloor.sellStopped) {... */\n      iszero\n      tag_335\n      jumpi\n        /* \"contracts/gainzilla.sol\":5910:5934  diamondFloor.sellStopped */\n      0x11\n        /* \"contracts/gainzilla.sol\":5910:5942  diamondFloor.sellStopped = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"contracts/gainzilla.sol\":5970:5977  return; */\n      pop\n        /* \"contracts/gainzilla.sol\":5660:6500  function _checkPriceConditions() private {... */\n      jump\t// out\n        /* \"contracts/gainzilla.sol\":5756:5987  if (currentPrice > diamondFloor.athPrice) {... */\n    tag_432:\n        /* \"contracts/gainzilla.sol\":6074:6086  diamondFloor */\n      0x0f\n        /* \"contracts/gainzilla.sol\":6074:6104  diamondFloor.triggerPercentage */\n      sload\n        /* \"contracts/gainzilla.sol\":5997:6019  uint256 thresholdPrice */\n      0x00\n      swap1\n        /* \"contracts/gainzilla.sol\":6022:6134  diamondFloor.athPrice... */\n      tag_434\n      swap1\n        /* \"contracts/gainzilla.sol\":1430:1436  10_000 */\n      0x2710\n      swap1\n        /* \"contracts/gainzilla.sol\":6022:6105  diamondFloor.athPrice... */\n      tag_259\n      swap1\n        /* \"contracts/gainzilla.sol\":6061:6104  BP_DIVISOR - diamondFloor.triggerPercentage */\n      tag_436\n      swap1\n        /* \"contracts/gainzilla.sol\":6074:6104  diamondFloor.triggerPercentage */\n      0x0100\n      swap1\n      div\n      0xffff\n      and\n        /* \"contracts/gainzilla.sol\":1430:1436  10_000 */\n      dup4\n        /* \"contracts/gainzilla.sol\":6061:6104  BP_DIVISOR - diamondFloor.triggerPercentage */\n      tag_411\n      jump\t// in\n    tag_436:\n        /* \"contracts/gainzilla.sol\":6022:6043  diamondFloor.athPrice */\n      sload(0x10)\n      swap1\n        /* \"contracts/gainzilla.sol\":6022:6060  diamondFloor.athPrice... */\n      tag_262\n        /* \"contracts/gainzilla.sol\":6022:6105  diamondFloor.athPrice... */\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":6022:6134  diamondFloor.athPrice... */\n    tag_434:\n        /* \"contracts/gainzilla.sol\":5997:6134  uint256 thresholdPrice = diamondFloor.athPrice... */\n      swap1\n      pop\n        /* \"contracts/gainzilla.sol\":6164:6178  thresholdPrice */\n      dup1\n        /* \"contracts/gainzilla.sol\":6149:6161  currentPrice */\n      dup3\n        /* \"contracts/gainzilla.sol\":6149:6178  currentPrice < thresholdPrice */\n      lt\n        /* \"contracts/gainzilla.sol\":6145:6297  if (currentPrice < thresholdPrice) {... */\n      iszero\n      tag_437\n      jumpi\n        /* \"contracts/gainzilla.sol\":6194:6218  diamondFloor.sellStopped */\n      0x11\n        /* \"contracts/gainzilla.sol\":6194:6225  diamondFloor.sellStopped = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"contracts/gainzilla.sol\":6221:6225  true */\n      0x01\n        /* \"contracts/gainzilla.sol\":6194:6225  diamondFloor.sellStopped = true */\n      or\n      swap1\n      sstore\n        /* \"contracts/gainzilla.sol\":6265:6286  diamondFloor.athPrice */\n      sload(0x10)\n        /* \"contracts/gainzilla.sol\":6239:6262  diamondFloor.blockedAth */\n      0x12\n        /* \"contracts/gainzilla.sol\":6239:6286  diamondFloor.blockedAth = diamondFloor.athPrice */\n      sstore\n        /* \"contracts/gainzilla.sol\":6145:6297  if (currentPrice < thresholdPrice) {... */\n    tag_437:\n        /* \"contracts/gainzilla.sol\":6311:6335  diamondFloor.sellStopped */\n      and(0xff, sload(0x11))\n        /* \"contracts/gainzilla.sol\":6311:6385  diamondFloor.sellStopped && currentPrice >= diamondFloor.blockedAth.mul(2) */\n      dup1\n      iszero\n      tag_438\n      jumpi\n      pop\n        /* \"contracts/gainzilla.sol\":6355:6378  diamondFloor.blockedAth */\n      sload(0x12)\n        /* \"contracts/gainzilla.sol\":6355:6385  diamondFloor.blockedAth.mul(2) */\n      tag_439\n      swap1\n        /* \"contracts/gainzilla.sol\":6383:6384  2 */\n      0x02\n        /* \"contracts/gainzilla.sol\":6355:6382  diamondFloor.blockedAth.mul */\n      tag_262\n        /* \"contracts/gainzilla.sol\":6355:6385  diamondFloor.blockedAth.mul(2) */\n      jump\t// in\n    tag_439:\n        /* \"contracts/gainzilla.sol\":6339:6351  currentPrice */\n      dup3\n        /* \"contracts/gainzilla.sol\":6339:6385  currentPrice >= diamondFloor.blockedAth.mul(2) */\n      lt\n      iszero\n        /* \"contracts/gainzilla.sol\":6311:6385  diamondFloor.sellStopped && currentPrice >= diamondFloor.blockedAth.mul(2) */\n    tag_438:\n        /* \"contracts/gainzilla.sol\":6307:6494  if (diamondFloor.sellStopped && currentPrice >= diamondFloor.blockedAth.mul(2)) {... */\n      iszero\n      tag_440\n      jumpi\n        /* \"contracts/gainzilla.sol\":6401:6425  diamondFloor.sellStopped */\n      0x11\n        /* \"contracts/gainzilla.sol\":6401:6433  diamondFloor.sellStopped = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"contracts/gainzilla.sol\":6447:6468  diamondFloor.athPrice */\n      0x10\n        /* \"contracts/gainzilla.sol\":6447:6483  diamondFloor.athPrice = currentPrice */\n      dup3\n      swap1\n      sstore\n        /* \"contracts/gainzilla.sol\":6307:6494  if (diamondFloor.sellStopped && currentPrice >= diamondFloor.blockedAth.mul(2)) {... */\n    tag_440:\n        /* \"contracts/gainzilla.sol\":5701:6500  {... */\n      pop\n      pop\n        /* \"contracts/gainzilla.sol\":5660:6500  function _checkPriceConditions() private {... */\n      jump\t// out\n        /* \"contracts/gainzilla.sol\":4140:4921  function _calculateTax(... */\n    tag_386:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":4289:4305  isExempt[sender] */\n      dup4\n      and\n        /* \"contracts/gainzilla.sol\":4266:4273  uint256 */\n      0x00\n        /* \"contracts/gainzilla.sol\":4289:4305  isExempt[sender] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/gainzilla.sol\":4289:4297  isExempt */\n      0x15\n        /* \"contracts/gainzilla.sol\":4289:4305  isExempt[sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      0xff\n      and\n      dup1\n        /* \"contracts/gainzilla.sol\":4289:4328  isExempt[sender] || isExempt[recipient] */\n      tag_442\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":4309:4328  isExempt[recipient] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/gainzilla.sol\":4309:4317  isExempt */\n      0x15\n        /* \"contracts/gainzilla.sol\":4309:4328  isExempt[recipient] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/gainzilla.sol\":4289:4328  isExempt[sender] || isExempt[recipient] */\n    tag_442:\n        /* \"contracts/gainzilla.sol\":4285:4338  if (isExempt[sender] || isExempt[recipient]) return 0 */\n      iszero\n      tag_443\n      jumpi\n      pop\n        /* \"contracts/gainzilla.sol\":4337:4338  0 */\n      0x00\n        /* \"contracts/gainzilla.sol\":4330:4338  return 0 */\n      jump(tag_235)\n        /* \"contracts/gainzilla.sol\":4285:4338  if (isExempt[sender] || isExempt[recipient]) return 0 */\n    tag_443:\n        /* \"contracts/gainzilla.sol\":4372:4383  pairAddress */\n      sload(0x14)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"contracts/gainzilla.sol\":4362:4383  sender == pairAddress */\n      dup6\n      dup3\n      and\n      dup2\n      eq\n      swap2\n        /* \"contracts/gainzilla.sol\":4407:4431  recipient == pairAddress */\n      dup6\n      and\n      eq\n        /* \"contracts/gainzilla.sol\":4442:4915  if (isBuy) {... */\n      dup2\n      iszero\n      tag_444\n      jumpi\n        /* \"contracts/gainzilla.sol\":4513:4521  taxRates */\n      0x07\n        /* \"contracts/gainzilla.sol\":4513:4528  taxRates.buyEco */\n      sload\n        /* \"contracts/gainzilla.sol\":4474:4546  amount.mul(uint256(taxRates.buyLp).add(taxRates.buyEco)).div(BP_DIVISOR) */\n      tag_445\n      swap1\n        /* \"contracts/gainzilla.sol\":1430:1436  10_000 */\n      0x2710\n      swap1\n        /* \"contracts/gainzilla.sol\":4474:4530  amount.mul(uint256(taxRates.buyLp).add(taxRates.buyEco)) */\n      tag_259\n      swap1\n        /* \"contracts/gainzilla.sol\":4485:4529  uint256(taxRates.buyLp).add(taxRates.buyEco) */\n      tag_447\n      swap1\n        /* \"contracts/gainzilla.sol\":4513:4528  taxRates.buyEco */\n      0xffff\n        /* \"contracts/gainzilla.sol\":4493:4507  taxRates.buyLp */\n      dup1\n      dup3\n      and\n      swap2\n        /* \"contracts/gainzilla.sol\":4513:4528  taxRates.buyEco */\n      0x010000\n      swap1\n      div\n      and\n        /* \"contracts/gainzilla.sol\":4485:4512  uint256(taxRates.buyLp).add */\n      tag_393\n        /* \"contracts/gainzilla.sol\":4485:4529  uint256(taxRates.buyLp).add(taxRates.buyEco) */\n      jump\t// in\n    tag_447:\n        /* \"contracts/gainzilla.sol\":4474:4480  amount */\n      dup8\n      swap1\n        /* \"contracts/gainzilla.sol\":4474:4484  amount.mul */\n      tag_262\n        /* \"contracts/gainzilla.sol\":4474:4530  amount.mul(uint256(taxRates.buyLp).add(taxRates.buyEco)) */\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":4474:4546  amount.mul(uint256(taxRates.buyLp).add(taxRates.buyEco)).div(BP_DIVISOR) */\n    tag_445:\n        /* \"contracts/gainzilla.sol\":4467:4546  return amount.mul(uint256(taxRates.buyLp).add(taxRates.buyEco)).div(BP_DIVISOR) */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_235)\n        /* \"contracts/gainzilla.sol\":4442:4915  if (isBuy) {... */\n    tag_444:\n        /* \"contracts/gainzilla.sol\":4567:4573  isSell */\n      dup1\n        /* \"contracts/gainzilla.sol\":4563:4915  if (isSell) {... */\n      iszero\n      tag_449\n      jumpi\n        /* \"contracts/gainzilla.sol\":4636:4644  taxRates */\n      0x07\n        /* \"contracts/gainzilla.sol\":4636:4652  taxRates.sellEco */\n      sload\n        /* \"contracts/gainzilla.sol\":4596:4670  amount.mul(uint256(taxRates.sellLp).add(taxRates.sellEco)).div(BP_DIVISOR) */\n      tag_445\n      swap1\n        /* \"contracts/gainzilla.sol\":1430:1436  10_000 */\n      0x2710\n      swap1\n        /* \"contracts/gainzilla.sol\":4596:4654  amount.mul(uint256(taxRates.sellLp).add(taxRates.sellEco)) */\n      tag_259\n      swap1\n        /* \"contracts/gainzilla.sol\":4607:4653  uint256(taxRates.sellLp).add(taxRates.sellEco) */\n      tag_447\n      swap1\n        /* \"contracts/gainzilla.sol\":4636:4652  taxRates.sellEco */\n      0xffff\n      shl(0x20, 0x01)\n        /* \"contracts/gainzilla.sol\":4615:4630  taxRates.sellLp */\n      dup3\n      div\n      dup2\n      and\n      swap2\n      shl(0x30, 0x01)\n        /* \"contracts/gainzilla.sol\":4636:4652  taxRates.sellEco */\n      swap1\n      div\n      and\n        /* \"contracts/gainzilla.sol\":4607:4635  uint256(taxRates.sellLp).add */\n      tag_393\n        /* \"contracts/gainzilla.sol\":4607:4653  uint256(taxRates.sellLp).add(taxRates.sellEco) */\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":4563:4915  if (isSell) {... */\n    tag_449:\n        /* \"contracts/gainzilla.sol\":4750:4758  taxRates */\n      0x07\n        /* \"contracts/gainzilla.sol\":4750:4766  taxRates.sellEco */\n      sload\n        /* \"contracts/gainzilla.sol\":4701:4718  uint256 sellTotal */\n      0x00\n      swap1\n        /* \"contracts/gainzilla.sol\":4721:4767  uint256(taxRates.sellLp).add(taxRates.sellEco) */\n      tag_454\n      swap1\n        /* \"contracts/gainzilla.sol\":4750:4766  taxRates.sellEco */\n      0xffff\n      shl(0x20, 0x01)\n        /* \"contracts/gainzilla.sol\":4729:4744  taxRates.sellLp */\n      dup3\n      div\n      dup2\n      and\n      swap2\n      shl(0x30, 0x01)\n        /* \"contracts/gainzilla.sol\":4750:4766  taxRates.sellEco */\n      swap1\n      div\n      and\n        /* \"contracts/gainzilla.sol\":4721:4749  uint256(taxRates.sellLp).add */\n      tag_393\n        /* \"contracts/gainzilla.sol\":4721:4767  uint256(taxRates.sellLp).add(taxRates.sellEco) */\n      jump\t// in\n    tag_454:\n        /* \"contracts/gainzilla.sol\":4701:4767  uint256 sellTotal = uint256(taxRates.sellLp).add(taxRates.sellEco) */\n      swap1\n      pop\n        /* \"contracts/gainzilla.sol\":4781:4800  uint256 transferTax */\n      0x00\n        /* \"contracts/gainzilla.sol\":4803:4844  sellTotal.mul(transferMultiplier).div(10) */\n      tag_455\n        /* \"contracts/gainzilla.sol\":4841:4843  10 */\n      0x0a\n        /* \"contracts/gainzilla.sol\":4803:4836  sellTotal.mul(transferMultiplier) */\n      tag_259\n        /* \"contracts/gainzilla.sol\":4817:4835  transferMultiplier */\n      sload(0x08)\n        /* \"contracts/gainzilla.sol\":4803:4812  sellTotal */\n      dup6\n        /* \"contracts/gainzilla.sol\":4803:4816  sellTotal.mul */\n      tag_262\n      swap1\n        /* \"contracts/gainzilla.sol\":4803:4836  sellTotal.mul(transferMultiplier) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":4803:4844  sellTotal.mul(transferMultiplier).div(10) */\n    tag_455:\n        /* \"contracts/gainzilla.sol\":4781:4844  uint256 transferTax = sellTotal.mul(transferMultiplier).div(10) */\n      swap1\n      pop\n        /* \"contracts/gainzilla.sol\":4865:4904  amount.mul(transferTax).div(BP_DIVISOR) */\n      tag_457\n        /* \"contracts/gainzilla.sol\":1430:1436  10_000 */\n      0x2710\n        /* \"contracts/gainzilla.sol\":4865:4888  amount.mul(transferTax) */\n      tag_259\n        /* \"contracts/gainzilla.sol\":4865:4871  amount */\n      dup9\n        /* \"contracts/gainzilla.sol\":4781:4844  uint256 transferTax = sellTotal.mul(transferMultiplier).div(10) */\n      dup5\n        /* \"contracts/gainzilla.sol\":4865:4875  amount.mul */\n      tag_262\n        /* \"contracts/gainzilla.sol\":4865:4888  amount.mul(transferTax) */\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":4865:4904  amount.mul(transferTax).div(BP_DIVISOR) */\n    tag_457:\n        /* \"contracts/gainzilla.sol\":4858:4904  return amount.mul(transferTax).div(BP_DIVISOR) */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_235)\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_393:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2813:2820  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2844  a + b */\n      tag_235\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2843:2844  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2840  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2844  a + b */\n      tag_247\n      jump\t// in\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7456:8244  function _transfer(address from, address to, uint256 amount) internal virtual {... */\n    tag_399:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7552:7570  from != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7544:7612  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_462\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14229:14231   */\n      0x20\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7544:7612  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14211:14232   */\n      mstore\n        /* \"#utility.yul\":14268:14270   */\n      0x25\n        /* \"#utility.yul\":14248:14266   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14241:14271   */\n      mstore\n        /* \"#utility.yul\":14307:14341   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":14287:14305   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14280:14342   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":14358:14376   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":14351:14386   */\n      mstore\n        /* \"#utility.yul\":14403:14422   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7544:7612  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_228\n        /* \"#utility.yul\":14027:14428   */\n      jump\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7544:7612  require(from != address(0), \"ERC20: transfer from the zero address\") */\n    tag_462:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7630:7646  to != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7622:7686  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_465\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14635:14637   */\n      0x20\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7622:7686  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14617:14638   */\n      mstore\n        /* \"#utility.yul\":14674:14676   */\n      0x23\n        /* \"#utility.yul\":14654:14672   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14647:14677   */\n      mstore\n        /* \"#utility.yul\":14713:14747   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":14693:14711   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14686:14748   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":14764:14782   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":14757:14790   */\n      mstore\n        /* \"#utility.yul\":14807:14826   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7622:7686  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_228\n        /* \"#utility.yul\":14433:14832   */\n      jump\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7622:7686  require(to != address(0), \"ERC20: transfer to the zero address\") */\n    tag_465:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7768:7783  _balances[from] */\n      dup4\n      and\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7746:7765  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7768:7783  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7801:7822  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7793:7865  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_470\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":15039:15041   */\n      0x20\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7793:7865  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":15021:15042   */\n      mstore\n        /* \"#utility.yul\":15078:15080   */\n      0x26\n        /* \"#utility.yul\":15058:15076   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":15051:15081   */\n      mstore\n        /* \"#utility.yul\":15117:15151   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":15097:15115   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":15090:15152   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":15168:15186   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":15161:15197   */\n      mstore\n        /* \"#utility.yul\":15214:15233   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7793:7865  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_228\n        /* \"#utility.yul\":14837:15239   */\n      jump\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7793:7865  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_470:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7899:7914  _balances[from] */\n      dup5\n      dup2\n      and\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7899:7908  _balances */\n      0x00\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7899:7914  _balances[from] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7917:7937  fromBalance - amount */\n      dup8\n      dup8\n      sub\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":7899:7937  _balances[from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":8114:8127  _balances[to] */\n      swap4\n      dup8\n      and\n      dup1\n      dup4\n      mstore\n      swap2\n      dup5\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":8114:8137  _balances[to] += amount */\n      dup1\n      sload\n      dup8\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":8163:8189  Transfer(from, to, amount) */\n      swap3\n      mload\n        /* \"#utility.yul\":160:185   */\n      dup6\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":8114:8127  _balances[to] */\n      swap1\n      swap3\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":8163:8189  Transfer(from, to, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":8163:8189  Transfer(from, to, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":8200:8237  _afterTokenTransfer(from, to, amount) */\n      tag_365\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":12073:12164  function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {} */\n      jump\n        /* \"contracts/gainzilla.sol\":4928:5654  function _distributeTax(uint256 taxAmount, bool isBuy, bool isSell) private {... */\n    tag_401:\n        /* \"contracts/gainzilla.sol\":5014:5029  uint256 lpShare */\n      0x00\n        /* \"contracts/gainzilla.sol\":5039:5055  uint256 ecoShare */\n      dup1\n        /* \"contracts/gainzilla.sol\":5070:5075  isBuy */\n      dup4\n        /* \"contracts/gainzilla.sol\":5066:5488  if (isBuy) {... */\n      iszero\n      tag_477\n      jumpi\n        /* \"contracts/gainzilla.sol\":5152:5160  taxRates */\n      0x07\n        /* \"contracts/gainzilla.sol\":5152:5167  taxRates.buyEco */\n      sload\n        /* \"contracts/gainzilla.sol\":5101:5168  taxAmount.mul(taxRates.buyLp).div(taxRates.buyLp + taxRates.buyEco) */\n      tag_478\n      swap1\n        /* \"contracts/gainzilla.sol\":5135:5167  taxRates.buyLp + taxRates.buyEco */\n      tag_479\n      swap1\n        /* \"contracts/gainzilla.sol\":5152:5167  taxRates.buyEco */\n      0xffff\n      0x010000\n      dup3\n      div\n      dup2\n      and\n      swap2\n        /* \"contracts/gainzilla.sol\":5135:5149  taxRates.buyLp */\n      and\n        /* \"contracts/gainzilla.sol\":5135:5167  taxRates.buyLp + taxRates.buyEco */\n      tag_226\n      jump\t// in\n    tag_479:\n        /* \"contracts/gainzilla.sol\":5115:5123  taxRates */\n      0x07\n        /* \"contracts/gainzilla.sol\":5115:5129  taxRates.buyLp */\n      sload\n        /* \"contracts/gainzilla.sol\":5101:5168  taxAmount.mul(taxRates.buyLp).div(taxRates.buyLp + taxRates.buyEco) */\n      0xffff\n      swap2\n      dup3\n      and\n      swap2\n        /* \"contracts/gainzilla.sol\":5101:5130  taxAmount.mul(taxRates.buyLp) */\n      tag_259\n      swap2\n        /* \"contracts/gainzilla.sol\":5101:5110  taxAmount */\n      dup10\n      swap2\n        /* \"contracts/gainzilla.sol\":5115:5129  taxRates.buyLp */\n      and\n        /* \"contracts/gainzilla.sol\":5101:5114  taxAmount.mul */\n      tag_262\n        /* \"contracts/gainzilla.sol\":5101:5130  taxAmount.mul(taxRates.buyLp) */\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":5101:5168  taxAmount.mul(taxRates.buyLp).div(taxRates.buyLp + taxRates.buyEco) */\n    tag_478:\n        /* \"contracts/gainzilla.sol\":5091:5168  lpShare = taxAmount.mul(taxRates.buyLp).div(taxRates.buyLp + taxRates.buyEco) */\n      swap2\n      pop\n        /* \"contracts/gainzilla.sol\":5066:5488  if (isBuy) {... */\n      jump(tag_486)\n    tag_477:\n        /* \"contracts/gainzilla.sol\":5189:5195  isSell */\n      dup3\n        /* \"contracts/gainzilla.sol\":5185:5488  if (isSell) {... */\n      iszero\n      tag_482\n      jumpi\n        /* \"contracts/gainzilla.sol\":5274:5282  taxRates */\n      0x07\n        /* \"contracts/gainzilla.sol\":5274:5290  taxRates.sellEco */\n      sload\n        /* \"contracts/gainzilla.sol\":5221:5291  taxAmount.mul(taxRates.sellLp).div(taxRates.sellLp + taxRates.sellEco) */\n      tag_478\n      swap1\n        /* \"contracts/gainzilla.sol\":5256:5290  taxRates.sellLp + taxRates.sellEco */\n      tag_484\n      swap1\n        /* \"contracts/gainzilla.sol\":5274:5290  taxRates.sellEco */\n      0xffff\n      shl(0x30, 0x01)\n      dup3\n      div\n      dup2\n      and\n      swap2\n      shl(0x20, 0x01)\n        /* \"contracts/gainzilla.sol\":5256:5271  taxRates.sellLp */\n      swap1\n      div\n      and\n        /* \"contracts/gainzilla.sol\":5256:5290  taxRates.sellLp + taxRates.sellEco */\n      tag_226\n      jump\t// in\n    tag_484:\n        /* \"contracts/gainzilla.sol\":5235:5243  taxRates */\n      0x07\n        /* \"contracts/gainzilla.sol\":5235:5250  taxRates.sellLp */\n      sload\n        /* \"contracts/gainzilla.sol\":5221:5291  taxAmount.mul(taxRates.sellLp).div(taxRates.sellLp + taxRates.sellEco) */\n      0xffff\n      swap2\n      dup3\n      and\n      swap2\n        /* \"contracts/gainzilla.sol\":5221:5251  taxAmount.mul(taxRates.sellLp) */\n      tag_259\n      swap2\n        /* \"contracts/gainzilla.sol\":5221:5230  taxAmount */\n      dup10\n      swap2\n      shl(0x20, 0x01)\n        /* \"contracts/gainzilla.sol\":5235:5250  taxRates.sellLp */\n      swap1\n      swap2\n      div\n      and\n        /* \"contracts/gainzilla.sol\":5221:5234  taxAmount.mul */\n      tag_262\n        /* \"contracts/gainzilla.sol\":5221:5251  taxAmount.mul(taxRates.sellLp) */\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":5185:5488  if (isSell) {... */\n    tag_482:\n        /* \"contracts/gainzilla.sol\":5360:5368  taxRates */\n      0x07\n        /* \"contracts/gainzilla.sol\":5360:5376  taxRates.sellEco */\n      sload\n        /* \"contracts/gainzilla.sol\":5322:5339  uint256 sellTotal */\n      0x00\n      swap1\n        /* \"contracts/gainzilla.sol\":5342:5376  taxRates.sellLp + taxRates.sellEco */\n      tag_487\n      swap1\n        /* \"contracts/gainzilla.sol\":5360:5376  taxRates.sellEco */\n      0xffff\n      shl(0x30, 0x01)\n      dup3\n      div\n      dup2\n      and\n      swap2\n      shl(0x20, 0x01)\n        /* \"contracts/gainzilla.sol\":5342:5357  taxRates.sellLp */\n      swap1\n      div\n      and\n        /* \"contracts/gainzilla.sol\":5342:5376  taxRates.sellLp + taxRates.sellEco */\n      tag_226\n      jump\t// in\n    tag_487:\n        /* \"contracts/gainzilla.sol\":5322:5376  uint256 sellTotal = taxRates.sellLp + taxRates.sellEco */\n      0xffff\n      and\n      swap1\n      pop\n        /* \"contracts/gainzilla.sol\":5400:5477  taxAmount.mul(taxRates.sellLp).div(sellTotal).mul(transferMultiplier).div(10) */\n      tag_488\n        /* \"contracts/gainzilla.sol\":5474:5476  10 */\n      0x0a\n        /* \"contracts/gainzilla.sol\":5400:5469  taxAmount.mul(taxRates.sellLp).div(sellTotal).mul(transferMultiplier) */\n      tag_259\n        /* \"contracts/gainzilla.sol\":5450:5468  transferMultiplier */\n      sload(0x08)\n        /* \"contracts/gainzilla.sol\":5400:5445  taxAmount.mul(taxRates.sellLp).div(sellTotal) */\n      tag_260\n        /* \"contracts/gainzilla.sol\":5435:5444  sellTotal */\n      dup6\n        /* \"contracts/gainzilla.sol\":5400:5430  taxAmount.mul(taxRates.sellLp) */\n      tag_259\n        /* \"contracts/gainzilla.sol\":5414:5422  taxRates */\n      0x07\n        /* \"contracts/gainzilla.sol\":5414:5429  taxRates.sellLp */\n      0x00\n      add\n      0x04\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffff\n      and\n        /* \"contracts/gainzilla.sol\":5400:5430  taxAmount.mul(taxRates.sellLp) */\n      0xffff\n      and\n        /* \"contracts/gainzilla.sol\":5400:5409  taxAmount */\n      dup14\n        /* \"contracts/gainzilla.sol\":5400:5413  taxAmount.mul */\n      tag_262\n      swap1\n        /* \"contracts/gainzilla.sol\":5400:5430  taxAmount.mul(taxRates.sellLp) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":5400:5477  taxAmount.mul(taxRates.sellLp).div(sellTotal).mul(transferMultiplier).div(10) */\n    tag_488:\n        /* \"contracts/gainzilla.sol\":5390:5477  lpShare = taxAmount.mul(taxRates.sellLp).div(sellTotal).mul(transferMultiplier).div(10) */\n      swap3\n      pop\n        /* \"contracts/gainzilla.sol\":5308:5488  {... */\n      pop\n        /* \"contracts/gainzilla.sol\":5185:5488  if (isSell) {... */\n    tag_486:\n        /* \"contracts/gainzilla.sol\":5509:5528  taxAmount - lpShare */\n      tag_492\n        /* \"contracts/gainzilla.sol\":5521:5528  lpShare */\n      dup3\n        /* \"contracts/gainzilla.sol\":5509:5518  taxAmount */\n      dup7\n        /* \"contracts/gainzilla.sol\":5509:5528  taxAmount - lpShare */\n      tag_411\n      jump\t// in\n    tag_492:\n        /* \"contracts/gainzilla.sol\":5498:5528  ecoShare = taxAmount - lpShare */\n      swap1\n      pop\n        /* \"contracts/gainzilla.sol\":5555:5562  lpShare */\n      dup2\n        /* \"contracts/gainzilla.sol\":5538:5551  accumulatedLp */\n      0x0a\n      0x00\n        /* \"contracts/gainzilla.sol\":5538:5562  accumulatedLp += lpShare */\n      dup3\n      dup3\n      sload\n      tag_493\n      swap2\n      swap1\n      tag_247\n      jump\t// in\n    tag_493:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/gainzilla.sol\":5590:5598  ecoShare */\n      dup1\n        /* \"contracts/gainzilla.sol\":5572:5586  accumulatedEco */\n      0x0b\n      0x00\n        /* \"contracts/gainzilla.sol\":5572:5598  accumulatedEco += ecoShare */\n      dup3\n      dup3\n      sload\n      tag_494\n      swap2\n      swap1\n      tag_247\n      jump\t// in\n    tag_494:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/gainzilla.sol\":5614:5647  TaxesCollected(lpShare, ecoShare) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":15418:15443   */\n      dup4\n      dup2\n      mstore\n        /* \"#utility.yul\":15474:15476   */\n      0x20\n        /* \"#utility.yul\":15459:15477   */\n      dup2\n      add\n        /* \"#utility.yul\":15452:15486   */\n      dup4\n      swap1\n      mstore\n        /* \"contracts/gainzilla.sol\":5614:5647  TaxesCollected(lpShare, ecoShare) */\n      0xf2d9f3f00fc700757eb74f9aa3dba0e2eb1280e0c6e0cf65962cc055528d7a90\n      swap2\n        /* \"#utility.yul\":15391:15409   */\n      add\n        /* \"contracts/gainzilla.sol\":5614:5647  TaxesCollected(lpShare, ecoShare) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/gainzilla.sol\":5004:5654  {... */\n      pop\n      pop\n        /* \"contracts/gainzilla.sol\":4928:5654  function _distributeTax(uint256 taxAmount, bool isBuy, bool isSell) private {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/gainzilla.sol\":10800:10995  function _shouldSwapBack() private view returns (bool) {... */\n    tag_404:\n        /* \"contracts/gainzilla.sol\":10873:10881  swapping */\n      sload(0x0c)\n        /* \"contracts/gainzilla.sol\":10849:10853  bool */\n      0x00\n      swap1\n        /* \"contracts/gainzilla.sol\":10873:10881  swapping */\n      0xff\n      and\n        /* \"contracts/gainzilla.sol\":10872:10881  !swapping */\n      iszero\n        /* \"contracts/gainzilla.sol\":10872:10947  !swapping &&... */\n      dup1\n      iszero\n      tag_498\n      jumpi\n      pop\n        /* \"contracts/gainzilla.sol\":10934:10947  swapThreshold */\n      sload(0x09)\n        /* \"contracts/gainzilla.sol\":10915:10929  accumulatedEco */\n      sload(0x0b)\n        /* \"contracts/gainzilla.sol\":10897:10910  accumulatedLp */\n      sload(0x0a)\n        /* \"contracts/gainzilla.sol\":10897:10930  accumulatedLp.add(accumulatedEco) */\n      tag_499\n      swap2\n        /* \"contracts/gainzilla.sol\":10897:10914  accumulatedLp.add */\n      tag_393\n        /* \"contracts/gainzilla.sol\":10897:10930  accumulatedLp.add(accumulatedEco) */\n      jump\t// in\n    tag_499:\n        /* \"contracts/gainzilla.sol\":10897:10947  accumulatedLp.add(accumulatedEco) >= swapThreshold */\n      lt\n      iszero\n        /* \"contracts/gainzilla.sol\":10872:10947  !swapping &&... */\n    tag_498:\n        /* \"contracts/gainzilla.sol\":10872:10988  !swapping &&... */\n      dup1\n      iszero\n      tag_272\n      jumpi\n      pop\n      pop\n        /* \"contracts/gainzilla.sol\":10977:10988  pairAddress */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x14))\n        /* \"contracts/gainzilla.sol\":10963:10973  msg.sender */\n      caller\n        /* \"contracts/gainzilla.sol\":10963:10988  msg.sender != pairAddress */\n      eq\n      iszero\n      swap1\n        /* \"contracts/gainzilla.sol\":10800:10995  function _shouldSwapBack() private view returns (bool) {... */\n      jump\t// out\n        /* \"contracts/gainzilla.sol\":6506:7212  function _swapAndLiquify() private {... */\n    tag_407:\n        /* \"contracts/gainzilla.sol\":6551:6570  uint256 totalTokens */\n      0x00\n        /* \"contracts/gainzilla.sol\":6589:6603  accumulatedEco */\n      sload(0x0b)\n        /* \"contracts/gainzilla.sol\":6573:6586  accumulatedLp */\n      sload(0x0a)\n        /* \"contracts/gainzilla.sol\":6573:6603  accumulatedLp + accumulatedEco */\n      tag_502\n      swap2\n      swap1\n      tag_247\n      jump\t// in\n    tag_502:\n        /* \"contracts/gainzilla.sol\":6551:6603  uint256 totalTokens = accumulatedLp + accumulatedEco */\n      swap1\n      pop\n        /* \"contracts/gainzilla.sol\":6631:6644  swapThreshold */\n      sload(0x09)\n        /* \"contracts/gainzilla.sol\":6617:6628  totalTokens */\n      dup2\n        /* \"contracts/gainzilla.sol\":6617:6644  totalTokens < swapThreshold */\n      lt\n        /* \"contracts/gainzilla.sol\":6613:6653  if (totalTokens < swapThreshold) return; */\n      iszero\n      tag_503\n      jumpi\n        /* \"contracts/gainzilla.sol\":6646:6653  return; */\n      pop\n        /* \"contracts/gainzilla.sol\":6506:7212  function _swapAndLiquify() private {... */\n      jump\t// out\n        /* \"contracts/gainzilla.sol\":6613:6653  if (totalTokens < swapThreshold) return; */\n    tag_503:\n        /* \"contracts/gainzilla.sol\":6663:6671  swapping */\n      0x0c\n        /* \"contracts/gainzilla.sol\":6663:6678  swapping = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"contracts/gainzilla.sol\":6674:6678  true */\n      0x01\n        /* \"contracts/gainzilla.sol\":6663:6678  swapping = true */\n      or\n      swap1\n      sstore\n        /* \"contracts/gainzilla.sol\":6763:6777  accumulatedEco */\n      sload(0x0b)\n        /* \"contracts/gainzilla.sol\":6713:6734  address(this).balance */\n      selfbalance\n      swap1\n        /* \"contracts/gainzilla.sol\":6745:6778  _swapTokensForETH(accumulatedEco) */\n      tag_504\n      swap1\n        /* \"contracts/gainzilla.sol\":6745:6762  _swapTokensForETH */\n      tag_505\n        /* \"contracts/gainzilla.sol\":6745:6778  _swapTokensForETH(accumulatedEco) */\n      jump\t// in\n    tag_504:\n        /* \"contracts/gainzilla.sol\":6788:6802  uint256 ecoETH */\n      0x00\n        /* \"contracts/gainzilla.sol\":6805:6846  address(this).balance.sub(initialBalance) */\n      tag_506\n        /* \"contracts/gainzilla.sol\":6805:6826  address(this).balance */\n      selfbalance\n        /* \"contracts/gainzilla.sol\":6831:6845  initialBalance */\n      dup4\n        /* \"contracts/gainzilla.sol\":6805:6830  address(this).balance.sub */\n      tag_261\n        /* \"contracts/gainzilla.sol\":6805:6846  address(this).balance.sub(initialBalance) */\n      jump\t// in\n    tag_506:\n        /* \"contracts/gainzilla.sol\":6788:6846  uint256 ecoETH = address(this).balance.sub(initialBalance) */\n      swap1\n      pop\n        /* \"contracts/gainzilla.sol\":6864:6871  owner() */\n      tag_507\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":1273:1279  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n      swap1\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      jump\n        /* \"contracts/gainzilla.sol\":6864:6871  owner() */\n    tag_507:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":6856:6881  payable(owner()).transfer */\n      and\n        /* \"contracts/gainzilla.sol\":6856:6889  payable(owner()).transfer(ecoETH) */\n      0x08fc\n        /* \"contracts/gainzilla.sol\":6882:6888  ecoETH */\n      dup3\n        /* \"contracts/gainzilla.sol\":6856:6889  payable(owner()).transfer(ecoETH) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_509\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_509:\n      pop\n        /* \"contracts/gainzilla.sol\":6919:6932  accumulatedLp */\n      sload(0x0a)\n        /* \"contracts/gainzilla.sol\":6900:6916  uint256 lpTokens */\n      0x00\n        /* \"contracts/gainzilla.sol\":6957:6972  lpTokens.div(2) */\n      tag_510\n        /* \"contracts/gainzilla.sol\":6919:6932  accumulatedLp */\n      dup3\n        /* \"contracts/gainzilla.sol\":6970:6971  2 */\n      0x02\n        /* \"contracts/gainzilla.sol\":6957:6969  lpTokens.div */\n      tag_263\n        /* \"contracts/gainzilla.sol\":6957:6972  lpTokens.div(2) */\n      jump\t// in\n    tag_510:\n        /* \"contracts/gainzilla.sol\":6942:6972  uint256 half = lpTokens.div(2) */\n      swap1\n      pop\n        /* \"contracts/gainzilla.sol\":6982:7005  _swapTokensForETH(half) */\n      tag_511\n        /* \"contracts/gainzilla.sol\":7000:7004  half */\n      dup2\n        /* \"contracts/gainzilla.sol\":6982:6999  _swapTokensForETH */\n      tag_505\n        /* \"contracts/gainzilla.sol\":6982:7005  _swapTokensForETH(half) */\n      jump\t// in\n    tag_511:\n        /* \"contracts/gainzilla.sol\":7024:7037  uint256 lpETH */\n      0x00\n        /* \"contracts/gainzilla.sol\":7040:7073  address(this).balance.sub(ecoETH) */\n      tag_512\n        /* \"contracts/gainzilla.sol\":7040:7061  address(this).balance */\n      selfbalance\n        /* \"contracts/gainzilla.sol\":7066:7072  ecoETH */\n      dup6\n        /* \"contracts/gainzilla.sol\":7040:7065  address(this).balance.sub */\n      tag_261\n        /* \"contracts/gainzilla.sol\":7040:7073  address(this).balance.sub(ecoETH) */\n      jump\t// in\n    tag_512:\n        /* \"contracts/gainzilla.sol\":7024:7073  uint256 lpETH = address(this).balance.sub(ecoETH) */\n      swap1\n      pop\n        /* \"contracts/gainzilla.sol\":7083:7123  _addLiquidity(lpTokens.sub(half), lpETH) */\n      tag_513\n        /* \"contracts/gainzilla.sol\":7097:7115  lpTokens.sub(half) */\n      tag_514\n        /* \"contracts/gainzilla.sol\":7097:7105  lpTokens */\n      dup5\n        /* \"contracts/gainzilla.sol\":7110:7114  half */\n      dup5\n        /* \"contracts/gainzilla.sol\":7097:7109  lpTokens.sub */\n      tag_261\n        /* \"contracts/gainzilla.sol\":7097:7115  lpTokens.sub(half) */\n      jump\t// in\n    tag_514:\n        /* \"contracts/gainzilla.sol\":7117:7122  lpETH */\n      dup3\n        /* \"contracts/gainzilla.sol\":7083:7096  _addLiquidity */\n      tag_515\n        /* \"contracts/gainzilla.sol\":7083:7123  _addLiquidity(lpTokens.sub(half), lpETH) */\n      jump\t// in\n    tag_513:\n      pop\n      pop\n        /* \"contracts/gainzilla.sol\":7150:7151  0 */\n      0x00\n        /* \"contracts/gainzilla.sol\":7134:7147  accumulatedLp */\n      0x0a\n        /* \"contracts/gainzilla.sol\":7134:7151  accumulatedLp = 0 */\n      dup2\n      swap1\n      sstore\n        /* \"contracts/gainzilla.sol\":7161:7175  accumulatedEco */\n      0x0b\n        /* \"contracts/gainzilla.sol\":7161:7179  accumulatedEco = 0 */\n      sstore\n      pop\n      pop\n        /* \"contracts/gainzilla.sol\":7189:7197  swapping */\n      0x0c\n        /* \"contracts/gainzilla.sol\":7189:7205  swapping = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n      pop\n      pop\n        /* \"contracts/gainzilla.sol\":6506:7212  function _swapAndLiquify() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":12073:12164  function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {} */\n    tag_469:\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/gainzilla.sol\":9802:10240  function _swapTokensForETH(uint256 amount) private {... */\n    tag_505:\n        /* \"contracts/gainzilla.sol\":9887:9903  new address[](2) */\n      0x40\n      dup1\n      mload\n        /* \"contracts/gainzilla.sol\":9901:9902  2 */\n      0x02\n        /* \"contracts/gainzilla.sol\":9887:9903  new address[](2) */\n      dup1\n      dup3\n      mstore\n      0x60\n      dup3\n      add\n      dup4\n      mstore\n        /* \"contracts/gainzilla.sol\":9863:9884  address[] memory path */\n      0x00\n      swap3\n        /* \"contracts/gainzilla.sol\":9887:9903  new address[](2) */\n      0x20\n      dup4\n      add\n      swap1\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n      pop\n        /* \"contracts/gainzilla.sol\":9863:9903  address[] memory path = new address[](2) */\n      swap1\n      pop\n        /* \"contracts/gainzilla.sol\":9931:9935  this */\n      address\n        /* \"contracts/gainzilla.sol\":9913:9917  path */\n      dup2\n        /* \"contracts/gainzilla.sol\":9918:9919  0 */\n      0x00\n        /* \"contracts/gainzilla.sol\":9913:9920  path[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_524\n      jumpi\n      tag_524\n      tag_525\n      jump\t// in\n    tag_524:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":9913:9936  path[0] = address(this) */\n      swap3\n      dup4\n      and\n        /* \"contracts/gainzilla.sol\":9913:9920  path[0] */\n      0x20\n      swap2\n      dup3\n      mul\n      swap3\n      swap1\n      swap3\n      add\n      dup2\n      add\n        /* \"contracts/gainzilla.sol\":9913:9936  path[0] = address(this) */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"contracts/gainzilla.sol\":9973:9986  routerAddress */\n      sload(0x13)\n        /* \"contracts/gainzilla.sol\":9956:9994  IUniswapV2Router(routerAddress).WETH() */\n      0x40\n      dup1\n      mload\n      shl(0xe3, 0x15ab88c9)\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"contracts/gainzilla.sol\":9973:9986  routerAddress */\n      swap2\n      swap1\n      swap4\n      and\n      swap3\n        /* \"contracts/gainzilla.sol\":9956:9992  IUniswapV2Router(routerAddress).WETH */\n      0xad5c4648\n      swap3\n        /* \"contracts/gainzilla.sol\":9956:9994  IUniswapV2Router(routerAddress).WETH() */\n      0x04\n      dup1\n      dup4\n      add\n      swap4\n        /* \"contracts/gainzilla.sol\":9913:9920  path[0] */\n      swap2\n      swap3\n        /* \"contracts/gainzilla.sol\":9956:9994  IUniswapV2Router(routerAddress).WETH() */\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"contracts/gainzilla.sol\":9973:9986  routerAddress */\n      dup7\n        /* \"contracts/gainzilla.sol\":9956:9994  IUniswapV2Router(routerAddress).WETH() */\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_527\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_527:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_528\n      swap2\n      swap1\n      tag_282\n      jump\t// in\n    tag_528:\n        /* \"contracts/gainzilla.sol\":9946:9950  path */\n      dup2\n        /* \"contracts/gainzilla.sol\":9951:9952  1 */\n      0x01\n        /* \"contracts/gainzilla.sol\":9946:9953  path[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_530\n      jumpi\n      tag_530\n      tag_525\n      jump\t// in\n    tag_530:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":9946:9994  path[1] = IUniswapV2Router(routerAddress).WETH() */\n      swap3\n      dup4\n      and\n        /* \"contracts/gainzilla.sol\":9946:9953  path[1] */\n      0x20\n      swap2\n      dup3\n      mul\n      swap3\n      swap1\n      swap3\n      add\n      add\n        /* \"contracts/gainzilla.sol\":9946:9994  path[1] = IUniswapV2Router(routerAddress).WETH() */\n      mstore\n        /* \"contracts/gainzilla.sol\":10029:10042  routerAddress */\n      sload(0x13)\n        /* \"contracts/gainzilla.sol\":10005:10051  _approve(address(this), routerAddress, amount) */\n      tag_531\n      swap2\n        /* \"contracts/gainzilla.sol\":10022:10026  this */\n      address\n      swap2\n        /* \"contracts/gainzilla.sol\":10029:10042  routerAddress */\n      and\n        /* \"contracts/gainzilla.sol\":10044:10050  amount */\n      dup5\n        /* \"contracts/gainzilla.sol\":10005:10013  _approve */\n      tag_220\n        /* \"contracts/gainzilla.sol\":10005:10051  _approve(address(this), routerAddress, amount) */\n      jump\t// in\n    tag_531:\n        /* \"contracts/gainzilla.sol\":10078:10091  routerAddress */\n      sload(0x13)\n        /* \"contracts/gainzilla.sol\":10061:10233  IUniswapV2Router(routerAddress).swapExactTokensForETH(... */\n      mload(0x40)\n      shl(0xe0, 0x18cbafe5)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":10078:10091  routerAddress */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/gainzilla.sol\":10061:10114  IUniswapV2Router(routerAddress).swapExactTokensForETH */\n      0x18cbafe5\n      swap1\n        /* \"contracts/gainzilla.sol\":10061:10233  IUniswapV2Router(routerAddress).swapExactTokensForETH(... */\n      tag_532\n      swap1\n        /* \"contracts/gainzilla.sol\":10128:10134  amount */\n      dup6\n      swap1\n        /* \"contracts/gainzilla.sol\":10078:10091  routerAddress */\n      0x00\n      swap1\n        /* \"contracts/gainzilla.sol\":10163:10167  path */\n      dup7\n      swap1\n        /* \"contracts/gainzilla.sol\":10189:10193  this */\n      address\n      swap1\n        /* \"contracts/gainzilla.sol\":10208:10223  block.timestamp */\n      timestamp\n      swap1\n        /* \"contracts/gainzilla.sol\":10061:10233  IUniswapV2Router(routerAddress).swapExactTokensForETH(... */\n      0x04\n      add\n      tag_533\n      jump\t// in\n    tag_532:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_535\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_535:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      0x40\n      mstore\n      tag_469\n      swap2\n      swap1\n      dup2\n      add\n      swap1\n      tag_537\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":10246:10655  function _addLiquidity(uint256 tokenAmount, uint256 ethAmount) private {... */\n    tag_515:\n        /* \"contracts/gainzilla.sol\":10351:10364  routerAddress */\n      sload(0x13)\n        /* \"contracts/gainzilla.sol\":10327:10378  _approve(address(this), routerAddress, tokenAmount) */\n      tag_539\n      swap1\n        /* \"contracts/gainzilla.sol\":10344:10348  this */\n      address\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":10351:10364  routerAddress */\n      and\n        /* \"contracts/gainzilla.sol\":10366:10377  tokenAmount */\n      dup5\n        /* \"contracts/gainzilla.sol\":10327:10335  _approve */\n      tag_220\n        /* \"contracts/gainzilla.sol\":10327:10378  _approve(address(this), routerAddress, tokenAmount) */\n      jump\t// in\n    tag_539:\n        /* \"contracts/gainzilla.sol\":10405:10418  routerAddress */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x13))\n        /* \"contracts/gainzilla.sol\":10388:10435  IUniswapV2Router(routerAddress).addLiquidityETH */\n      0xf305d719\n        /* \"contracts/gainzilla.sol\":10443:10452  ethAmount */\n      dup3\n        /* \"contracts/gainzilla.sol\":10475:10479  this */\n      address\n        /* \"contracts/gainzilla.sol\":10494:10505  tokenAmount */\n      dup6\n        /* \"contracts/gainzilla.sol\":10405:10418  routerAddress */\n      0x00\n      dup1\n        /* \"contracts/gainzilla.sol\":10549:10556  owner() */\n      tag_540\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":1273:1279  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n      swap1\n        /* \"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      jump\n        /* \"contracts/gainzilla.sol\":10549:10556  owner() */\n    tag_540:\n        /* \"contracts/gainzilla.sol\":10388:10595  IUniswapV2Router(routerAddress).addLiquidityETH{value: ethAmount}(... */\n      mload(0x40)\n      0xe0\n      dup9\n      swap1\n      shl\n      not(sub(shl(0xe0, 0x01), 0x01))\n      and\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":18215:18230   */\n      swap6\n      dup7\n      and\n        /* \"contracts/gainzilla.sol\":10388:10595  IUniswapV2Router(routerAddress).addLiquidityETH{value: ethAmount}(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":18197:18231   */\n      mstore\n        /* \"#utility.yul\":18247:18265   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":18240:18274   */\n      swap5\n      swap1\n      swap5\n      mstore\n        /* \"#utility.yul\":18290:18308   */\n      0x44\n      dup5\n      add\n        /* \"#utility.yul\":18283:18317   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":18333:18351   */\n      0x64\n      dup4\n      add\n        /* \"#utility.yul\":18326:18360   */\n      mstore\n        /* \"#utility.yul\":18397:18412   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":18376:18395   */\n      0x84\n      dup3\n      add\n        /* \"#utility.yul\":18369:18413   */\n      mstore\n        /* \"contracts/gainzilla.sol\":10570:10585  block.timestamp */\n      timestamp\n        /* \"#utility.yul\":18429:18448   */\n      0xa4\n      dup3\n      add\n        /* \"#utility.yul\":18422:18457   */\n      mstore\n        /* \"#utility.yul\":18131:18150   */\n      0xc4\n      add\n        /* \"contracts/gainzilla.sol\":10388:10595  IUniswapV2Router(routerAddress).addLiquidityETH{value: ethAmount}(... */\n      0x60\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_544\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_544:\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_545\n      swap2\n      swap1\n      tag_546\n      jump\t// in\n    tag_545:\n      pop\n      pop\n        /* \"contracts/gainzilla.sol\":10610:10648  LiquidityAdded(tokenAmount, ethAmount) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":15418:15443   */\n      dup5\n      dup2\n      mstore\n        /* \"#utility.yul\":15474:15476   */\n      0x20\n        /* \"#utility.yul\":15459:15477   */\n      dup2\n      add\n        /* \"#utility.yul\":15452:15486   */\n      dup5\n      swap1\n      mstore\n        /* \"contracts/gainzilla.sol\":10610:10648  LiquidityAdded(tokenAmount, ethAmount) */\n      0x38f8a0c92f4c5b0b6877f878cb4c0c8d348a47b76d716c8e78f425043df9515b\n      swap3\n      pop\n        /* \"#utility.yul\":15391:15409   */\n      add\n        /* \"contracts/gainzilla.sol\":10610:10648  LiquidityAdded(tokenAmount, ethAmount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/gainzilla.sol\":10246:10655  function _addLiquidity(uint256 tokenAmount, uint256 ethAmount) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":196:614   */\n    tag_55:\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup2\n        /* \"#utility.yul\":327:348   */\n      mstore\n        /* \"#utility.yul\":308:312   */\n      0x00\n        /* \"#utility.yul\":377:383   */\n      dup3\n        /* \"#utility.yul\":371:384   */\n      mload\n        /* \"#utility.yul\":420:426   */\n      dup1\n        /* \"#utility.yul\":415:417   */\n      0x20\n        /* \"#utility.yul\":404:413   */\n      dup5\n        /* \"#utility.yul\":400:418   */\n      add\n        /* \"#utility.yul\":393:427   */\n      mstore\n        /* \"#utility.yul\":479:485   */\n      dup1\n        /* \"#utility.yul\":474:476   */\n      0x20\n        /* \"#utility.yul\":466:472   */\n      dup6\n        /* \"#utility.yul\":462:477   */\n      add\n        /* \"#utility.yul\":457:459   */\n      0x40\n        /* \"#utility.yul\":446:455   */\n      dup6\n        /* \"#utility.yul\":442:460   */\n      add\n        /* \"#utility.yul\":436:486   */\n      mcopy\n        /* \"#utility.yul\":535:536   */\n      0x00\n        /* \"#utility.yul\":530:532   */\n      0x40\n        /* \"#utility.yul\":521:527   */\n      dup3\n        /* \"#utility.yul\":510:519   */\n      dup6\n        /* \"#utility.yul\":506:528   */\n      add\n        /* \"#utility.yul\":502:533   */\n      add\n        /* \"#utility.yul\":495:537   */\n      mstore\n        /* \"#utility.yul\":605:607   */\n      0x40\n        /* \"#utility.yul\":598:600   */\n      0x1f\n        /* \"#utility.yul\":594:601   */\n      not\n        /* \"#utility.yul\":589:591   */\n      0x1f\n        /* \"#utility.yul\":581:587   */\n      dup4\n        /* \"#utility.yul\":577:592   */\n      add\n        /* \"#utility.yul\":573:602   */\n      and\n        /* \"#utility.yul\":562:571   */\n      dup5\n        /* \"#utility.yul\":558:603   */\n      add\n        /* \"#utility.yul\":554:608   */\n      add\n        /* \"#utility.yul\":546:608   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":196:614   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":619:750   */\n    tag_548:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":694:725   */\n      dup2\n      and\n        /* \"#utility.yul\":684:726   */\n      dup2\n      eq\n        /* \"#utility.yul\":674:744   */\n      tag_335\n      jumpi\n        /* \"#utility.yul\":740:741   */\n      0x00\n        /* \"#utility.yul\":737:738   */\n      dup1\n        /* \"#utility.yul\":730:742   */\n      revert\n        /* \"#utility.yul\":755:1070   */\n    tag_59:\n        /* \"#utility.yul\":823:829   */\n      0x00\n        /* \"#utility.yul\":831:837   */\n      dup1\n        /* \"#utility.yul\":884:886   */\n      0x40\n        /* \"#utility.yul\":872:881   */\n      dup4\n        /* \"#utility.yul\":863:870   */\n      dup6\n        /* \"#utility.yul\":859:882   */\n      sub\n        /* \"#utility.yul\":855:887   */\n      slt\n        /* \"#utility.yul\":852:904   */\n      iszero\n      tag_561\n      jumpi\n        /* \"#utility.yul\":900:901   */\n      0x00\n        /* \"#utility.yul\":897:898   */\n      dup1\n        /* \"#utility.yul\":890:902   */\n      revert\n        /* \"#utility.yul\":852:904   */\n    tag_561:\n        /* \"#utility.yul\":939:948   */\n      dup3\n        /* \"#utility.yul\":926:949   */\n      calldataload\n        /* \"#utility.yul\":958:989   */\n      tag_562\n        /* \"#utility.yul\":983:988   */\n      dup2\n        /* \"#utility.yul\":958:989   */\n      tag_548\n      jump\t// in\n    tag_562:\n        /* \"#utility.yul\":1008:1013   */\n      swap5\n        /* \"#utility.yul\":1060:1062   */\n      0x20\n        /* \"#utility.yul\":1045:1063   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1032:1064   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":755:1070   */\n      jump\t// out\n        /* \"#utility.yul\":1267:1426   */\n    tag_549:\n        /* \"#utility.yul\":1334:1354   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":1394:1400   */\n      0xffff\n        /* \"#utility.yul\":1383:1401   */\n      dup2\n      and\n        /* \"#utility.yul\":1373:1402   */\n      dup2\n      eq\n        /* \"#utility.yul\":1363:1420   */\n      tag_565\n      jumpi\n        /* \"#utility.yul\":1416:1417   */\n      0x00\n        /* \"#utility.yul\":1413:1414   */\n      dup1\n        /* \"#utility.yul\":1406:1418   */\n      revert\n        /* \"#utility.yul\":1363:1420   */\n    tag_565:\n        /* \"#utility.yul\":1267:1426   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1431:1832   */\n    tag_66:\n        /* \"#utility.yul\":1513:1519   */\n      0x00\n        /* \"#utility.yul\":1521:1527   */\n      dup1\n        /* \"#utility.yul\":1529:1535   */\n      0x00\n        /* \"#utility.yul\":1537:1543   */\n      dup1\n        /* \"#utility.yul\":1590:1593   */\n      0x80\n        /* \"#utility.yul\":1578:1587   */\n      dup6\n        /* \"#utility.yul\":1569:1576   */\n      dup8\n        /* \"#utility.yul\":1565:1588   */\n      sub\n        /* \"#utility.yul\":1561:1594   */\n      slt\n        /* \"#utility.yul\":1558:1611   */\n      iszero\n      tag_567\n      jumpi\n        /* \"#utility.yul\":1607:1608   */\n      0x00\n        /* \"#utility.yul\":1604:1605   */\n      dup1\n        /* \"#utility.yul\":1597:1609   */\n      revert\n        /* \"#utility.yul\":1558:1611   */\n    tag_567:\n        /* \"#utility.yul\":1630:1658   */\n      tag_568\n        /* \"#utility.yul\":1648:1657   */\n      dup6\n        /* \"#utility.yul\":1630:1658   */\n      tag_549\n      jump\t// in\n    tag_568:\n        /* \"#utility.yul\":1620:1658   */\n      swap4\n      pop\n        /* \"#utility.yul\":1677:1714   */\n      tag_569\n        /* \"#utility.yul\":1710:1712   */\n      0x20\n        /* \"#utility.yul\":1699:1708   */\n      dup7\n        /* \"#utility.yul\":1695:1713   */\n      add\n        /* \"#utility.yul\":1677:1714   */\n      tag_549\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":1667:1714   */\n      swap3\n      pop\n        /* \"#utility.yul\":1733:1770   */\n      tag_570\n        /* \"#utility.yul\":1766:1768   */\n      0x40\n        /* \"#utility.yul\":1755:1764   */\n      dup7\n        /* \"#utility.yul\":1751:1769   */\n      add\n        /* \"#utility.yul\":1733:1770   */\n      tag_549\n      jump\t// in\n    tag_570:\n        /* \"#utility.yul\":1723:1770   */\n      swap2\n      pop\n        /* \"#utility.yul\":1789:1826   */\n      tag_571\n        /* \"#utility.yul\":1822:1824   */\n      0x60\n        /* \"#utility.yul\":1811:1820   */\n      dup7\n        /* \"#utility.yul\":1807:1825   */\n      add\n        /* \"#utility.yul\":1789:1826   */\n      tag_549\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":1779:1826   */\n      swap1\n      pop\n        /* \"#utility.yul\":1431:1832   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1837:2293   */\n    tag_75:\n        /* \"#utility.yul\":1914:1920   */\n      0x00\n        /* \"#utility.yul\":1922:1928   */\n      dup1\n        /* \"#utility.yul\":1930:1936   */\n      0x00\n        /* \"#utility.yul\":1983:1985   */\n      0x60\n        /* \"#utility.yul\":1971:1980   */\n      dup5\n        /* \"#utility.yul\":1962:1969   */\n      dup7\n        /* \"#utility.yul\":1958:1981   */\n      sub\n        /* \"#utility.yul\":1954:1986   */\n      slt\n        /* \"#utility.yul\":1951:2003   */\n      iszero\n      tag_573\n      jumpi\n        /* \"#utility.yul\":1999:2000   */\n      0x00\n        /* \"#utility.yul\":1996:1997   */\n      dup1\n        /* \"#utility.yul\":1989:2001   */\n      revert\n        /* \"#utility.yul\":1951:2003   */\n    tag_573:\n        /* \"#utility.yul\":2038:2047   */\n      dup4\n        /* \"#utility.yul\":2025:2048   */\n      calldataload\n        /* \"#utility.yul\":2057:2088   */\n      tag_574\n        /* \"#utility.yul\":2082:2087   */\n      dup2\n        /* \"#utility.yul\":2057:2088   */\n      tag_548\n      jump\t// in\n    tag_574:\n        /* \"#utility.yul\":2107:2112   */\n      swap3\n      pop\n        /* \"#utility.yul\":2164:2166   */\n      0x20\n        /* \"#utility.yul\":2149:2167   */\n      dup5\n      add\n        /* \"#utility.yul\":2136:2168   */\n      calldataload\n        /* \"#utility.yul\":2177:2210   */\n      tag_575\n        /* \"#utility.yul\":2136:2168   */\n      dup2\n        /* \"#utility.yul\":2177:2210   */\n      tag_548\n      jump\t// in\n    tag_575:\n        /* \"#utility.yul\":1837:2293   */\n      swap3\n      swap6\n        /* \"#utility.yul\":2229:2236   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2283:2285   */\n      0x40\n        /* \"#utility.yul\":2268:2286   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":2255:2287   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":1837:2293   */\n      jump\t// out\n        /* \"#utility.yul\":3144:3391   */\n    tag_105:\n        /* \"#utility.yul\":3203:3209   */\n      0x00\n        /* \"#utility.yul\":3256:3258   */\n      0x20\n        /* \"#utility.yul\":3244:3253   */\n      dup3\n        /* \"#utility.yul\":3235:3242   */\n      dup5\n        /* \"#utility.yul\":3231:3254   */\n      sub\n        /* \"#utility.yul\":3227:3259   */\n      slt\n        /* \"#utility.yul\":3224:3276   */\n      iszero\n      tag_580\n      jumpi\n        /* \"#utility.yul\":3272:3273   */\n      0x00\n        /* \"#utility.yul\":3269:3270   */\n      dup1\n        /* \"#utility.yul\":3262:3274   */\n      revert\n        /* \"#utility.yul\":3224:3276   */\n    tag_580:\n        /* \"#utility.yul\":3311:3320   */\n      dup2\n        /* \"#utility.yul\":3298:3321   */\n      calldataload\n        /* \"#utility.yul\":3330:3361   */\n      tag_235\n        /* \"#utility.yul\":3355:3360   */\n      dup2\n        /* \"#utility.yul\":3330:3361   */\n      tag_548\n      jump\t// in\n        /* \"#utility.yul\":3854:4034   */\n    tag_140:\n        /* \"#utility.yul\":3913:3919   */\n      0x00\n        /* \"#utility.yul\":3966:3968   */\n      0x20\n        /* \"#utility.yul\":3954:3963   */\n      dup3\n        /* \"#utility.yul\":3945:3952   */\n      dup5\n        /* \"#utility.yul\":3941:3964   */\n      sub\n        /* \"#utility.yul\":3937:3969   */\n      slt\n        /* \"#utility.yul\":3934:3986   */\n      iszero\n      tag_585\n      jumpi\n        /* \"#utility.yul\":3982:3983   */\n      0x00\n        /* \"#utility.yul\":3979:3980   */\n      dup1\n        /* \"#utility.yul\":3972:3984   */\n      revert\n        /* \"#utility.yul\":3934:3986   */\n    tag_585:\n      pop\n        /* \"#utility.yul\":4005:4028   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":3854:4034   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4435:4595   */\n    tag_550:\n        /* \"#utility.yul\":4500:4520   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":4556:4569   */\n      dup1\n      iszero\n        /* \"#utility.yul\":4549:4570   */\n      iszero\n        /* \"#utility.yul\":4539:4571   */\n      dup2\n      eq\n        /* \"#utility.yul\":4529:4589   */\n      tag_565\n      jumpi\n        /* \"#utility.yul\":4585:4586   */\n      0x00\n        /* \"#utility.yul\":4582:4583   */\n      dup1\n        /* \"#utility.yul\":4575:4587   */\n      revert\n        /* \"#utility.yul\":4600:4915   */\n    tag_151:\n        /* \"#utility.yul\":4665:4671   */\n      0x00\n        /* \"#utility.yul\":4673:4679   */\n      dup1\n        /* \"#utility.yul\":4726:4728   */\n      0x40\n        /* \"#utility.yul\":4714:4723   */\n      dup4\n        /* \"#utility.yul\":4705:4712   */\n      dup6\n        /* \"#utility.yul\":4701:4724   */\n      sub\n        /* \"#utility.yul\":4697:4729   */\n      slt\n        /* \"#utility.yul\":4694:4746   */\n      iszero\n      tag_590\n      jumpi\n        /* \"#utility.yul\":4742:4743   */\n      0x00\n        /* \"#utility.yul\":4739:4740   */\n      dup1\n        /* \"#utility.yul\":4732:4744   */\n      revert\n        /* \"#utility.yul\":4694:4746   */\n    tag_590:\n        /* \"#utility.yul\":4781:4790   */\n      dup3\n        /* \"#utility.yul\":4768:4791   */\n      calldataload\n        /* \"#utility.yul\":4800:4831   */\n      tag_591\n        /* \"#utility.yul\":4825:4830   */\n      dup2\n        /* \"#utility.yul\":4800:4831   */\n      tag_548\n      jump\t// in\n    tag_591:\n        /* \"#utility.yul\":4850:4855   */\n      swap2\n      pop\n        /* \"#utility.yul\":4874:4909   */\n      tag_592\n        /* \"#utility.yul\":4905:4907   */\n      0x20\n        /* \"#utility.yul\":4890:4908   */\n      dup5\n      add\n        /* \"#utility.yul\":4874:4909   */\n      tag_550\n      jump\t// in\n    tag_592:\n        /* \"#utility.yul\":4864:4909   */\n      swap1\n      pop\n        /* \"#utility.yul\":4600:4915   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5419:5807   */\n    tag_192:\n        /* \"#utility.yul\":5487:5493   */\n      0x00\n        /* \"#utility.yul\":5495:5501   */\n      dup1\n        /* \"#utility.yul\":5548:5550   */\n      0x40\n        /* \"#utility.yul\":5536:5545   */\n      dup4\n        /* \"#utility.yul\":5527:5534   */\n      dup6\n        /* \"#utility.yul\":5523:5546   */\n      sub\n        /* \"#utility.yul\":5519:5551   */\n      slt\n        /* \"#utility.yul\":5516:5568   */\n      iszero\n      tag_595\n      jumpi\n        /* \"#utility.yul\":5564:5565   */\n      0x00\n        /* \"#utility.yul\":5561:5562   */\n      dup1\n        /* \"#utility.yul\":5554:5566   */\n      revert\n        /* \"#utility.yul\":5516:5568   */\n    tag_595:\n        /* \"#utility.yul\":5603:5612   */\n      dup3\n        /* \"#utility.yul\":5590:5613   */\n      calldataload\n        /* \"#utility.yul\":5622:5653   */\n      tag_596\n        /* \"#utility.yul\":5647:5652   */\n      dup2\n        /* \"#utility.yul\":5622:5653   */\n      tag_548\n      jump\t// in\n    tag_596:\n        /* \"#utility.yul\":5672:5677   */\n      swap2\n      pop\n        /* \"#utility.yul\":5729:5731   */\n      0x20\n        /* \"#utility.yul\":5714:5732   */\n      dup4\n      add\n        /* \"#utility.yul\":5701:5733   */\n      calldataload\n        /* \"#utility.yul\":5742:5775   */\n      tag_597\n        /* \"#utility.yul\":5701:5733   */\n      dup2\n        /* \"#utility.yul\":5742:5775   */\n      tag_548\n      jump\t// in\n    tag_597:\n        /* \"#utility.yul\":5794:5801   */\n      dup1\n        /* \"#utility.yul\":5784:5801   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":5419:5807   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5812:6064   */\n    tag_202:\n        /* \"#utility.yul\":5876:5882   */\n      0x00\n        /* \"#utility.yul\":5884:5890   */\n      dup1\n        /* \"#utility.yul\":5937:5939   */\n      0x40\n        /* \"#utility.yul\":5925:5934   */\n      dup4\n        /* \"#utility.yul\":5916:5923   */\n      dup6\n        /* \"#utility.yul\":5912:5935   */\n      sub\n        /* \"#utility.yul\":5908:5940   */\n      slt\n        /* \"#utility.yul\":5905:5957   */\n      iszero\n      tag_599\n      jumpi\n        /* \"#utility.yul\":5953:5954   */\n      0x00\n        /* \"#utility.yul\":5950:5951   */\n      dup1\n        /* \"#utility.yul\":5943:5955   */\n      revert\n        /* \"#utility.yul\":5905:5957   */\n    tag_599:\n        /* \"#utility.yul\":5976:6002   */\n      tag_600\n        /* \"#utility.yul\":5992:6001   */\n      dup4\n        /* \"#utility.yul\":5976:6002   */\n      tag_550\n      jump\t// in\n    tag_600:\n        /* \"#utility.yul\":5966:6002   */\n      swap2\n      pop\n        /* \"#utility.yul\":6021:6058   */\n      tag_592\n        /* \"#utility.yul\":6054:6056   */\n      0x20\n        /* \"#utility.yul\":6043:6052   */\n      dup5\n        /* \"#utility.yul\":6039:6057   */\n      add\n        /* \"#utility.yul\":6021:6058   */\n      tag_549\n      jump\t// in\n        /* \"#utility.yul\":6069:6190   */\n    tag_551:\n        /* \"#utility.yul\":6154:6164   */\n      0xffffffff\n        /* \"#utility.yul\":6147:6152   */\n      dup2\n        /* \"#utility.yul\":6143:6165   */\n      and\n        /* \"#utility.yul\":6136:6141   */\n      dup2\n        /* \"#utility.yul\":6133:6166   */\n      eq\n        /* \"#utility.yul\":6123:6184   */\n      tag_335\n      jumpi\n        /* \"#utility.yul\":6180:6181   */\n      0x00\n        /* \"#utility.yul\":6177:6178   */\n      dup1\n        /* \"#utility.yul\":6170:6182   */\n      revert\n        /* \"#utility.yul\":6195:6508   */\n    tag_207:\n        /* \"#utility.yul\":6259:6265   */\n      0x00\n        /* \"#utility.yul\":6267:6273   */\n      dup1\n        /* \"#utility.yul\":6320:6322   */\n      0x40\n        /* \"#utility.yul\":6308:6317   */\n      dup4\n        /* \"#utility.yul\":6299:6306   */\n      dup6\n        /* \"#utility.yul\":6295:6318   */\n      sub\n        /* \"#utility.yul\":6291:6323   */\n      slt\n        /* \"#utility.yul\":6288:6340   */\n      iszero\n      tag_605\n      jumpi\n        /* \"#utility.yul\":6336:6337   */\n      0x00\n        /* \"#utility.yul\":6333:6334   */\n      dup1\n        /* \"#utility.yul\":6326:6338   */\n      revert\n        /* \"#utility.yul\":6288:6340   */\n    tag_605:\n        /* \"#utility.yul\":6359:6385   */\n      tag_606\n        /* \"#utility.yul\":6375:6384   */\n      dup4\n        /* \"#utility.yul\":6359:6385   */\n      tag_550\n      jump\t// in\n    tag_606:\n        /* \"#utility.yul\":6349:6385   */\n      swap2\n      pop\n        /* \"#utility.yul\":6435:6437   */\n      0x20\n        /* \"#utility.yul\":6424:6433   */\n      dup4\n        /* \"#utility.yul\":6420:6438   */\n      add\n        /* \"#utility.yul\":6407:6439   */\n      calldataload\n        /* \"#utility.yul\":6448:6478   */\n      tag_597\n        /* \"#utility.yul\":6472:6477   */\n      dup2\n        /* \"#utility.yul\":6448:6478   */\n      tag_551\n      jump\t// in\n        /* \"#utility.yul\":6513:6893   */\n    tag_211:\n        /* \"#utility.yul\":6592:6593   */\n      0x01\n        /* \"#utility.yul\":6588:6600   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":6635:6647   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":6656:6717   */\n      tag_609\n      jumpi\n        /* \"#utility.yul\":6710:6714   */\n      0x7f\n        /* \"#utility.yul\":6702:6708   */\n      dup3\n        /* \"#utility.yul\":6698:6715   */\n      and\n        /* \"#utility.yul\":6688:6715   */\n      swap2\n      pop\n        /* \"#utility.yul\":6656:6717   */\n    tag_609:\n        /* \"#utility.yul\":6763:6765   */\n      0x20\n        /* \"#utility.yul\":6755:6761   */\n      dup3\n        /* \"#utility.yul\":6752:6766   */\n      lt\n        /* \"#utility.yul\":6732:6750   */\n      dup2\n        /* \"#utility.yul\":6729:6767   */\n      sub\n        /* \"#utility.yul\":6726:6887   */\n      tag_610\n      jumpi\n        /* \"#utility.yul\":6809:6819   */\n      0x4e487b71\n        /* \"#utility.yul\":6804:6807   */\n      0xe0\n        /* \"#utility.yul\":6800:6820   */\n      shl\n        /* \"#utility.yul\":6797:6798   */\n      0x00\n        /* \"#utility.yul\":6790:6821   */\n      mstore\n        /* \"#utility.yul\":6844:6848   */\n      0x22\n        /* \"#utility.yul\":6841:6842   */\n      0x04\n        /* \"#utility.yul\":6834:6849   */\n      mstore\n        /* \"#utility.yul\":6872:6876   */\n      0x24\n        /* \"#utility.yul\":6869:6870   */\n      0x00\n        /* \"#utility.yul\":6862:6877   */\n      revert\n        /* \"#utility.yul\":6726:6887   */\n    tag_610:\n      pop\n        /* \"#utility.yul\":6513:6893   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6898:7025   */\n    tag_552:\n        /* \"#utility.yul\":6959:6969   */\n      0x4e487b71\n        /* \"#utility.yul\":6954:6957   */\n      0xe0\n        /* \"#utility.yul\":6950:6970   */\n      shl\n        /* \"#utility.yul\":6947:6948   */\n      0x00\n        /* \"#utility.yul\":6940:6971   */\n      mstore\n        /* \"#utility.yul\":6990:6994   */\n      0x11\n        /* \"#utility.yul\":6987:6988   */\n      0x04\n        /* \"#utility.yul\":6980:6995   */\n      mstore\n        /* \"#utility.yul\":7014:7018   */\n      0x24\n        /* \"#utility.yul\":7011:7012   */\n      0x00\n        /* \"#utility.yul\":7004:7019   */\n      revert\n        /* \"#utility.yul\":7030:7198   */\n    tag_226:\n        /* \"#utility.yul\":7097:7103   */\n      0xffff\n        /* \"#utility.yul\":7123:7133   */\n      dup2\n      dup2\n      and\n        /* \"#utility.yul\":7135:7145   */\n      dup4\n      dup3\n      and\n        /* \"#utility.yul\":7119:7146   */\n      add\n      swap1\n        /* \"#utility.yul\":7158:7169   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":7155:7192   */\n      iszero\n      tag_614\n      jumpi\n        /* \"#utility.yul\":7172:7190   */\n      tag_614\n      tag_552\n      jump\t// in\n    tag_614:\n        /* \"#utility.yul\":7155:7192   */\n      pop\n        /* \"#utility.yul\":7030:7198   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7894:8019   */\n    tag_247:\n        /* \"#utility.yul\":7959:7968   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":7980:7990   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":7977:8013   */\n      iszero\n      tag_216\n      jumpi\n        /* \"#utility.yul\":7993:8011   */\n      tag_216\n      tag_552\n      jump\t// in\n        /* \"#utility.yul\":8024:8160   */\n    tag_265:\n        /* \"#utility.yul\":8059:8062   */\n      0x00\n      shl(0xff, 0x01)\n        /* \"#utility.yul\":8080:8102   */\n      dup3\n      add\n        /* \"#utility.yul\":8077:8125   */\n      tag_622\n      jumpi\n        /* \"#utility.yul\":8105:8123   */\n      tag_622\n      tag_552\n      jump\t// in\n    tag_622:\n      pop\n        /* \"#utility.yul\":8145:8146   */\n      0x00\n        /* \"#utility.yul\":8141:8154   */\n      sub\n      swap1\n        /* \"#utility.yul\":8024:8160   */\n      jump\t// out\n        /* \"#utility.yul\":8165:8353   */\n    tag_553:\n        /* \"#utility.yul\":8244:8257   */\n      dup1\n      mload\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"#utility.yul\":8286:8328   */\n      dup2\n      and\n        /* \"#utility.yul\":8276:8329   */\n      dup2\n      eq\n        /* \"#utility.yul\":8266:8347   */\n      tag_565\n      jumpi\n        /* \"#utility.yul\":8343:8344   */\n      0x00\n        /* \"#utility.yul\":8340:8341   */\n      dup1\n        /* \"#utility.yul\":8333:8345   */\n      revert\n        /* \"#utility.yul\":8358:8777   */\n    tag_278:\n        /* \"#utility.yul\":8445:8451   */\n      0x00\n        /* \"#utility.yul\":8453:8459   */\n      dup1\n        /* \"#utility.yul\":8461:8467   */\n      0x00\n        /* \"#utility.yul\":8514:8516   */\n      0x60\n        /* \"#utility.yul\":8502:8511   */\n      dup5\n        /* \"#utility.yul\":8493:8500   */\n      dup7\n        /* \"#utility.yul\":8489:8512   */\n      sub\n        /* \"#utility.yul\":8485:8517   */\n      slt\n        /* \"#utility.yul\":8482:8534   */\n      iszero\n      tag_626\n      jumpi\n        /* \"#utility.yul\":8530:8531   */\n      0x00\n        /* \"#utility.yul\":8527:8528   */\n      dup1\n        /* \"#utility.yul\":8520:8532   */\n      revert\n        /* \"#utility.yul\":8482:8534   */\n    tag_626:\n        /* \"#utility.yul\":8553:8593   */\n      tag_627\n        /* \"#utility.yul\":8583:8592   */\n      dup5\n        /* \"#utility.yul\":8553:8593   */\n      tag_553\n      jump\t// in\n    tag_627:\n        /* \"#utility.yul\":8543:8593   */\n      swap3\n      pop\n        /* \"#utility.yul\":8612:8661   */\n      tag_628\n        /* \"#utility.yul\":8657:8659   */\n      0x20\n        /* \"#utility.yul\":8646:8655   */\n      dup6\n        /* \"#utility.yul\":8642:8660   */\n      add\n        /* \"#utility.yul\":8612:8661   */\n      tag_553\n      jump\t// in\n    tag_628:\n        /* \"#utility.yul\":8602:8661   */\n      swap2\n      pop\n        /* \"#utility.yul\":8704:8706   */\n      0x40\n        /* \"#utility.yul\":8693:8702   */\n      dup5\n        /* \"#utility.yul\":8689:8707   */\n      add\n        /* \"#utility.yul\":8683:8708   */\n      mload\n        /* \"#utility.yul\":8717:8747   */\n      tag_629\n        /* \"#utility.yul\":8741:8746   */\n      dup2\n        /* \"#utility.yul\":8717:8747   */\n      tag_551\n      jump\t// in\n    tag_629:\n        /* \"#utility.yul\":8766:8771   */\n      dup1\n        /* \"#utility.yul\":8756:8771   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":8358:8777   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":8782:9033   */\n    tag_282:\n        /* \"#utility.yul\":8852:8858   */\n      0x00\n        /* \"#utility.yul\":8905:8907   */\n      0x20\n        /* \"#utility.yul\":8893:8902   */\n      dup3\n        /* \"#utility.yul\":8884:8891   */\n      dup5\n        /* \"#utility.yul\":8880:8903   */\n      sub\n        /* \"#utility.yul\":8876:8908   */\n      slt\n        /* \"#utility.yul\":8873:8925   */\n      iszero\n      tag_631\n      jumpi\n        /* \"#utility.yul\":8921:8922   */\n      0x00\n        /* \"#utility.yul\":8918:8919   */\n      dup1\n        /* \"#utility.yul\":8911:8923   */\n      revert\n        /* \"#utility.yul\":8873:8925   */\n    tag_631:\n        /* \"#utility.yul\":8953:8962   */\n      dup2\n        /* \"#utility.yul\":8947:8963   */\n      mload\n        /* \"#utility.yul\":8972:9003   */\n      tag_235\n        /* \"#utility.yul\":8997:9002   */\n      dup2\n        /* \"#utility.yul\":8972:9003   */\n      tag_548\n      jump\t// in\n        /* \"#utility.yul\":9038:9165   */\n    tag_554:\n        /* \"#utility.yul\":9099:9109   */\n      0x4e487b71\n        /* \"#utility.yul\":9094:9097   */\n      0xe0\n        /* \"#utility.yul\":9090:9110   */\n      shl\n        /* \"#utility.yul\":9087:9088   */\n      0x00\n        /* \"#utility.yul\":9080:9111   */\n      mstore\n        /* \"#utility.yul\":9130:9134   */\n      0x12\n        /* \"#utility.yul\":9127:9128   */\n      0x04\n        /* \"#utility.yul\":9120:9135   */\n      mstore\n        /* \"#utility.yul\":9154:9158   */\n      0x24\n        /* \"#utility.yul\":9151:9152   */\n      0x00\n        /* \"#utility.yul\":9144:9159   */\n      revert\n        /* \"#utility.yul\":9170:9282   */\n    tag_304:\n        /* \"#utility.yul\":9202:9203   */\n      0x00\n        /* \"#utility.yul\":9228:9229   */\n      dup3\n        /* \"#utility.yul\":9218:9253   */\n      tag_636\n      jumpi\n        /* \"#utility.yul\":9233:9251   */\n      tag_636\n      tag_554\n      jump\t// in\n    tag_636:\n      pop\n        /* \"#utility.yul\":9267:9276   */\n      mod\n      swap1\n        /* \"#utility.yul\":9170:9282   */\n      jump\t// out\n        /* \"#utility.yul\":10100:10349   */\n    tag_343:\n        /* \"#utility.yul\":10171:10181   */\n      0xffffffff\n        /* \"#utility.yul\":10213:10223   */\n      dup2\n      dup2\n      and\n        /* \"#utility.yul\":10225:10235   */\n      dup4\n      dup3\n      and\n        /* \"#utility.yul\":10209:10236   */\n      mul\n        /* \"#utility.yul\":10256:10276   */\n      dup1\n      dup3\n      and\n      swap2\n        /* \"#utility.yul\":10171:10181   */\n      swap1\n        /* \"#utility.yul\":10295:10319   */\n      dup3\n      dup2\n      eq\n        /* \"#utility.yul\":10285:10343   */\n      tag_641\n      jumpi\n        /* \"#utility.yul\":10323:10341   */\n      tag_641\n      tag_552\n      jump\t// in\n    tag_641:\n        /* \"#utility.yul\":10285:10343   */\n      pop\n      pop\n        /* \"#utility.yul\":10100:10349   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13287:13415   */\n    tag_411:\n        /* \"#utility.yul\":13354:13363   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":13375:13386   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":13372:13409   */\n      iszero\n      tag_216\n      jumpi\n        /* \"#utility.yul\":13389:13407   */\n      tag_216\n      tag_552\n      jump\t// in\n        /* \"#utility.yul\":13420:13588   */\n    tag_414:\n        /* \"#utility.yul\":13493:13502   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":13524:13533   */\n      dup2\n      iszero\n        /* \"#utility.yul\":13541:13556   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":13535:13557   */\n      dup5\n      eq\n        /* \"#utility.yul\":13521:13558   */\n      or\n        /* \"#utility.yul\":13511:13582   */\n      tag_216\n      jumpi\n        /* \"#utility.yul\":13562:13580   */\n      tag_216\n      tag_552\n      jump\t// in\n        /* \"#utility.yul\":13593:13713   */\n    tag_417:\n        /* \"#utility.yul\":13633:13634   */\n      0x00\n        /* \"#utility.yul\":13659:13660   */\n      dup3\n        /* \"#utility.yul\":13649:13684   */\n      tag_658\n      jumpi\n        /* \"#utility.yul\":13664:13682   */\n      tag_658\n      tag_554\n      jump\t// in\n    tag_658:\n      pop\n        /* \"#utility.yul\":13698:13707   */\n      div\n      swap1\n        /* \"#utility.yul\":13593:13713   */\n      jump\t// out\n        /* \"#utility.yul\":15497:15624   */\n    tag_521:\n        /* \"#utility.yul\":15558:15568   */\n      0x4e487b71\n        /* \"#utility.yul\":15553:15556   */\n      0xe0\n        /* \"#utility.yul\":15549:15569   */\n      shl\n        /* \"#utility.yul\":15546:15547   */\n      0x00\n        /* \"#utility.yul\":15539:15570   */\n      mstore\n        /* \"#utility.yul\":15589:15593   */\n      0x41\n        /* \"#utility.yul\":15586:15587   */\n      0x04\n        /* \"#utility.yul\":15579:15594   */\n      mstore\n        /* \"#utility.yul\":15613:15617   */\n      0x24\n        /* \"#utility.yul\":15610:15611   */\n      0x00\n        /* \"#utility.yul\":15603:15618   */\n      revert\n        /* \"#utility.yul\":15629:15756   */\n    tag_525:\n        /* \"#utility.yul\":15690:15700   */\n      0x4e487b71\n        /* \"#utility.yul\":15685:15688   */\n      0xe0\n        /* \"#utility.yul\":15681:15701   */\n      shl\n        /* \"#utility.yul\":15678:15679   */\n      0x00\n        /* \"#utility.yul\":15671:15702   */\n      mstore\n        /* \"#utility.yul\":15721:15725   */\n      0x32\n        /* \"#utility.yul\":15718:15719   */\n      0x04\n        /* \"#utility.yul\":15711:15726   */\n      mstore\n        /* \"#utility.yul\":15745:15749   */\n      0x24\n        /* \"#utility.yul\":15742:15743   */\n      0x00\n        /* \"#utility.yul\":15735:15750   */\n      revert\n        /* \"#utility.yul\":15761:16741   */\n    tag_533:\n        /* \"#utility.yul\":16023:16027   */\n      0x00\n        /* \"#utility.yul\":16071:16074   */\n      0xa0\n        /* \"#utility.yul\":16060:16069   */\n      dup3\n        /* \"#utility.yul\":16056:16075   */\n      add\n        /* \"#utility.yul\":16102:16108   */\n      dup8\n        /* \"#utility.yul\":16091:16100   */\n      dup4\n        /* \"#utility.yul\":16084:16109   */\n      mstore\n        /* \"#utility.yul\":16128:16130   */\n      0x20\n        /* \"#utility.yul\":16166:16172   */\n      dup8\n        /* \"#utility.yul\":16161:16163   */\n      0x20\n        /* \"#utility.yul\":16150:16159   */\n      dup6\n        /* \"#utility.yul\":16146:16164   */\n      add\n        /* \"#utility.yul\":16139:16173   */\n      mstore\n        /* \"#utility.yul\":16209:16212   */\n      0xa0\n        /* \"#utility.yul\":16204:16206   */\n      0x40\n        /* \"#utility.yul\":16193:16202   */\n      dup6\n        /* \"#utility.yul\":16189:16207   */\n      add\n        /* \"#utility.yul\":16182:16213   */\n      mstore\n        /* \"#utility.yul\":16233:16239   */\n      dup2\n        /* \"#utility.yul\":16268:16274   */\n      dup8\n        /* \"#utility.yul\":16262:16275   */\n      mload\n        /* \"#utility.yul\":16299:16305   */\n      dup1\n        /* \"#utility.yul\":16291:16297   */\n      dup5\n        /* \"#utility.yul\":16284:16306   */\n      mstore\n        /* \"#utility.yul\":16337:16340   */\n      0xc0\n        /* \"#utility.yul\":16326:16335   */\n      dup7\n        /* \"#utility.yul\":16322:16341   */\n      add\n        /* \"#utility.yul\":16315:16341   */\n      swap2\n      pop\n        /* \"#utility.yul\":16376:16378   */\n      0x20\n        /* \"#utility.yul\":16368:16374   */\n      dup10\n        /* \"#utility.yul\":16364:16379   */\n      add\n        /* \"#utility.yul\":16350:16379   */\n      swap4\n      pop\n        /* \"#utility.yul\":16397:16398   */\n      0x00\n        /* \"#utility.yul\":16407:16602   */\n    tag_667:\n        /* \"#utility.yul\":16421:16427   */\n      dup2\n        /* \"#utility.yul\":16418:16419   */\n      dup2\n        /* \"#utility.yul\":16415:16428   */\n      lt\n        /* \"#utility.yul\":16407:16602   */\n      iszero\n      tag_669\n      jumpi\n        /* \"#utility.yul\":16486:16499   */\n      dup5\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":16482:16521   */\n      and\n        /* \"#utility.yul\":16470:16522   */\n      dup4\n      mstore\n        /* \"#utility.yul\":16577:16592   */\n      swap4\n      dup4\n      add\n      swap4\n        /* \"#utility.yul\":16542:16554   */\n      swap2\n      dup4\n      add\n      swap2\n        /* \"#utility.yul\":16518:16519   */\n      0x01\n        /* \"#utility.yul\":16436:16445   */\n      add\n        /* \"#utility.yul\":16407:16602   */\n      jump(tag_667)\n    tag_669:\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":16658:16690   */\n      swap7\n      swap1\n      swap7\n      and\n        /* \"#utility.yul\":16653:16655   */\n      0x60\n        /* \"#utility.yul\":16638:16656   */\n      dup6\n      add\n        /* \"#utility.yul\":16631:16691   */\n      mstore\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":16722:16725   */\n      0x80\n        /* \"#utility.yul\":16707:16726   */\n      add\n        /* \"#utility.yul\":16700:16735   */\n      mstore\n        /* \"#utility.yul\":16619:16622   */\n      swap4\n        /* \"#utility.yul\":15761:16741   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16746:17851   */\n    tag_537:\n        /* \"#utility.yul\":16841:16847   */\n      0x00\n        /* \"#utility.yul\":16872:16874   */\n      0x20\n        /* \"#utility.yul\":16915:16917   */\n      dup1\n        /* \"#utility.yul\":16903:16912   */\n      dup4\n        /* \"#utility.yul\":16894:16901   */\n      dup6\n        /* \"#utility.yul\":16890:16913   */\n      sub\n        /* \"#utility.yul\":16886:16918   */\n      slt\n        /* \"#utility.yul\":16883:16935   */\n      iszero\n      tag_671\n      jumpi\n        /* \"#utility.yul\":16931:16932   */\n      0x00\n        /* \"#utility.yul\":16928:16929   */\n      dup1\n        /* \"#utility.yul\":16921:16933   */\n      revert\n        /* \"#utility.yul\":16883:16935   */\n    tag_671:\n        /* \"#utility.yul\":16964:16973   */\n      dup3\n        /* \"#utility.yul\":16958:16974   */\n      mload\n        /* \"#utility.yul\":16993:17011   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":17034:17036   */\n      dup1\n        /* \"#utility.yul\":17026:17032   */\n      dup3\n        /* \"#utility.yul\":17023:17037   */\n      gt\n        /* \"#utility.yul\":17020:17054   */\n      iszero\n      tag_672\n      jumpi\n        /* \"#utility.yul\":17050:17051   */\n      0x00\n        /* \"#utility.yul\":17047:17048   */\n      dup1\n        /* \"#utility.yul\":17040:17052   */\n      revert\n        /* \"#utility.yul\":17020:17054   */\n    tag_672:\n        /* \"#utility.yul\":17088:17094   */\n      dup2\n        /* \"#utility.yul\":17077:17086   */\n      dup6\n        /* \"#utility.yul\":17073:17095   */\n      add\n        /* \"#utility.yul\":17063:17095   */\n      swap2\n      pop\n        /* \"#utility.yul\":17133:17140   */\n      dup6\n        /* \"#utility.yul\":17126:17130   */\n      0x1f\n        /* \"#utility.yul\":17122:17124   */\n      dup4\n        /* \"#utility.yul\":17118:17131   */\n      add\n        /* \"#utility.yul\":17114:17141   */\n      slt\n        /* \"#utility.yul\":17104:17159   */\n      tag_673\n      jumpi\n        /* \"#utility.yul\":17155:17156   */\n      0x00\n        /* \"#utility.yul\":17152:17153   */\n      dup1\n        /* \"#utility.yul\":17145:17157   */\n      revert\n        /* \"#utility.yul\":17104:17159   */\n    tag_673:\n        /* \"#utility.yul\":17184:17186   */\n      dup2\n        /* \"#utility.yul\":17178:17187   */\n      mload\n        /* \"#utility.yul\":17206:17208   */\n      dup2\n        /* \"#utility.yul\":17202:17204   */\n      dup2\n        /* \"#utility.yul\":17199:17209   */\n      gt\n        /* \"#utility.yul\":17196:17232   */\n      iszero\n      tag_675\n      jumpi\n        /* \"#utility.yul\":17212:17230   */\n      tag_675\n      tag_521\n      jump\t// in\n    tag_675:\n        /* \"#utility.yul\":17258:17260   */\n      dup1\n        /* \"#utility.yul\":17255:17256   */\n      0x05\n        /* \"#utility.yul\":17251:17261   */\n      shl\n        /* \"#utility.yul\":17290:17292   */\n      0x40\n        /* \"#utility.yul\":17284:17293   */\n      mload\n        /* \"#utility.yul\":17353:17355   */\n      0x1f\n        /* \"#utility.yul\":17349:17356   */\n      not\n        /* \"#utility.yul\":17344:17346   */\n      0x3f\n        /* \"#utility.yul\":17340:17342   */\n      dup4\n        /* \"#utility.yul\":17336:17347   */\n      add\n        /* \"#utility.yul\":17332:17357   */\n      and\n        /* \"#utility.yul\":17324:17330   */\n      dup2\n        /* \"#utility.yul\":17320:17358   */\n      add\n        /* \"#utility.yul\":17408:17414   */\n      dup2\n        /* \"#utility.yul\":17396:17406   */\n      dup2\n        /* \"#utility.yul\":17393:17415   */\n      lt\n        /* \"#utility.yul\":17388:17390   */\n      dup6\n        /* \"#utility.yul\":17376:17386   */\n      dup3\n        /* \"#utility.yul\":17373:17391   */\n      gt\n        /* \"#utility.yul\":17370:17416   */\n      or\n        /* \"#utility.yul\":17367:17439   */\n      iszero\n      tag_677\n      jumpi\n        /* \"#utility.yul\":17419:17437   */\n      tag_677\n      tag_521\n      jump\t// in\n    tag_677:\n        /* \"#utility.yul\":17455:17457   */\n      0x40\n        /* \"#utility.yul\":17448:17470   */\n      mstore\n        /* \"#utility.yul\":17505:17523   */\n      swap2\n      dup3\n      mstore\n        /* \"#utility.yul\":17539:17554   */\n      dup5\n      dup3\n      add\n      swap3\n      pop\n        /* \"#utility.yul\":17581:17592   */\n      dup4\n      dup2\n      add\n        /* \"#utility.yul\":17577:17597   */\n      dup6\n      add\n      swap2\n        /* \"#utility.yul\":17609:17628   */\n      dup9\n      dup4\n      gt\n        /* \"#utility.yul\":17606:17645   */\n      iszero\n      tag_678\n      jumpi\n        /* \"#utility.yul\":17641:17642   */\n      0x00\n        /* \"#utility.yul\":17638:17639   */\n      dup1\n        /* \"#utility.yul\":17631:17643   */\n      revert\n        /* \"#utility.yul\":17606:17645   */\n    tag_678:\n        /* \"#utility.yul\":17665:17676   */\n      swap4\n      dup6\n      add\n      swap4\n        /* \"#utility.yul\":17685:17820   */\n    tag_679:\n        /* \"#utility.yul\":17701:17707   */\n      dup3\n        /* \"#utility.yul\":17696:17699   */\n      dup6\n        /* \"#utility.yul\":17693:17708   */\n      lt\n        /* \"#utility.yul\":17685:17820   */\n      iszero\n      tag_681\n      jumpi\n        /* \"#utility.yul\":17767:17777   */\n      dup5\n      mload\n        /* \"#utility.yul\":17755:17778   */\n      dup5\n      mstore\n        /* \"#utility.yul\":17718:17730   */\n      swap4\n      dup6\n      add\n      swap4\n        /* \"#utility.yul\":17798:17810   */\n      swap3\n      dup6\n      add\n      swap3\n        /* \"#utility.yul\":17685:17820   */\n      jump(tag_679)\n    tag_681:\n        /* \"#utility.yul\":17839:17845   */\n      swap9\n        /* \"#utility.yul\":16746:17851   */\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18468:18774   */\n    tag_546:\n        /* \"#utility.yul\":18556:18562   */\n      0x00\n        /* \"#utility.yul\":18564:18570   */\n      dup1\n        /* \"#utility.yul\":18572:18578   */\n      0x00\n        /* \"#utility.yul\":18625:18627   */\n      0x60\n        /* \"#utility.yul\":18613:18622   */\n      dup5\n        /* \"#utility.yul\":18604:18611   */\n      dup7\n        /* \"#utility.yul\":18600:18623   */\n      sub\n        /* \"#utility.yul\":18596:18628   */\n      slt\n        /* \"#utility.yul\":18593:18645   */\n      iszero\n      tag_684\n      jumpi\n        /* \"#utility.yul\":18641:18642   */\n      0x00\n        /* \"#utility.yul\":18638:18639   */\n      dup1\n        /* \"#utility.yul\":18631:18643   */\n      revert\n        /* \"#utility.yul\":18593:18645   */\n    tag_684:\n        /* \"#utility.yul\":18670:18679   */\n      dup4\n        /* \"#utility.yul\":18664:18680   */\n      mload\n        /* \"#utility.yul\":18654:18680   */\n      swap3\n      pop\n        /* \"#utility.yul\":18720:18722   */\n      0x20\n        /* \"#utility.yul\":18709:18718   */\n      dup5\n        /* \"#utility.yul\":18705:18723   */\n      add\n        /* \"#utility.yul\":18699:18724   */\n      mload\n        /* \"#utility.yul\":18689:18724   */\n      swap2\n      pop\n        /* \"#utility.yul\":18764:18766   */\n      0x40\n        /* \"#utility.yul\":18753:18762   */\n      dup5\n        /* \"#utility.yul\":18749:18767   */\n      add\n        /* \"#utility.yul\":18743:18768   */\n      mload\n        /* \"#utility.yul\":18733:18768   */\n      swap1\n      pop\n        /* \"#utility.yul\":18468:18774   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n\n    auxdata: 0xa264697066735822122058ff80e09a44ac810eca1f7ec706d8a9e4d48933c73aacb957ac449dba91ca2564736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1367": {
									"entryPoint": null,
									"id": 1367,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_335": {
									"entryPoint": null,
									"id": 335,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_469": {
									"entryPoint": null,
									"id": 469,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_afterTokenTransfer_1010": {
									"entryPoint": null,
									"id": 1010,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_999": {
									"entryPoint": 1005,
									"id": 999,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_mint_828": {
									"entryPoint": 421,
									"id": 828,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1126": {
									"entryPoint": 336,
									"id": 1126,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_setupPair_2250": {
									"entryPoint": 614,
									"id": 2250,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_423": {
									"entryPoint": 340,
									"id": 423,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 1420,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1383,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 1010,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 1117,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1192,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 1061,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 1041,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:4293:7",
										"nodeType": "YulBlock",
										"src": "0:4293:7",
										"statements": [
											{
												"nativeSrc": "6:3:7",
												"nodeType": "YulBlock",
												"src": "6:3:7",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "60:171:7",
													"nodeType": "YulBlock",
													"src": "60:171:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "91:111:7",
																"nodeType": "YulBlock",
																"src": "91:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "112:1:7",
																					"nodeType": "YulLiteral",
																					"src": "112:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "119:3:7",
																							"nodeType": "YulLiteral",
																							"src": "119:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "124:10:7",
																							"nodeType": "YulLiteral",
																							"src": "124:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "115:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "115:3:7"
																					},
																					"nativeSrc": "115:20:7",
																					"nodeType": "YulFunctionCall",
																					"src": "115:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "105:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "105:6:7"
																			},
																			"nativeSrc": "105:31:7",
																			"nodeType": "YulFunctionCall",
																			"src": "105:31:7"
																		},
																		"nativeSrc": "105:31:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "105:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "156:1:7",
																					"nodeType": "YulLiteral",
																					"src": "156:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "159:4:7",
																					"nodeType": "YulLiteral",
																					"src": "159:4:7",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "149:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "149:6:7"
																			},
																			"nativeSrc": "149:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "149:15:7"
																		},
																		"nativeSrc": "149:15:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "149:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "184:1:7",
																					"nodeType": "YulLiteral",
																					"src": "184:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "187:4:7",
																					"nodeType": "YulLiteral",
																					"src": "187:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "177:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "177:6:7"
																			},
																			"nativeSrc": "177:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "177:15:7"
																		},
																		"nativeSrc": "177:15:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "177:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "80:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "80:1:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "73:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "73:6:7"
																},
																"nativeSrc": "73:9:7",
																"nodeType": "YulFunctionCall",
																"src": "73:9:7"
															},
															"nativeSrc": "70:132:7",
															"nodeType": "YulIf",
															"src": "70:132:7"
														},
														{
															"nativeSrc": "211:14:7",
															"nodeType": "YulAssignment",
															"src": "211:14:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "220:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "220:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "223:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "223:1:7"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "216:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "216:3:7"
																},
																"nativeSrc": "216:9:7",
																"nodeType": "YulFunctionCall",
																"src": "216:9:7"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "211:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "211:1:7"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "14:217:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "45:1:7",
														"nodeType": "YulTypedName",
														"src": "45:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "48:1:7",
														"nodeType": "YulTypedName",
														"src": "48:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "54:1:7",
														"nodeType": "YulTypedName",
														"src": "54:1:7",
														"type": ""
													}
												],
												"src": "14:217:7"
											},
											{
												"body": {
													"nativeSrc": "268:95:7",
													"nodeType": "YulBlock",
													"src": "268:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "285:1:7",
																		"nodeType": "YulLiteral",
																		"src": "285:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "292:3:7",
																				"nodeType": "YulLiteral",
																				"src": "292:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "297:10:7",
																				"nodeType": "YulLiteral",
																				"src": "297:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "288:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "288:3:7"
																		},
																		"nativeSrc": "288:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "288:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "278:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "278:6:7"
																},
																"nativeSrc": "278:31:7",
																"nodeType": "YulFunctionCall",
																"src": "278:31:7"
															},
															"nativeSrc": "278:31:7",
															"nodeType": "YulExpressionStatement",
															"src": "278:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "325:1:7",
																		"nodeType": "YulLiteral",
																		"src": "325:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "328:4:7",
																		"nodeType": "YulLiteral",
																		"src": "328:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "318:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "318:6:7"
																},
																"nativeSrc": "318:15:7",
																"nodeType": "YulFunctionCall",
																"src": "318:15:7"
															},
															"nativeSrc": "318:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "318:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "349:1:7",
																		"nodeType": "YulLiteral",
																		"src": "349:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "352:4:7",
																		"nodeType": "YulLiteral",
																		"src": "352:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "342:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "342:6:7"
																},
																"nativeSrc": "342:15:7",
																"nodeType": "YulFunctionCall",
																"src": "342:15:7"
															},
															"nativeSrc": "342:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "342:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "236:127:7",
												"nodeType": "YulFunctionDefinition",
												"src": "236:127:7"
											},
											{
												"body": {
													"nativeSrc": "423:325:7",
													"nodeType": "YulBlock",
													"src": "423:325:7",
													"statements": [
														{
															"nativeSrc": "433:22:7",
															"nodeType": "YulAssignment",
															"src": "433:22:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "447:1:7",
																		"nodeType": "YulLiteral",
																		"src": "447:1:7",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "450:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "450:4:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "443:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "443:3:7"
																},
																"nativeSrc": "443:12:7",
																"nodeType": "YulFunctionCall",
																"src": "443:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "433:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:7"
																}
															]
														},
														{
															"nativeSrc": "464:38:7",
															"nodeType": "YulVariableDeclaration",
															"src": "464:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "494:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "494:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "500:1:7",
																		"nodeType": "YulLiteral",
																		"src": "500:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "490:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "490:3:7"
																},
																"nativeSrc": "490:12:7",
																"nodeType": "YulFunctionCall",
																"src": "490:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "468:18:7",
																	"nodeType": "YulTypedName",
																	"src": "468:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "541:31:7",
																"nodeType": "YulBlock",
																"src": "541:31:7",
																"statements": [
																	{
																		"nativeSrc": "543:27:7",
																		"nodeType": "YulAssignment",
																		"src": "543:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "557:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "557:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "565:4:7",
																					"nodeType": "YulLiteral",
																					"src": "565:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "553:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "553:3:7"
																			},
																			"nativeSrc": "553:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "553:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "543:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "543:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "521:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "521:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "514:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "514:6:7"
																},
																"nativeSrc": "514:26:7",
																"nodeType": "YulFunctionCall",
																"src": "514:26:7"
															},
															"nativeSrc": "511:61:7",
															"nodeType": "YulIf",
															"src": "511:61:7"
														},
														{
															"body": {
																"nativeSrc": "631:111:7",
																"nodeType": "YulBlock",
																"src": "631:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "652:1:7",
																					"nodeType": "YulLiteral",
																					"src": "652:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "659:3:7",
																							"nodeType": "YulLiteral",
																							"src": "659:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "664:10:7",
																							"nodeType": "YulLiteral",
																							"src": "664:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "655:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "655:3:7"
																					},
																					"nativeSrc": "655:20:7",
																					"nodeType": "YulFunctionCall",
																					"src": "655:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "645:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "645:6:7"
																			},
																			"nativeSrc": "645:31:7",
																			"nodeType": "YulFunctionCall",
																			"src": "645:31:7"
																		},
																		"nativeSrc": "645:31:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "645:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "696:1:7",
																					"nodeType": "YulLiteral",
																					"src": "696:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "699:4:7",
																					"nodeType": "YulLiteral",
																					"src": "699:4:7",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "689:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "689:6:7"
																			},
																			"nativeSrc": "689:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "689:15:7"
																		},
																		"nativeSrc": "689:15:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "689:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "724:1:7",
																					"nodeType": "YulLiteral",
																					"src": "724:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "727:4:7",
																					"nodeType": "YulLiteral",
																					"src": "727:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "717:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "717:6:7"
																			},
																			"nativeSrc": "717:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "717:15:7"
																		},
																		"nativeSrc": "717:15:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "717:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "587:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "587:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "610:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "610:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "618:2:7",
																				"nodeType": "YulLiteral",
																				"src": "618:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "607:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "607:2:7"
																		},
																		"nativeSrc": "607:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "607:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "584:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "584:2:7"
																},
																"nativeSrc": "584:38:7",
																"nodeType": "YulFunctionCall",
																"src": "584:38:7"
															},
															"nativeSrc": "581:161:7",
															"nodeType": "YulIf",
															"src": "581:161:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "368:380:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "403:4:7",
														"nodeType": "YulTypedName",
														"src": "403:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "412:6:7",
														"nodeType": "YulTypedName",
														"src": "412:6:7",
														"type": ""
													}
												],
												"src": "368:380:7"
											},
											{
												"body": {
													"nativeSrc": "809:65:7",
													"nodeType": "YulBlock",
													"src": "809:65:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "826:1:7",
																		"nodeType": "YulLiteral",
																		"src": "826:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "829:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "829:3:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "819:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "819:6:7"
																},
																"nativeSrc": "819:14:7",
																"nodeType": "YulFunctionCall",
																"src": "819:14:7"
															},
															"nativeSrc": "819:14:7",
															"nodeType": "YulExpressionStatement",
															"src": "819:14:7"
														},
														{
															"nativeSrc": "842:26:7",
															"nodeType": "YulAssignment",
															"src": "842:26:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "860:1:7",
																		"nodeType": "YulLiteral",
																		"src": "860:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "863:4:7",
																		"nodeType": "YulLiteral",
																		"src": "863:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "850:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "850:9:7"
																},
																"nativeSrc": "850:18:7",
																"nodeType": "YulFunctionCall",
																"src": "850:18:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "842:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "842:4:7"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "753:121:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "792:3:7",
														"nodeType": "YulTypedName",
														"src": "792:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "800:4:7",
														"nodeType": "YulTypedName",
														"src": "800:4:7",
														"type": ""
													}
												],
												"src": "753:121:7"
											},
											{
												"body": {
													"nativeSrc": "960:437:7",
													"nodeType": "YulBlock",
													"src": "960:437:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "993:398:7",
																"nodeType": "YulBlock",
																"src": "993:398:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1014:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1014:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "1017:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "1017:5:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1007:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1007:6:7"
																			},
																			"nativeSrc": "1007:16:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1007:16:7"
																		},
																		"nativeSrc": "1007:16:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1007:16:7"
																	},
																	{
																		"nativeSrc": "1036:30:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1036:30:7",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1058:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1058:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1061:4:7",
																					"nodeType": "YulLiteral",
																					"src": "1061:4:7",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "1048:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1048:9:7"
																			},
																			"nativeSrc": "1048:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1048:18:7"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "1040:4:7",
																				"nodeType": "YulTypedName",
																				"src": "1040:4:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1079:57:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1079:57:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "1102:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "1102:4:7"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1112:1:7",
																							"nodeType": "YulLiteral",
																							"src": "1112:1:7",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "1119:10:7",
																									"nodeType": "YulIdentifier",
																									"src": "1119:10:7"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "1131:2:7",
																									"nodeType": "YulLiteral",
																									"src": "1131:2:7",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1115:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "1115:3:7"
																							},
																							"nativeSrc": "1115:19:7",
																							"nodeType": "YulFunctionCall",
																							"src": "1115:19:7"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "1108:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "1108:3:7"
																					},
																					"nativeSrc": "1108:27:7",
																					"nodeType": "YulFunctionCall",
																					"src": "1108:27:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1098:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "1098:3:7"
																			},
																			"nativeSrc": "1098:38:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1098:38:7"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "1083:11:7",
																				"nodeType": "YulTypedName",
																				"src": "1083:11:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "1173:23:7",
																			"nodeType": "YulBlock",
																			"src": "1173:23:7",
																			"statements": [
																				{
																					"nativeSrc": "1175:19:7",
																					"nodeType": "YulAssignment",
																					"src": "1175:19:7",
																					"value": {
																						"name": "data",
																						"nativeSrc": "1190:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "1190:4:7"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "1175:11:7",
																							"nodeType": "YulIdentifier",
																							"src": "1175:11:7"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "1155:10:7",
																					"nodeType": "YulIdentifier",
																					"src": "1155:10:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1167:4:7",
																					"nodeType": "YulLiteral",
																					"src": "1167:4:7",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "1152:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "1152:2:7"
																			},
																			"nativeSrc": "1152:20:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1152:20:7"
																		},
																		"nativeSrc": "1149:47:7",
																		"nodeType": "YulIf",
																		"src": "1149:47:7"
																	},
																	{
																		"nativeSrc": "1209:41:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1209:41:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "1223:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "1223:4:7"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1233:1:7",
																							"nodeType": "YulLiteral",
																							"src": "1233:1:7",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "1240:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "1240:3:7"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "1245:2:7",
																									"nodeType": "YulLiteral",
																									"src": "1245:2:7",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1236:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "1236:3:7"
																							},
																							"nativeSrc": "1236:12:7",
																							"nodeType": "YulFunctionCall",
																							"src": "1236:12:7"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "1229:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "1229:3:7"
																					},
																					"nativeSrc": "1229:20:7",
																					"nodeType": "YulFunctionCall",
																					"src": "1229:20:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1219:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "1219:3:7"
																			},
																			"nativeSrc": "1219:31:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1219:31:7"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "1213:2:7",
																				"nodeType": "YulTypedName",
																				"src": "1213:2:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1263:24:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1263:24:7",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "1276:11:7",
																			"nodeType": "YulIdentifier",
																			"src": "1276:11:7"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "1267:5:7",
																				"nodeType": "YulTypedName",
																				"src": "1267:5:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "1361:20:7",
																			"nodeType": "YulBlock",
																			"src": "1361:20:7",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1370:5:7",
																								"nodeType": "YulIdentifier",
																								"src": "1370:5:7"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1377:1:7",
																								"nodeType": "YulLiteral",
																								"src": "1377:1:7",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "1363:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "1363:6:7"
																						},
																						"nativeSrc": "1363:16:7",
																						"nodeType": "YulFunctionCall",
																						"src": "1363:16:7"
																					},
																					"nativeSrc": "1363:16:7",
																					"nodeType": "YulExpressionStatement",
																					"src": "1363:16:7"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "1311:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "1311:5:7"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "1318:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "1318:2:7"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "1308:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "1308:2:7"
																			},
																			"nativeSrc": "1308:13:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1308:13:7"
																		},
																		"nativeSrc": "1300:81:7",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "1322:26:7",
																			"nodeType": "YulBlock",
																			"src": "1322:26:7",
																			"statements": [
																				{
																					"nativeSrc": "1324:22:7",
																					"nodeType": "YulAssignment",
																					"src": "1324:22:7",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1337:5:7",
																								"nodeType": "YulIdentifier",
																								"src": "1337:5:7"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1344:1:7",
																								"nodeType": "YulLiteral",
																								"src": "1344:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "1333:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "1333:3:7"
																						},
																						"nativeSrc": "1333:13:7",
																						"nodeType": "YulFunctionCall",
																						"src": "1333:13:7"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "1324:5:7",
																							"nodeType": "YulIdentifier",
																							"src": "1324:5:7"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "1304:3:7",
																			"nodeType": "YulBlock",
																			"src": "1304:3:7",
																			"statements": []
																		},
																		"src": "1300:81:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "976:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "976:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "981:2:7",
																		"nodeType": "YulLiteral",
																		"src": "981:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "973:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "973:2:7"
																},
																"nativeSrc": "973:11:7",
																"nodeType": "YulFunctionCall",
																"src": "973:11:7"
															},
															"nativeSrc": "970:421:7",
															"nodeType": "YulIf",
															"src": "970:421:7"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "879:518:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "932:5:7",
														"nodeType": "YulTypedName",
														"src": "932:5:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "939:3:7",
														"nodeType": "YulTypedName",
														"src": "939:3:7",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "944:10:7",
														"nodeType": "YulTypedName",
														"src": "944:10:7",
														"type": ""
													}
												],
												"src": "879:518:7"
											},
											{
												"body": {
													"nativeSrc": "1487:81:7",
													"nodeType": "YulBlock",
													"src": "1487:81:7",
													"statements": [
														{
															"nativeSrc": "1497:65:7",
															"nodeType": "YulAssignment",
															"src": "1497:65:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "1512:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "1512:4:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1530:1:7",
																										"nodeType": "YulLiteral",
																										"src": "1530:1:7",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "1533:3:7",
																										"nodeType": "YulIdentifier",
																										"src": "1533:3:7"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "1526:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "1526:3:7"
																								},
																								"nativeSrc": "1526:11:7",
																								"nodeType": "YulFunctionCall",
																								"src": "1526:11:7"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1543:1:7",
																										"nodeType": "YulLiteral",
																										"src": "1543:1:7",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "1539:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "1539:3:7"
																								},
																								"nativeSrc": "1539:6:7",
																								"nodeType": "YulFunctionCall",
																								"src": "1539:6:7"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "1522:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "1522:3:7"
																						},
																						"nativeSrc": "1522:24:7",
																						"nodeType": "YulFunctionCall",
																						"src": "1522:24:7"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "1518:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1518:3:7"
																				},
																				"nativeSrc": "1518:29:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1518:29:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1508:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1508:3:7"
																		},
																		"nativeSrc": "1508:40:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1508:40:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1554:1:7",
																				"nodeType": "YulLiteral",
																				"src": "1554:1:7",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "1557:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "1557:3:7"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1550:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1550:3:7"
																		},
																		"nativeSrc": "1550:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1550:11:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1505:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "1505:2:7"
																},
																"nativeSrc": "1505:57:7",
																"nodeType": "YulFunctionCall",
																"src": "1505:57:7"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "1497:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1497:4:7"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "1402:166:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1464:4:7",
														"nodeType": "YulTypedName",
														"src": "1464:4:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "1470:3:7",
														"nodeType": "YulTypedName",
														"src": "1470:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "1478:4:7",
														"nodeType": "YulTypedName",
														"src": "1478:4:7",
														"type": ""
													}
												],
												"src": "1402:166:7"
											},
											{
												"body": {
													"nativeSrc": "1669:1249:7",
													"nodeType": "YulBlock",
													"src": "1669:1249:7",
													"statements": [
														{
															"nativeSrc": "1679:24:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1679:24:7",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "1699:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1699:3:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1693:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1693:5:7"
																},
																"nativeSrc": "1693:10:7",
																"nodeType": "YulFunctionCall",
																"src": "1693:10:7"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "1683:6:7",
																	"nodeType": "YulTypedName",
																	"src": "1683:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1746:22:7",
																"nodeType": "YulBlock",
																"src": "1746:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1748:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "1748:16:7"
																			},
																			"nativeSrc": "1748:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1748:18:7"
																		},
																		"nativeSrc": "1748:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1748:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "1718:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1718:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1734:2:7",
																						"nodeType": "YulLiteral",
																						"src": "1734:2:7",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1738:1:7",
																						"nodeType": "YulLiteral",
																						"src": "1738:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "1730:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1730:3:7"
																				},
																				"nativeSrc": "1730:10:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1730:10:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1742:1:7",
																				"nodeType": "YulLiteral",
																				"src": "1742:1:7",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1726:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1726:3:7"
																		},
																		"nativeSrc": "1726:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1726:18:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1715:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "1715:2:7"
																},
																"nativeSrc": "1715:30:7",
																"nodeType": "YulFunctionCall",
																"src": "1715:30:7"
															},
															"nativeSrc": "1712:56:7",
															"nodeType": "YulIf",
															"src": "1712:56:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "1821:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "1821:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "1859:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "1859:4:7"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "1853:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "1853:5:7"
																				},
																				"nativeSrc": "1853:11:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1853:11:7"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "1827:25:7",
																			"nodeType": "YulIdentifier",
																			"src": "1827:25:7"
																		},
																		"nativeSrc": "1827:38:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1827:38:7"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "1867:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1867:6:7"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "1777:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "1777:43:7"
																},
																"nativeSrc": "1777:97:7",
																"nodeType": "YulFunctionCall",
																"src": "1777:97:7"
															},
															"nativeSrc": "1777:97:7",
															"nodeType": "YulExpressionStatement",
															"src": "1777:97:7"
														},
														{
															"nativeSrc": "1883:18:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1883:18:7",
															"value": {
																"kind": "number",
																"nativeSrc": "1900:1:7",
																"nodeType": "YulLiteral",
																"src": "1900:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "1887:9:7",
																	"nodeType": "YulTypedName",
																	"src": "1887:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1910:23:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1910:23:7",
															"value": {
																"kind": "number",
																"nativeSrc": "1929:4:7",
																"nodeType": "YulLiteral",
																"src": "1929:4:7",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nativeSrc": "1914:11:7",
																	"nodeType": "YulTypedName",
																	"src": "1914:11:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1942:17:7",
															"nodeType": "YulAssignment",
															"src": "1942:17:7",
															"value": {
																"kind": "number",
																"nativeSrc": "1955:4:7",
																"nodeType": "YulLiteral",
																"src": "1955:4:7",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "1942:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "1942:9:7"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "2005:656:7",
																		"nodeType": "YulBlock",
																		"src": "2005:656:7",
																		"statements": [
																			{
																				"nativeSrc": "2019:35:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2019:35:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "2038:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "2038:6:7"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "2050:2:7",
																									"nodeType": "YulLiteral",
																									"src": "2050:2:7",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "2046:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "2046:3:7"
																							},
																							"nativeSrc": "2046:7:7",
																							"nodeType": "YulFunctionCall",
																							"src": "2046:7:7"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "2034:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "2034:3:7"
																					},
																					"nativeSrc": "2034:20:7",
																					"nodeType": "YulFunctionCall",
																					"src": "2034:20:7"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "2023:7:7",
																						"nodeType": "YulTypedName",
																						"src": "2023:7:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "2067:49:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2067:49:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2111:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "2111:4:7"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "2081:29:7",
																						"nodeType": "YulIdentifier",
																						"src": "2081:29:7"
																					},
																					"nativeSrc": "2081:35:7",
																					"nodeType": "YulFunctionCall",
																					"src": "2081:35:7"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "2071:6:7",
																						"nodeType": "YulTypedName",
																						"src": "2071:6:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "2129:10:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2129:10:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "2138:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2138:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "2133:1:7",
																						"nodeType": "YulTypedName",
																						"src": "2133:1:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "2216:172:7",
																					"nodeType": "YulBlock",
																					"src": "2216:172:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2241:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "2241:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "2259:3:7",
																														"nodeType": "YulIdentifier",
																														"src": "2259:3:7"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "2264:9:7",
																														"nodeType": "YulIdentifier",
																														"src": "2264:9:7"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "2255:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "2255:3:7"
																												},
																												"nativeSrc": "2255:19:7",
																												"nodeType": "YulFunctionCall",
																												"src": "2255:19:7"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "2249:5:7",
																											"nodeType": "YulIdentifier",
																											"src": "2249:5:7"
																										},
																										"nativeSrc": "2249:26:7",
																										"nodeType": "YulFunctionCall",
																										"src": "2249:26:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2234:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "2234:6:7"
																								},
																								"nativeSrc": "2234:42:7",
																								"nodeType": "YulFunctionCall",
																								"src": "2234:42:7"
																							},
																							"nativeSrc": "2234:42:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "2234:42:7"
																						},
																						{
																							"nativeSrc": "2293:24:7",
																							"nodeType": "YulAssignment",
																							"src": "2293:24:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2307:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "2307:6:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2315:1:7",
																										"nodeType": "YulLiteral",
																										"src": "2315:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2303:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "2303:3:7"
																								},
																								"nativeSrc": "2303:14:7",
																								"nodeType": "YulFunctionCall",
																								"src": "2303:14:7"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "2293:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "2293:6:7"
																								}
																							]
																						},
																						{
																							"nativeSrc": "2334:40:7",
																							"nodeType": "YulAssignment",
																							"src": "2334:40:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "2351:9:7",
																										"nodeType": "YulIdentifier",
																										"src": "2351:9:7"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "2362:11:7",
																										"nodeType": "YulIdentifier",
																										"src": "2362:11:7"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2347:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "2347:3:7"
																								},
																								"nativeSrc": "2347:27:7",
																								"nodeType": "YulFunctionCall",
																								"src": "2347:27:7"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "2334:9:7",
																									"nodeType": "YulIdentifier",
																									"src": "2334:9:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "2163:1:7",
																							"nodeType": "YulIdentifier",
																							"src": "2163:1:7"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "2166:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "2166:7:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "2160:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "2160:2:7"
																					},
																					"nativeSrc": "2160:14:7",
																					"nodeType": "YulFunctionCall",
																					"src": "2160:14:7"
																				},
																				"nativeSrc": "2152:236:7",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "2175:28:7",
																					"nodeType": "YulBlock",
																					"src": "2175:28:7",
																					"statements": [
																						{
																							"nativeSrc": "2177:24:7",
																							"nodeType": "YulAssignment",
																							"src": "2177:24:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "2186:1:7",
																										"nodeType": "YulIdentifier",
																										"src": "2186:1:7"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "2189:11:7",
																										"nodeType": "YulIdentifier",
																										"src": "2189:11:7"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2182:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "2182:3:7"
																								},
																								"nativeSrc": "2182:19:7",
																								"nodeType": "YulFunctionCall",
																								"src": "2182:19:7"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "2177:1:7",
																									"nodeType": "YulIdentifier",
																									"src": "2177:1:7"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "2156:3:7",
																					"nodeType": "YulBlock",
																					"src": "2156:3:7",
																					"statements": []
																				},
																				"src": "2152:236:7"
																			},
																			{
																				"body": {
																					"nativeSrc": "2436:166:7",
																					"nodeType": "YulBlock",
																					"src": "2436:166:7",
																					"statements": [
																						{
																							"nativeSrc": "2454:43:7",
																							"nodeType": "YulVariableDeclaration",
																							"src": "2454:43:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2481:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "2481:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2486:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "2486:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2477:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "2477:3:7"
																										},
																										"nativeSrc": "2477:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "2477:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2471:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "2471:5:7"
																								},
																								"nativeSrc": "2471:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "2471:26:7"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "2458:9:7",
																									"nodeType": "YulTypedName",
																									"src": "2458:9:7",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2521:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "2521:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "2533:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "2533:9:7"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "2560:1:7",
																																				"nodeType": "YulLiteral",
																																				"src": "2560:1:7",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "2563:6:7",
																																				"nodeType": "YulIdentifier",
																																				"src": "2563:6:7"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "2556:3:7",
																																			"nodeType": "YulIdentifier",
																																			"src": "2556:3:7"
																																		},
																																		"nativeSrc": "2556:14:7",
																																		"nodeType": "YulFunctionCall",
																																		"src": "2556:14:7"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2572:3:7",
																																		"nodeType": "YulLiteral",
																																		"src": "2572:3:7",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "2552:3:7",
																																	"nodeType": "YulIdentifier",
																																	"src": "2552:3:7"
																																},
																																"nativeSrc": "2552:24:7",
																																"nodeType": "YulFunctionCall",
																																"src": "2552:24:7"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2582:1:7",
																																		"nodeType": "YulLiteral",
																																		"src": "2582:1:7",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "2578:3:7",
																																	"nodeType": "YulIdentifier",
																																	"src": "2578:3:7"
																																},
																																"nativeSrc": "2578:6:7",
																																"nodeType": "YulFunctionCall",
																																"src": "2578:6:7"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "2548:3:7",
																															"nodeType": "YulIdentifier",
																															"src": "2548:3:7"
																														},
																														"nativeSrc": "2548:37:7",
																														"nodeType": "YulFunctionCall",
																														"src": "2548:37:7"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "2544:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "2544:3:7"
																												},
																												"nativeSrc": "2544:42:7",
																												"nodeType": "YulFunctionCall",
																												"src": "2544:42:7"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "2529:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "2529:3:7"
																										},
																										"nativeSrc": "2529:58:7",
																										"nodeType": "YulFunctionCall",
																										"src": "2529:58:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2514:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "2514:6:7"
																								},
																								"nativeSrc": "2514:74:7",
																								"nodeType": "YulFunctionCall",
																								"src": "2514:74:7"
																							},
																							"nativeSrc": "2514:74:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "2514:74:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "2407:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "2407:7:7"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "2416:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "2416:6:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "2404:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "2404:2:7"
																					},
																					"nativeSrc": "2404:19:7",
																					"nodeType": "YulFunctionCall",
																					"src": "2404:19:7"
																				},
																				"nativeSrc": "2401:201:7",
																				"nodeType": "YulIf",
																				"src": "2401:201:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2622:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "2622:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "2636:1:7",
																											"nodeType": "YulLiteral",
																											"src": "2636:1:7",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "2639:6:7",
																											"nodeType": "YulIdentifier",
																											"src": "2639:6:7"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "2632:3:7",
																										"nodeType": "YulIdentifier",
																										"src": "2632:3:7"
																									},
																									"nativeSrc": "2632:14:7",
																									"nodeType": "YulFunctionCall",
																									"src": "2632:14:7"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2648:1:7",
																									"nodeType": "YulLiteral",
																									"src": "2648:1:7",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2628:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "2628:3:7"
																							},
																							"nativeSrc": "2628:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "2628:22:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "2615:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2615:6:7"
																					},
																					"nativeSrc": "2615:36:7",
																					"nodeType": "YulFunctionCall",
																					"src": "2615:36:7"
																				},
																				"nativeSrc": "2615:36:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "2615:36:7"
																			}
																		]
																	},
																	"nativeSrc": "1998:663:7",
																	"nodeType": "YulCase",
																	"src": "1998:663:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2003:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2003:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "2678:234:7",
																		"nodeType": "YulBlock",
																		"src": "2678:234:7",
																		"statements": [
																			{
																				"nativeSrc": "2692:14:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2692:14:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "2705:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2705:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "2696:5:7",
																						"nodeType": "YulTypedName",
																						"src": "2696:5:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "2741:67:7",
																					"nodeType": "YulBlock",
																					"src": "2741:67:7",
																					"statements": [
																						{
																							"nativeSrc": "2759:35:7",
																							"nodeType": "YulAssignment",
																							"src": "2759:35:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2778:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "2778:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2783:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "2783:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2774:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "2774:3:7"
																										},
																										"nativeSrc": "2774:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "2774:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2768:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "2768:5:7"
																								},
																								"nativeSrc": "2768:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "2768:26:7"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "2759:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "2759:5:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "2722:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "2722:6:7"
																				},
																				"nativeSrc": "2719:89:7",
																				"nodeType": "YulIf",
																				"src": "2719:89:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2828:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "2828:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "2887:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "2887:5:7"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "2894:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "2894:6:7"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "2834:52:7",
																								"nodeType": "YulIdentifier",
																								"src": "2834:52:7"
																							},
																							"nativeSrc": "2834:67:7",
																							"nodeType": "YulFunctionCall",
																							"src": "2834:67:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "2821:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2821:6:7"
																					},
																					"nativeSrc": "2821:81:7",
																					"nodeType": "YulFunctionCall",
																					"src": "2821:81:7"
																				},
																				"nativeSrc": "2821:81:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "2821:81:7"
																			}
																		]
																	},
																	"nativeSrc": "2670:242:7",
																	"nodeType": "YulCase",
																	"src": "2670:242:7",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "1978:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1978:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1986:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1986:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1975:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "1975:2:7"
																},
																"nativeSrc": "1975:14:7",
																"nodeType": "YulFunctionCall",
																"src": "1975:14:7"
															},
															"nativeSrc": "1968:944:7",
															"nodeType": "YulSwitch",
															"src": "1968:944:7"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "1573:1345:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1654:4:7",
														"nodeType": "YulTypedName",
														"src": "1654:4:7",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "1660:3:7",
														"nodeType": "YulTypedName",
														"src": "1660:3:7",
														"type": ""
													}
												],
												"src": "1573:1345:7"
											},
											{
												"body": {
													"nativeSrc": "3097:181:7",
													"nodeType": "YulBlock",
													"src": "3097:181:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3114:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3114:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3125:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3125:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3107:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3107:6:7"
																},
																"nativeSrc": "3107:21:7",
																"nodeType": "YulFunctionCall",
																"src": "3107:21:7"
															},
															"nativeSrc": "3107:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "3107:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3148:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3148:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3159:2:7",
																				"nodeType": "YulLiteral",
																				"src": "3159:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3144:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3144:3:7"
																		},
																		"nativeSrc": "3144:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3144:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3164:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3164:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3137:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3137:6:7"
																},
																"nativeSrc": "3137:30:7",
																"nodeType": "YulFunctionCall",
																"src": "3137:30:7"
															},
															"nativeSrc": "3137:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "3137:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3187:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3187:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3198:2:7",
																				"nodeType": "YulLiteral",
																				"src": "3198:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3183:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3183:3:7"
																		},
																		"nativeSrc": "3183:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3183:18:7"
																	},
																	{
																		"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nativeSrc": "3203:33:7",
																		"nodeType": "YulLiteral",
																		"src": "3203:33:7",
																		"type": "",
																		"value": "ERC20: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3176:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3176:6:7"
																},
																"nativeSrc": "3176:61:7",
																"nodeType": "YulFunctionCall",
																"src": "3176:61:7"
															},
															"nativeSrc": "3176:61:7",
															"nodeType": "YulExpressionStatement",
															"src": "3176:61:7"
														},
														{
															"nativeSrc": "3246:26:7",
															"nodeType": "YulAssignment",
															"src": "3246:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3258:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3258:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3269:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3269:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3254:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3254:3:7"
																},
																"nativeSrc": "3254:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3254:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3246:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3246:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2923:355:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3074:9:7",
														"nodeType": "YulTypedName",
														"src": "3074:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3088:4:7",
														"nodeType": "YulTypedName",
														"src": "3088:4:7",
														"type": ""
													}
												],
												"src": "2923:355:7"
											},
											{
												"body": {
													"nativeSrc": "3331:174:7",
													"nodeType": "YulBlock",
													"src": "3331:174:7",
													"statements": [
														{
															"nativeSrc": "3341:16:7",
															"nodeType": "YulAssignment",
															"src": "3341:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3352:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "3352:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3355:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "3355:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3348:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3348:3:7"
																},
																"nativeSrc": "3348:9:7",
																"nodeType": "YulFunctionCall",
																"src": "3348:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "3341:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3341:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3388:111:7",
																"nodeType": "YulBlock",
																"src": "3388:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3409:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3409:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "3416:3:7",
																							"nodeType": "YulLiteral",
																							"src": "3416:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3421:10:7",
																							"nodeType": "YulLiteral",
																							"src": "3421:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "3412:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "3412:3:7"
																					},
																					"nativeSrc": "3412:20:7",
																					"nodeType": "YulFunctionCall",
																					"src": "3412:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3402:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3402:6:7"
																			},
																			"nativeSrc": "3402:31:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3402:31:7"
																		},
																		"nativeSrc": "3402:31:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3402:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3453:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3453:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3456:4:7",
																					"nodeType": "YulLiteral",
																					"src": "3456:4:7",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3446:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3446:6:7"
																			},
																			"nativeSrc": "3446:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3446:15:7"
																		},
																		"nativeSrc": "3446:15:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3446:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3481:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3481:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3484:4:7",
																					"nodeType": "YulLiteral",
																					"src": "3484:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3474:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3474:6:7"
																			},
																			"nativeSrc": "3474:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3474:15:7"
																		},
																		"nativeSrc": "3474:15:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3474:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3372:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "3372:1:7"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "3375:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3375:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3369:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "3369:2:7"
																},
																"nativeSrc": "3369:10:7",
																"nodeType": "YulFunctionCall",
																"src": "3369:10:7"
															},
															"nativeSrc": "3366:133:7",
															"nodeType": "YulIf",
															"src": "3366:133:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "3283:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3314:1:7",
														"nodeType": "YulTypedName",
														"src": "3314:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3317:1:7",
														"nodeType": "YulTypedName",
														"src": "3317:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "3323:3:7",
														"nodeType": "YulTypedName",
														"src": "3323:3:7",
														"type": ""
													}
												],
												"src": "3283:222:7"
											},
											{
												"body": {
													"nativeSrc": "3611:76:7",
													"nodeType": "YulBlock",
													"src": "3611:76:7",
													"statements": [
														{
															"nativeSrc": "3621:26:7",
															"nodeType": "YulAssignment",
															"src": "3621:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3633:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3633:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3644:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3644:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3629:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3629:3:7"
																},
																"nativeSrc": "3629:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3629:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3621:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3621:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3663:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3663:9:7"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "3674:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3674:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3656:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3656:6:7"
																},
																"nativeSrc": "3656:25:7",
																"nodeType": "YulFunctionCall",
																"src": "3656:25:7"
															},
															"nativeSrc": "3656:25:7",
															"nodeType": "YulExpressionStatement",
															"src": "3656:25:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3510:177:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3580:9:7",
														"nodeType": "YulTypedName",
														"src": "3580:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3591:6:7",
														"nodeType": "YulTypedName",
														"src": "3591:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3602:4:7",
														"nodeType": "YulTypedName",
														"src": "3602:4:7",
														"type": ""
													}
												],
												"src": "3510:177:7"
											},
											{
												"body": {
													"nativeSrc": "3773:209:7",
													"nodeType": "YulBlock",
													"src": "3773:209:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3819:16:7",
																"nodeType": "YulBlock",
																"src": "3819:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3828:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3828:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3831:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3831:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3821:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3821:6:7"
																			},
																			"nativeSrc": "3821:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3821:12:7"
																		},
																		"nativeSrc": "3821:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3821:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3794:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3794:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3803:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3803:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3790:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3790:3:7"
																		},
																		"nativeSrc": "3790:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3790:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3815:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3815:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3786:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3786:3:7"
																},
																"nativeSrc": "3786:32:7",
																"nodeType": "YulFunctionCall",
																"src": "3786:32:7"
															},
															"nativeSrc": "3783:52:7",
															"nodeType": "YulIf",
															"src": "3783:52:7"
														},
														{
															"nativeSrc": "3844:29:7",
															"nodeType": "YulVariableDeclaration",
															"src": "3844:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3863:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3863:9:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3857:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "3857:5:7"
																},
																"nativeSrc": "3857:16:7",
																"nodeType": "YulFunctionCall",
																"src": "3857:16:7"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "3848:5:7",
																	"nodeType": "YulTypedName",
																	"src": "3848:5:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3936:16:7",
																"nodeType": "YulBlock",
																"src": "3936:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3945:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3945:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3948:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3948:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3938:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3938:6:7"
																			},
																			"nativeSrc": "3938:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3938:12:7"
																		},
																		"nativeSrc": "3938:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3938:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3895:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3895:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3906:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "3906:5:7"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "3921:3:7",
																										"nodeType": "YulLiteral",
																										"src": "3921:3:7",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "3926:1:7",
																										"nodeType": "YulLiteral",
																										"src": "3926:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "3917:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "3917:3:7"
																								},
																								"nativeSrc": "3917:11:7",
																								"nodeType": "YulFunctionCall",
																								"src": "3917:11:7"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3930:1:7",
																								"nodeType": "YulLiteral",
																								"src": "3930:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "3913:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "3913:3:7"
																						},
																						"nativeSrc": "3913:19:7",
																						"nodeType": "YulFunctionCall",
																						"src": "3913:19:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "3902:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3902:3:7"
																				},
																				"nativeSrc": "3902:31:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3902:31:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3892:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "3892:2:7"
																		},
																		"nativeSrc": "3892:42:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3892:42:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3885:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3885:6:7"
																},
																"nativeSrc": "3885:50:7",
																"nodeType": "YulFunctionCall",
																"src": "3885:50:7"
															},
															"nativeSrc": "3882:70:7",
															"nodeType": "YulIf",
															"src": "3882:70:7"
														},
														{
															"nativeSrc": "3961:15:7",
															"nodeType": "YulAssignment",
															"src": "3961:15:7",
															"value": {
																"name": "value",
																"nativeSrc": "3971:5:7",
																"nodeType": "YulIdentifier",
																"src": "3971:5:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3961:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3961:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "3692:290:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3739:9:7",
														"nodeType": "YulTypedName",
														"src": "3739:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3750:7:7",
														"nodeType": "YulTypedName",
														"src": "3750:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3762:6:7",
														"nodeType": "YulTypedName",
														"src": "3762:6:7",
														"type": ""
													}
												],
												"src": "3692:290:7"
											},
											{
												"body": {
													"nativeSrc": "4116:175:7",
													"nodeType": "YulBlock",
													"src": "4116:175:7",
													"statements": [
														{
															"nativeSrc": "4126:26:7",
															"nodeType": "YulAssignment",
															"src": "4126:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4138:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4138:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4149:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4149:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4134:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4134:3:7"
																},
																"nativeSrc": "4134:18:7",
																"nodeType": "YulFunctionCall",
																"src": "4134:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4126:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4126:4:7"
																}
															]
														},
														{
															"nativeSrc": "4161:29:7",
															"nodeType": "YulVariableDeclaration",
															"src": "4161:29:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "4179:3:7",
																				"nodeType": "YulLiteral",
																				"src": "4179:3:7",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4184:1:7",
																				"nodeType": "YulLiteral",
																				"src": "4184:1:7",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "4175:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4175:3:7"
																		},
																		"nativeSrc": "4175:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4175:11:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4188:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4188:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "4171:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4171:3:7"
																},
																"nativeSrc": "4171:19:7",
																"nodeType": "YulFunctionCall",
																"src": "4171:19:7"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "4165:2:7",
																	"nodeType": "YulTypedName",
																	"src": "4165:2:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4206:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4206:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "4221:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "4221:6:7"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "4229:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "4229:2:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4217:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4217:3:7"
																		},
																		"nativeSrc": "4217:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4217:15:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4199:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4199:6:7"
																},
																"nativeSrc": "4199:34:7",
																"nodeType": "YulFunctionCall",
																"src": "4199:34:7"
															},
															"nativeSrc": "4199:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "4199:34:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4253:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4253:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4264:2:7",
																				"nodeType": "YulLiteral",
																				"src": "4264:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4249:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4249:3:7"
																		},
																		"nativeSrc": "4249:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4249:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "4273:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "4273:6:7"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "4281:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "4281:2:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4269:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4269:3:7"
																		},
																		"nativeSrc": "4269:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4269:15:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4242:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4242:6:7"
																},
																"nativeSrc": "4242:43:7",
																"nodeType": "YulFunctionCall",
																"src": "4242:43:7"
															},
															"nativeSrc": "4242:43:7",
															"nodeType": "YulExpressionStatement",
															"src": "4242:43:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nativeSrc": "3987:304:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4077:9:7",
														"nodeType": "YulTypedName",
														"src": "4077:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4088:6:7",
														"nodeType": "YulTypedName",
														"src": "4088:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4096:6:7",
														"nodeType": "YulTypedName",
														"src": "4096:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4107:4:7",
														"nodeType": "YulTypedName",
														"src": "4107:4:7",
														"type": ""
													}
												],
												"src": "3987:304:7"
											}
										]
									},
									"contents": "{\n    { }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n}",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6080604052606460065560236008556100266103e86b033b2e3c9fd0803ce80000006103f2565b600955348015610034575f80fd5b506040518060400160405280600981526020016826b2b6b29021b7b4b760b91b815250604051806040016040528060048152602001634d454d4560e01b815250816003908161008391906104a8565b50600461009082826104a8565b5050506100a96100a461015060201b60201c565b610154565b6100bf336b033b2e3c9fd0803ce80000006101a5565b601380546001600160a01b0319167310ed43c718714eb63d5aa57b78b54704e256024e1790556100ed610266565b604080516080810182525f80825260208083018290528284018290526060909201819052600780546001600160401b03191690553381526015909152818120805460ff1990811660019081179092553083529290912080549092161790556105b9565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b6001600160a01b0382166101ff5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b8060025f8282546102109190610567565b90915550506001600160a01b0382165f81815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b60135f9054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa1580156102b6573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102da919061058c565b6001600160a01b031663c9c653963060135f9054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa158015610339573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061035d919061058c565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303815f875af11580156103a7573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103cb919061058c565b601480546001600160a01b0319166001600160a01b0392909216919091179055565b505050565b5f8261040c57634e487b7160e01b5f52601260045260245ffd5b500490565b634e487b7160e01b5f52604160045260245ffd5b600181811c9082168061043957607f821691505b60208210810361045757634e487b7160e01b5f52602260045260245ffd5b50919050565b601f8211156103ed57805f5260205f20601f840160051c810160208510156104825750805b601f840160051c820191505b818110156104a1575f815560010161048e565b5050505050565b81516001600160401b038111156104c1576104c1610411565b6104d5816104cf8454610425565b8461045d565b602080601f831160018114610508575f84156104f15750858301515b5f19600386901b1c1916600185901b17855561055f565b5f85815260208120601f198616915b8281101561053657888601518255948401946001909101908401610517565b508582101561055357878501515f19600388901b60f8161c191681555b505060018460011b0185555b505050505050565b8082018082111561058657634e487b7160e01b5f52601160045260245ffd5b92915050565b5f6020828403121561059c575f80fd5b81516001600160a01b03811681146105b2575f80fd5b9392505050565b6122e8806105c65f395ff3fe6080604052600436106101f4575f3560e01c80639491f94d11610108578063ad5dff731161009d578063d8d61c401161006d578063d8d61c401461064e578063dd62ed3e14610663578063f2fde38b14610682578063fe0bb982146106a1578063fe6b751e146106c0575f80fd5b8063ad5dff7314610588578063c0d78655146105b6578063c531b108146105d5578063c95457ff146105ea575f80fd5b80639fde54f5116100d85780639fde54f51461050c578063a457c2d71461052b578063a8b089821461054a578063a9059cbb14610569575f80fd5b80639491f94d1461048657806395d89b411461049a578063960bfe04146104ae5780639d82190f146104cd575f80fd5b8063333f4b3d11610189578063715018a611610159578063715018a6146103eb5780637773168f146103ff578063787a08a6146104135780638da5cb5b146104555780638f9a55c014610472575f80fd5b8063333f4b3d1461031d5780633950935114610383578063599ca397146103a257806370a08231146103b7575f80fd5b806318160ddd116101c457806318160ddd1461029857806323b872dd146102ac578063313ce567146102cb5780633268cc56146102e6575f80fd5b80630445b667146101ff57806306fdde0314610227578063095ea7b3146102485780631569d18114610277575f80fd5b366101fb57005b5f80fd5b34801561020a575f80fd5b5061021460095481565b6040519081526020015b60405180910390f35b348015610232575f80fd5b5061023b6106df565b60405161021e9190611d73565b348015610253575f80fd5b50610267610262366004611dbc565b61076f565b604051901515815260200161021e565b348015610282575f80fd5b50610296610291366004611dfc565b610788565b005b3480156102a3575f80fd5b50600254610214565b3480156102b7575f80fd5b506102676102c6366004611e4d565b6108b7565b3480156102d6575f80fd5b506040516012815260200161021e565b3480156102f1575f80fd5b50601354610305906001600160a01b031681565b6040516001600160a01b03909116815260200161021e565b348015610328575f80fd5b506007546103559061ffff80821691620100008104821691600160201b8204811691600160301b90041684565b6040805161ffff9586168152938516602085015291841691830191909152909116606082015260800161021e565b34801561038e575f80fd5b5061026761039d366004611dbc565b6108dc565b3480156103ad575f80fd5b5061021460065481565b3480156103c2575f80fd5b506102146103d1366004611e8b565b6001600160a01b03165f9081526020819052604090205490565b3480156103f6575f80fd5b506102966108fd565b34801561040a575f80fd5b50610214610910565b34801561041e575f80fd5b50600d546104399060ff811690610100900463ffffffff1682565b60408051921515835263ffffffff90911660208301520161021e565b348015610460575f80fd5b506005546001600160a01b0316610305565b34801561047d575f80fd5b5061021461098f565b348015610491575f80fd5b506102146109bc565b3480156104a5575f80fd5b5061023b610b16565b3480156104b9575f80fd5b506102966104c8366004611ea6565b610b25565b3480156104d8575f80fd5b506104ec6104e7366004611e8b565b610b32565b60408051948552602085019390935291830152606082015260800161021e565b348015610517575f80fd5b50610296610526366004611ecc565b610bde565b348015610536575f80fd5b50610267610545366004611dbc565b610c10565b348015610555575f80fd5b50601454610305906001600160a01b031681565b348015610574575f80fd5b50610267610583366004611dbc565b610c95565b348015610593575f80fd5b506102676105a2366004611e8b565b60156020525f908152604090205460ff1681565b3480156105c1575f80fd5b506102966105d0366004611e8b565b610ca2565b3480156105e0575f80fd5b50610214600b5481565b3480156105f5575f80fd5b50600f5460105460115460125461061f9360ff8082169461010090920461ffff1693919291169085565b60408051951515865261ffff90941660208601529284019190915215156060830152608082015260a00161021e565b348015610659575f80fd5b50610214600a5481565b34801561066e575f80fd5b5061021461067d366004611eff565b610d0c565b34801561068d575f80fd5b5061029661069c366004611e8b565b610d36565b3480156106ac575f80fd5b506102966106bb366004611f36565b610daf565b3480156106cb575f80fd5b506102966106da366004611f6f565b610de1565b6060600380546106ee90611f99565b80601f016020809104026020016040519081016040528092919081815260200182805461071a90611f99565b80156107655780601f1061073c57610100808354040283529160200191610765565b820191905f5260205f20905b81548152906001019060200180831161074857829003601f168201915b5050505050905090565b5f3361077c818585610e27565b60019150505b92915050565b610790610f4a565b6109c461079d8486611fe5565b61ffff1611156107e75760405162461bcd60e51b815260206004820152601060248201526f084eaf240e8c2f040e8dede40d0d2ced60831b60448201526064015b60405180910390fd5b6109c46107f48284611fe5565b61ffff16111561083a5760405162461bcd60e51b81526020600482015260116024820152700a6cad8d840e8c2f040e8dede40d0d2ced607b1b60448201526064016107de565b6040805160808101825261ffff958616808252948616602082018190529386169181018290529190941660609091018190526007805463ffffffff1916909317620100009092029190911767ffffffff000000001916600160201b90930267ffff000000000000191692909217600160301b909202919091179055565b5f336108c4858285610fa4565b6108cf85858561101c565b60019150505b9392505050565b5f3361077c8185856108ee8383610d0c565b6108f89190612007565b610e27565b610905610f4a565b61090e5f6112ec565b565b6010545f90810361092057505f90565b5f6109296109bc565b601054909150811161096c5760105461095e90610958670de0b6b3a7640000610952838661133d565b90611348565b90611353565b6109679061201a565b610989565b60105461098990610958670de0b6b3a7640000610952858461133d565b91505090565b5f6109b76127106109586006546b033b2e3c9fd0803ce800000061134890919063ffffffff16565b905090565b5f805f60145f9054906101000a90046001600160a01b03166001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa158015610a0f573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a33919061204a565b5091509150306001600160a01b031660145f9054906101000a90046001600160a01b03166001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a92573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610ab6919061208e565b6001600160a01b031614610aec57610ae76001600160701b0380831690610958908516670de0b6b3a7640000611348565b610b0f565b610b0f6001600160701b0380841690610958908416670de0b6b3a7640000611348565b9250505090565b6060600480546106ee90611f99565b610b2d610f4a565b600955565b6001600160a01b0381165f908152600e602052604081205481908190819081904210610b5e575f610b80565b6001600160a01b0386165f908152600e6020526040902054610b80904261133d565b9050610b8f8162015180611353565b9450610b9e62015180826120bd565b9050610bac81610e10611353565b9350610bba610e10826120bd565b9050610bc781603c611353565b9250610bd4603c826120bd565b9150509193509193565b610be6610f4a565b6001600160a01b03919091165f908152601560205260409020805460ff1916911515919091179055565b5f3381610c1d8286610d0c565b905083811015610c7d5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016107de565b610c8a8286868403610e27565b506001949350505050565b5f3361077c81858561101c565b610caa610f4a565b601380546001600160a01b0319166001600160a01b038316179055610ccd61135e565b6040516001600160a01b03821681527f7aed1d3e8155a07ccf395e44ea3109a0e2d6c9b29bbbe9f142d9790596f4dc809060200160405180910390a150565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b610d3e610f4a565b6001600160a01b038116610da35760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016107de565b610dac816112ec565b50565b610db7610f4a565b600f805462ffffff191692151562ffff0019169290921761010061ffff9290921691909102179055565b610de9610f4a565b600d805460ff1916831515179055610e0281603c6120d0565b600d805463ffffffff929092166101000264ffffffff00199092169190911790555050565b6001600160a01b038316610e895760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016107de565b6001600160a01b038216610eea5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016107de565b6001600160a01b038381165f8181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6005546001600160a01b0316331461090e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016107de565b5f610faf8484610d0c565b90505f19811461101657818110156110095760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016107de565b6110168484848403610e27565b50505050565b5f811161106b5760405162461bcd60e51b815260206004820152601a60248201527f5472616e7366657220616d6f756e74206d757374206265203e3000000000000060448201526064016107de565b6014545f906001600160a01b0385811691161480156110a257506001600160a01b0383165f9081526015602052604090205460ff16155b6014549091505f906001600160a01b0385811691161480156110dc57506001600160a01b0385165f9081526015602052604090205460ff16155b600f5490915060ff1680156110ee5750805b1561114e5760115460ff16156111465760405162461bcd60e51b815260206004820152601e60248201527f53656c6c732073746f70706564206279204469616d6f6e6420466c6f6f72000060448201526064016107de565b61114e6114e5565b600d5460ff16801561115d5750805b156111ec576001600160a01b0385165f908152600e60205260409020544210156111bb5760405162461bcd60e51b815260206004820152600f60248201526e436f6f6c646f776e2061637469766560881b60448201526064016107de565b600d546111d390610100900463ffffffff1642612007565b6001600160a01b0386165f908152600e60205260409020555b5f6111f886868661159b565b90505f611205858361133d565b6001600160a01b0387165f9081526015602052604090205490915060ff1615801561122e575082155b156112a75761123b61098f565b6112638261125d896001600160a01b03165f9081526020819052604090205490565b906116c7565b11156112a75760405162461bcd60e51b815260206004820152601360248201527213585e081dd85b1b195d08195e18d959591959606a1b60448201526064016107de565b81156112c3576112b88730846116d2565b6112c3828585611874565b6112ce8787836116d2565b6112d66119de565b156112e3576112e3611a1d565b50505050505050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b5f6108d582846120f8565b5f6108d5828461210b565b5f6108d58284612122565b60135f9054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa1580156113ae573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906113d2919061208e565b6001600160a01b031663c9c653963060135f9054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa158015611431573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611455919061208e565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303815f875af115801561149f573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906114c3919061208e565b601480546001600160a01b0319166001600160a01b0392909216919091179055565b5f6114ee6109bc565b60105490915081111561151857601081905560115460ff1615610dac576011805460ff1916905550565b600f545f9061154590612710906109589061153c90610100900461ffff16836120f8565b60105490611348565b905080821015611563576011805460ff191660011790556010546012555b60115460ff168015611582575060125461157e906002611348565b8210155b15611597576011805460ff1916905560108290555b5050565b6001600160a01b0383165f9081526015602052604081205460ff16806115d857506001600160a01b0383165f9081526015602052604090205460ff165b156115e457505f6108d5565b6014546001600160a01b0390811685821681149185161481156116375760075461162e9061271090610958906116279061ffff80821691620100009004166116c7565b8790611348565b925050506108d5565b801561166a5760075461162e9061271090610958906116279061ffff600160201b8204811691600160301b9004166116c7565b6007545f9061168d9061ffff600160201b8204811691600160301b9004166116c7565b90505f6116aa600a6109586008548561134890919063ffffffff16565b90506116bc6127106109588884611348565b9450505050506108d5565b5f6108d58284612007565b6001600160a01b0383166117365760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016107de565b6001600160a01b0382166117985760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016107de565b6001600160a01b0383165f908152602081905260409020548181101561180f5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016107de565b6001600160a01b038481165f81815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3611016565b5f8083156118b6576007546118af906118999061ffff62010000820481169116611fe5565b60075461ffff9182169161095891899116611348565b9150611964565b82156118ff576007546118af906118e19061ffff600160301b8204811691600160201b900416611fe5565b60075461ffff91821691610958918991600160201b90910416611348565b6007545f906119229061ffff600160301b8204811691600160201b900416611fe5565b61ffff169050611960600a6109586008546109528561095860075f0160049054906101000a900461ffff1661ffff168d61134890919063ffffffff16565b9250505b61196e82866120f8565b905081600a5f8282546119819190612007565b9250508190555080600b5f8282546119999190612007565b909155505060408051838152602081018390527ff2d9f3f00fc700757eb74f9aa3dba0e2eb1280e0c6e0cf65962cc055528d7a90910160405180910390a15050505050565b600c545f9060ff16158015611a035750600954600b54600a54611a00916116c7565b10155b80156109b75750506014546001600160a01b031633141590565b5f600b54600a54611a2e9190612007565b9050600954811015611a3d5750565b600c805460ff19166001179055600b544790611a5890611b07565b5f611a63478361133d565b9050611a776005546001600160a01b031690565b6001600160a01b03166108fc8290811502906040515f60405180830381858888f19350505050158015611aac573d5f803e3d5ffd5b50600a545f611abc826002611353565b9050611ac781611b07565b5f611ad2478561133d565b9050611ae7611ae1848461133d565b82611c68565b50505f600a819055600b555050600c805460ff191690555050565b505050565b6040805160028082526060820183525f9260208301908036833701905050905030815f81518110611b3a57611b3a612149565b6001600160a01b03928316602091820292909201810191909152601354604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa158015611b91573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611bb5919061208e565b81600181518110611bc857611bc8612149565b6001600160a01b039283166020918202929092010152601354611bee9130911684610e27565b6013546040516318cbafe560e01b81526001600160a01b03909116906318cbafe590611c269085905f9086903090429060040161215d565b5f604051808303815f875af1158015611c41573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f19168201604052611b0291908101906121ce565b601354611c809030906001600160a01b031684610e27565b6013546001600160a01b031663f305d7198230855f80611ca86005546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af1158015611d0e573d5f803e3d5ffd5b50505050506040513d601f19601f82011682018060405250810190611d339190612287565b505060408051848152602081018490527f38f8a0c92f4c5b0b6877f878cb4c0c8d348a47b76d716c8e78f425043df9515b92500160405180910390a15050565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b6001600160a01b0381168114610dac575f80fd5b5f8060408385031215611dcd575f80fd5b8235611dd881611da8565b946020939093013593505050565b803561ffff81168114611df7575f80fd5b919050565b5f805f8060808587031215611e0f575f80fd5b611e1885611de6565b9350611e2660208601611de6565b9250611e3460408601611de6565b9150611e4260608601611de6565b905092959194509250565b5f805f60608486031215611e5f575f80fd5b8335611e6a81611da8565b92506020840135611e7a81611da8565b929592945050506040919091013590565b5f60208284031215611e9b575f80fd5b81356108d581611da8565b5f60208284031215611eb6575f80fd5b5035919050565b80358015158114611df7575f80fd5b5f8060408385031215611edd575f80fd5b8235611ee881611da8565b9150611ef660208401611ebd565b90509250929050565b5f8060408385031215611f10575f80fd5b8235611f1b81611da8565b91506020830135611f2b81611da8565b809150509250929050565b5f8060408385031215611f47575f80fd5b611f5083611ebd565b9150611ef660208401611de6565b63ffffffff81168114610dac575f80fd5b5f8060408385031215611f80575f80fd5b611f8983611ebd565b91506020830135611f2b81611f5e565b600181811c90821680611fad57607f821691505b602082108103611fcb57634e487b7160e01b5f52602260045260245ffd5b50919050565b634e487b7160e01b5f52601160045260245ffd5b61ffff81811683821601908082111561200057612000611fd1565b5092915050565b8082018082111561078257610782611fd1565b5f600160ff1b820161202e5761202e611fd1565b505f0390565b80516001600160701b0381168114611df7575f80fd5b5f805f6060848603121561205c575f80fd5b61206584612034565b925061207360208501612034565b9150604084015161208381611f5e565b809150509250925092565b5f6020828403121561209e575f80fd5b81516108d581611da8565b634e487b7160e01b5f52601260045260245ffd5b5f826120cb576120cb6120a9565b500690565b63ffffffff8181168382160280821691908281146120f0576120f0611fd1565b505092915050565b8181038181111561078257610782611fd1565b808202811582820484141761078257610782611fd1565b5f82612130576121306120a9565b500490565b634e487b7160e01b5f52604160045260245ffd5b634e487b7160e01b5f52603260045260245ffd5b5f60a08201878352602087602085015260a0604085015281875180845260c0860191506020890193505f5b818110156121ad5784516001600160a01b031683529383019391830191600101612188565b50506001600160a01b03969096166060850152505050608001529392505050565b5f60208083850312156121df575f80fd5b825167ffffffffffffffff808211156121f6575f80fd5b818501915085601f830112612209575f80fd5b81518181111561221b5761221b612135565b8060051b604051601f19603f8301168101818110858211171561224057612240612135565b60405291825284820192508381018501918883111561225d575f80fd5b938501935b8285101561227b57845184529385019392850192612262565b98975050505050505050565b5f805f60608486031215612299575f80fd5b835192506020840151915060408401519050925092509256fea264697066735822122058ff80e09a44ac810eca1f7ec706d8a9e4d48933c73aacb957ac449dba91ca2564736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x64 PUSH1 0x6 SSTORE PUSH1 0x23 PUSH1 0x8 SSTORE PUSH2 0x26 PUSH2 0x3E8 PUSH12 0x33B2E3C9FD0803CE8000000 PUSH2 0x3F2 JUMP JUMPDEST PUSH1 0x9 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x34 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH9 0x26B2B6B29021B7B4B7 PUSH1 0xB9 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH4 0x4D454D45 PUSH1 0xE0 SHL DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x83 SWAP2 SWAP1 PUSH2 0x4A8 JUMP JUMPDEST POP PUSH1 0x4 PUSH2 0x90 DUP3 DUP3 PUSH2 0x4A8 JUMP JUMPDEST POP POP POP PUSH2 0xA9 PUSH2 0xA4 PUSH2 0x150 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x154 JUMP JUMPDEST PUSH2 0xBF CALLER PUSH12 0x33B2E3C9FD0803CE8000000 PUSH2 0x1A5 JUMP JUMPDEST PUSH1 0x13 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH20 0x10ED43C718714EB63D5AA57B78B54704E256024E OR SWAP1 SSTORE PUSH2 0xED PUSH2 0x266 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP3 SWAP1 MSTORE DUP3 DUP5 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 SWAP1 SWAP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB NOT AND SWAP1 SSTORE CALLER DUP2 MSTORE PUSH1 0x15 SWAP1 SWAP2 MSTORE DUP2 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT SWAP1 DUP2 AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP3 SSTORE ADDRESS DUP4 MSTORE SWAP3 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP3 AND OR SWAP1 SSTORE PUSH2 0x5B9 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1FF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x210 SWAP2 SWAP1 PUSH2 0x567 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE MLOAD DUP5 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x13 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xC45A0155 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2B6 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2DA SWAP2 SWAP1 PUSH2 0x58C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xC9C65396 ADDRESS PUSH1 0x13 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xAD5C4648 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x339 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x35D SWAP2 SWAP1 PUSH2 0x58C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP2 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3A7 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3CB SWAP2 SWAP1 PUSH2 0x58C JUMP JUMPDEST PUSH1 0x14 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x40C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x439 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x457 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x3ED JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x482 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x4A1 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x48E JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x4C1 JUMPI PUSH2 0x4C1 PUSH2 0x411 JUMP JUMPDEST PUSH2 0x4D5 DUP2 PUSH2 0x4CF DUP5 SLOAD PUSH2 0x425 JUMP JUMPDEST DUP5 PUSH2 0x45D JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x508 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x4F1 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x55F JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x536 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x517 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x553 JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP5 PUSH1 0x1 SHL ADD DUP6 SSTORE JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x586 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x59C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x5B2 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x22E8 DUP1 PUSH2 0x5C6 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1F4 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9491F94D GT PUSH2 0x108 JUMPI DUP1 PUSH4 0xAD5DFF73 GT PUSH2 0x9D JUMPI DUP1 PUSH4 0xD8D61C40 GT PUSH2 0x6D JUMPI DUP1 PUSH4 0xD8D61C40 EQ PUSH2 0x64E JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x663 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x682 JUMPI DUP1 PUSH4 0xFE0BB982 EQ PUSH2 0x6A1 JUMPI DUP1 PUSH4 0xFE6B751E EQ PUSH2 0x6C0 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xAD5DFF73 EQ PUSH2 0x588 JUMPI DUP1 PUSH4 0xC0D78655 EQ PUSH2 0x5B6 JUMPI DUP1 PUSH4 0xC531B108 EQ PUSH2 0x5D5 JUMPI DUP1 PUSH4 0xC95457FF EQ PUSH2 0x5EA JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9FDE54F5 GT PUSH2 0xD8 JUMPI DUP1 PUSH4 0x9FDE54F5 EQ PUSH2 0x50C JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x52B JUMPI DUP1 PUSH4 0xA8B08982 EQ PUSH2 0x54A JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x569 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9491F94D EQ PUSH2 0x486 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x49A JUMPI DUP1 PUSH4 0x960BFE04 EQ PUSH2 0x4AE JUMPI DUP1 PUSH4 0x9D82190F EQ PUSH2 0x4CD JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x333F4B3D GT PUSH2 0x189 JUMPI DUP1 PUSH4 0x715018A6 GT PUSH2 0x159 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3EB JUMPI DUP1 PUSH4 0x7773168F EQ PUSH2 0x3FF JUMPI DUP1 PUSH4 0x787A08A6 EQ PUSH2 0x413 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x455 JUMPI DUP1 PUSH4 0x8F9A55C0 EQ PUSH2 0x472 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x333F4B3D EQ PUSH2 0x31D JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x383 JUMPI DUP1 PUSH4 0x599CA397 EQ PUSH2 0x3A2 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3B7 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x1C4 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x298 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2AC JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2CB JUMPI DUP1 PUSH4 0x3268CC56 EQ PUSH2 0x2E6 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x445B667 EQ PUSH2 0x1FF JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x227 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x248 JUMPI DUP1 PUSH4 0x1569D181 EQ PUSH2 0x277 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x1FB JUMPI STOP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x214 PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x232 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x23B PUSH2 0x6DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21E SWAP2 SWAP1 PUSH2 0x1D73 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x253 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x267 PUSH2 0x262 CALLDATASIZE PUSH1 0x4 PUSH2 0x1DBC JUMP JUMPDEST PUSH2 0x76F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x21E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x282 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x296 PUSH2 0x291 CALLDATASIZE PUSH1 0x4 PUSH2 0x1DFC JUMP JUMPDEST PUSH2 0x788 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x214 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x267 PUSH2 0x2C6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E4D JUMP JUMPDEST PUSH2 0x8B7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x21E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x13 SLOAD PUSH2 0x305 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x21E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x328 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x7 SLOAD PUSH2 0x355 SWAP1 PUSH2 0xFFFF DUP1 DUP3 AND SWAP2 PUSH3 0x10000 DUP2 DIV DUP3 AND SWAP2 PUSH1 0x1 PUSH1 0x20 SHL DUP3 DIV DUP2 AND SWAP2 PUSH1 0x1 PUSH1 0x30 SHL SWAP1 DIV AND DUP5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0xFFFF SWAP6 DUP7 AND DUP2 MSTORE SWAP4 DUP6 AND PUSH1 0x20 DUP6 ADD MSTORE SWAP2 DUP5 AND SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP2 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0x21E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x38E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x267 PUSH2 0x39D CALLDATASIZE PUSH1 0x4 PUSH2 0x1DBC JUMP JUMPDEST PUSH2 0x8DC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3AD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x214 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x214 PUSH2 0x3D1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E8B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x296 PUSH2 0x8FD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x40A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x214 PUSH2 0x910 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x41E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xD SLOAD PUSH2 0x439 SWAP1 PUSH1 0xFF DUP2 AND SWAP1 PUSH2 0x100 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 ISZERO ISZERO DUP4 MSTORE PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH2 0x21E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x460 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x305 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x47D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x214 PUSH2 0x98F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x491 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x214 PUSH2 0x9BC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x23B PUSH2 0xB16 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x296 PUSH2 0x4C8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1EA6 JUMP JUMPDEST PUSH2 0xB25 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4EC PUSH2 0x4E7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E8B JUMP JUMPDEST PUSH2 0xB32 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0x21E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x517 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x296 PUSH2 0x526 CALLDATASIZE PUSH1 0x4 PUSH2 0x1ECC JUMP JUMPDEST PUSH2 0xBDE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x536 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x267 PUSH2 0x545 CALLDATASIZE PUSH1 0x4 PUSH2 0x1DBC JUMP JUMPDEST PUSH2 0xC10 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x555 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x14 SLOAD PUSH2 0x305 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x574 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x267 PUSH2 0x583 CALLDATASIZE PUSH1 0x4 PUSH2 0x1DBC JUMP JUMPDEST PUSH2 0xC95 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x593 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x267 PUSH2 0x5A2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E8B JUMP JUMPDEST PUSH1 0x15 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x296 PUSH2 0x5D0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E8B JUMP JUMPDEST PUSH2 0xCA2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5E0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x214 PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5F5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xF SLOAD PUSH1 0x10 SLOAD PUSH1 0x11 SLOAD PUSH1 0x12 SLOAD PUSH2 0x61F SWAP4 PUSH1 0xFF DUP1 DUP3 AND SWAP5 PUSH2 0x100 SWAP1 SWAP3 DIV PUSH2 0xFFFF AND SWAP4 SWAP2 SWAP3 SWAP2 AND SWAP1 DUP6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP6 ISZERO ISZERO DUP7 MSTORE PUSH2 0xFFFF SWAP1 SWAP5 AND PUSH1 0x20 DUP7 ADD MSTORE SWAP3 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE ISZERO ISZERO PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD PUSH2 0x21E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x659 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x214 PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x66E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x214 PUSH2 0x67D CALLDATASIZE PUSH1 0x4 PUSH2 0x1EFF JUMP JUMPDEST PUSH2 0xD0C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x68D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x296 PUSH2 0x69C CALLDATASIZE PUSH1 0x4 PUSH2 0x1E8B JUMP JUMPDEST PUSH2 0xD36 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6AC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x296 PUSH2 0x6BB CALLDATASIZE PUSH1 0x4 PUSH2 0x1F36 JUMP JUMPDEST PUSH2 0xDAF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6CB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x296 PUSH2 0x6DA CALLDATASIZE PUSH1 0x4 PUSH2 0x1F6F JUMP JUMPDEST PUSH2 0xDE1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x6EE SWAP1 PUSH2 0x1F99 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x71A SWAP1 PUSH2 0x1F99 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x765 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x73C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x765 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x748 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x77C DUP2 DUP6 DUP6 PUSH2 0xE27 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x790 PUSH2 0xF4A JUMP JUMPDEST PUSH2 0x9C4 PUSH2 0x79D DUP5 DUP7 PUSH2 0x1FE5 JUMP JUMPDEST PUSH2 0xFFFF AND GT ISZERO PUSH2 0x7E7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x84EAF240E8C2F040E8DEDE40D0D2CED PUSH1 0x83 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9C4 PUSH2 0x7F4 DUP3 DUP5 PUSH2 0x1FE5 JUMP JUMPDEST PUSH2 0xFFFF AND GT ISZERO PUSH2 0x83A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0xA6CAD8D840E8C2F040E8DEDE40D0D2CED PUSH1 0x7B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7DE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH2 0xFFFF SWAP6 DUP7 AND DUP1 DUP3 MSTORE SWAP5 DUP7 AND PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP4 DUP7 AND SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE SWAP2 SWAP1 SWAP5 AND PUSH1 0x60 SWAP1 SWAP2 ADD DUP2 SWAP1 MSTORE PUSH1 0x7 DUP1 SLOAD PUSH4 0xFFFFFFFF NOT AND SWAP1 SWAP4 OR PUSH3 0x10000 SWAP1 SWAP3 MUL SWAP2 SWAP1 SWAP2 OR PUSH8 0xFFFFFFFF00000000 NOT AND PUSH1 0x1 PUSH1 0x20 SHL SWAP1 SWAP4 MUL PUSH8 0xFFFF000000000000 NOT AND SWAP3 SWAP1 SWAP3 OR PUSH1 0x1 PUSH1 0x30 SHL SWAP1 SWAP3 MUL SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH0 CALLER PUSH2 0x8C4 DUP6 DUP3 DUP6 PUSH2 0xFA4 JUMP JUMPDEST PUSH2 0x8CF DUP6 DUP6 DUP6 PUSH2 0x101C JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x77C DUP2 DUP6 DUP6 PUSH2 0x8EE DUP4 DUP4 PUSH2 0xD0C JUMP JUMPDEST PUSH2 0x8F8 SWAP2 SWAP1 PUSH2 0x2007 JUMP JUMPDEST PUSH2 0xE27 JUMP JUMPDEST PUSH2 0x905 PUSH2 0xF4A JUMP JUMPDEST PUSH2 0x90E PUSH0 PUSH2 0x12EC JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x10 SLOAD PUSH0 SWAP1 DUP2 SUB PUSH2 0x920 JUMPI POP PUSH0 SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x929 PUSH2 0x9BC JUMP JUMPDEST PUSH1 0x10 SLOAD SWAP1 SWAP2 POP DUP2 GT PUSH2 0x96C JUMPI PUSH1 0x10 SLOAD PUSH2 0x95E SWAP1 PUSH2 0x958 PUSH8 0xDE0B6B3A7640000 PUSH2 0x952 DUP4 DUP7 PUSH2 0x133D JUMP JUMPDEST SWAP1 PUSH2 0x1348 JUMP JUMPDEST SWAP1 PUSH2 0x1353 JUMP JUMPDEST PUSH2 0x967 SWAP1 PUSH2 0x201A JUMP JUMPDEST PUSH2 0x989 JUMP JUMPDEST PUSH1 0x10 SLOAD PUSH2 0x989 SWAP1 PUSH2 0x958 PUSH8 0xDE0B6B3A7640000 PUSH2 0x952 DUP6 DUP5 PUSH2 0x133D JUMP JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x9B7 PUSH2 0x2710 PUSH2 0x958 PUSH1 0x6 SLOAD PUSH12 0x33B2E3C9FD0803CE8000000 PUSH2 0x1348 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x14 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x902F1AC PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA0F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA33 SWAP2 SWAP1 PUSH2 0x204A JUMP JUMPDEST POP SWAP2 POP SWAP2 POP ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x14 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA92 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAB6 SWAP2 SWAP1 PUSH2 0x208E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xAEC JUMPI PUSH2 0xAE7 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP1 DUP4 AND SWAP1 PUSH2 0x958 SWAP1 DUP6 AND PUSH8 0xDE0B6B3A7640000 PUSH2 0x1348 JUMP JUMPDEST PUSH2 0xB0F JUMP JUMPDEST PUSH2 0xB0F PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP1 DUP5 AND SWAP1 PUSH2 0x958 SWAP1 DUP5 AND PUSH8 0xDE0B6B3A7640000 PUSH2 0x1348 JUMP JUMPDEST SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x6EE SWAP1 PUSH2 0x1F99 JUMP JUMPDEST PUSH2 0xB2D PUSH2 0xF4A JUMP JUMPDEST PUSH1 0x9 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP2 SWAP1 DUP2 SWAP1 DUP2 SWAP1 DUP2 SWAP1 TIMESTAMP LT PUSH2 0xB5E JUMPI PUSH0 PUSH2 0xB80 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xB80 SWAP1 TIMESTAMP PUSH2 0x133D JUMP JUMPDEST SWAP1 POP PUSH2 0xB8F DUP2 PUSH3 0x15180 PUSH2 0x1353 JUMP JUMPDEST SWAP5 POP PUSH2 0xB9E PUSH3 0x15180 DUP3 PUSH2 0x20BD JUMP JUMPDEST SWAP1 POP PUSH2 0xBAC DUP2 PUSH2 0xE10 PUSH2 0x1353 JUMP JUMPDEST SWAP4 POP PUSH2 0xBBA PUSH2 0xE10 DUP3 PUSH2 0x20BD JUMP JUMPDEST SWAP1 POP PUSH2 0xBC7 DUP2 PUSH1 0x3C PUSH2 0x1353 JUMP JUMPDEST SWAP3 POP PUSH2 0xBD4 PUSH1 0x3C DUP3 PUSH2 0x20BD JUMP JUMPDEST SWAP2 POP POP SWAP2 SWAP4 POP SWAP2 SWAP4 JUMP JUMPDEST PUSH2 0xBE6 PUSH2 0xF4A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH0 CALLER DUP2 PUSH2 0xC1D DUP3 DUP7 PUSH2 0xD0C JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xC7D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7DE JUMP JUMPDEST PUSH2 0xC8A DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0xE27 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x77C DUP2 DUP6 DUP6 PUSH2 0x101C JUMP JUMPDEST PUSH2 0xCAA PUSH2 0xF4A JUMP JUMPDEST PUSH1 0x13 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND OR SWAP1 SSTORE PUSH2 0xCCD PUSH2 0x135E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP2 MSTORE PUSH32 0x7AED1D3E8155A07CCF395E44EA3109A0E2D6C9B29BBBE9F142D9790596F4DC80 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xD3E PUSH2 0xF4A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xDA3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7DE JUMP JUMPDEST PUSH2 0xDAC DUP2 PUSH2 0x12EC JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xDB7 PUSH2 0xF4A JUMP JUMPDEST PUSH1 0xF DUP1 SLOAD PUSH3 0xFFFFFF NOT AND SWAP3 ISZERO ISZERO PUSH3 0xFFFF00 NOT AND SWAP3 SWAP1 SWAP3 OR PUSH2 0x100 PUSH2 0xFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 MUL OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xDE9 PUSH2 0xF4A JUMP JUMPDEST PUSH1 0xD DUP1 SLOAD PUSH1 0xFF NOT AND DUP4 ISZERO ISZERO OR SWAP1 SSTORE PUSH2 0xE02 DUP2 PUSH1 0x3C PUSH2 0x20D0 JUMP JUMPDEST PUSH1 0xD DUP1 SLOAD PUSH4 0xFFFFFFFF SWAP3 SWAP1 SWAP3 AND PUSH2 0x100 MUL PUSH5 0xFFFFFFFF00 NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xE89 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7DE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xEEA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7DE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x90E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7DE JUMP JUMPDEST PUSH0 PUSH2 0xFAF DUP5 DUP5 PUSH2 0xD0C JUMP JUMPDEST SWAP1 POP PUSH0 NOT DUP2 EQ PUSH2 0x1016 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1009 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7DE JUMP JUMPDEST PUSH2 0x1016 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0xE27 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x106B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E7366657220616D6F756E74206D757374206265203E30000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7DE JUMP JUMPDEST PUSH1 0x14 SLOAD PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP2 AND EQ DUP1 ISZERO PUSH2 0x10A2 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH1 0x14 SLOAD SWAP1 SWAP2 POP PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP2 AND EQ DUP1 ISZERO PUSH2 0x10DC JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH1 0xF SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x10EE JUMPI POP DUP1 JUMPDEST ISZERO PUSH2 0x114E JUMPI PUSH1 0x11 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1146 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53656C6C732073746F70706564206279204469616D6F6E6420466C6F6F720000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7DE JUMP JUMPDEST PUSH2 0x114E PUSH2 0x14E5 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x115D JUMPI POP DUP1 JUMPDEST ISZERO PUSH2 0x11EC JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD TIMESTAMP LT ISZERO PUSH2 0x11BB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x436F6F6C646F776E20616374697665 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7DE JUMP JUMPDEST PUSH1 0xD SLOAD PUSH2 0x11D3 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH4 0xFFFFFFFF AND TIMESTAMP PUSH2 0x2007 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMPDEST PUSH0 PUSH2 0x11F8 DUP7 DUP7 DUP7 PUSH2 0x159B JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1205 DUP6 DUP4 PUSH2 0x133D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x122E JUMPI POP DUP3 ISZERO JUMPDEST ISZERO PUSH2 0x12A7 JUMPI PUSH2 0x123B PUSH2 0x98F JUMP JUMPDEST PUSH2 0x1263 DUP3 PUSH2 0x125D DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x16C7 JUMP JUMPDEST GT ISZERO PUSH2 0x12A7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x13585E081DD85B1B195D08195E18D959591959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7DE JUMP JUMPDEST DUP2 ISZERO PUSH2 0x12C3 JUMPI PUSH2 0x12B8 DUP8 ADDRESS DUP5 PUSH2 0x16D2 JUMP JUMPDEST PUSH2 0x12C3 DUP3 DUP6 DUP6 PUSH2 0x1874 JUMP JUMPDEST PUSH2 0x12CE DUP8 DUP8 DUP4 PUSH2 0x16D2 JUMP JUMPDEST PUSH2 0x12D6 PUSH2 0x19DE JUMP JUMPDEST ISZERO PUSH2 0x12E3 JUMPI PUSH2 0x12E3 PUSH2 0x1A1D JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x8D5 DUP3 DUP5 PUSH2 0x20F8 JUMP JUMPDEST PUSH0 PUSH2 0x8D5 DUP3 DUP5 PUSH2 0x210B JUMP JUMPDEST PUSH0 PUSH2 0x8D5 DUP3 DUP5 PUSH2 0x2122 JUMP JUMPDEST PUSH1 0x13 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xC45A0155 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x13AE JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x13D2 SWAP2 SWAP1 PUSH2 0x208E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xC9C65396 ADDRESS PUSH1 0x13 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xAD5C4648 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1431 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1455 SWAP2 SWAP1 PUSH2 0x208E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP2 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x149F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x14C3 SWAP2 SWAP1 PUSH2 0x208E JUMP JUMPDEST PUSH1 0x14 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH0 PUSH2 0x14EE PUSH2 0x9BC JUMP JUMPDEST PUSH1 0x10 SLOAD SWAP1 SWAP2 POP DUP2 GT ISZERO PUSH2 0x1518 JUMPI PUSH1 0x10 DUP2 SWAP1 SSTORE PUSH1 0x11 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xDAC JUMPI PUSH1 0x11 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0xF SLOAD PUSH0 SWAP1 PUSH2 0x1545 SWAP1 PUSH2 0x2710 SWAP1 PUSH2 0x958 SWAP1 PUSH2 0x153C SWAP1 PUSH2 0x100 SWAP1 DIV PUSH2 0xFFFF AND DUP4 PUSH2 0x20F8 JUMP JUMPDEST PUSH1 0x10 SLOAD SWAP1 PUSH2 0x1348 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 LT ISZERO PUSH2 0x1563 JUMPI PUSH1 0x11 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x10 SLOAD PUSH1 0x12 SSTORE JUMPDEST PUSH1 0x11 SLOAD PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x1582 JUMPI POP PUSH1 0x12 SLOAD PUSH2 0x157E SWAP1 PUSH1 0x2 PUSH2 0x1348 JUMP JUMPDEST DUP3 LT ISZERO JUMPDEST ISZERO PUSH2 0x1597 JUMPI PUSH1 0x11 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x10 DUP3 SWAP1 SSTORE JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 PUSH2 0x15D8 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x15E4 JUMPI POP PUSH0 PUSH2 0x8D5 JUMP JUMPDEST PUSH1 0x14 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP6 DUP3 AND DUP2 EQ SWAP2 DUP6 AND EQ DUP2 ISZERO PUSH2 0x1637 JUMPI PUSH1 0x7 SLOAD PUSH2 0x162E SWAP1 PUSH2 0x2710 SWAP1 PUSH2 0x958 SWAP1 PUSH2 0x1627 SWAP1 PUSH2 0xFFFF DUP1 DUP3 AND SWAP2 PUSH3 0x10000 SWAP1 DIV AND PUSH2 0x16C7 JUMP JUMPDEST DUP8 SWAP1 PUSH2 0x1348 JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x8D5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x166A JUMPI PUSH1 0x7 SLOAD PUSH2 0x162E SWAP1 PUSH2 0x2710 SWAP1 PUSH2 0x958 SWAP1 PUSH2 0x1627 SWAP1 PUSH2 0xFFFF PUSH1 0x1 PUSH1 0x20 SHL DUP3 DIV DUP2 AND SWAP2 PUSH1 0x1 PUSH1 0x30 SHL SWAP1 DIV AND PUSH2 0x16C7 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH0 SWAP1 PUSH2 0x168D SWAP1 PUSH2 0xFFFF PUSH1 0x1 PUSH1 0x20 SHL DUP3 DIV DUP2 AND SWAP2 PUSH1 0x1 PUSH1 0x30 SHL SWAP1 DIV AND PUSH2 0x16C7 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x16AA PUSH1 0xA PUSH2 0x958 PUSH1 0x8 SLOAD DUP6 PUSH2 0x1348 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x16BC PUSH2 0x2710 PUSH2 0x958 DUP9 DUP5 PUSH2 0x1348 JUMP JUMPDEST SWAP5 POP POP POP POP POP PUSH2 0x8D5 JUMP JUMPDEST PUSH0 PUSH2 0x8D5 DUP3 DUP5 PUSH2 0x2007 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1736 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7DE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1798 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7DE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x180F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7DE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x1016 JUMP JUMPDEST PUSH0 DUP1 DUP4 ISZERO PUSH2 0x18B6 JUMPI PUSH1 0x7 SLOAD PUSH2 0x18AF SWAP1 PUSH2 0x1899 SWAP1 PUSH2 0xFFFF PUSH3 0x10000 DUP3 DIV DUP2 AND SWAP2 AND PUSH2 0x1FE5 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0xFFFF SWAP2 DUP3 AND SWAP2 PUSH2 0x958 SWAP2 DUP10 SWAP2 AND PUSH2 0x1348 JUMP JUMPDEST SWAP2 POP PUSH2 0x1964 JUMP JUMPDEST DUP3 ISZERO PUSH2 0x18FF JUMPI PUSH1 0x7 SLOAD PUSH2 0x18AF SWAP1 PUSH2 0x18E1 SWAP1 PUSH2 0xFFFF PUSH1 0x1 PUSH1 0x30 SHL DUP3 DIV DUP2 AND SWAP2 PUSH1 0x1 PUSH1 0x20 SHL SWAP1 DIV AND PUSH2 0x1FE5 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0xFFFF SWAP2 DUP3 AND SWAP2 PUSH2 0x958 SWAP2 DUP10 SWAP2 PUSH1 0x1 PUSH1 0x20 SHL SWAP1 SWAP2 DIV AND PUSH2 0x1348 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH0 SWAP1 PUSH2 0x1922 SWAP1 PUSH2 0xFFFF PUSH1 0x1 PUSH1 0x30 SHL DUP3 DIV DUP2 AND SWAP2 PUSH1 0x1 PUSH1 0x20 SHL SWAP1 DIV AND PUSH2 0x1FE5 JUMP JUMPDEST PUSH2 0xFFFF AND SWAP1 POP PUSH2 0x1960 PUSH1 0xA PUSH2 0x958 PUSH1 0x8 SLOAD PUSH2 0x952 DUP6 PUSH2 0x958 PUSH1 0x7 PUSH0 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP14 PUSH2 0x1348 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP POP JUMPDEST PUSH2 0x196E DUP3 DUP7 PUSH2 0x20F8 JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0xA PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1981 SWAP2 SWAP1 PUSH2 0x2007 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0xB PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1999 SWAP2 SWAP1 PUSH2 0x2007 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0xF2D9F3F00FC700757EB74F9AA3DBA0E2EB1280E0C6E0CF65962CC055528D7A90 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP JUMP JUMPDEST PUSH1 0xC SLOAD PUSH0 SWAP1 PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x1A03 JUMPI POP PUSH1 0x9 SLOAD PUSH1 0xB SLOAD PUSH1 0xA SLOAD PUSH2 0x1A00 SWAP2 PUSH2 0x16C7 JUMP JUMPDEST LT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x9B7 JUMPI POP POP PUSH1 0x14 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0xB SLOAD PUSH1 0xA SLOAD PUSH2 0x1A2E SWAP2 SWAP1 PUSH2 0x2007 JUMP JUMPDEST SWAP1 POP PUSH1 0x9 SLOAD DUP2 LT ISZERO PUSH2 0x1A3D JUMPI POP JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0xB SLOAD SELFBALANCE SWAP1 PUSH2 0x1A58 SWAP1 PUSH2 0x1B07 JUMP JUMPDEST PUSH0 PUSH2 0x1A63 SELFBALANCE DUP4 PUSH2 0x133D JUMP JUMPDEST SWAP1 POP PUSH2 0x1A77 PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1AAC JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH1 0xA SLOAD PUSH0 PUSH2 0x1ABC DUP3 PUSH1 0x2 PUSH2 0x1353 JUMP JUMPDEST SWAP1 POP PUSH2 0x1AC7 DUP2 PUSH2 0x1B07 JUMP JUMPDEST PUSH0 PUSH2 0x1AD2 SELFBALANCE DUP6 PUSH2 0x133D JUMP JUMPDEST SWAP1 POP PUSH2 0x1AE7 PUSH2 0x1AE1 DUP5 DUP5 PUSH2 0x133D JUMP JUMPDEST DUP3 PUSH2 0x1C68 JUMP JUMPDEST POP POP PUSH0 PUSH1 0xA DUP2 SWAP1 SSTORE PUSH1 0xB SSTORE POP POP PUSH1 0xC DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE PUSH0 SWAP3 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP ADDRESS DUP2 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0x1B3A JUMPI PUSH2 0x1B3A PUSH2 0x2149 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x13 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP1 SWAP4 AND SWAP3 PUSH4 0xAD5C4648 SWAP3 PUSH1 0x4 DUP1 DUP4 ADD SWAP4 SWAP2 SWAP3 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1B91 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1BB5 SWAP2 SWAP1 PUSH2 0x208E JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1BC8 JUMPI PUSH2 0x1BC8 PUSH2 0x2149 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x13 SLOAD PUSH2 0x1BEE SWAP2 ADDRESS SWAP2 AND DUP5 PUSH2 0xE27 JUMP JUMPDEST PUSH1 0x13 SLOAD PUSH1 0x40 MLOAD PUSH4 0x18CBAFE5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x18CBAFE5 SWAP1 PUSH2 0x1C26 SWAP1 DUP6 SWAP1 PUSH0 SWAP1 DUP7 SWAP1 ADDRESS SWAP1 TIMESTAMP SWAP1 PUSH1 0x4 ADD PUSH2 0x215D JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1C41 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x1B02 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x21CE JUMP JUMPDEST PUSH1 0x13 SLOAD PUSH2 0x1C80 SWAP1 ADDRESS SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH2 0xE27 JUMP JUMPDEST PUSH1 0x13 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF305D719 DUP3 ADDRESS DUP6 PUSH0 DUP1 PUSH2 0x1CA8 PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xE0 DUP9 SWAP1 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x44 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x64 DUP4 ADD MSTORE SWAP1 SWAP2 AND PUSH1 0x84 DUP3 ADD MSTORE TIMESTAMP PUSH1 0xA4 DUP3 ADD MSTORE PUSH1 0xC4 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1D0E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1D33 SWAP2 SWAP1 PUSH2 0x2287 JUMP JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0x38F8A0C92F4C5B0B6877F878CB4C0C8D348A47B76D716C8E78F425043DF9515B SWAP3 POP ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xDAC JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1DCD JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1DD8 DUP2 PUSH2 0x1DA8 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0xFFFF DUP2 AND DUP2 EQ PUSH2 0x1DF7 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1E0F JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1E18 DUP6 PUSH2 0x1DE6 JUMP JUMPDEST SWAP4 POP PUSH2 0x1E26 PUSH1 0x20 DUP7 ADD PUSH2 0x1DE6 JUMP JUMPDEST SWAP3 POP PUSH2 0x1E34 PUSH1 0x40 DUP7 ADD PUSH2 0x1DE6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E42 PUSH1 0x60 DUP7 ADD PUSH2 0x1DE6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1E5F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x1E6A DUP2 PUSH2 0x1DA8 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x1E7A DUP2 PUSH2 0x1DA8 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E9B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x8D5 DUP2 PUSH2 0x1DA8 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1EB6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1DF7 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1EDD JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1EE8 DUP2 PUSH2 0x1DA8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EF6 PUSH1 0x20 DUP5 ADD PUSH2 0x1EBD JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F10 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1F1B DUP2 PUSH2 0x1DA8 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x1F2B DUP2 PUSH2 0x1DA8 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F47 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1F50 DUP4 PUSH2 0x1EBD JUMP JUMPDEST SWAP2 POP PUSH2 0x1EF6 PUSH1 0x20 DUP5 ADD PUSH2 0x1DE6 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xDAC JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F80 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1F89 DUP4 PUSH2 0x1EBD JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x1F2B DUP2 PUSH2 0x1F5E JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1FAD JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1FCB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0xFFFF DUP2 DUP2 AND DUP4 DUP3 AND ADD SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0x2000 JUMPI PUSH2 0x2000 PUSH2 0x1FD1 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x782 JUMPI PUSH2 0x782 PUSH2 0x1FD1 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0xFF SHL DUP3 ADD PUSH2 0x202E JUMPI PUSH2 0x202E PUSH2 0x1FD1 JUMP JUMPDEST POP PUSH0 SUB SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1DF7 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x205C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x2065 DUP5 PUSH2 0x2034 JUMP JUMPDEST SWAP3 POP PUSH2 0x2073 PUSH1 0x20 DUP6 ADD PUSH2 0x2034 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD MLOAD PUSH2 0x2083 DUP2 PUSH2 0x1F5E JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x209E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x8D5 DUP2 PUSH2 0x1DA8 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH2 0x20CB JUMPI PUSH2 0x20CB PUSH2 0x20A9 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP2 DUP2 AND DUP4 DUP3 AND MUL DUP1 DUP3 AND SWAP2 SWAP1 DUP3 DUP2 EQ PUSH2 0x20F0 JUMPI PUSH2 0x20F0 PUSH2 0x1FD1 JUMP JUMPDEST POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x782 JUMPI PUSH2 0x782 PUSH2 0x1FD1 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x782 JUMPI PUSH2 0x782 PUSH2 0x1FD1 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x2130 JUMPI PUSH2 0x2130 PUSH2 0x20A9 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD DUP8 DUP4 MSTORE PUSH1 0x20 DUP8 PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP6 ADD MSTORE DUP2 DUP8 MLOAD DUP1 DUP5 MSTORE PUSH1 0xC0 DUP7 ADD SWAP2 POP PUSH1 0x20 DUP10 ADD SWAP4 POP PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x21AD JUMPI DUP5 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP4 DUP4 ADD SWAP4 SWAP2 DUP4 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x2188 JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 SWAP1 SWAP7 AND PUSH1 0x60 DUP6 ADD MSTORE POP POP POP PUSH1 0x80 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x21DF JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x21F6 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2209 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x221B JUMPI PUSH2 0x221B PUSH2 0x2135 JUMP JUMPDEST DUP1 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT DUP6 DUP3 GT OR ISZERO PUSH2 0x2240 JUMPI PUSH2 0x2240 PUSH2 0x2135 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 DUP3 MSTORE DUP5 DUP3 ADD SWAP3 POP DUP4 DUP2 ADD DUP6 ADD SWAP2 DUP9 DUP4 GT ISZERO PUSH2 0x225D JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 DUP6 ADD SWAP4 JUMPDEST DUP3 DUP6 LT ISZERO PUSH2 0x227B JUMPI DUP5 MLOAD DUP5 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP3 DUP6 ADD SWAP3 PUSH2 0x2262 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2299 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 MLOAD SWAP3 POP PUSH1 0x20 DUP5 ADD MLOAD SWAP2 POP PUSH1 0x40 DUP5 ADD MLOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PC SELFDESTRUCT DUP1 0xE0 SWAP11 PREVRANDAO 0xAC DUP2 0xE 0xCA 0x1F PUSH31 0xC706D8A9E4D48933C73AACB957AC449DBA91CA2564736F6C63430008190033 ",
							"sourceMap": "1203:9829:6:-:0;;;1383:3;1346:40;;1630:2;1593:39;;1670:19;1685:4;1318:22;1670:19;:::i;:::-;1639:50;;2542:293;;;;;;;;;;1980:113:2;;;;;;;;;;;;;-1:-1:-1;;;1980:113:2;;;;;;;;;;;;;;;;-1:-1:-1;;;1980:113:2;;;2054:5;2046;:13;;;;;;:::i;:::-;-1:-1:-1;2069:7:2;:17;2079:7;2069;:17;:::i;:::-;;1980:113;;936:32:1;955:12;:10;;;:12;;:::i;:::-;936:18;:32::i;:::-;2603:31:6::2;2609:10;1318:22;2603:5;:31::i;:::-;2644:13;:30:::0;;-1:-1:-1;;;;;;2644:30:6::2;2272:42;2644:30;::::0;;2684:12:::2;:10;:12::i;:::-;2726:20;::::0;;::::2;::::0;::::2;::::0;;-1:-1:-1;2726:20:6;;;::::2;::::0;;::::2;::::0;;;;;;;;;;;;;;;;2715:8:::2;:31:::0;;-1:-1:-1;;;;;;2715:31:6;;;2770:10:::2;2761:20:::0;;:8:::2;:20:::0;;;;;;:27;;-1:-1:-1;;2761:27:6;;::::2;2715:31:::0;2761:27;;::::2;::::0;;;2815:4:::2;2798:23:::0;;;;;;:30;;;;::::2;;::::0;;1203:9829;;640:96:5;719:10;;640:96::o;2426:187:1:-;2518:6;;;-1:-1:-1;;;;;2534:17:1;;;-1:-1:-1;;;;;;2534:17:1;;;;;;;2566:40;;2518:6;;;2534:17;2518:6;;2566:40;;2499:16;;2566:40;2489:124;2426:187;:::o;8520:535:2:-;-1:-1:-1;;;;;8603:21:2;;8595:65;;;;-1:-1:-1;;;8595:65:2;;3125:2:7;8595:65:2;;;3107:21:7;3164:2;3144:18;;;3137:30;3203:33;3183:18;;;3176:61;3254:18;;8595:65:2;;;;;;;;8747:6;8731:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8899:18:2;;:9;:18;;;;;;;;;;;:28;;;;;;8952:37;3656:25:7;;;8952:37:2;;3629:18:7;8952:37:2;;;;;;;8520:535;;:::o;9596:200:6:-;9685:13;;;;;;;;;-1:-1:-1;;;;;9685:13:6;-1:-1:-1;;;;;9668:39:6;;:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;9650:84:6;;9743:4;9767:13;;;;;;;;;-1:-1:-1;;;;;9767:13:6;-1:-1:-1;;;;;9750:36:6;;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9650:139;;-1:-1:-1;;;;;;9650:139:6;;;;;;;-1:-1:-1;;;;;4217:15:7;;;9650:139:6;;;4199:34:7;4269:15;;4249:18;;;4242:43;4134:18;;9650:139:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9636:11;:153;;-1:-1:-1;;;;;;9636:153:6;-1:-1:-1;;;;;9636:153:6;;;;;;;;;;9596:200::o;12073:91:2:-;;;;:::o;14:217:7:-;54:1;80;70:132;;124:10;119:3;115:20;112:1;105:31;159:4;156:1;149:15;187:4;184:1;177:15;70:132;-1:-1:-1;216:9:7;;14:217::o;236:127::-;297:10;292:3;288:20;285:1;278:31;328:4;325:1;318:15;352:4;349:1;342:15;368:380;447:1;443:12;;;;490;;;511:61;;565:4;557:6;553:17;543:27;;511:61;618:2;610:6;607:14;587:18;584:38;581:161;;664:10;659:3;655:20;652:1;645:31;699:4;696:1;689:15;727:4;724:1;717:15;581:161;;368:380;;;:::o;879:518::-;981:2;976:3;973:11;970:421;;;1017:5;1014:1;1007:16;1061:4;1058:1;1048:18;1131:2;1119:10;1115:19;1112:1;1108:27;1102:4;1098:38;1167:4;1155:10;1152:20;1149:47;;;-1:-1:-1;1190:4:7;1149:47;1245:2;1240:3;1236:12;1233:1;1229:20;1223:4;1219:31;1209:41;;1300:81;1318:2;1311:5;1308:13;1300:81;;;1377:1;1363:16;;1344:1;1333:13;1300:81;;;1304:3;;879:518;;;:::o;1573:1345::-;1693:10;;-1:-1:-1;;;;;1715:30:7;;1712:56;;;1748:18;;:::i;:::-;1777:97;1867:6;1827:38;1859:4;1853:11;1827:38;:::i;:::-;1821:4;1777:97;:::i;:::-;1929:4;;1986:2;1975:14;;2003:1;1998:663;;;;2705:1;2722:6;2719:89;;;-1:-1:-1;2774:19:7;;;2768:26;2719:89;-1:-1:-1;;1530:1:7;1526:11;;;1522:24;1518:29;1508:40;1554:1;1550:11;;;1505:57;2821:81;;1968:944;;1998:663;826:1;819:14;;;863:4;850:18;;-1:-1:-1;;2034:20:7;;;2152:236;2166:7;2163:1;2160:14;2152:236;;;2255:19;;;2249:26;2234:42;;2347:27;;;;2315:1;2303:14;;;;2182:19;;2152:236;;;2156:3;2416:6;2407:7;2404:19;2401:201;;;2477:19;;;2471:26;-1:-1:-1;;2560:1:7;2556:14;;;2572:3;2552:24;2548:37;2544:42;2529:58;2514:74;;2401:201;;;2648:1;2639:6;2636:1;2632:14;2628:22;2622:4;2615:36;1968:944;;;;;1573:1345;;:::o;3283:222::-;3348:9;;;3369:10;;;3366:133;;;3421:10;3416:3;3412:20;3409:1;3402:31;3456:4;3453:1;3446:15;3484:4;3481:1;3474:15;3366:133;3283:222;;;;:::o;3692:290::-;3762:6;3815:2;3803:9;3794:7;3790:23;3786:32;3783:52;;;3831:1;3828;3821:12;3783:52;3857:16;;-1:-1:-1;;;;;3902:31:7;;3892:42;;3882:70;;3948:1;3945;3938:12;3882:70;3971:5;3692:290;-1:-1:-1;;;3692:290:7:o;3987:304::-;1203:9829:6;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_2390": {
									"entryPoint": null,
									"id": 2390,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_addLiquidity_2351": {
									"entryPoint": 7272,
									"id": 2351,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_afterTokenTransfer_1010": {
									"entryPoint": null,
									"id": 1010,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_945": {
									"entryPoint": 3623,
									"id": 945,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_999": {
									"entryPoint": 6914,
									"id": 999,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_calculateTax_1629": {
									"entryPoint": 5531,
									"id": 1629,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_checkOwner_366": {
									"entryPoint": 3914,
									"id": 366,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkPriceConditions_1814": {
									"entryPoint": 5349,
									"id": 1814,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_distributeTax_1726": {
									"entryPoint": 6260,
									"id": 1726,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_maxWalletSize_2365": {
									"entryPoint": 2447,
									"id": 2365,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_msgSender_1126": {
									"entryPoint": null,
									"id": 1126,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_setupPair_2250": {
									"entryPoint": 4958,
									"id": 2250,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_shouldSwapBack_2386": {
									"entryPoint": 6622,
									"id": 2386,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_988": {
									"entryPoint": 4004,
									"id": 988,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_swapAndLiquify_1911": {
									"entryPoint": 6685,
									"id": 1911,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_swapTokensForETH_2310": {
									"entryPoint": 6919,
									"id": 2310,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_423": {
									"entryPoint": 4844,
									"id": 423,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_1526": {
									"entryPoint": 4124,
									"id": 1526,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_771": {
									"entryPoint": 5842,
									"id": 771,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@accumulatedEco_1264": {
									"entryPoint": null,
									"id": 1264,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@accumulatedLp_1262": {
									"entryPoint": null,
									"id": 1262,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@add_175": {
									"entryPoint": 5831,
									"id": 175,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@allowance_566": {
									"entryPoint": 3340,
									"id": 566,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_591": {
									"entryPoint": 1903,
									"id": 591,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_523": {
									"entryPoint": null,
									"id": 523,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@configureCooldown_2187": {
									"entryPoint": 3553,
									"id": 2187,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@configureDiamondFloor_2209": {
									"entryPoint": 3503,
									"id": 2209,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@cooldownRemaining_2036": {
									"entryPoint": 2866,
									"id": 2036,
									"parameterSlots": 1,
									"returnSlots": 4
								},
								"@cooldown_1278": {
									"entryPoint": null,
									"id": 1278,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@decimals_499": {
									"entryPoint": null,
									"id": 499,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_694": {
									"entryPoint": 3088,
									"id": 694,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@diamondFloor_1292": {
									"entryPoint": null,
									"id": 1292,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@div_220": {
									"entryPoint": 4947,
									"id": 220,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_653": {
									"entryPoint": 2268,
									"id": 653,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isExempt_1303": {
									"entryPoint": null,
									"id": 1303,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@maxWalletPercentage_1237": {
									"entryPoint": null,
									"id": 1237,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mul_205": {
									"entryPoint": 4936,
									"id": 205,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_479": {
									"entryPoint": 1759,
									"id": 479,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_352": {
									"entryPoint": null,
									"id": 352,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pairAddress_1296": {
									"entryPoint": null,
									"id": 1296,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@pairPrice_1967": {
									"entryPoint": 2492,
									"id": 1967,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@priceDeviation_2091": {
									"entryPoint": 2320,
									"id": 2091,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_380": {
									"entryPoint": 2301,
									"id": 380,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@routerAddress_1294": {
									"entryPoint": null,
									"id": 1294,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setExempt_2225": {
									"entryPoint": 3038,
									"id": 2225,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setRouter_2110": {
									"entryPoint": 3234,
									"id": 2110,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setTaxRates_2151": {
									"entryPoint": 1928,
									"id": 2151,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setThreshold_2163": {
									"entryPoint": 2853,
									"id": 2163,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@sub_190": {
									"entryPoint": 4925,
									"id": 190,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@swapThreshold_1260": {
									"entryPoint": null,
									"id": 1260,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_489": {
									"entryPoint": 2838,
									"id": 489,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@taxRates_1252": {
									"entryPoint": null,
									"id": 1252,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalSupply_509": {
									"entryPoint": null,
									"id": 509,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_624": {
									"entryPoint": 2231,
									"id": 624,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_403": {
									"entryPoint": 3382,
									"id": 403,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_548": {
									"entryPoint": 3221,
									"id": 548,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_bool": {
									"entryPoint": 7869,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 7819,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 8334,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 7935,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 7757,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 7884,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 7612,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 8654,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_boolt_uint16": {
									"entryPoint": 7990,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_boolt_uint32": {
									"entryPoint": 8047,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint112t_uint112t_uint32_fromMemory": {
									"entryPoint": 8266,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_uint16t_uint16t_uint16t_uint16": {
									"entryPoint": 7676,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 7846,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256t_uint256_fromMemory": {
									"entryPoint": 8839,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_uint112_fromMemory": {
									"entryPoint": 8244,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_uint16": {
									"entryPoint": 7654,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_rational_0_by_1_t_rational_0_by_1_t_address_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 7,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool_t_uint16_t_uint256_t_bool_t_uint256__to_t_bool_t_uint16_t_uint256_t_bool_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool_t_uint32__to_t_bool_t_uint32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7539,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_30dd4f997a6ca09c24570e16af51c4dd5e70cd227c7036b9ebf2853f38eba550__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_74bfbd0e22b7de34cffebe5af74ea7eca5e99706ecb9129f4c3a64d8a95a2fa5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_77f71f16cf7fea8071257338db8d15c2b0742cafda4fe118dd4d019676d62627__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8b651597bafb95b427a4f660d871a5de5d1e311b7ec5bcd461acf7a21699d335__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_bf60dfdf0bc628580395fc38657d86ed24105efc4a69fdfae0dbdbb8a1ef6412__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d02ce7a72410a6351efcb149b27b582bc4ff73b7af05eaebe8fe75a22e828801__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint16_t_uint16_t_uint16_t_uint16__to_t_uint16_t_uint16_t_uint16_t_uint16__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_rational_0_by_1_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 8541,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint16": {
									"entryPoint": 8165,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 8199,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 8482,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 8459,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint32": {
									"entryPoint": 8400,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 8440,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 8089,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mod_t_uint256": {
									"entryPoint": 8381,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"negate_t_int256": {
									"entryPoint": 8218,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 8145,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 8361,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 8521,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 8501,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_address": {
									"entryPoint": 7592,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_uint32": {
									"entryPoint": 8030,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:18776:7",
										"nodeType": "YulBlock",
										"src": "0:18776:7",
										"statements": [
											{
												"nativeSrc": "6:3:7",
												"nodeType": "YulBlock",
												"src": "6:3:7",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "115:76:7",
													"nodeType": "YulBlock",
													"src": "115:76:7",
													"statements": [
														{
															"nativeSrc": "125:26:7",
															"nodeType": "YulAssignment",
															"src": "125:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "137:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "148:2:7",
																		"nodeType": "YulLiteral",
																		"src": "148:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "133:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:7"
																},
																"nativeSrc": "133:18:7",
																"nodeType": "YulFunctionCall",
																"src": "133:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "125:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "167:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:7"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "178:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "178:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "160:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:7"
																},
																"nativeSrc": "160:25:7",
																"nodeType": "YulFunctionCall",
																"src": "160:25:7"
															},
															"nativeSrc": "160:25:7",
															"nodeType": "YulExpressionStatement",
															"src": "160:25:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "14:177:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "84:9:7",
														"nodeType": "YulTypedName",
														"src": "84:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "95:6:7",
														"nodeType": "YulTypedName",
														"src": "95:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "106:4:7",
														"nodeType": "YulTypedName",
														"src": "106:4:7",
														"type": ""
													}
												],
												"src": "14:177:7"
											},
											{
												"body": {
													"nativeSrc": "317:297:7",
													"nodeType": "YulBlock",
													"src": "317:297:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "334:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "345:2:7",
																		"nodeType": "YulLiteral",
																		"src": "345:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "327:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "327:6:7"
																},
																"nativeSrc": "327:21:7",
																"nodeType": "YulFunctionCall",
																"src": "327:21:7"
															},
															"nativeSrc": "327:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "327:21:7"
														},
														{
															"nativeSrc": "357:27:7",
															"nodeType": "YulVariableDeclaration",
															"src": "357:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "377:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "377:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "371:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "371:5:7"
																},
																"nativeSrc": "371:13:7",
																"nodeType": "YulFunctionCall",
																"src": "371:13:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "361:6:7",
																	"nodeType": "YulTypedName",
																	"src": "361:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "404:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "404:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "415:2:7",
																				"nodeType": "YulLiteral",
																				"src": "415:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "400:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "400:3:7"
																		},
																		"nativeSrc": "400:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "400:18:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "420:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "420:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "393:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "393:6:7"
																},
																"nativeSrc": "393:34:7",
																"nodeType": "YulFunctionCall",
																"src": "393:34:7"
															},
															"nativeSrc": "393:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "393:34:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "446:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "446:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "457:2:7",
																				"nodeType": "YulLiteral",
																				"src": "457:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "442:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "442:3:7"
																		},
																		"nativeSrc": "442:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "442:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "466:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "466:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "474:2:7",
																				"nodeType": "YulLiteral",
																				"src": "474:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "462:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "462:3:7"
																		},
																		"nativeSrc": "462:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "462:15:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "479:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "479:6:7"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "436:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "436:5:7"
																},
																"nativeSrc": "436:50:7",
																"nodeType": "YulFunctionCall",
																"src": "436:50:7"
															},
															"nativeSrc": "436:50:7",
															"nodeType": "YulExpressionStatement",
															"src": "436:50:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "510:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "510:9:7"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "521:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "521:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "506:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "506:3:7"
																				},
																				"nativeSrc": "506:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "506:22:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "530:2:7",
																				"nodeType": "YulLiteral",
																				"src": "530:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "502:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "502:3:7"
																		},
																		"nativeSrc": "502:31:7",
																		"nodeType": "YulFunctionCall",
																		"src": "502:31:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "535:1:7",
																		"nodeType": "YulLiteral",
																		"src": "535:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "495:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "495:6:7"
																},
																"nativeSrc": "495:42:7",
																"nodeType": "YulFunctionCall",
																"src": "495:42:7"
															},
															"nativeSrc": "495:42:7",
															"nodeType": "YulExpressionStatement",
															"src": "495:42:7"
														},
														{
															"nativeSrc": "546:62:7",
															"nodeType": "YulAssignment",
															"src": "546:62:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "562:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "562:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "581:6:7",
																								"nodeType": "YulIdentifier",
																								"src": "581:6:7"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "589:2:7",
																								"nodeType": "YulLiteral",
																								"src": "589:2:7",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "577:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "577:3:7"
																						},
																						"nativeSrc": "577:15:7",
																						"nodeType": "YulFunctionCall",
																						"src": "577:15:7"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "598:2:7",
																								"nodeType": "YulLiteral",
																								"src": "598:2:7",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "594:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "594:3:7"
																						},
																						"nativeSrc": "594:7:7",
																						"nodeType": "YulFunctionCall",
																						"src": "594:7:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "573:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "573:3:7"
																				},
																				"nativeSrc": "573:29:7",
																				"nodeType": "YulFunctionCall",
																				"src": "573:29:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "558:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "558:3:7"
																		},
																		"nativeSrc": "558:45:7",
																		"nodeType": "YulFunctionCall",
																		"src": "558:45:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "605:2:7",
																		"nodeType": "YulLiteral",
																		"src": "605:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "554:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "554:3:7"
																},
																"nativeSrc": "554:54:7",
																"nodeType": "YulFunctionCall",
																"src": "554:54:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "546:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "546:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "196:418:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "286:9:7",
														"nodeType": "YulTypedName",
														"src": "286:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "297:6:7",
														"nodeType": "YulTypedName",
														"src": "297:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "308:4:7",
														"nodeType": "YulTypedName",
														"src": "308:4:7",
														"type": ""
													}
												],
												"src": "196:418:7"
											},
											{
												"body": {
													"nativeSrc": "664:86:7",
													"nodeType": "YulBlock",
													"src": "664:86:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "728:16:7",
																"nodeType": "YulBlock",
																"src": "728:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "737:1:7",
																					"nodeType": "YulLiteral",
																					"src": "737:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "740:1:7",
																					"nodeType": "YulLiteral",
																					"src": "740:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "730:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "730:6:7"
																			},
																			"nativeSrc": "730:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "730:12:7"
																		},
																		"nativeSrc": "730:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "730:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "687:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "687:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "698:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "698:5:7"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "713:3:7",
																										"nodeType": "YulLiteral",
																										"src": "713:3:7",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "718:1:7",
																										"nodeType": "YulLiteral",
																										"src": "718:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "709:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "709:3:7"
																								},
																								"nativeSrc": "709:11:7",
																								"nodeType": "YulFunctionCall",
																								"src": "709:11:7"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "722:1:7",
																								"nodeType": "YulLiteral",
																								"src": "722:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "705:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "705:3:7"
																						},
																						"nativeSrc": "705:19:7",
																						"nodeType": "YulFunctionCall",
																						"src": "705:19:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "694:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "694:3:7"
																				},
																				"nativeSrc": "694:31:7",
																				"nodeType": "YulFunctionCall",
																				"src": "694:31:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "684:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "684:2:7"
																		},
																		"nativeSrc": "684:42:7",
																		"nodeType": "YulFunctionCall",
																		"src": "684:42:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "677:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "677:6:7"
																},
																"nativeSrc": "677:50:7",
																"nodeType": "YulFunctionCall",
																"src": "677:50:7"
															},
															"nativeSrc": "674:70:7",
															"nodeType": "YulIf",
															"src": "674:70:7"
														}
													]
												},
												"name": "validator_revert_address",
												"nativeSrc": "619:131:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "653:5:7",
														"nodeType": "YulTypedName",
														"src": "653:5:7",
														"type": ""
													}
												],
												"src": "619:131:7"
											},
											{
												"body": {
													"nativeSrc": "842:228:7",
													"nodeType": "YulBlock",
													"src": "842:228:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "888:16:7",
																"nodeType": "YulBlock",
																"src": "888:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "897:1:7",
																					"nodeType": "YulLiteral",
																					"src": "897:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "900:1:7",
																					"nodeType": "YulLiteral",
																					"src": "900:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "890:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "890:6:7"
																			},
																			"nativeSrc": "890:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "890:12:7"
																		},
																		"nativeSrc": "890:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "890:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "863:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "863:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "872:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "872:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "859:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "859:3:7"
																		},
																		"nativeSrc": "859:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "859:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "884:2:7",
																		"nodeType": "YulLiteral",
																		"src": "884:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "855:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "855:3:7"
																},
																"nativeSrc": "855:32:7",
																"nodeType": "YulFunctionCall",
																"src": "855:32:7"
															},
															"nativeSrc": "852:52:7",
															"nodeType": "YulIf",
															"src": "852:52:7"
														},
														{
															"nativeSrc": "913:36:7",
															"nodeType": "YulVariableDeclaration",
															"src": "913:36:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "939:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "939:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "926:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "926:12:7"
																},
																"nativeSrc": "926:23:7",
																"nodeType": "YulFunctionCall",
																"src": "926:23:7"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "917:5:7",
																	"nodeType": "YulTypedName",
																	"src": "917:5:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "983:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "983:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "958:24:7",
																	"nodeType": "YulIdentifier",
																	"src": "958:24:7"
																},
																"nativeSrc": "958:31:7",
																"nodeType": "YulFunctionCall",
																"src": "958:31:7"
															},
															"nativeSrc": "958:31:7",
															"nodeType": "YulExpressionStatement",
															"src": "958:31:7"
														},
														{
															"nativeSrc": "998:15:7",
															"nodeType": "YulAssignment",
															"src": "998:15:7",
															"value": {
																"name": "value",
																"nativeSrc": "1008:5:7",
																"nodeType": "YulIdentifier",
																"src": "1008:5:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "998:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "998:6:7"
																}
															]
														},
														{
															"nativeSrc": "1022:42:7",
															"nodeType": "YulAssignment",
															"src": "1022:42:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1049:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1049:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1060:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1060:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1045:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1045:3:7"
																		},
																		"nativeSrc": "1045:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1045:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1032:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "1032:12:7"
																},
																"nativeSrc": "1032:32:7",
																"nodeType": "YulFunctionCall",
																"src": "1032:32:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1022:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1022:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "755:315:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "800:9:7",
														"nodeType": "YulTypedName",
														"src": "800:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "811:7:7",
														"nodeType": "YulTypedName",
														"src": "811:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "823:6:7",
														"nodeType": "YulTypedName",
														"src": "823:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "831:6:7",
														"nodeType": "YulTypedName",
														"src": "831:6:7",
														"type": ""
													}
												],
												"src": "755:315:7"
											},
											{
												"body": {
													"nativeSrc": "1170:92:7",
													"nodeType": "YulBlock",
													"src": "1170:92:7",
													"statements": [
														{
															"nativeSrc": "1180:26:7",
															"nodeType": "YulAssignment",
															"src": "1180:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1192:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1192:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1203:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1203:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1188:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1188:3:7"
																},
																"nativeSrc": "1188:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1188:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1180:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1180:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1222:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1222:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1247:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "1247:6:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1240:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "1240:6:7"
																				},
																				"nativeSrc": "1240:14:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1240:14:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1233:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "1233:6:7"
																		},
																		"nativeSrc": "1233:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1233:22:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1215:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1215:6:7"
																},
																"nativeSrc": "1215:41:7",
																"nodeType": "YulFunctionCall",
																"src": "1215:41:7"
															},
															"nativeSrc": "1215:41:7",
															"nodeType": "YulExpressionStatement",
															"src": "1215:41:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1075:187:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1139:9:7",
														"nodeType": "YulTypedName",
														"src": "1139:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1150:6:7",
														"nodeType": "YulTypedName",
														"src": "1150:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1161:4:7",
														"nodeType": "YulTypedName",
														"src": "1161:4:7",
														"type": ""
													}
												],
												"src": "1075:187:7"
											},
											{
												"body": {
													"nativeSrc": "1315:111:7",
													"nodeType": "YulBlock",
													"src": "1315:111:7",
													"statements": [
														{
															"nativeSrc": "1325:29:7",
															"nodeType": "YulAssignment",
															"src": "1325:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1347:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1347:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1334:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "1334:12:7"
																},
																"nativeSrc": "1334:20:7",
																"nodeType": "YulFunctionCall",
																"src": "1334:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1325:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1325:5:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1404:16:7",
																"nodeType": "YulBlock",
																"src": "1404:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1413:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1413:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1416:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1416:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1406:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1406:6:7"
																			},
																			"nativeSrc": "1406:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1406:12:7"
																		},
																		"nativeSrc": "1406:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1406:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1376:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1376:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1387:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "1387:5:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1394:6:7",
																						"nodeType": "YulLiteral",
																						"src": "1394:6:7",
																						"type": "",
																						"value": "0xffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "1383:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1383:3:7"
																				},
																				"nativeSrc": "1383:18:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1383:18:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1373:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "1373:2:7"
																		},
																		"nativeSrc": "1373:29:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1373:29:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1366:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1366:6:7"
																},
																"nativeSrc": "1366:37:7",
																"nodeType": "YulFunctionCall",
																"src": "1366:37:7"
															},
															"nativeSrc": "1363:57:7",
															"nodeType": "YulIf",
															"src": "1363:57:7"
														}
													]
												},
												"name": "abi_decode_uint16",
												"nativeSrc": "1267:159:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1294:6:7",
														"nodeType": "YulTypedName",
														"src": "1294:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1305:5:7",
														"nodeType": "YulTypedName",
														"src": "1305:5:7",
														"type": ""
													}
												],
												"src": "1267:159:7"
											},
											{
												"body": {
													"nativeSrc": "1548:284:7",
													"nodeType": "YulBlock",
													"src": "1548:284:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1595:16:7",
																"nodeType": "YulBlock",
																"src": "1595:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1604:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1604:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1607:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1607:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1597:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1597:6:7"
																			},
																			"nativeSrc": "1597:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1597:12:7"
																		},
																		"nativeSrc": "1597:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1597:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1569:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1569:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1578:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1578:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1565:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1565:3:7"
																		},
																		"nativeSrc": "1565:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1565:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1590:3:7",
																		"nodeType": "YulLiteral",
																		"src": "1590:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1561:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1561:3:7"
																},
																"nativeSrc": "1561:33:7",
																"nodeType": "YulFunctionCall",
																"src": "1561:33:7"
															},
															"nativeSrc": "1558:53:7",
															"nodeType": "YulIf",
															"src": "1558:53:7"
														},
														{
															"nativeSrc": "1620:38:7",
															"nodeType": "YulAssignment",
															"src": "1620:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1648:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1648:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint16",
																	"nativeSrc": "1630:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "1630:17:7"
																},
																"nativeSrc": "1630:28:7",
																"nodeType": "YulFunctionCall",
																"src": "1630:28:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1620:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1620:6:7"
																}
															]
														},
														{
															"nativeSrc": "1667:47:7",
															"nodeType": "YulAssignment",
															"src": "1667:47:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1699:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1699:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1710:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1710:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1695:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1695:3:7"
																		},
																		"nativeSrc": "1695:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1695:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint16",
																	"nativeSrc": "1677:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "1677:17:7"
																},
																"nativeSrc": "1677:37:7",
																"nodeType": "YulFunctionCall",
																"src": "1677:37:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1667:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1667:6:7"
																}
															]
														},
														{
															"nativeSrc": "1723:47:7",
															"nodeType": "YulAssignment",
															"src": "1723:47:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1755:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1755:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1766:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1766:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1751:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1751:3:7"
																		},
																		"nativeSrc": "1751:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1751:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint16",
																	"nativeSrc": "1733:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "1733:17:7"
																},
																"nativeSrc": "1733:37:7",
																"nodeType": "YulFunctionCall",
																"src": "1733:37:7"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1723:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1723:6:7"
																}
															]
														},
														{
															"nativeSrc": "1779:47:7",
															"nodeType": "YulAssignment",
															"src": "1779:47:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1811:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1811:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1822:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1822:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1807:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1807:3:7"
																		},
																		"nativeSrc": "1807:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1807:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint16",
																	"nativeSrc": "1789:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "1789:17:7"
																},
																"nativeSrc": "1789:37:7",
																"nodeType": "YulFunctionCall",
																"src": "1789:37:7"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "1779:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1779:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint16t_uint16t_uint16t_uint16",
												"nativeSrc": "1431:401:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1490:9:7",
														"nodeType": "YulTypedName",
														"src": "1490:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1501:7:7",
														"nodeType": "YulTypedName",
														"src": "1501:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1513:6:7",
														"nodeType": "YulTypedName",
														"src": "1513:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1521:6:7",
														"nodeType": "YulTypedName",
														"src": "1521:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1529:6:7",
														"nodeType": "YulTypedName",
														"src": "1529:6:7",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "1537:6:7",
														"nodeType": "YulTypedName",
														"src": "1537:6:7",
														"type": ""
													}
												],
												"src": "1431:401:7"
											},
											{
												"body": {
													"nativeSrc": "1941:352:7",
													"nodeType": "YulBlock",
													"src": "1941:352:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1987:16:7",
																"nodeType": "YulBlock",
																"src": "1987:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1996:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1996:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1999:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1999:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1989:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1989:6:7"
																			},
																			"nativeSrc": "1989:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1989:12:7"
																		},
																		"nativeSrc": "1989:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1989:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1962:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1962:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1971:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1971:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1958:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1958:3:7"
																		},
																		"nativeSrc": "1958:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1958:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1983:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1983:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1954:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1954:3:7"
																},
																"nativeSrc": "1954:32:7",
																"nodeType": "YulFunctionCall",
																"src": "1954:32:7"
															},
															"nativeSrc": "1951:52:7",
															"nodeType": "YulIf",
															"src": "1951:52:7"
														},
														{
															"nativeSrc": "2012:36:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2012:36:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2038:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2038:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2025:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "2025:12:7"
																},
																"nativeSrc": "2025:23:7",
																"nodeType": "YulFunctionCall",
																"src": "2025:23:7"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2016:5:7",
																	"nodeType": "YulTypedName",
																	"src": "2016:5:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2082:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2082:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "2057:24:7",
																	"nodeType": "YulIdentifier",
																	"src": "2057:24:7"
																},
																"nativeSrc": "2057:31:7",
																"nodeType": "YulFunctionCall",
																"src": "2057:31:7"
															},
															"nativeSrc": "2057:31:7",
															"nodeType": "YulExpressionStatement",
															"src": "2057:31:7"
														},
														{
															"nativeSrc": "2097:15:7",
															"nodeType": "YulAssignment",
															"src": "2097:15:7",
															"value": {
																"name": "value",
																"nativeSrc": "2107:5:7",
																"nodeType": "YulIdentifier",
																"src": "2107:5:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2097:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2097:6:7"
																}
															]
														},
														{
															"nativeSrc": "2121:47:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2121:47:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2153:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2153:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2164:2:7",
																				"nodeType": "YulLiteral",
																				"src": "2164:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2149:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2149:3:7"
																		},
																		"nativeSrc": "2149:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2149:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2136:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "2136:12:7"
																},
																"nativeSrc": "2136:32:7",
																"nodeType": "YulFunctionCall",
																"src": "2136:32:7"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "2125:7:7",
																	"nodeType": "YulTypedName",
																	"src": "2125:7:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nativeSrc": "2202:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "2202:7:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "2177:24:7",
																	"nodeType": "YulIdentifier",
																	"src": "2177:24:7"
																},
																"nativeSrc": "2177:33:7",
																"nodeType": "YulFunctionCall",
																"src": "2177:33:7"
															},
															"nativeSrc": "2177:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "2177:33:7"
														},
														{
															"nativeSrc": "2219:17:7",
															"nodeType": "YulAssignment",
															"src": "2219:17:7",
															"value": {
																"name": "value_1",
																"nativeSrc": "2229:7:7",
																"nodeType": "YulIdentifier",
																"src": "2229:7:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2219:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2219:6:7"
																}
															]
														},
														{
															"nativeSrc": "2245:42:7",
															"nodeType": "YulAssignment",
															"src": "2245:42:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2272:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2272:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2283:2:7",
																				"nodeType": "YulLiteral",
																				"src": "2283:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2268:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2268:3:7"
																		},
																		"nativeSrc": "2268:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2268:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2255:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "2255:12:7"
																},
																"nativeSrc": "2255:32:7",
																"nodeType": "YulFunctionCall",
																"src": "2255:32:7"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "2245:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2245:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "1837:456:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1891:9:7",
														"nodeType": "YulTypedName",
														"src": "1891:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1902:7:7",
														"nodeType": "YulTypedName",
														"src": "1902:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1914:6:7",
														"nodeType": "YulTypedName",
														"src": "1914:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1922:6:7",
														"nodeType": "YulTypedName",
														"src": "1922:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1930:6:7",
														"nodeType": "YulTypedName",
														"src": "1930:6:7",
														"type": ""
													}
												],
												"src": "1837:456:7"
											},
											{
												"body": {
													"nativeSrc": "2395:87:7",
													"nodeType": "YulBlock",
													"src": "2395:87:7",
													"statements": [
														{
															"nativeSrc": "2405:26:7",
															"nodeType": "YulAssignment",
															"src": "2405:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2417:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2417:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2428:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2428:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2413:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2413:3:7"
																},
																"nativeSrc": "2413:18:7",
																"nodeType": "YulFunctionCall",
																"src": "2413:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2405:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2405:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2447:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2447:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2462:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2462:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2470:4:7",
																				"nodeType": "YulLiteral",
																				"src": "2470:4:7",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2458:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2458:3:7"
																		},
																		"nativeSrc": "2458:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2458:17:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2440:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2440:6:7"
																},
																"nativeSrc": "2440:36:7",
																"nodeType": "YulFunctionCall",
																"src": "2440:36:7"
															},
															"nativeSrc": "2440:36:7",
															"nodeType": "YulExpressionStatement",
															"src": "2440:36:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "2298:184:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2364:9:7",
														"nodeType": "YulTypedName",
														"src": "2364:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2375:6:7",
														"nodeType": "YulTypedName",
														"src": "2375:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2386:4:7",
														"nodeType": "YulTypedName",
														"src": "2386:4:7",
														"type": ""
													}
												],
												"src": "2298:184:7"
											},
											{
												"body": {
													"nativeSrc": "2588:102:7",
													"nodeType": "YulBlock",
													"src": "2588:102:7",
													"statements": [
														{
															"nativeSrc": "2598:26:7",
															"nodeType": "YulAssignment",
															"src": "2598:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2610:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2610:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2621:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2621:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2606:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2606:3:7"
																},
																"nativeSrc": "2606:18:7",
																"nodeType": "YulFunctionCall",
																"src": "2606:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2598:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2598:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2640:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2640:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2655:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2655:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2671:3:7",
																								"nodeType": "YulLiteral",
																								"src": "2671:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2676:1:7",
																								"nodeType": "YulLiteral",
																								"src": "2676:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2667:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "2667:3:7"
																						},
																						"nativeSrc": "2667:11:7",
																						"nodeType": "YulFunctionCall",
																						"src": "2667:11:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2680:1:7",
																						"nodeType": "YulLiteral",
																						"src": "2680:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2663:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2663:3:7"
																				},
																				"nativeSrc": "2663:19:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2663:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2651:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2651:3:7"
																		},
																		"nativeSrc": "2651:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2651:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2633:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2633:6:7"
																},
																"nativeSrc": "2633:51:7",
																"nodeType": "YulFunctionCall",
																"src": "2633:51:7"
															},
															"nativeSrc": "2633:51:7",
															"nodeType": "YulExpressionStatement",
															"src": "2633:51:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2487:203:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2557:9:7",
														"nodeType": "YulTypedName",
														"src": "2557:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2568:6:7",
														"nodeType": "YulTypedName",
														"src": "2568:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2579:4:7",
														"nodeType": "YulTypedName",
														"src": "2579:4:7",
														"type": ""
													}
												],
												"src": "2487:203:7"
											},
											{
												"body": {
													"nativeSrc": "2872:267:7",
													"nodeType": "YulBlock",
													"src": "2872:267:7",
													"statements": [
														{
															"nativeSrc": "2882:27:7",
															"nodeType": "YulAssignment",
															"src": "2882:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2894:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2894:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2905:3:7",
																		"nodeType": "YulLiteral",
																		"src": "2905:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2890:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2890:3:7"
																},
																"nativeSrc": "2890:19:7",
																"nodeType": "YulFunctionCall",
																"src": "2890:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2882:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2882:4:7"
																}
															]
														},
														{
															"nativeSrc": "2918:16:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2918:16:7",
															"value": {
																"kind": "number",
																"nativeSrc": "2928:6:7",
																"nodeType": "YulLiteral",
																"src": "2928:6:7",
																"type": "",
																"value": "0xffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "2922:2:7",
																	"nodeType": "YulTypedName",
																	"src": "2922:2:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2950:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2950:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2965:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2965:6:7"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "2973:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "2973:2:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2961:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2961:3:7"
																		},
																		"nativeSrc": "2961:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2961:15:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2943:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2943:6:7"
																},
																"nativeSrc": "2943:34:7",
																"nodeType": "YulFunctionCall",
																"src": "2943:34:7"
															},
															"nativeSrc": "2943:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "2943:34:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2997:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2997:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3008:2:7",
																				"nodeType": "YulLiteral",
																				"src": "3008:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2993:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2993:3:7"
																		},
																		"nativeSrc": "2993:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2993:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "3017:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3017:6:7"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "3025:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "3025:2:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3013:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3013:3:7"
																		},
																		"nativeSrc": "3013:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3013:15:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2986:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2986:6:7"
																},
																"nativeSrc": "2986:43:7",
																"nodeType": "YulFunctionCall",
																"src": "2986:43:7"
															},
															"nativeSrc": "2986:43:7",
															"nodeType": "YulExpressionStatement",
															"src": "2986:43:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3049:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3049:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3060:2:7",
																				"nodeType": "YulLiteral",
																				"src": "3060:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3045:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3045:3:7"
																		},
																		"nativeSrc": "3045:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3045:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nativeSrc": "3069:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3069:6:7"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "3077:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "3077:2:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3065:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3065:3:7"
																		},
																		"nativeSrc": "3065:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3065:15:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3038:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3038:6:7"
																},
																"nativeSrc": "3038:43:7",
																"nodeType": "YulFunctionCall",
																"src": "3038:43:7"
															},
															"nativeSrc": "3038:43:7",
															"nodeType": "YulExpressionStatement",
															"src": "3038:43:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3101:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3101:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3112:2:7",
																				"nodeType": "YulLiteral",
																				"src": "3112:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3097:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3097:3:7"
																		},
																		"nativeSrc": "3097:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3097:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value3",
																				"nativeSrc": "3121:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3121:6:7"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "3129:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "3129:2:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3117:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3117:3:7"
																		},
																		"nativeSrc": "3117:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3117:15:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3090:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3090:6:7"
																},
																"nativeSrc": "3090:43:7",
																"nodeType": "YulFunctionCall",
																"src": "3090:43:7"
															},
															"nativeSrc": "3090:43:7",
															"nodeType": "YulExpressionStatement",
															"src": "3090:43:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint16_t_uint16_t_uint16_t_uint16__to_t_uint16_t_uint16_t_uint16_t_uint16__fromStack_reversed",
												"nativeSrc": "2695:444:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2817:9:7",
														"nodeType": "YulTypedName",
														"src": "2817:9:7",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "2828:6:7",
														"nodeType": "YulTypedName",
														"src": "2828:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2836:6:7",
														"nodeType": "YulTypedName",
														"src": "2836:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2844:6:7",
														"nodeType": "YulTypedName",
														"src": "2844:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2852:6:7",
														"nodeType": "YulTypedName",
														"src": "2852:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2863:4:7",
														"nodeType": "YulTypedName",
														"src": "2863:4:7",
														"type": ""
													}
												],
												"src": "2695:444:7"
											},
											{
												"body": {
													"nativeSrc": "3214:177:7",
													"nodeType": "YulBlock",
													"src": "3214:177:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3260:16:7",
																"nodeType": "YulBlock",
																"src": "3260:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3269:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3269:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3272:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3272:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3262:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3262:6:7"
																			},
																			"nativeSrc": "3262:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3262:12:7"
																		},
																		"nativeSrc": "3262:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3262:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3235:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3235:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3244:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3244:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3231:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3231:3:7"
																		},
																		"nativeSrc": "3231:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3231:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3256:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3256:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3227:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3227:3:7"
																},
																"nativeSrc": "3227:32:7",
																"nodeType": "YulFunctionCall",
																"src": "3227:32:7"
															},
															"nativeSrc": "3224:52:7",
															"nodeType": "YulIf",
															"src": "3224:52:7"
														},
														{
															"nativeSrc": "3285:36:7",
															"nodeType": "YulVariableDeclaration",
															"src": "3285:36:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3311:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3311:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3298:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "3298:12:7"
																},
																"nativeSrc": "3298:23:7",
																"nodeType": "YulFunctionCall",
																"src": "3298:23:7"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "3289:5:7",
																	"nodeType": "YulTypedName",
																	"src": "3289:5:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3355:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "3355:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "3330:24:7",
																	"nodeType": "YulIdentifier",
																	"src": "3330:24:7"
																},
																"nativeSrc": "3330:31:7",
																"nodeType": "YulFunctionCall",
																"src": "3330:31:7"
															},
															"nativeSrc": "3330:31:7",
															"nodeType": "YulExpressionStatement",
															"src": "3330:31:7"
														},
														{
															"nativeSrc": "3370:15:7",
															"nodeType": "YulAssignment",
															"src": "3370:15:7",
															"value": {
																"name": "value",
																"nativeSrc": "3380:5:7",
																"nodeType": "YulIdentifier",
																"src": "3380:5:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3370:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3370:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "3144:247:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3180:9:7",
														"nodeType": "YulTypedName",
														"src": "3180:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3191:7:7",
														"nodeType": "YulTypedName",
														"src": "3191:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3203:6:7",
														"nodeType": "YulTypedName",
														"src": "3203:6:7",
														"type": ""
													}
												],
												"src": "3144:247:7"
											},
											{
												"body": {
													"nativeSrc": "3495:76:7",
													"nodeType": "YulBlock",
													"src": "3495:76:7",
													"statements": [
														{
															"nativeSrc": "3505:26:7",
															"nodeType": "YulAssignment",
															"src": "3505:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3517:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3517:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3528:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3528:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3513:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3513:3:7"
																},
																"nativeSrc": "3513:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3513:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3505:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3505:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3547:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3547:9:7"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "3558:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3558:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3540:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3540:6:7"
																},
																"nativeSrc": "3540:25:7",
																"nodeType": "YulFunctionCall",
																"src": "3540:25:7"
															},
															"nativeSrc": "3540:25:7",
															"nodeType": "YulExpressionStatement",
															"src": "3540:25:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed",
												"nativeSrc": "3396:175:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3464:9:7",
														"nodeType": "YulTypedName",
														"src": "3464:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3475:6:7",
														"nodeType": "YulTypedName",
														"src": "3475:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3486:4:7",
														"nodeType": "YulTypedName",
														"src": "3486:4:7",
														"type": ""
													}
												],
												"src": "3396:175:7"
											},
											{
												"body": {
													"nativeSrc": "3697:152:7",
													"nodeType": "YulBlock",
													"src": "3697:152:7",
													"statements": [
														{
															"nativeSrc": "3707:26:7",
															"nodeType": "YulAssignment",
															"src": "3707:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3719:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3719:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3730:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3730:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3715:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3715:3:7"
																},
																"nativeSrc": "3715:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3715:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3707:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3707:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3749:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3749:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "3774:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "3774:6:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "3767:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "3767:6:7"
																				},
																				"nativeSrc": "3767:14:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3767:14:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "3760:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3760:6:7"
																		},
																		"nativeSrc": "3760:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3760:22:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3742:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3742:6:7"
																},
																"nativeSrc": "3742:41:7",
																"nodeType": "YulFunctionCall",
																"src": "3742:41:7"
															},
															"nativeSrc": "3742:41:7",
															"nodeType": "YulExpressionStatement",
															"src": "3742:41:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3803:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3803:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3814:2:7",
																				"nodeType": "YulLiteral",
																				"src": "3814:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3799:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3799:3:7"
																		},
																		"nativeSrc": "3799:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3799:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "3823:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3823:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3831:10:7",
																				"nodeType": "YulLiteral",
																				"src": "3831:10:7",
																				"type": "",
																				"value": "0xffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3819:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3819:3:7"
																		},
																		"nativeSrc": "3819:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3819:23:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3792:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3792:6:7"
																},
																"nativeSrc": "3792:51:7",
																"nodeType": "YulFunctionCall",
																"src": "3792:51:7"
															},
															"nativeSrc": "3792:51:7",
															"nodeType": "YulExpressionStatement",
															"src": "3792:51:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool_t_uint32__to_t_bool_t_uint32__fromStack_reversed",
												"nativeSrc": "3576:273:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3658:9:7",
														"nodeType": "YulTypedName",
														"src": "3658:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3669:6:7",
														"nodeType": "YulTypedName",
														"src": "3669:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3677:6:7",
														"nodeType": "YulTypedName",
														"src": "3677:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3688:4:7",
														"nodeType": "YulTypedName",
														"src": "3688:4:7",
														"type": ""
													}
												],
												"src": "3576:273:7"
											},
											{
												"body": {
													"nativeSrc": "3924:110:7",
													"nodeType": "YulBlock",
													"src": "3924:110:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3970:16:7",
																"nodeType": "YulBlock",
																"src": "3970:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3979:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3979:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3982:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3982:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3972:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3972:6:7"
																			},
																			"nativeSrc": "3972:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3972:12:7"
																		},
																		"nativeSrc": "3972:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3972:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3945:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3945:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3954:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3954:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3941:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3941:3:7"
																		},
																		"nativeSrc": "3941:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3941:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3966:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3966:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3937:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3937:3:7"
																},
																"nativeSrc": "3937:32:7",
																"nodeType": "YulFunctionCall",
																"src": "3937:32:7"
															},
															"nativeSrc": "3934:52:7",
															"nodeType": "YulIf",
															"src": "3934:52:7"
														},
														{
															"nativeSrc": "3995:33:7",
															"nodeType": "YulAssignment",
															"src": "3995:33:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4018:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4018:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4005:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "4005:12:7"
																},
																"nativeSrc": "4005:23:7",
																"nodeType": "YulFunctionCall",
																"src": "4005:23:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3995:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3995:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "3854:180:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3890:9:7",
														"nodeType": "YulTypedName",
														"src": "3890:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3901:7:7",
														"nodeType": "YulTypedName",
														"src": "3901:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3913:6:7",
														"nodeType": "YulTypedName",
														"src": "3913:6:7",
														"type": ""
													}
												],
												"src": "3854:180:7"
											},
											{
												"body": {
													"nativeSrc": "4224:206:7",
													"nodeType": "YulBlock",
													"src": "4224:206:7",
													"statements": [
														{
															"nativeSrc": "4234:27:7",
															"nodeType": "YulAssignment",
															"src": "4234:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4246:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4246:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4257:3:7",
																		"nodeType": "YulLiteral",
																		"src": "4257:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4242:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4242:3:7"
																},
																"nativeSrc": "4242:19:7",
																"nodeType": "YulFunctionCall",
																"src": "4242:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4234:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4234:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4277:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4277:9:7"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "4288:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4288:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4270:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4270:6:7"
																},
																"nativeSrc": "4270:25:7",
																"nodeType": "YulFunctionCall",
																"src": "4270:25:7"
															},
															"nativeSrc": "4270:25:7",
															"nodeType": "YulExpressionStatement",
															"src": "4270:25:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4315:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4315:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4326:2:7",
																				"nodeType": "YulLiteral",
																				"src": "4326:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4311:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4311:3:7"
																		},
																		"nativeSrc": "4311:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4311:18:7"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "4331:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4331:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4304:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4304:6:7"
																},
																"nativeSrc": "4304:34:7",
																"nodeType": "YulFunctionCall",
																"src": "4304:34:7"
															},
															"nativeSrc": "4304:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "4304:34:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4358:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4358:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4369:2:7",
																				"nodeType": "YulLiteral",
																				"src": "4369:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4354:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4354:3:7"
																		},
																		"nativeSrc": "4354:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4354:18:7"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "4374:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4374:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4347:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4347:6:7"
																},
																"nativeSrc": "4347:34:7",
																"nodeType": "YulFunctionCall",
																"src": "4347:34:7"
															},
															"nativeSrc": "4347:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "4347:34:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4401:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4401:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4412:2:7",
																				"nodeType": "YulLiteral",
																				"src": "4412:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4397:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4397:3:7"
																		},
																		"nativeSrc": "4397:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4397:18:7"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "4417:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4417:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4390:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4390:6:7"
																},
																"nativeSrc": "4390:34:7",
																"nodeType": "YulFunctionCall",
																"src": "4390:34:7"
															},
															"nativeSrc": "4390:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "4390:34:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "4039:391:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4169:9:7",
														"nodeType": "YulTypedName",
														"src": "4169:9:7",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "4180:6:7",
														"nodeType": "YulTypedName",
														"src": "4180:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4188:6:7",
														"nodeType": "YulTypedName",
														"src": "4188:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4196:6:7",
														"nodeType": "YulTypedName",
														"src": "4196:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4204:6:7",
														"nodeType": "YulTypedName",
														"src": "4204:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4215:4:7",
														"nodeType": "YulTypedName",
														"src": "4215:4:7",
														"type": ""
													}
												],
												"src": "4039:391:7"
											},
											{
												"body": {
													"nativeSrc": "4481:114:7",
													"nodeType": "YulBlock",
													"src": "4481:114:7",
													"statements": [
														{
															"nativeSrc": "4491:29:7",
															"nodeType": "YulAssignment",
															"src": "4491:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4513:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4513:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4500:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "4500:12:7"
																},
																"nativeSrc": "4500:20:7",
																"nodeType": "YulFunctionCall",
																"src": "4500:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4491:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "4491:5:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4573:16:7",
																"nodeType": "YulBlock",
																"src": "4573:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4582:1:7",
																					"nodeType": "YulLiteral",
																					"src": "4582:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4585:1:7",
																					"nodeType": "YulLiteral",
																					"src": "4585:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4575:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "4575:6:7"
																			},
																			"nativeSrc": "4575:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4575:12:7"
																		},
																		"nativeSrc": "4575:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4575:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4542:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "4542:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "4563:5:7",
																								"nodeType": "YulIdentifier",
																								"src": "4563:5:7"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "4556:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "4556:6:7"
																						},
																						"nativeSrc": "4556:13:7",
																						"nodeType": "YulFunctionCall",
																						"src": "4556:13:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "4549:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "4549:6:7"
																				},
																				"nativeSrc": "4549:21:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4549:21:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4539:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "4539:2:7"
																		},
																		"nativeSrc": "4539:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4539:32:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4532:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4532:6:7"
																},
																"nativeSrc": "4532:40:7",
																"nodeType": "YulFunctionCall",
																"src": "4532:40:7"
															},
															"nativeSrc": "4529:60:7",
															"nodeType": "YulIf",
															"src": "4529:60:7"
														}
													]
												},
												"name": "abi_decode_bool",
												"nativeSrc": "4435:160:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4460:6:7",
														"nodeType": "YulTypedName",
														"src": "4460:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4471:5:7",
														"nodeType": "YulTypedName",
														"src": "4471:5:7",
														"type": ""
													}
												],
												"src": "4435:160:7"
											},
											{
												"body": {
													"nativeSrc": "4684:231:7",
													"nodeType": "YulBlock",
													"src": "4684:231:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "4730:16:7",
																"nodeType": "YulBlock",
																"src": "4730:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4739:1:7",
																					"nodeType": "YulLiteral",
																					"src": "4739:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4742:1:7",
																					"nodeType": "YulLiteral",
																					"src": "4742:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4732:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "4732:6:7"
																			},
																			"nativeSrc": "4732:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4732:12:7"
																		},
																		"nativeSrc": "4732:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4732:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4705:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4705:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4714:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4714:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4701:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4701:3:7"
																		},
																		"nativeSrc": "4701:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4701:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4726:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4726:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4697:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4697:3:7"
																},
																"nativeSrc": "4697:32:7",
																"nodeType": "YulFunctionCall",
																"src": "4697:32:7"
															},
															"nativeSrc": "4694:52:7",
															"nodeType": "YulIf",
															"src": "4694:52:7"
														},
														{
															"nativeSrc": "4755:36:7",
															"nodeType": "YulVariableDeclaration",
															"src": "4755:36:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4781:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4781:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4768:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "4768:12:7"
																},
																"nativeSrc": "4768:23:7",
																"nodeType": "YulFunctionCall",
																"src": "4768:23:7"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "4759:5:7",
																	"nodeType": "YulTypedName",
																	"src": "4759:5:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4825:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "4825:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "4800:24:7",
																	"nodeType": "YulIdentifier",
																	"src": "4800:24:7"
																},
																"nativeSrc": "4800:31:7",
																"nodeType": "YulFunctionCall",
																"src": "4800:31:7"
															},
															"nativeSrc": "4800:31:7",
															"nodeType": "YulExpressionStatement",
															"src": "4800:31:7"
														},
														{
															"nativeSrc": "4840:15:7",
															"nodeType": "YulAssignment",
															"src": "4840:15:7",
															"value": {
																"name": "value",
																"nativeSrc": "4850:5:7",
																"nodeType": "YulIdentifier",
																"src": "4850:5:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4840:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4840:6:7"
																}
															]
														},
														{
															"nativeSrc": "4864:45:7",
															"nodeType": "YulAssignment",
															"src": "4864:45:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4894:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4894:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4905:2:7",
																				"nodeType": "YulLiteral",
																				"src": "4905:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4890:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4890:3:7"
																		},
																		"nativeSrc": "4890:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4890:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bool",
																	"nativeSrc": "4874:15:7",
																	"nodeType": "YulIdentifier",
																	"src": "4874:15:7"
																},
																"nativeSrc": "4874:35:7",
																"nodeType": "YulFunctionCall",
																"src": "4874:35:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "4864:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4864:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "4600:315:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4642:9:7",
														"nodeType": "YulTypedName",
														"src": "4642:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4653:7:7",
														"nodeType": "YulTypedName",
														"src": "4653:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4665:6:7",
														"nodeType": "YulTypedName",
														"src": "4665:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4673:6:7",
														"nodeType": "YulTypedName",
														"src": "4673:6:7",
														"type": ""
													}
												],
												"src": "4600:315:7"
											},
											{
												"body": {
													"nativeSrc": "5119:295:7",
													"nodeType": "YulBlock",
													"src": "5119:295:7",
													"statements": [
														{
															"nativeSrc": "5129:27:7",
															"nodeType": "YulAssignment",
															"src": "5129:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5141:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5141:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5152:3:7",
																		"nodeType": "YulLiteral",
																		"src": "5152:3:7",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5137:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5137:3:7"
																},
																"nativeSrc": "5137:19:7",
																"nodeType": "YulFunctionCall",
																"src": "5137:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5129:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5129:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5172:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5172:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "5197:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5197:6:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "5190:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "5190:6:7"
																				},
																				"nativeSrc": "5190:14:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5190:14:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "5183:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "5183:6:7"
																		},
																		"nativeSrc": "5183:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5183:22:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5165:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5165:6:7"
																},
																"nativeSrc": "5165:41:7",
																"nodeType": "YulFunctionCall",
																"src": "5165:41:7"
															},
															"nativeSrc": "5165:41:7",
															"nodeType": "YulExpressionStatement",
															"src": "5165:41:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5226:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5226:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5237:2:7",
																				"nodeType": "YulLiteral",
																				"src": "5237:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5222:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5222:3:7"
																		},
																		"nativeSrc": "5222:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5222:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "5246:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "5246:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5254:6:7",
																				"nodeType": "YulLiteral",
																				"src": "5254:6:7",
																				"type": "",
																				"value": "0xffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5242:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5242:3:7"
																		},
																		"nativeSrc": "5242:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5242:19:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5215:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5215:6:7"
																},
																"nativeSrc": "5215:47:7",
																"nodeType": "YulFunctionCall",
																"src": "5215:47:7"
															},
															"nativeSrc": "5215:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "5215:47:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5282:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5282:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5293:2:7",
																				"nodeType": "YulLiteral",
																				"src": "5293:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5278:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5278:3:7"
																		},
																		"nativeSrc": "5278:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5278:18:7"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "5298:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5298:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5271:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5271:6:7"
																},
																"nativeSrc": "5271:34:7",
																"nodeType": "YulFunctionCall",
																"src": "5271:34:7"
															},
															"nativeSrc": "5271:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "5271:34:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5325:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5325:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5336:2:7",
																				"nodeType": "YulLiteral",
																				"src": "5336:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5321:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5321:3:7"
																		},
																		"nativeSrc": "5321:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5321:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value3",
																						"nativeSrc": "5355:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5355:6:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "5348:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "5348:6:7"
																				},
																				"nativeSrc": "5348:14:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5348:14:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "5341:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "5341:6:7"
																		},
																		"nativeSrc": "5341:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5341:22:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5314:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5314:6:7"
																},
																"nativeSrc": "5314:50:7",
																"nodeType": "YulFunctionCall",
																"src": "5314:50:7"
															},
															"nativeSrc": "5314:50:7",
															"nodeType": "YulExpressionStatement",
															"src": "5314:50:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5384:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5384:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5395:3:7",
																				"nodeType": "YulLiteral",
																				"src": "5395:3:7",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5380:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5380:3:7"
																		},
																		"nativeSrc": "5380:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5380:19:7"
																	},
																	{
																		"name": "value4",
																		"nativeSrc": "5401:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5401:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5373:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5373:6:7"
																},
																"nativeSrc": "5373:35:7",
																"nodeType": "YulFunctionCall",
																"src": "5373:35:7"
															},
															"nativeSrc": "5373:35:7",
															"nodeType": "YulExpressionStatement",
															"src": "5373:35:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool_t_uint16_t_uint256_t_bool_t_uint256__to_t_bool_t_uint16_t_uint256_t_bool_t_uint256__fromStack_reversed",
												"nativeSrc": "4920:494:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5056:9:7",
														"nodeType": "YulTypedName",
														"src": "5056:9:7",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "5067:6:7",
														"nodeType": "YulTypedName",
														"src": "5067:6:7",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "5075:6:7",
														"nodeType": "YulTypedName",
														"src": "5075:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5083:6:7",
														"nodeType": "YulTypedName",
														"src": "5083:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5091:6:7",
														"nodeType": "YulTypedName",
														"src": "5091:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5099:6:7",
														"nodeType": "YulTypedName",
														"src": "5099:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5110:4:7",
														"nodeType": "YulTypedName",
														"src": "5110:4:7",
														"type": ""
													}
												],
												"src": "4920:494:7"
											},
											{
												"body": {
													"nativeSrc": "5506:301:7",
													"nodeType": "YulBlock",
													"src": "5506:301:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "5552:16:7",
																"nodeType": "YulBlock",
																"src": "5552:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5561:1:7",
																					"nodeType": "YulLiteral",
																					"src": "5561:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5564:1:7",
																					"nodeType": "YulLiteral",
																					"src": "5564:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5554:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "5554:6:7"
																			},
																			"nativeSrc": "5554:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5554:12:7"
																		},
																		"nativeSrc": "5554:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5554:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5527:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5527:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5536:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5536:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5523:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5523:3:7"
																		},
																		"nativeSrc": "5523:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5523:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5548:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5548:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5519:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5519:3:7"
																},
																"nativeSrc": "5519:32:7",
																"nodeType": "YulFunctionCall",
																"src": "5519:32:7"
															},
															"nativeSrc": "5516:52:7",
															"nodeType": "YulIf",
															"src": "5516:52:7"
														},
														{
															"nativeSrc": "5577:36:7",
															"nodeType": "YulVariableDeclaration",
															"src": "5577:36:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5603:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5603:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5590:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "5590:12:7"
																},
																"nativeSrc": "5590:23:7",
																"nodeType": "YulFunctionCall",
																"src": "5590:23:7"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "5581:5:7",
																	"nodeType": "YulTypedName",
																	"src": "5581:5:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5647:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "5647:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "5622:24:7",
																	"nodeType": "YulIdentifier",
																	"src": "5622:24:7"
																},
																"nativeSrc": "5622:31:7",
																"nodeType": "YulFunctionCall",
																"src": "5622:31:7"
															},
															"nativeSrc": "5622:31:7",
															"nodeType": "YulExpressionStatement",
															"src": "5622:31:7"
														},
														{
															"nativeSrc": "5662:15:7",
															"nodeType": "YulAssignment",
															"src": "5662:15:7",
															"value": {
																"name": "value",
																"nativeSrc": "5672:5:7",
																"nodeType": "YulIdentifier",
																"src": "5672:5:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "5662:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5662:6:7"
																}
															]
														},
														{
															"nativeSrc": "5686:47:7",
															"nodeType": "YulVariableDeclaration",
															"src": "5686:47:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5718:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5718:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5729:2:7",
																				"nodeType": "YulLiteral",
																				"src": "5729:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5714:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5714:3:7"
																		},
																		"nativeSrc": "5714:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5714:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5701:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "5701:12:7"
																},
																"nativeSrc": "5701:32:7",
																"nodeType": "YulFunctionCall",
																"src": "5701:32:7"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "5690:7:7",
																	"nodeType": "YulTypedName",
																	"src": "5690:7:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nativeSrc": "5767:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "5767:7:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "5742:24:7",
																	"nodeType": "YulIdentifier",
																	"src": "5742:24:7"
																},
																"nativeSrc": "5742:33:7",
																"nodeType": "YulFunctionCall",
																"src": "5742:33:7"
															},
															"nativeSrc": "5742:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "5742:33:7"
														},
														{
															"nativeSrc": "5784:17:7",
															"nodeType": "YulAssignment",
															"src": "5784:17:7",
															"value": {
																"name": "value_1",
																"nativeSrc": "5794:7:7",
																"nodeType": "YulIdentifier",
																"src": "5794:7:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "5784:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5784:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "5419:388:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5464:9:7",
														"nodeType": "YulTypedName",
														"src": "5464:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5475:7:7",
														"nodeType": "YulTypedName",
														"src": "5475:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5487:6:7",
														"nodeType": "YulTypedName",
														"src": "5487:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5495:6:7",
														"nodeType": "YulTypedName",
														"src": "5495:6:7",
														"type": ""
													}
												],
												"src": "5419:388:7"
											},
											{
												"body": {
													"nativeSrc": "5895:169:7",
													"nodeType": "YulBlock",
													"src": "5895:169:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "5941:16:7",
																"nodeType": "YulBlock",
																"src": "5941:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5950:1:7",
																					"nodeType": "YulLiteral",
																					"src": "5950:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5953:1:7",
																					"nodeType": "YulLiteral",
																					"src": "5953:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5943:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "5943:6:7"
																			},
																			"nativeSrc": "5943:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5943:12:7"
																		},
																		"nativeSrc": "5943:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5943:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5916:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5916:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5925:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5925:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5912:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5912:3:7"
																		},
																		"nativeSrc": "5912:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5912:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5937:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5937:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5908:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5908:3:7"
																},
																"nativeSrc": "5908:32:7",
																"nodeType": "YulFunctionCall",
																"src": "5908:32:7"
															},
															"nativeSrc": "5905:52:7",
															"nodeType": "YulIf",
															"src": "5905:52:7"
														},
														{
															"nativeSrc": "5966:36:7",
															"nodeType": "YulAssignment",
															"src": "5966:36:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5992:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5992:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bool",
																	"nativeSrc": "5976:15:7",
																	"nodeType": "YulIdentifier",
																	"src": "5976:15:7"
																},
																"nativeSrc": "5976:26:7",
																"nodeType": "YulFunctionCall",
																"src": "5976:26:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "5966:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5966:6:7"
																}
															]
														},
														{
															"nativeSrc": "6011:47:7",
															"nodeType": "YulAssignment",
															"src": "6011:47:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6043:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6043:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6054:2:7",
																				"nodeType": "YulLiteral",
																				"src": "6054:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6039:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6039:3:7"
																		},
																		"nativeSrc": "6039:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6039:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint16",
																	"nativeSrc": "6021:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "6021:17:7"
																},
																"nativeSrc": "6021:37:7",
																"nodeType": "YulFunctionCall",
																"src": "6021:37:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "6011:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6011:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_boolt_uint16",
												"nativeSrc": "5812:252:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5853:9:7",
														"nodeType": "YulTypedName",
														"src": "5853:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5864:7:7",
														"nodeType": "YulTypedName",
														"src": "5864:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5876:6:7",
														"nodeType": "YulTypedName",
														"src": "5876:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5884:6:7",
														"nodeType": "YulTypedName",
														"src": "5884:6:7",
														"type": ""
													}
												],
												"src": "5812:252:7"
											},
											{
												"body": {
													"nativeSrc": "6113:77:7",
													"nodeType": "YulBlock",
													"src": "6113:77:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "6168:16:7",
																"nodeType": "YulBlock",
																"src": "6168:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6177:1:7",
																					"nodeType": "YulLiteral",
																					"src": "6177:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6180:1:7",
																					"nodeType": "YulLiteral",
																					"src": "6180:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6170:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6170:6:7"
																			},
																			"nativeSrc": "6170:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6170:12:7"
																		},
																		"nativeSrc": "6170:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6170:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6136:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "6136:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6147:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "6147:5:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6154:10:7",
																						"nodeType": "YulLiteral",
																						"src": "6154:10:7",
																						"type": "",
																						"value": "0xffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "6143:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "6143:3:7"
																				},
																				"nativeSrc": "6143:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6143:22:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "6133:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "6133:2:7"
																		},
																		"nativeSrc": "6133:33:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6133:33:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6126:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6126:6:7"
																},
																"nativeSrc": "6126:41:7",
																"nodeType": "YulFunctionCall",
																"src": "6126:41:7"
															},
															"nativeSrc": "6123:61:7",
															"nodeType": "YulIf",
															"src": "6123:61:7"
														}
													]
												},
												"name": "validator_revert_uint32",
												"nativeSrc": "6069:121:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6102:5:7",
														"nodeType": "YulTypedName",
														"src": "6102:5:7",
														"type": ""
													}
												],
												"src": "6069:121:7"
											},
											{
												"body": {
													"nativeSrc": "6278:230:7",
													"nodeType": "YulBlock",
													"src": "6278:230:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "6324:16:7",
																"nodeType": "YulBlock",
																"src": "6324:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6333:1:7",
																					"nodeType": "YulLiteral",
																					"src": "6333:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6336:1:7",
																					"nodeType": "YulLiteral",
																					"src": "6336:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6326:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6326:6:7"
																			},
																			"nativeSrc": "6326:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6326:12:7"
																		},
																		"nativeSrc": "6326:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6326:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6299:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6299:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6308:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6308:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6295:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6295:3:7"
																		},
																		"nativeSrc": "6295:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6295:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6320:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6320:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6291:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6291:3:7"
																},
																"nativeSrc": "6291:32:7",
																"nodeType": "YulFunctionCall",
																"src": "6291:32:7"
															},
															"nativeSrc": "6288:52:7",
															"nodeType": "YulIf",
															"src": "6288:52:7"
														},
														{
															"nativeSrc": "6349:36:7",
															"nodeType": "YulAssignment",
															"src": "6349:36:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6375:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "6375:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bool",
																	"nativeSrc": "6359:15:7",
																	"nodeType": "YulIdentifier",
																	"src": "6359:15:7"
																},
																"nativeSrc": "6359:26:7",
																"nodeType": "YulFunctionCall",
																"src": "6359:26:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "6349:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6349:6:7"
																}
															]
														},
														{
															"nativeSrc": "6394:45:7",
															"nodeType": "YulVariableDeclaration",
															"src": "6394:45:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6424:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6424:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6435:2:7",
																				"nodeType": "YulLiteral",
																				"src": "6435:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6420:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6420:3:7"
																		},
																		"nativeSrc": "6420:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6420:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6407:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "6407:12:7"
																},
																"nativeSrc": "6407:32:7",
																"nodeType": "YulFunctionCall",
																"src": "6407:32:7"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "6398:5:7",
																	"nodeType": "YulTypedName",
																	"src": "6398:5:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6472:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "6472:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_uint32",
																	"nativeSrc": "6448:23:7",
																	"nodeType": "YulIdentifier",
																	"src": "6448:23:7"
																},
																"nativeSrc": "6448:30:7",
																"nodeType": "YulFunctionCall",
																"src": "6448:30:7"
															},
															"nativeSrc": "6448:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "6448:30:7"
														},
														{
															"nativeSrc": "6487:15:7",
															"nodeType": "YulAssignment",
															"src": "6487:15:7",
															"value": {
																"name": "value",
																"nativeSrc": "6497:5:7",
																"nodeType": "YulIdentifier",
																"src": "6497:5:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "6487:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6487:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_boolt_uint32",
												"nativeSrc": "6195:313:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6236:9:7",
														"nodeType": "YulTypedName",
														"src": "6236:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6247:7:7",
														"nodeType": "YulTypedName",
														"src": "6247:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6259:6:7",
														"nodeType": "YulTypedName",
														"src": "6259:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6267:6:7",
														"nodeType": "YulTypedName",
														"src": "6267:6:7",
														"type": ""
													}
												],
												"src": "6195:313:7"
											},
											{
												"body": {
													"nativeSrc": "6568:325:7",
													"nodeType": "YulBlock",
													"src": "6568:325:7",
													"statements": [
														{
															"nativeSrc": "6578:22:7",
															"nodeType": "YulAssignment",
															"src": "6578:22:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6592:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6592:1:7",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "6595:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "6595:4:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "6588:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6588:3:7"
																},
																"nativeSrc": "6588:12:7",
																"nodeType": "YulFunctionCall",
																"src": "6588:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "6578:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6578:6:7"
																}
															]
														},
														{
															"nativeSrc": "6609:38:7",
															"nodeType": "YulVariableDeclaration",
															"src": "6609:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6639:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "6639:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6645:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6645:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6635:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6635:3:7"
																},
																"nativeSrc": "6635:12:7",
																"nodeType": "YulFunctionCall",
																"src": "6635:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "6613:18:7",
																	"nodeType": "YulTypedName",
																	"src": "6613:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6686:31:7",
																"nodeType": "YulBlock",
																"src": "6686:31:7",
																"statements": [
																	{
																		"nativeSrc": "6688:27:7",
																		"nodeType": "YulAssignment",
																		"src": "6688:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "6702:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "6702:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6710:4:7",
																					"nodeType": "YulLiteral",
																					"src": "6710:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "6698:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "6698:3:7"
																			},
																			"nativeSrc": "6698:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6698:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "6688:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6688:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6666:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "6666:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6659:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6659:6:7"
																},
																"nativeSrc": "6659:26:7",
																"nodeType": "YulFunctionCall",
																"src": "6659:26:7"
															},
															"nativeSrc": "6656:61:7",
															"nodeType": "YulIf",
															"src": "6656:61:7"
														},
														{
															"body": {
																"nativeSrc": "6776:111:7",
																"nodeType": "YulBlock",
																"src": "6776:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6797:1:7",
																					"nodeType": "YulLiteral",
																					"src": "6797:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "6804:3:7",
																							"nodeType": "YulLiteral",
																							"src": "6804:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "6809:10:7",
																							"nodeType": "YulLiteral",
																							"src": "6809:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "6800:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "6800:3:7"
																					},
																					"nativeSrc": "6800:20:7",
																					"nodeType": "YulFunctionCall",
																					"src": "6800:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "6790:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6790:6:7"
																			},
																			"nativeSrc": "6790:31:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6790:31:7"
																		},
																		"nativeSrc": "6790:31:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6790:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6841:1:7",
																					"nodeType": "YulLiteral",
																					"src": "6841:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6844:4:7",
																					"nodeType": "YulLiteral",
																					"src": "6844:4:7",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "6834:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6834:6:7"
																			},
																			"nativeSrc": "6834:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6834:15:7"
																		},
																		"nativeSrc": "6834:15:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6834:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6869:1:7",
																					"nodeType": "YulLiteral",
																					"src": "6869:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6872:4:7",
																					"nodeType": "YulLiteral",
																					"src": "6872:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6862:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6862:6:7"
																			},
																			"nativeSrc": "6862:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6862:15:7"
																		},
																		"nativeSrc": "6862:15:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6862:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6732:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "6732:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6755:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6755:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6763:2:7",
																				"nodeType": "YulLiteral",
																				"src": "6763:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6752:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "6752:2:7"
																		},
																		"nativeSrc": "6752:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6752:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "6729:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "6729:2:7"
																},
																"nativeSrc": "6729:38:7",
																"nodeType": "YulFunctionCall",
																"src": "6729:38:7"
															},
															"nativeSrc": "6726:161:7",
															"nodeType": "YulIf",
															"src": "6726:161:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "6513:380:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6548:4:7",
														"nodeType": "YulTypedName",
														"src": "6548:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "6557:6:7",
														"nodeType": "YulTypedName",
														"src": "6557:6:7",
														"type": ""
													}
												],
												"src": "6513:380:7"
											},
											{
												"body": {
													"nativeSrc": "6930:95:7",
													"nodeType": "YulBlock",
													"src": "6930:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6947:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6947:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "6954:3:7",
																				"nodeType": "YulLiteral",
																				"src": "6954:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6959:10:7",
																				"nodeType": "YulLiteral",
																				"src": "6959:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "6950:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6950:3:7"
																		},
																		"nativeSrc": "6950:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6950:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6940:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6940:6:7"
																},
																"nativeSrc": "6940:31:7",
																"nodeType": "YulFunctionCall",
																"src": "6940:31:7"
															},
															"nativeSrc": "6940:31:7",
															"nodeType": "YulExpressionStatement",
															"src": "6940:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6987:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6987:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6990:4:7",
																		"nodeType": "YulLiteral",
																		"src": "6990:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6980:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6980:6:7"
																},
																"nativeSrc": "6980:15:7",
																"nodeType": "YulFunctionCall",
																"src": "6980:15:7"
															},
															"nativeSrc": "6980:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "6980:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7011:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7011:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7014:4:7",
																		"nodeType": "YulLiteral",
																		"src": "7014:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7004:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7004:6:7"
																},
																"nativeSrc": "7004:15:7",
																"nodeType": "YulFunctionCall",
																"src": "7004:15:7"
															},
															"nativeSrc": "7004:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "7004:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "6898:127:7",
												"nodeType": "YulFunctionDefinition",
												"src": "6898:127:7"
											},
											{
												"body": {
													"nativeSrc": "7077:121:7",
													"nodeType": "YulBlock",
													"src": "7077:121:7",
													"statements": [
														{
															"nativeSrc": "7087:16:7",
															"nodeType": "YulVariableDeclaration",
															"src": "7087:16:7",
															"value": {
																"kind": "number",
																"nativeSrc": "7097:6:7",
																"nodeType": "YulLiteral",
																"src": "7097:6:7",
																"type": "",
																"value": "0xffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "7091:2:7",
																	"nodeType": "YulTypedName",
																	"src": "7091:2:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7112:34:7",
															"nodeType": "YulAssignment",
															"src": "7112:34:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "7127:1:7",
																				"nodeType": "YulIdentifier",
																				"src": "7127:1:7"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "7130:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "7130:2:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7123:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7123:3:7"
																		},
																		"nativeSrc": "7123:10:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7123:10:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nativeSrc": "7139:1:7",
																				"nodeType": "YulIdentifier",
																				"src": "7139:1:7"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "7142:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "7142:2:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7135:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7135:3:7"
																		},
																		"nativeSrc": "7135:10:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7135:10:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7119:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7119:3:7"
																},
																"nativeSrc": "7119:27:7",
																"nodeType": "YulFunctionCall",
																"src": "7119:27:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "7112:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7112:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7170:22:7",
																"nodeType": "YulBlock",
																"src": "7170:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7172:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "7172:16:7"
																			},
																			"nativeSrc": "7172:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7172:18:7"
																		},
																		"nativeSrc": "7172:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7172:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "sum",
																		"nativeSrc": "7161:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7161:3:7"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "7166:2:7",
																		"nodeType": "YulIdentifier",
																		"src": "7166:2:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7158:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "7158:2:7"
																},
																"nativeSrc": "7158:11:7",
																"nodeType": "YulFunctionCall",
																"src": "7158:11:7"
															},
															"nativeSrc": "7155:37:7",
															"nodeType": "YulIf",
															"src": "7155:37:7"
														}
													]
												},
												"name": "checked_add_t_uint16",
												"nativeSrc": "7030:168:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7060:1:7",
														"nodeType": "YulTypedName",
														"src": "7060:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7063:1:7",
														"nodeType": "YulTypedName",
														"src": "7063:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "7069:3:7",
														"nodeType": "YulTypedName",
														"src": "7069:3:7",
														"type": ""
													}
												],
												"src": "7030:168:7"
											},
											{
												"body": {
													"nativeSrc": "7377:166:7",
													"nodeType": "YulBlock",
													"src": "7377:166:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7394:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "7394:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7405:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7405:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7387:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7387:6:7"
																},
																"nativeSrc": "7387:21:7",
																"nodeType": "YulFunctionCall",
																"src": "7387:21:7"
															},
															"nativeSrc": "7387:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "7387:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7428:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7428:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7439:2:7",
																				"nodeType": "YulLiteral",
																				"src": "7439:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7424:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7424:3:7"
																		},
																		"nativeSrc": "7424:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7424:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7444:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7444:2:7",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7417:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7417:6:7"
																},
																"nativeSrc": "7417:30:7",
																"nodeType": "YulFunctionCall",
																"src": "7417:30:7"
															},
															"nativeSrc": "7417:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "7417:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7467:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7467:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7478:2:7",
																				"nodeType": "YulLiteral",
																				"src": "7478:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7463:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7463:3:7"
																		},
																		"nativeSrc": "7463:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7463:18:7"
																	},
																	{
																		"hexValue": "4275792074617820746f6f2068696768",
																		"kind": "string",
																		"nativeSrc": "7483:18:7",
																		"nodeType": "YulLiteral",
																		"src": "7483:18:7",
																		"type": "",
																		"value": "Buy tax too high"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7456:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7456:6:7"
																},
																"nativeSrc": "7456:46:7",
																"nodeType": "YulFunctionCall",
																"src": "7456:46:7"
															},
															"nativeSrc": "7456:46:7",
															"nodeType": "YulExpressionStatement",
															"src": "7456:46:7"
														},
														{
															"nativeSrc": "7511:26:7",
															"nodeType": "YulAssignment",
															"src": "7511:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7523:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "7523:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7534:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7534:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7519:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7519:3:7"
																},
																"nativeSrc": "7519:18:7",
																"nodeType": "YulFunctionCall",
																"src": "7519:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7511:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7511:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8b651597bafb95b427a4f660d871a5de5d1e311b7ec5bcd461acf7a21699d335__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7203:340:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7354:9:7",
														"nodeType": "YulTypedName",
														"src": "7354:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7368:4:7",
														"nodeType": "YulTypedName",
														"src": "7368:4:7",
														"type": ""
													}
												],
												"src": "7203:340:7"
											},
											{
												"body": {
													"nativeSrc": "7722:167:7",
													"nodeType": "YulBlock",
													"src": "7722:167:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7739:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "7739:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7750:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7750:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7732:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7732:6:7"
																},
																"nativeSrc": "7732:21:7",
																"nodeType": "YulFunctionCall",
																"src": "7732:21:7"
															},
															"nativeSrc": "7732:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "7732:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7773:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7773:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7784:2:7",
																				"nodeType": "YulLiteral",
																				"src": "7784:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7769:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7769:3:7"
																		},
																		"nativeSrc": "7769:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7769:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7789:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7789:2:7",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7762:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7762:6:7"
																},
																"nativeSrc": "7762:30:7",
																"nodeType": "YulFunctionCall",
																"src": "7762:30:7"
															},
															"nativeSrc": "7762:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "7762:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7812:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7812:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7823:2:7",
																				"nodeType": "YulLiteral",
																				"src": "7823:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7808:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7808:3:7"
																		},
																		"nativeSrc": "7808:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7808:18:7"
																	},
																	{
																		"hexValue": "53656c6c2074617820746f6f2068696768",
																		"kind": "string",
																		"nativeSrc": "7828:19:7",
																		"nodeType": "YulLiteral",
																		"src": "7828:19:7",
																		"type": "",
																		"value": "Sell tax too high"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7801:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7801:6:7"
																},
																"nativeSrc": "7801:47:7",
																"nodeType": "YulFunctionCall",
																"src": "7801:47:7"
															},
															"nativeSrc": "7801:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "7801:47:7"
														},
														{
															"nativeSrc": "7857:26:7",
															"nodeType": "YulAssignment",
															"src": "7857:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7869:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "7869:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7880:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7880:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7865:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7865:3:7"
																},
																"nativeSrc": "7865:18:7",
																"nodeType": "YulFunctionCall",
																"src": "7865:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7857:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7857:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_77f71f16cf7fea8071257338db8d15c2b0742cafda4fe118dd4d019676d62627__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7548:341:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7699:9:7",
														"nodeType": "YulTypedName",
														"src": "7699:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7713:4:7",
														"nodeType": "YulTypedName",
														"src": "7713:4:7",
														"type": ""
													}
												],
												"src": "7548:341:7"
											},
											{
												"body": {
													"nativeSrc": "7942:77:7",
													"nodeType": "YulBlock",
													"src": "7942:77:7",
													"statements": [
														{
															"nativeSrc": "7952:16:7",
															"nodeType": "YulAssignment",
															"src": "7952:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7963:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7963:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7966:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7966:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7959:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7959:3:7"
																},
																"nativeSrc": "7959:9:7",
																"nodeType": "YulFunctionCall",
																"src": "7959:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "7952:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7952:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7991:22:7",
																"nodeType": "YulBlock",
																"src": "7991:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7993:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "7993:16:7"
																			},
																			"nativeSrc": "7993:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7993:18:7"
																		},
																		"nativeSrc": "7993:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7993:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7983:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7983:1:7"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "7986:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7986:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7980:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "7980:2:7"
																},
																"nativeSrc": "7980:10:7",
																"nodeType": "YulFunctionCall",
																"src": "7980:10:7"
															},
															"nativeSrc": "7977:36:7",
															"nodeType": "YulIf",
															"src": "7977:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "7894:125:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7925:1:7",
														"nodeType": "YulTypedName",
														"src": "7925:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7928:1:7",
														"nodeType": "YulTypedName",
														"src": "7928:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "7934:3:7",
														"nodeType": "YulTypedName",
														"src": "7934:3:7",
														"type": ""
													}
												],
												"src": "7894:125:7"
											},
											{
												"body": {
													"nativeSrc": "8067:93:7",
													"nodeType": "YulBlock",
													"src": "8067:93:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "8103:22:7",
																"nodeType": "YulBlock",
																"src": "8103:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8105:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "8105:16:7"
																			},
																			"nativeSrc": "8105:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8105:18:7"
																		},
																		"nativeSrc": "8105:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "8105:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8083:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "8083:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "8094:3:7",
																				"nodeType": "YulLiteral",
																				"src": "8094:3:7",
																				"type": "",
																				"value": "255"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8099:1:7",
																				"nodeType": "YulLiteral",
																				"src": "8099:1:7",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "8090:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8090:3:7"
																		},
																		"nativeSrc": "8090:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8090:11:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "8080:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "8080:2:7"
																},
																"nativeSrc": "8080:22:7",
																"nodeType": "YulFunctionCall",
																"src": "8080:22:7"
															},
															"nativeSrc": "8077:48:7",
															"nodeType": "YulIf",
															"src": "8077:48:7"
														},
														{
															"nativeSrc": "8134:20:7",
															"nodeType": "YulAssignment",
															"src": "8134:20:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8145:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8145:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "8148:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "8148:5:7"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "8141:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8141:3:7"
																},
																"nativeSrc": "8141:13:7",
																"nodeType": "YulFunctionCall",
																"src": "8141:13:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "8134:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8134:3:7"
																}
															]
														}
													]
												},
												"name": "negate_t_int256",
												"nativeSrc": "8024:136:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8049:5:7",
														"nodeType": "YulTypedName",
														"src": "8049:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "8059:3:7",
														"nodeType": "YulTypedName",
														"src": "8059:3:7",
														"type": ""
													}
												],
												"src": "8024:136:7"
											},
											{
												"body": {
													"nativeSrc": "8225:128:7",
													"nodeType": "YulBlock",
													"src": "8225:128:7",
													"statements": [
														{
															"nativeSrc": "8235:22:7",
															"nodeType": "YulAssignment",
															"src": "8235:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8250:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8250:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8244:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "8244:5:7"
																},
																"nativeSrc": "8244:13:7",
																"nodeType": "YulFunctionCall",
																"src": "8244:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "8235:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "8235:5:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8331:16:7",
																"nodeType": "YulBlock",
																"src": "8331:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8340:1:7",
																					"nodeType": "YulLiteral",
																					"src": "8340:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8343:1:7",
																					"nodeType": "YulLiteral",
																					"src": "8343:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8333:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "8333:6:7"
																			},
																			"nativeSrc": "8333:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8333:12:7"
																		},
																		"nativeSrc": "8333:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "8333:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8279:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "8279:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "8290:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "8290:5:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8297:30:7",
																						"nodeType": "YulLiteral",
																						"src": "8297:30:7",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "8286:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "8286:3:7"
																				},
																				"nativeSrc": "8286:42:7",
																				"nodeType": "YulFunctionCall",
																				"src": "8286:42:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "8276:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "8276:2:7"
																		},
																		"nativeSrc": "8276:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8276:53:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8269:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8269:6:7"
																},
																"nativeSrc": "8269:61:7",
																"nodeType": "YulFunctionCall",
																"src": "8269:61:7"
															},
															"nativeSrc": "8266:81:7",
															"nodeType": "YulIf",
															"src": "8266:81:7"
														}
													]
												},
												"name": "abi_decode_uint112_fromMemory",
												"nativeSrc": "8165:188:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "8204:6:7",
														"nodeType": "YulTypedName",
														"src": "8204:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "8215:5:7",
														"nodeType": "YulTypedName",
														"src": "8215:5:7",
														"type": ""
													}
												],
												"src": "8165:188:7"
											},
											{
												"body": {
													"nativeSrc": "8472:305:7",
													"nodeType": "YulBlock",
													"src": "8472:305:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "8518:16:7",
																"nodeType": "YulBlock",
																"src": "8518:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8527:1:7",
																					"nodeType": "YulLiteral",
																					"src": "8527:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8530:1:7",
																					"nodeType": "YulLiteral",
																					"src": "8530:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8520:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "8520:6:7"
																			},
																			"nativeSrc": "8520:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8520:12:7"
																		},
																		"nativeSrc": "8520:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "8520:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8493:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "8493:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8502:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8502:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8489:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8489:3:7"
																		},
																		"nativeSrc": "8489:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8489:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8514:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8514:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8485:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8485:3:7"
																},
																"nativeSrc": "8485:32:7",
																"nodeType": "YulFunctionCall",
																"src": "8485:32:7"
															},
															"nativeSrc": "8482:52:7",
															"nodeType": "YulIf",
															"src": "8482:52:7"
														},
														{
															"nativeSrc": "8543:50:7",
															"nodeType": "YulAssignment",
															"src": "8543:50:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8583:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "8583:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint112_fromMemory",
																	"nativeSrc": "8553:29:7",
																	"nodeType": "YulIdentifier",
																	"src": "8553:29:7"
																},
																"nativeSrc": "8553:40:7",
																"nodeType": "YulFunctionCall",
																"src": "8553:40:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "8543:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8543:6:7"
																}
															]
														},
														{
															"nativeSrc": "8602:59:7",
															"nodeType": "YulAssignment",
															"src": "8602:59:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8646:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8646:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8657:2:7",
																				"nodeType": "YulLiteral",
																				"src": "8657:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8642:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8642:3:7"
																		},
																		"nativeSrc": "8642:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8642:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint112_fromMemory",
																	"nativeSrc": "8612:29:7",
																	"nodeType": "YulIdentifier",
																	"src": "8612:29:7"
																},
																"nativeSrc": "8612:49:7",
																"nodeType": "YulFunctionCall",
																"src": "8612:49:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "8602:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8602:6:7"
																}
															]
														},
														{
															"nativeSrc": "8670:38:7",
															"nodeType": "YulVariableDeclaration",
															"src": "8670:38:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8693:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8693:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8704:2:7",
																				"nodeType": "YulLiteral",
																				"src": "8704:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8689:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8689:3:7"
																		},
																		"nativeSrc": "8689:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8689:18:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8683:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "8683:5:7"
																},
																"nativeSrc": "8683:25:7",
																"nodeType": "YulFunctionCall",
																"src": "8683:25:7"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "8674:5:7",
																	"nodeType": "YulTypedName",
																	"src": "8674:5:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8741:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "8741:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_uint32",
																	"nativeSrc": "8717:23:7",
																	"nodeType": "YulIdentifier",
																	"src": "8717:23:7"
																},
																"nativeSrc": "8717:30:7",
																"nodeType": "YulFunctionCall",
																"src": "8717:30:7"
															},
															"nativeSrc": "8717:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "8717:30:7"
														},
														{
															"nativeSrc": "8756:15:7",
															"nodeType": "YulAssignment",
															"src": "8756:15:7",
															"value": {
																"name": "value",
																"nativeSrc": "8766:5:7",
																"nodeType": "YulIdentifier",
																"src": "8766:5:7"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "8756:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8756:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint112t_uint112t_uint32_fromMemory",
												"nativeSrc": "8358:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8422:9:7",
														"nodeType": "YulTypedName",
														"src": "8422:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8433:7:7",
														"nodeType": "YulTypedName",
														"src": "8433:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8445:6:7",
														"nodeType": "YulTypedName",
														"src": "8445:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8453:6:7",
														"nodeType": "YulTypedName",
														"src": "8453:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8461:6:7",
														"nodeType": "YulTypedName",
														"src": "8461:6:7",
														"type": ""
													}
												],
												"src": "8358:419:7"
											},
											{
												"body": {
													"nativeSrc": "8863:170:7",
													"nodeType": "YulBlock",
													"src": "8863:170:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "8909:16:7",
																"nodeType": "YulBlock",
																"src": "8909:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8918:1:7",
																					"nodeType": "YulLiteral",
																					"src": "8918:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8921:1:7",
																					"nodeType": "YulLiteral",
																					"src": "8921:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8911:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "8911:6:7"
																			},
																			"nativeSrc": "8911:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8911:12:7"
																		},
																		"nativeSrc": "8911:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "8911:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8884:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "8884:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8893:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8893:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8880:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8880:3:7"
																		},
																		"nativeSrc": "8880:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8880:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8905:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8905:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8876:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8876:3:7"
																},
																"nativeSrc": "8876:32:7",
																"nodeType": "YulFunctionCall",
																"src": "8876:32:7"
															},
															"nativeSrc": "8873:52:7",
															"nodeType": "YulIf",
															"src": "8873:52:7"
														},
														{
															"nativeSrc": "8934:29:7",
															"nodeType": "YulVariableDeclaration",
															"src": "8934:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8953:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "8953:9:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8947:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "8947:5:7"
																},
																"nativeSrc": "8947:16:7",
																"nodeType": "YulFunctionCall",
																"src": "8947:16:7"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "8938:5:7",
																	"nodeType": "YulTypedName",
																	"src": "8938:5:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8997:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "8997:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "8972:24:7",
																	"nodeType": "YulIdentifier",
																	"src": "8972:24:7"
																},
																"nativeSrc": "8972:31:7",
																"nodeType": "YulFunctionCall",
																"src": "8972:31:7"
															},
															"nativeSrc": "8972:31:7",
															"nodeType": "YulExpressionStatement",
															"src": "8972:31:7"
														},
														{
															"nativeSrc": "9012:15:7",
															"nodeType": "YulAssignment",
															"src": "9012:15:7",
															"value": {
																"name": "value",
																"nativeSrc": "9022:5:7",
																"nodeType": "YulIdentifier",
																"src": "9022:5:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "9012:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9012:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "8782:251:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8829:9:7",
														"nodeType": "YulTypedName",
														"src": "8829:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8840:7:7",
														"nodeType": "YulTypedName",
														"src": "8840:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8852:6:7",
														"nodeType": "YulTypedName",
														"src": "8852:6:7",
														"type": ""
													}
												],
												"src": "8782:251:7"
											},
											{
												"body": {
													"nativeSrc": "9070:95:7",
													"nodeType": "YulBlock",
													"src": "9070:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9087:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9087:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "9094:3:7",
																				"nodeType": "YulLiteral",
																				"src": "9094:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9099:10:7",
																				"nodeType": "YulLiteral",
																				"src": "9099:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "9090:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9090:3:7"
																		},
																		"nativeSrc": "9090:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9090:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9080:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9080:6:7"
																},
																"nativeSrc": "9080:31:7",
																"nodeType": "YulFunctionCall",
																"src": "9080:31:7"
															},
															"nativeSrc": "9080:31:7",
															"nodeType": "YulExpressionStatement",
															"src": "9080:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9127:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9127:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9130:4:7",
																		"nodeType": "YulLiteral",
																		"src": "9130:4:7",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9120:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9120:6:7"
																},
																"nativeSrc": "9120:15:7",
																"nodeType": "YulFunctionCall",
																"src": "9120:15:7"
															},
															"nativeSrc": "9120:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "9120:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9151:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9151:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9154:4:7",
																		"nodeType": "YulLiteral",
																		"src": "9154:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9144:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9144:6:7"
																},
																"nativeSrc": "9144:15:7",
																"nodeType": "YulFunctionCall",
																"src": "9144:15:7"
															},
															"nativeSrc": "9144:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "9144:15:7"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "9038:127:7",
												"nodeType": "YulFunctionDefinition",
												"src": "9038:127:7"
											},
											{
												"body": {
													"nativeSrc": "9208:74:7",
													"nodeType": "YulBlock",
													"src": "9208:74:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "9231:22:7",
																"nodeType": "YulBlock",
																"src": "9231:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "9233:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "9233:16:7"
																			},
																			"nativeSrc": "9233:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "9233:18:7"
																		},
																		"nativeSrc": "9233:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "9233:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9228:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9228:1:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9221:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9221:6:7"
																},
																"nativeSrc": "9221:9:7",
																"nodeType": "YulFunctionCall",
																"src": "9221:9:7"
															},
															"nativeSrc": "9218:35:7",
															"nodeType": "YulIf",
															"src": "9218:35:7"
														},
														{
															"nativeSrc": "9262:14:7",
															"nodeType": "YulAssignment",
															"src": "9262:14:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9271:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9271:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9274:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9274:1:7"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nativeSrc": "9267:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9267:3:7"
																},
																"nativeSrc": "9267:9:7",
																"nodeType": "YulFunctionCall",
																"src": "9267:9:7"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "9262:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "9262:1:7"
																}
															]
														}
													]
												},
												"name": "mod_t_uint256",
												"nativeSrc": "9170:112:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9193:1:7",
														"nodeType": "YulTypedName",
														"src": "9193:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9196:1:7",
														"nodeType": "YulTypedName",
														"src": "9196:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "9202:1:7",
														"nodeType": "YulTypedName",
														"src": "9202:1:7",
														"type": ""
													}
												],
												"src": "9170:112:7"
											},
											{
												"body": {
													"nativeSrc": "9461:227:7",
													"nodeType": "YulBlock",
													"src": "9461:227:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9478:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "9478:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9489:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9489:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9471:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9471:6:7"
																},
																"nativeSrc": "9471:21:7",
																"nodeType": "YulFunctionCall",
																"src": "9471:21:7"
															},
															"nativeSrc": "9471:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "9471:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9512:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9512:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9523:2:7",
																				"nodeType": "YulLiteral",
																				"src": "9523:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9508:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9508:3:7"
																		},
																		"nativeSrc": "9508:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9508:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9528:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9528:2:7",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9501:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9501:6:7"
																},
																"nativeSrc": "9501:30:7",
																"nodeType": "YulFunctionCall",
																"src": "9501:30:7"
															},
															"nativeSrc": "9501:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "9501:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9551:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9551:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9562:2:7",
																				"nodeType": "YulLiteral",
																				"src": "9562:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9547:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9547:3:7"
																		},
																		"nativeSrc": "9547:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9547:18:7"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nativeSrc": "9567:34:7",
																		"nodeType": "YulLiteral",
																		"src": "9567:34:7",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9540:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9540:6:7"
																},
																"nativeSrc": "9540:62:7",
																"nodeType": "YulFunctionCall",
																"src": "9540:62:7"
															},
															"nativeSrc": "9540:62:7",
															"nodeType": "YulExpressionStatement",
															"src": "9540:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9622:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9622:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9633:2:7",
																				"nodeType": "YulLiteral",
																				"src": "9633:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9618:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9618:3:7"
																		},
																		"nativeSrc": "9618:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9618:18:7"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nativeSrc": "9638:7:7",
																		"nodeType": "YulLiteral",
																		"src": "9638:7:7",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9611:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9611:6:7"
																},
																"nativeSrc": "9611:35:7",
																"nodeType": "YulFunctionCall",
																"src": "9611:35:7"
															},
															"nativeSrc": "9611:35:7",
															"nodeType": "YulExpressionStatement",
															"src": "9611:35:7"
														},
														{
															"nativeSrc": "9655:27:7",
															"nodeType": "YulAssignment",
															"src": "9655:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9667:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "9667:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9678:3:7",
																		"nodeType": "YulLiteral",
																		"src": "9678:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9663:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9663:3:7"
																},
																"nativeSrc": "9663:19:7",
																"nodeType": "YulFunctionCall",
																"src": "9663:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9655:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9655:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9287:401:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9438:9:7",
														"nodeType": "YulTypedName",
														"src": "9438:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9452:4:7",
														"nodeType": "YulTypedName",
														"src": "9452:4:7",
														"type": ""
													}
												],
												"src": "9287:401:7"
											},
											{
												"body": {
													"nativeSrc": "9867:228:7",
													"nodeType": "YulBlock",
													"src": "9867:228:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9884:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "9884:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9895:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9895:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9877:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9877:6:7"
																},
																"nativeSrc": "9877:21:7",
																"nodeType": "YulFunctionCall",
																"src": "9877:21:7"
															},
															"nativeSrc": "9877:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "9877:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9918:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9918:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9929:2:7",
																				"nodeType": "YulLiteral",
																				"src": "9929:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9914:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9914:3:7"
																		},
																		"nativeSrc": "9914:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9914:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9934:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9934:2:7",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9907:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9907:6:7"
																},
																"nativeSrc": "9907:30:7",
																"nodeType": "YulFunctionCall",
																"src": "9907:30:7"
															},
															"nativeSrc": "9907:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "9907:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9957:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9957:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9968:2:7",
																				"nodeType": "YulLiteral",
																				"src": "9968:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9953:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9953:3:7"
																		},
																		"nativeSrc": "9953:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9953:18:7"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nativeSrc": "9973:34:7",
																		"nodeType": "YulLiteral",
																		"src": "9973:34:7",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9946:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9946:6:7"
																},
																"nativeSrc": "9946:62:7",
																"nodeType": "YulFunctionCall",
																"src": "9946:62:7"
															},
															"nativeSrc": "9946:62:7",
															"nodeType": "YulExpressionStatement",
															"src": "9946:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10028:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10028:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10039:2:7",
																				"nodeType": "YulLiteral",
																				"src": "10039:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10024:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10024:3:7"
																		},
																		"nativeSrc": "10024:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10024:18:7"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nativeSrc": "10044:8:7",
																		"nodeType": "YulLiteral",
																		"src": "10044:8:7",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10017:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10017:6:7"
																},
																"nativeSrc": "10017:36:7",
																"nodeType": "YulFunctionCall",
																"src": "10017:36:7"
															},
															"nativeSrc": "10017:36:7",
															"nodeType": "YulExpressionStatement",
															"src": "10017:36:7"
														},
														{
															"nativeSrc": "10062:27:7",
															"nodeType": "YulAssignment",
															"src": "10062:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10074:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "10074:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10085:3:7",
																		"nodeType": "YulLiteral",
																		"src": "10085:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10070:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10070:3:7"
																},
																"nativeSrc": "10070:19:7",
																"nodeType": "YulFunctionCall",
																"src": "10070:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10062:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "10062:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9693:402:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9844:9:7",
														"nodeType": "YulTypedName",
														"src": "9844:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9858:4:7",
														"nodeType": "YulTypedName",
														"src": "9858:4:7",
														"type": ""
													}
												],
												"src": "9693:402:7"
											},
											{
												"body": {
													"nativeSrc": "10151:198:7",
													"nodeType": "YulBlock",
													"src": "10151:198:7",
													"statements": [
														{
															"nativeSrc": "10161:20:7",
															"nodeType": "YulVariableDeclaration",
															"src": "10161:20:7",
															"value": {
																"kind": "number",
																"nativeSrc": "10171:10:7",
																"nodeType": "YulLiteral",
																"src": "10171:10:7",
																"type": "",
																"value": "0xffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "10165:2:7",
																	"nodeType": "YulTypedName",
																	"src": "10165:2:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "10190:46:7",
															"nodeType": "YulVariableDeclaration",
															"src": "10190:46:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "10217:1:7",
																				"nodeType": "YulIdentifier",
																				"src": "10217:1:7"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "10220:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "10220:2:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10213:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10213:3:7"
																		},
																		"nativeSrc": "10213:10:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10213:10:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nativeSrc": "10229:1:7",
																				"nodeType": "YulIdentifier",
																				"src": "10229:1:7"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "10232:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "10232:2:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10225:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10225:3:7"
																		},
																		"nativeSrc": "10225:10:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10225:10:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "10209:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10209:3:7"
																},
																"nativeSrc": "10209:27:7",
																"nodeType": "YulFunctionCall",
																"src": "10209:27:7"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "10194:11:7",
																	"nodeType": "YulTypedName",
																	"src": "10194:11:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "10245:31:7",
															"nodeType": "YulAssignment",
															"src": "10245:31:7",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "10260:11:7",
																		"nodeType": "YulIdentifier",
																		"src": "10260:11:7"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "10273:2:7",
																		"nodeType": "YulIdentifier",
																		"src": "10273:2:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "10256:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10256:3:7"
																},
																"nativeSrc": "10256:20:7",
																"nodeType": "YulFunctionCall",
																"src": "10256:20:7"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "10245:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "10245:7:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10321:22:7",
																"nodeType": "YulBlock",
																"src": "10321:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10323:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "10323:16:7"
																			},
																			"nativeSrc": "10323:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "10323:18:7"
																		},
																		"nativeSrc": "10323:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "10323:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "product",
																				"nativeSrc": "10298:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "10298:7:7"
																			},
																			{
																				"name": "product_raw",
																				"nativeSrc": "10307:11:7",
																				"nodeType": "YulIdentifier",
																				"src": "10307:11:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "10295:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "10295:2:7"
																		},
																		"nativeSrc": "10295:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10295:24:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10288:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10288:6:7"
																},
																"nativeSrc": "10288:32:7",
																"nodeType": "YulFunctionCall",
																"src": "10288:32:7"
															},
															"nativeSrc": "10285:58:7",
															"nodeType": "YulIf",
															"src": "10285:58:7"
														}
													]
												},
												"name": "checked_mul_t_uint32",
												"nativeSrc": "10100:249:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10130:1:7",
														"nodeType": "YulTypedName",
														"src": "10130:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10133:1:7",
														"nodeType": "YulTypedName",
														"src": "10133:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "10139:7:7",
														"nodeType": "YulTypedName",
														"src": "10139:7:7",
														"type": ""
													}
												],
												"src": "10100:249:7"
											},
											{
												"body": {
													"nativeSrc": "10528:226:7",
													"nodeType": "YulBlock",
													"src": "10528:226:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10545:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "10545:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10556:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10556:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10538:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10538:6:7"
																},
																"nativeSrc": "10538:21:7",
																"nodeType": "YulFunctionCall",
																"src": "10538:21:7"
															},
															"nativeSrc": "10538:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "10538:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10579:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10579:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10590:2:7",
																				"nodeType": "YulLiteral",
																				"src": "10590:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10575:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10575:3:7"
																		},
																		"nativeSrc": "10575:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10575:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10595:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10595:2:7",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10568:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10568:6:7"
																},
																"nativeSrc": "10568:30:7",
																"nodeType": "YulFunctionCall",
																"src": "10568:30:7"
															},
															"nativeSrc": "10568:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "10568:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10618:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10618:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10629:2:7",
																				"nodeType": "YulLiteral",
																				"src": "10629:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10614:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10614:3:7"
																		},
																		"nativeSrc": "10614:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10614:18:7"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nativeSrc": "10634:34:7",
																		"nodeType": "YulLiteral",
																		"src": "10634:34:7",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10607:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10607:6:7"
																},
																"nativeSrc": "10607:62:7",
																"nodeType": "YulFunctionCall",
																"src": "10607:62:7"
															},
															"nativeSrc": "10607:62:7",
															"nodeType": "YulExpressionStatement",
															"src": "10607:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10689:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10689:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10700:2:7",
																				"nodeType": "YulLiteral",
																				"src": "10700:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10685:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10685:3:7"
																		},
																		"nativeSrc": "10685:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10685:18:7"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nativeSrc": "10705:6:7",
																		"nodeType": "YulLiteral",
																		"src": "10705:6:7",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10678:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10678:6:7"
																},
																"nativeSrc": "10678:34:7",
																"nodeType": "YulFunctionCall",
																"src": "10678:34:7"
															},
															"nativeSrc": "10678:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "10678:34:7"
														},
														{
															"nativeSrc": "10721:27:7",
															"nodeType": "YulAssignment",
															"src": "10721:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10733:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "10733:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10744:3:7",
																		"nodeType": "YulLiteral",
																		"src": "10744:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10729:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10729:3:7"
																},
																"nativeSrc": "10729:19:7",
																"nodeType": "YulFunctionCall",
																"src": "10729:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10721:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "10721:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10354:400:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10505:9:7",
														"nodeType": "YulTypedName",
														"src": "10505:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10519:4:7",
														"nodeType": "YulTypedName",
														"src": "10519:4:7",
														"type": ""
													}
												],
												"src": "10354:400:7"
											},
											{
												"body": {
													"nativeSrc": "10933:224:7",
													"nodeType": "YulBlock",
													"src": "10933:224:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10950:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "10950:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10961:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10961:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10943:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10943:6:7"
																},
																"nativeSrc": "10943:21:7",
																"nodeType": "YulFunctionCall",
																"src": "10943:21:7"
															},
															"nativeSrc": "10943:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "10943:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10984:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10984:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10995:2:7",
																				"nodeType": "YulLiteral",
																				"src": "10995:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10980:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10980:3:7"
																		},
																		"nativeSrc": "10980:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10980:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11000:2:7",
																		"nodeType": "YulLiteral",
																		"src": "11000:2:7",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10973:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10973:6:7"
																},
																"nativeSrc": "10973:30:7",
																"nodeType": "YulFunctionCall",
																"src": "10973:30:7"
															},
															"nativeSrc": "10973:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "10973:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11023:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "11023:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11034:2:7",
																				"nodeType": "YulLiteral",
																				"src": "11034:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11019:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11019:3:7"
																		},
																		"nativeSrc": "11019:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11019:18:7"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nativeSrc": "11039:34:7",
																		"nodeType": "YulLiteral",
																		"src": "11039:34:7",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11012:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11012:6:7"
																},
																"nativeSrc": "11012:62:7",
																"nodeType": "YulFunctionCall",
																"src": "11012:62:7"
															},
															"nativeSrc": "11012:62:7",
															"nodeType": "YulExpressionStatement",
															"src": "11012:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11094:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "11094:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11105:2:7",
																				"nodeType": "YulLiteral",
																				"src": "11105:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11090:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11090:3:7"
																		},
																		"nativeSrc": "11090:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11090:18:7"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nativeSrc": "11110:4:7",
																		"nodeType": "YulLiteral",
																		"src": "11110:4:7",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11083:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11083:6:7"
																},
																"nativeSrc": "11083:32:7",
																"nodeType": "YulFunctionCall",
																"src": "11083:32:7"
															},
															"nativeSrc": "11083:32:7",
															"nodeType": "YulExpressionStatement",
															"src": "11083:32:7"
														},
														{
															"nativeSrc": "11124:27:7",
															"nodeType": "YulAssignment",
															"src": "11124:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11136:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "11136:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11147:3:7",
																		"nodeType": "YulLiteral",
																		"src": "11147:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11132:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11132:3:7"
																},
																"nativeSrc": "11132:19:7",
																"nodeType": "YulFunctionCall",
																"src": "11132:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11124:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "11124:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10759:398:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10910:9:7",
														"nodeType": "YulTypedName",
														"src": "10910:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10924:4:7",
														"nodeType": "YulTypedName",
														"src": "10924:4:7",
														"type": ""
													}
												],
												"src": "10759:398:7"
											},
											{
												"body": {
													"nativeSrc": "11336:182:7",
													"nodeType": "YulBlock",
													"src": "11336:182:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11353:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "11353:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11364:2:7",
																		"nodeType": "YulLiteral",
																		"src": "11364:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11346:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11346:6:7"
																},
																"nativeSrc": "11346:21:7",
																"nodeType": "YulFunctionCall",
																"src": "11346:21:7"
															},
															"nativeSrc": "11346:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "11346:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11387:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "11387:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11398:2:7",
																				"nodeType": "YulLiteral",
																				"src": "11398:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11383:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11383:3:7"
																		},
																		"nativeSrc": "11383:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11383:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11403:2:7",
																		"nodeType": "YulLiteral",
																		"src": "11403:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11376:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11376:6:7"
																},
																"nativeSrc": "11376:30:7",
																"nodeType": "YulFunctionCall",
																"src": "11376:30:7"
															},
															"nativeSrc": "11376:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "11376:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11426:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "11426:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11437:2:7",
																				"nodeType": "YulLiteral",
																				"src": "11437:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11422:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11422:3:7"
																		},
																		"nativeSrc": "11422:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11422:18:7"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nativeSrc": "11442:34:7",
																		"nodeType": "YulLiteral",
																		"src": "11442:34:7",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11415:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11415:6:7"
																},
																"nativeSrc": "11415:62:7",
																"nodeType": "YulFunctionCall",
																"src": "11415:62:7"
															},
															"nativeSrc": "11415:62:7",
															"nodeType": "YulExpressionStatement",
															"src": "11415:62:7"
														},
														{
															"nativeSrc": "11486:26:7",
															"nodeType": "YulAssignment",
															"src": "11486:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11498:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "11498:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11509:2:7",
																		"nodeType": "YulLiteral",
																		"src": "11509:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11494:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11494:3:7"
																},
																"nativeSrc": "11494:18:7",
																"nodeType": "YulFunctionCall",
																"src": "11494:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11486:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "11486:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11162:356:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11313:9:7",
														"nodeType": "YulTypedName",
														"src": "11313:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11327:4:7",
														"nodeType": "YulTypedName",
														"src": "11327:4:7",
														"type": ""
													}
												],
												"src": "11162:356:7"
											},
											{
												"body": {
													"nativeSrc": "11697:179:7",
													"nodeType": "YulBlock",
													"src": "11697:179:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11714:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "11714:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11725:2:7",
																		"nodeType": "YulLiteral",
																		"src": "11725:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11707:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11707:6:7"
																},
																"nativeSrc": "11707:21:7",
																"nodeType": "YulFunctionCall",
																"src": "11707:21:7"
															},
															"nativeSrc": "11707:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "11707:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11748:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "11748:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11759:2:7",
																				"nodeType": "YulLiteral",
																				"src": "11759:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11744:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11744:3:7"
																		},
																		"nativeSrc": "11744:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11744:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11764:2:7",
																		"nodeType": "YulLiteral",
																		"src": "11764:2:7",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11737:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11737:6:7"
																},
																"nativeSrc": "11737:30:7",
																"nodeType": "YulFunctionCall",
																"src": "11737:30:7"
															},
															"nativeSrc": "11737:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "11737:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11787:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "11787:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11798:2:7",
																				"nodeType": "YulLiteral",
																				"src": "11798:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11783:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11783:3:7"
																		},
																		"nativeSrc": "11783:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11783:18:7"
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nativeSrc": "11803:31:7",
																		"nodeType": "YulLiteral",
																		"src": "11803:31:7",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11776:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11776:6:7"
																},
																"nativeSrc": "11776:59:7",
																"nodeType": "YulFunctionCall",
																"src": "11776:59:7"
															},
															"nativeSrc": "11776:59:7",
															"nodeType": "YulExpressionStatement",
															"src": "11776:59:7"
														},
														{
															"nativeSrc": "11844:26:7",
															"nodeType": "YulAssignment",
															"src": "11844:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11856:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "11856:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11867:2:7",
																		"nodeType": "YulLiteral",
																		"src": "11867:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11852:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11852:3:7"
																},
																"nativeSrc": "11852:18:7",
																"nodeType": "YulFunctionCall",
																"src": "11852:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11844:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "11844:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11523:353:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11674:9:7",
														"nodeType": "YulTypedName",
														"src": "11674:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11688:4:7",
														"nodeType": "YulTypedName",
														"src": "11688:4:7",
														"type": ""
													}
												],
												"src": "11523:353:7"
											},
											{
												"body": {
													"nativeSrc": "12055:176:7",
													"nodeType": "YulBlock",
													"src": "12055:176:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12072:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "12072:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12083:2:7",
																		"nodeType": "YulLiteral",
																		"src": "12083:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12065:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12065:6:7"
																},
																"nativeSrc": "12065:21:7",
																"nodeType": "YulFunctionCall",
																"src": "12065:21:7"
															},
															"nativeSrc": "12065:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "12065:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12106:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "12106:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12117:2:7",
																				"nodeType": "YulLiteral",
																				"src": "12117:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12102:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12102:3:7"
																		},
																		"nativeSrc": "12102:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12102:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12122:2:7",
																		"nodeType": "YulLiteral",
																		"src": "12122:2:7",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12095:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12095:6:7"
																},
																"nativeSrc": "12095:30:7",
																"nodeType": "YulFunctionCall",
																"src": "12095:30:7"
															},
															"nativeSrc": "12095:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "12095:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12145:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "12145:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12156:2:7",
																				"nodeType": "YulLiteral",
																				"src": "12156:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12141:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12141:3:7"
																		},
																		"nativeSrc": "12141:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12141:18:7"
																	},
																	{
																		"hexValue": "5472616e7366657220616d6f756e74206d757374206265203e30",
																		"kind": "string",
																		"nativeSrc": "12161:28:7",
																		"nodeType": "YulLiteral",
																		"src": "12161:28:7",
																		"type": "",
																		"value": "Transfer amount must be >0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12134:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12134:6:7"
																},
																"nativeSrc": "12134:56:7",
																"nodeType": "YulFunctionCall",
																"src": "12134:56:7"
															},
															"nativeSrc": "12134:56:7",
															"nodeType": "YulExpressionStatement",
															"src": "12134:56:7"
														},
														{
															"nativeSrc": "12199:26:7",
															"nodeType": "YulAssignment",
															"src": "12199:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12211:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "12211:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12222:2:7",
																		"nodeType": "YulLiteral",
																		"src": "12222:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12207:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12207:3:7"
																},
																"nativeSrc": "12207:18:7",
																"nodeType": "YulFunctionCall",
																"src": "12207:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12199:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "12199:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_bf60dfdf0bc628580395fc38657d86ed24105efc4a69fdfae0dbdbb8a1ef6412__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11881:350:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12032:9:7",
														"nodeType": "YulTypedName",
														"src": "12032:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12046:4:7",
														"nodeType": "YulTypedName",
														"src": "12046:4:7",
														"type": ""
													}
												],
												"src": "11881:350:7"
											},
											{
												"body": {
													"nativeSrc": "12410:180:7",
													"nodeType": "YulBlock",
													"src": "12410:180:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12427:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "12427:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12438:2:7",
																		"nodeType": "YulLiteral",
																		"src": "12438:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12420:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12420:6:7"
																},
																"nativeSrc": "12420:21:7",
																"nodeType": "YulFunctionCall",
																"src": "12420:21:7"
															},
															"nativeSrc": "12420:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "12420:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12461:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "12461:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12472:2:7",
																				"nodeType": "YulLiteral",
																				"src": "12472:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12457:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12457:3:7"
																		},
																		"nativeSrc": "12457:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12457:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12477:2:7",
																		"nodeType": "YulLiteral",
																		"src": "12477:2:7",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12450:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12450:6:7"
																},
																"nativeSrc": "12450:30:7",
																"nodeType": "YulFunctionCall",
																"src": "12450:30:7"
															},
															"nativeSrc": "12450:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "12450:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12500:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "12500:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12511:2:7",
																				"nodeType": "YulLiteral",
																				"src": "12511:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12496:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12496:3:7"
																		},
																		"nativeSrc": "12496:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12496:18:7"
																	},
																	{
																		"hexValue": "53656c6c732073746f70706564206279204469616d6f6e6420466c6f6f72",
																		"kind": "string",
																		"nativeSrc": "12516:32:7",
																		"nodeType": "YulLiteral",
																		"src": "12516:32:7",
																		"type": "",
																		"value": "Sells stopped by Diamond Floor"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12489:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12489:6:7"
																},
																"nativeSrc": "12489:60:7",
																"nodeType": "YulFunctionCall",
																"src": "12489:60:7"
															},
															"nativeSrc": "12489:60:7",
															"nodeType": "YulExpressionStatement",
															"src": "12489:60:7"
														},
														{
															"nativeSrc": "12558:26:7",
															"nodeType": "YulAssignment",
															"src": "12558:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12570:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "12570:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12581:2:7",
																		"nodeType": "YulLiteral",
																		"src": "12581:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12566:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12566:3:7"
																},
																"nativeSrc": "12566:18:7",
																"nodeType": "YulFunctionCall",
																"src": "12566:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12558:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "12558:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_30dd4f997a6ca09c24570e16af51c4dd5e70cd227c7036b9ebf2853f38eba550__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12236:354:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12387:9:7",
														"nodeType": "YulTypedName",
														"src": "12387:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12401:4:7",
														"nodeType": "YulTypedName",
														"src": "12401:4:7",
														"type": ""
													}
												],
												"src": "12236:354:7"
											},
											{
												"body": {
													"nativeSrc": "12769:165:7",
													"nodeType": "YulBlock",
													"src": "12769:165:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12786:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "12786:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12797:2:7",
																		"nodeType": "YulLiteral",
																		"src": "12797:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12779:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12779:6:7"
																},
																"nativeSrc": "12779:21:7",
																"nodeType": "YulFunctionCall",
																"src": "12779:21:7"
															},
															"nativeSrc": "12779:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "12779:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12820:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "12820:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12831:2:7",
																				"nodeType": "YulLiteral",
																				"src": "12831:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12816:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12816:3:7"
																		},
																		"nativeSrc": "12816:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12816:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12836:2:7",
																		"nodeType": "YulLiteral",
																		"src": "12836:2:7",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12809:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12809:6:7"
																},
																"nativeSrc": "12809:30:7",
																"nodeType": "YulFunctionCall",
																"src": "12809:30:7"
															},
															"nativeSrc": "12809:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "12809:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12859:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "12859:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12870:2:7",
																				"nodeType": "YulLiteral",
																				"src": "12870:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12855:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12855:3:7"
																		},
																		"nativeSrc": "12855:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12855:18:7"
																	},
																	{
																		"hexValue": "436f6f6c646f776e20616374697665",
																		"kind": "string",
																		"nativeSrc": "12875:17:7",
																		"nodeType": "YulLiteral",
																		"src": "12875:17:7",
																		"type": "",
																		"value": "Cooldown active"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12848:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12848:6:7"
																},
																"nativeSrc": "12848:45:7",
																"nodeType": "YulFunctionCall",
																"src": "12848:45:7"
															},
															"nativeSrc": "12848:45:7",
															"nodeType": "YulExpressionStatement",
															"src": "12848:45:7"
														},
														{
															"nativeSrc": "12902:26:7",
															"nodeType": "YulAssignment",
															"src": "12902:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12914:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "12914:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12925:2:7",
																		"nodeType": "YulLiteral",
																		"src": "12925:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12910:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12910:3:7"
																},
																"nativeSrc": "12910:18:7",
																"nodeType": "YulFunctionCall",
																"src": "12910:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12902:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "12902:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_74bfbd0e22b7de34cffebe5af74ea7eca5e99706ecb9129f4c3a64d8a95a2fa5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12595:339:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12746:9:7",
														"nodeType": "YulTypedName",
														"src": "12746:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12760:4:7",
														"nodeType": "YulTypedName",
														"src": "12760:4:7",
														"type": ""
													}
												],
												"src": "12595:339:7"
											},
											{
												"body": {
													"nativeSrc": "13113:169:7",
													"nodeType": "YulBlock",
													"src": "13113:169:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13130:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "13130:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13141:2:7",
																		"nodeType": "YulLiteral",
																		"src": "13141:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13123:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13123:6:7"
																},
																"nativeSrc": "13123:21:7",
																"nodeType": "YulFunctionCall",
																"src": "13123:21:7"
															},
															"nativeSrc": "13123:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "13123:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13164:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "13164:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13175:2:7",
																				"nodeType": "YulLiteral",
																				"src": "13175:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13160:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13160:3:7"
																		},
																		"nativeSrc": "13160:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13160:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13180:2:7",
																		"nodeType": "YulLiteral",
																		"src": "13180:2:7",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13153:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13153:6:7"
																},
																"nativeSrc": "13153:30:7",
																"nodeType": "YulFunctionCall",
																"src": "13153:30:7"
															},
															"nativeSrc": "13153:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "13153:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13203:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "13203:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13214:2:7",
																				"nodeType": "YulLiteral",
																				"src": "13214:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13199:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13199:3:7"
																		},
																		"nativeSrc": "13199:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13199:18:7"
																	},
																	{
																		"hexValue": "4d61782077616c6c6574206578636565646564",
																		"kind": "string",
																		"nativeSrc": "13219:21:7",
																		"nodeType": "YulLiteral",
																		"src": "13219:21:7",
																		"type": "",
																		"value": "Max wallet exceeded"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13192:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13192:6:7"
																},
																"nativeSrc": "13192:49:7",
																"nodeType": "YulFunctionCall",
																"src": "13192:49:7"
															},
															"nativeSrc": "13192:49:7",
															"nodeType": "YulExpressionStatement",
															"src": "13192:49:7"
														},
														{
															"nativeSrc": "13250:26:7",
															"nodeType": "YulAssignment",
															"src": "13250:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13262:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "13262:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13273:2:7",
																		"nodeType": "YulLiteral",
																		"src": "13273:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13258:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13258:3:7"
																},
																"nativeSrc": "13258:18:7",
																"nodeType": "YulFunctionCall",
																"src": "13258:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13250:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "13250:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d02ce7a72410a6351efcb149b27b582bc4ff73b7af05eaebe8fe75a22e828801__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12939:343:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13090:9:7",
														"nodeType": "YulTypedName",
														"src": "13090:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13104:4:7",
														"nodeType": "YulTypedName",
														"src": "13104:4:7",
														"type": ""
													}
												],
												"src": "12939:343:7"
											},
											{
												"body": {
													"nativeSrc": "13336:79:7",
													"nodeType": "YulBlock",
													"src": "13336:79:7",
													"statements": [
														{
															"nativeSrc": "13346:17:7",
															"nodeType": "YulAssignment",
															"src": "13346:17:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13358:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "13358:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "13361:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "13361:1:7"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "13354:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13354:3:7"
																},
																"nativeSrc": "13354:9:7",
																"nodeType": "YulFunctionCall",
																"src": "13354:9:7"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "13346:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "13346:4:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13387:22:7",
																"nodeType": "YulBlock",
																"src": "13387:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "13389:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "13389:16:7"
																			},
																			"nativeSrc": "13389:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "13389:18:7"
																		},
																		"nativeSrc": "13389:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "13389:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "13378:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "13378:4:7"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "13384:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "13384:1:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "13375:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "13375:2:7"
																},
																"nativeSrc": "13375:11:7",
																"nodeType": "YulFunctionCall",
																"src": "13375:11:7"
															},
															"nativeSrc": "13372:37:7",
															"nodeType": "YulIf",
															"src": "13372:37:7"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "13287:128:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "13318:1:7",
														"nodeType": "YulTypedName",
														"src": "13318:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "13321:1:7",
														"nodeType": "YulTypedName",
														"src": "13321:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "13327:4:7",
														"nodeType": "YulTypedName",
														"src": "13327:4:7",
														"type": ""
													}
												],
												"src": "13287:128:7"
											},
											{
												"body": {
													"nativeSrc": "13472:116:7",
													"nodeType": "YulBlock",
													"src": "13472:116:7",
													"statements": [
														{
															"nativeSrc": "13482:20:7",
															"nodeType": "YulAssignment",
															"src": "13482:20:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13497:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "13497:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "13500:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "13500:1:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "13493:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13493:3:7"
																},
																"nativeSrc": "13493:9:7",
																"nodeType": "YulFunctionCall",
																"src": "13493:9:7"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "13482:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "13482:7:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13560:22:7",
																"nodeType": "YulBlock",
																"src": "13560:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "13562:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "13562:16:7"
																			},
																			"nativeSrc": "13562:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "13562:18:7"
																		},
																		"nativeSrc": "13562:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "13562:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "13531:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "13531:1:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "13524:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "13524:6:7"
																				},
																				"nativeSrc": "13524:9:7",
																				"nodeType": "YulFunctionCall",
																				"src": "13524:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "13538:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "13538:1:7"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "13545:7:7",
																								"nodeType": "YulIdentifier",
																								"src": "13545:7:7"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "13554:1:7",
																								"nodeType": "YulIdentifier",
																								"src": "13554:1:7"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "13541:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "13541:3:7"
																						},
																						"nativeSrc": "13541:15:7",
																						"nodeType": "YulFunctionCall",
																						"src": "13541:15:7"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "13535:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "13535:2:7"
																				},
																				"nativeSrc": "13535:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "13535:22:7"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "13521:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "13521:2:7"
																		},
																		"nativeSrc": "13521:37:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13521:37:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "13514:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13514:6:7"
																},
																"nativeSrc": "13514:45:7",
																"nodeType": "YulFunctionCall",
																"src": "13514:45:7"
															},
															"nativeSrc": "13511:71:7",
															"nodeType": "YulIf",
															"src": "13511:71:7"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "13420:168:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "13451:1:7",
														"nodeType": "YulTypedName",
														"src": "13451:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "13454:1:7",
														"nodeType": "YulTypedName",
														"src": "13454:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "13460:7:7",
														"nodeType": "YulTypedName",
														"src": "13460:7:7",
														"type": ""
													}
												],
												"src": "13420:168:7"
											},
											{
												"body": {
													"nativeSrc": "13639:74:7",
													"nodeType": "YulBlock",
													"src": "13639:74:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "13662:22:7",
																"nodeType": "YulBlock",
																"src": "13662:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "13664:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "13664:16:7"
																			},
																			"nativeSrc": "13664:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "13664:18:7"
																		},
																		"nativeSrc": "13664:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "13664:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "13659:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "13659:1:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "13652:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13652:6:7"
																},
																"nativeSrc": "13652:9:7",
																"nodeType": "YulFunctionCall",
																"src": "13652:9:7"
															},
															"nativeSrc": "13649:35:7",
															"nodeType": "YulIf",
															"src": "13649:35:7"
														},
														{
															"nativeSrc": "13693:14:7",
															"nodeType": "YulAssignment",
															"src": "13693:14:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13702:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "13702:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "13705:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "13705:1:7"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "13698:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13698:3:7"
																},
																"nativeSrc": "13698:9:7",
																"nodeType": "YulFunctionCall",
																"src": "13698:9:7"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "13693:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "13693:1:7"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "13593:120:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "13624:1:7",
														"nodeType": "YulTypedName",
														"src": "13624:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "13627:1:7",
														"nodeType": "YulTypedName",
														"src": "13627:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "13633:1:7",
														"nodeType": "YulTypedName",
														"src": "13633:1:7",
														"type": ""
													}
												],
												"src": "13593:120:7"
											},
											{
												"body": {
													"nativeSrc": "13847:175:7",
													"nodeType": "YulBlock",
													"src": "13847:175:7",
													"statements": [
														{
															"nativeSrc": "13857:26:7",
															"nodeType": "YulAssignment",
															"src": "13857:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13869:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "13869:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13880:2:7",
																		"nodeType": "YulLiteral",
																		"src": "13880:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13865:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13865:3:7"
																},
																"nativeSrc": "13865:18:7",
																"nodeType": "YulFunctionCall",
																"src": "13865:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13857:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "13857:4:7"
																}
															]
														},
														{
															"nativeSrc": "13892:29:7",
															"nodeType": "YulVariableDeclaration",
															"src": "13892:29:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "13910:3:7",
																				"nodeType": "YulLiteral",
																				"src": "13910:3:7",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13915:1:7",
																				"nodeType": "YulLiteral",
																				"src": "13915:1:7",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "13906:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13906:3:7"
																		},
																		"nativeSrc": "13906:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13906:11:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13919:1:7",
																		"nodeType": "YulLiteral",
																		"src": "13919:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "13902:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13902:3:7"
																},
																"nativeSrc": "13902:19:7",
																"nodeType": "YulFunctionCall",
																"src": "13902:19:7"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "13896:2:7",
																	"nodeType": "YulTypedName",
																	"src": "13896:2:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13937:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "13937:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "13952:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "13952:6:7"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "13960:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "13960:2:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "13948:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13948:3:7"
																		},
																		"nativeSrc": "13948:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13948:15:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13930:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13930:6:7"
																},
																"nativeSrc": "13930:34:7",
																"nodeType": "YulFunctionCall",
																"src": "13930:34:7"
															},
															"nativeSrc": "13930:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "13930:34:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13984:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "13984:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13995:2:7",
																				"nodeType": "YulLiteral",
																				"src": "13995:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13980:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13980:3:7"
																		},
																		"nativeSrc": "13980:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13980:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "14004:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "14004:6:7"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "14012:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "14012:2:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "14000:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "14000:3:7"
																		},
																		"nativeSrc": "14000:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14000:15:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13973:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13973:6:7"
																},
																"nativeSrc": "13973:43:7",
																"nodeType": "YulFunctionCall",
																"src": "13973:43:7"
															},
															"nativeSrc": "13973:43:7",
															"nodeType": "YulExpressionStatement",
															"src": "13973:43:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nativeSrc": "13718:304:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13808:9:7",
														"nodeType": "YulTypedName",
														"src": "13808:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13819:6:7",
														"nodeType": "YulTypedName",
														"src": "13819:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13827:6:7",
														"nodeType": "YulTypedName",
														"src": "13827:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13838:4:7",
														"nodeType": "YulTypedName",
														"src": "13838:4:7",
														"type": ""
													}
												],
												"src": "13718:304:7"
											},
											{
												"body": {
													"nativeSrc": "14201:227:7",
													"nodeType": "YulBlock",
													"src": "14201:227:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14218:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "14218:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14229:2:7",
																		"nodeType": "YulLiteral",
																		"src": "14229:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14211:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "14211:6:7"
																},
																"nativeSrc": "14211:21:7",
																"nodeType": "YulFunctionCall",
																"src": "14211:21:7"
															},
															"nativeSrc": "14211:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "14211:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14252:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "14252:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14263:2:7",
																				"nodeType": "YulLiteral",
																				"src": "14263:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14248:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "14248:3:7"
																		},
																		"nativeSrc": "14248:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14248:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14268:2:7",
																		"nodeType": "YulLiteral",
																		"src": "14268:2:7",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14241:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "14241:6:7"
																},
																"nativeSrc": "14241:30:7",
																"nodeType": "YulFunctionCall",
																"src": "14241:30:7"
															},
															"nativeSrc": "14241:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "14241:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14291:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "14291:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14302:2:7",
																				"nodeType": "YulLiteral",
																				"src": "14302:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14287:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "14287:3:7"
																		},
																		"nativeSrc": "14287:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14287:18:7"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nativeSrc": "14307:34:7",
																		"nodeType": "YulLiteral",
																		"src": "14307:34:7",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14280:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "14280:6:7"
																},
																"nativeSrc": "14280:62:7",
																"nodeType": "YulFunctionCall",
																"src": "14280:62:7"
															},
															"nativeSrc": "14280:62:7",
															"nodeType": "YulExpressionStatement",
															"src": "14280:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14362:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "14362:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14373:2:7",
																				"nodeType": "YulLiteral",
																				"src": "14373:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14358:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "14358:3:7"
																		},
																		"nativeSrc": "14358:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14358:18:7"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nativeSrc": "14378:7:7",
																		"nodeType": "YulLiteral",
																		"src": "14378:7:7",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14351:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "14351:6:7"
																},
																"nativeSrc": "14351:35:7",
																"nodeType": "YulFunctionCall",
																"src": "14351:35:7"
															},
															"nativeSrc": "14351:35:7",
															"nodeType": "YulExpressionStatement",
															"src": "14351:35:7"
														},
														{
															"nativeSrc": "14395:27:7",
															"nodeType": "YulAssignment",
															"src": "14395:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14407:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "14407:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14418:3:7",
																		"nodeType": "YulLiteral",
																		"src": "14418:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14403:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14403:3:7"
																},
																"nativeSrc": "14403:19:7",
																"nodeType": "YulFunctionCall",
																"src": "14403:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14395:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "14395:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14027:401:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14178:9:7",
														"nodeType": "YulTypedName",
														"src": "14178:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14192:4:7",
														"nodeType": "YulTypedName",
														"src": "14192:4:7",
														"type": ""
													}
												],
												"src": "14027:401:7"
											},
											{
												"body": {
													"nativeSrc": "14607:225:7",
													"nodeType": "YulBlock",
													"src": "14607:225:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14624:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "14624:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14635:2:7",
																		"nodeType": "YulLiteral",
																		"src": "14635:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14617:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "14617:6:7"
																},
																"nativeSrc": "14617:21:7",
																"nodeType": "YulFunctionCall",
																"src": "14617:21:7"
															},
															"nativeSrc": "14617:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "14617:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14658:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "14658:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14669:2:7",
																				"nodeType": "YulLiteral",
																				"src": "14669:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14654:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "14654:3:7"
																		},
																		"nativeSrc": "14654:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14654:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14674:2:7",
																		"nodeType": "YulLiteral",
																		"src": "14674:2:7",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14647:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "14647:6:7"
																},
																"nativeSrc": "14647:30:7",
																"nodeType": "YulFunctionCall",
																"src": "14647:30:7"
															},
															"nativeSrc": "14647:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "14647:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14697:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "14697:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14708:2:7",
																				"nodeType": "YulLiteral",
																				"src": "14708:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14693:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "14693:3:7"
																		},
																		"nativeSrc": "14693:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14693:18:7"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nativeSrc": "14713:34:7",
																		"nodeType": "YulLiteral",
																		"src": "14713:34:7",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14686:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "14686:6:7"
																},
																"nativeSrc": "14686:62:7",
																"nodeType": "YulFunctionCall",
																"src": "14686:62:7"
															},
															"nativeSrc": "14686:62:7",
															"nodeType": "YulExpressionStatement",
															"src": "14686:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14768:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "14768:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14779:2:7",
																				"nodeType": "YulLiteral",
																				"src": "14779:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14764:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "14764:3:7"
																		},
																		"nativeSrc": "14764:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14764:18:7"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nativeSrc": "14784:5:7",
																		"nodeType": "YulLiteral",
																		"src": "14784:5:7",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14757:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "14757:6:7"
																},
																"nativeSrc": "14757:33:7",
																"nodeType": "YulFunctionCall",
																"src": "14757:33:7"
															},
															"nativeSrc": "14757:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "14757:33:7"
														},
														{
															"nativeSrc": "14799:27:7",
															"nodeType": "YulAssignment",
															"src": "14799:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14811:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "14811:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14822:3:7",
																		"nodeType": "YulLiteral",
																		"src": "14822:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14807:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14807:3:7"
																},
																"nativeSrc": "14807:19:7",
																"nodeType": "YulFunctionCall",
																"src": "14807:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14799:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "14799:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14433:399:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14584:9:7",
														"nodeType": "YulTypedName",
														"src": "14584:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14598:4:7",
														"nodeType": "YulTypedName",
														"src": "14598:4:7",
														"type": ""
													}
												],
												"src": "14433:399:7"
											},
											{
												"body": {
													"nativeSrc": "15011:228:7",
													"nodeType": "YulBlock",
													"src": "15011:228:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15028:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "15028:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15039:2:7",
																		"nodeType": "YulLiteral",
																		"src": "15039:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15021:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "15021:6:7"
																},
																"nativeSrc": "15021:21:7",
																"nodeType": "YulFunctionCall",
																"src": "15021:21:7"
															},
															"nativeSrc": "15021:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "15021:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15062:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "15062:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15073:2:7",
																				"nodeType": "YulLiteral",
																				"src": "15073:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15058:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "15058:3:7"
																		},
																		"nativeSrc": "15058:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "15058:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15078:2:7",
																		"nodeType": "YulLiteral",
																		"src": "15078:2:7",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15051:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "15051:6:7"
																},
																"nativeSrc": "15051:30:7",
																"nodeType": "YulFunctionCall",
																"src": "15051:30:7"
															},
															"nativeSrc": "15051:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "15051:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15101:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "15101:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15112:2:7",
																				"nodeType": "YulLiteral",
																				"src": "15112:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15097:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "15097:3:7"
																		},
																		"nativeSrc": "15097:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "15097:18:7"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nativeSrc": "15117:34:7",
																		"nodeType": "YulLiteral",
																		"src": "15117:34:7",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15090:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "15090:6:7"
																},
																"nativeSrc": "15090:62:7",
																"nodeType": "YulFunctionCall",
																"src": "15090:62:7"
															},
															"nativeSrc": "15090:62:7",
															"nodeType": "YulExpressionStatement",
															"src": "15090:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15172:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "15172:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15183:2:7",
																				"nodeType": "YulLiteral",
																				"src": "15183:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15168:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "15168:3:7"
																		},
																		"nativeSrc": "15168:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "15168:18:7"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nativeSrc": "15188:8:7",
																		"nodeType": "YulLiteral",
																		"src": "15188:8:7",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15161:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "15161:6:7"
																},
																"nativeSrc": "15161:36:7",
																"nodeType": "YulFunctionCall",
																"src": "15161:36:7"
															},
															"nativeSrc": "15161:36:7",
															"nodeType": "YulExpressionStatement",
															"src": "15161:36:7"
														},
														{
															"nativeSrc": "15206:27:7",
															"nodeType": "YulAssignment",
															"src": "15206:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15218:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "15218:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15229:3:7",
																		"nodeType": "YulLiteral",
																		"src": "15229:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15214:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "15214:3:7"
																},
																"nativeSrc": "15214:19:7",
																"nodeType": "YulFunctionCall",
																"src": "15214:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15206:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "15206:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14837:402:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14988:9:7",
														"nodeType": "YulTypedName",
														"src": "14988:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15002:4:7",
														"nodeType": "YulTypedName",
														"src": "15002:4:7",
														"type": ""
													}
												],
												"src": "14837:402:7"
											},
											{
												"body": {
													"nativeSrc": "15373:119:7",
													"nodeType": "YulBlock",
													"src": "15373:119:7",
													"statements": [
														{
															"nativeSrc": "15383:26:7",
															"nodeType": "YulAssignment",
															"src": "15383:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15395:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "15395:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15406:2:7",
																		"nodeType": "YulLiteral",
																		"src": "15406:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15391:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "15391:3:7"
																},
																"nativeSrc": "15391:18:7",
																"nodeType": "YulFunctionCall",
																"src": "15391:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15383:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "15383:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15425:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "15425:9:7"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "15436:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "15436:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15418:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "15418:6:7"
																},
																"nativeSrc": "15418:25:7",
																"nodeType": "YulFunctionCall",
																"src": "15418:25:7"
															},
															"nativeSrc": "15418:25:7",
															"nodeType": "YulExpressionStatement",
															"src": "15418:25:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15463:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "15463:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15474:2:7",
																				"nodeType": "YulLiteral",
																				"src": "15474:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15459:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "15459:3:7"
																		},
																		"nativeSrc": "15459:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "15459:18:7"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "15479:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "15479:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15452:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "15452:6:7"
																},
																"nativeSrc": "15452:34:7",
																"nodeType": "YulFunctionCall",
																"src": "15452:34:7"
															},
															"nativeSrc": "15452:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "15452:34:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "15244:248:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15334:9:7",
														"nodeType": "YulTypedName",
														"src": "15334:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "15345:6:7",
														"nodeType": "YulTypedName",
														"src": "15345:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "15353:6:7",
														"nodeType": "YulTypedName",
														"src": "15353:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15364:4:7",
														"nodeType": "YulTypedName",
														"src": "15364:4:7",
														"type": ""
													}
												],
												"src": "15244:248:7"
											},
											{
												"body": {
													"nativeSrc": "15529:95:7",
													"nodeType": "YulBlock",
													"src": "15529:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15546:1:7",
																		"nodeType": "YulLiteral",
																		"src": "15546:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "15553:3:7",
																				"nodeType": "YulLiteral",
																				"src": "15553:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15558:10:7",
																				"nodeType": "YulLiteral",
																				"src": "15558:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "15549:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "15549:3:7"
																		},
																		"nativeSrc": "15549:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "15549:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15539:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "15539:6:7"
																},
																"nativeSrc": "15539:31:7",
																"nodeType": "YulFunctionCall",
																"src": "15539:31:7"
															},
															"nativeSrc": "15539:31:7",
															"nodeType": "YulExpressionStatement",
															"src": "15539:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15586:1:7",
																		"nodeType": "YulLiteral",
																		"src": "15586:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15589:4:7",
																		"nodeType": "YulLiteral",
																		"src": "15589:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15579:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "15579:6:7"
																},
																"nativeSrc": "15579:15:7",
																"nodeType": "YulFunctionCall",
																"src": "15579:15:7"
															},
															"nativeSrc": "15579:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "15579:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15610:1:7",
																		"nodeType": "YulLiteral",
																		"src": "15610:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15613:4:7",
																		"nodeType": "YulLiteral",
																		"src": "15613:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "15603:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "15603:6:7"
																},
																"nativeSrc": "15603:15:7",
																"nodeType": "YulFunctionCall",
																"src": "15603:15:7"
															},
															"nativeSrc": "15603:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "15603:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "15497:127:7",
												"nodeType": "YulFunctionDefinition",
												"src": "15497:127:7"
											},
											{
												"body": {
													"nativeSrc": "15661:95:7",
													"nodeType": "YulBlock",
													"src": "15661:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15678:1:7",
																		"nodeType": "YulLiteral",
																		"src": "15678:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "15685:3:7",
																				"nodeType": "YulLiteral",
																				"src": "15685:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15690:10:7",
																				"nodeType": "YulLiteral",
																				"src": "15690:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "15681:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "15681:3:7"
																		},
																		"nativeSrc": "15681:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "15681:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15671:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "15671:6:7"
																},
																"nativeSrc": "15671:31:7",
																"nodeType": "YulFunctionCall",
																"src": "15671:31:7"
															},
															"nativeSrc": "15671:31:7",
															"nodeType": "YulExpressionStatement",
															"src": "15671:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15718:1:7",
																		"nodeType": "YulLiteral",
																		"src": "15718:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15721:4:7",
																		"nodeType": "YulLiteral",
																		"src": "15721:4:7",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15711:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "15711:6:7"
																},
																"nativeSrc": "15711:15:7",
																"nodeType": "YulFunctionCall",
																"src": "15711:15:7"
															},
															"nativeSrc": "15711:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "15711:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15742:1:7",
																		"nodeType": "YulLiteral",
																		"src": "15742:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15745:4:7",
																		"nodeType": "YulLiteral",
																		"src": "15745:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "15735:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "15735:6:7"
																},
																"nativeSrc": "15735:15:7",
																"nodeType": "YulFunctionCall",
																"src": "15735:15:7"
															},
															"nativeSrc": "15735:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "15735:15:7"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "15629:127:7",
												"nodeType": "YulFunctionDefinition",
												"src": "15629:127:7"
											},
											{
												"body": {
													"nativeSrc": "16032:709:7",
													"nodeType": "YulBlock",
													"src": "16032:709:7",
													"statements": [
														{
															"nativeSrc": "16042:33:7",
															"nodeType": "YulVariableDeclaration",
															"src": "16042:33:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16060:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "16060:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16071:3:7",
																		"nodeType": "YulLiteral",
																		"src": "16071:3:7",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16056:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "16056:3:7"
																},
																"nativeSrc": "16056:19:7",
																"nodeType": "YulFunctionCall",
																"src": "16056:19:7"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nativeSrc": "16046:6:7",
																	"nodeType": "YulTypedName",
																	"src": "16046:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16091:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "16091:9:7"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "16102:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "16102:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16084:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "16084:6:7"
																},
																"nativeSrc": "16084:25:7",
																"nodeType": "YulFunctionCall",
																"src": "16084:25:7"
															},
															"nativeSrc": "16084:25:7",
															"nodeType": "YulExpressionStatement",
															"src": "16084:25:7"
														},
														{
															"nativeSrc": "16118:12:7",
															"nodeType": "YulVariableDeclaration",
															"src": "16118:12:7",
															"value": {
																"kind": "number",
																"nativeSrc": "16128:2:7",
																"nodeType": "YulLiteral",
																"src": "16128:2:7",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "16122:2:7",
																	"nodeType": "YulTypedName",
																	"src": "16122:2:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16150:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "16150:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16161:2:7",
																				"nodeType": "YulLiteral",
																				"src": "16161:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16146:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "16146:3:7"
																		},
																		"nativeSrc": "16146:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "16146:18:7"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "16166:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "16166:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16139:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "16139:6:7"
																},
																"nativeSrc": "16139:34:7",
																"nodeType": "YulFunctionCall",
																"src": "16139:34:7"
															},
															"nativeSrc": "16139:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "16139:34:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16193:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "16193:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16204:2:7",
																				"nodeType": "YulLiteral",
																				"src": "16204:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16189:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "16189:3:7"
																		},
																		"nativeSrc": "16189:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "16189:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16209:3:7",
																		"nodeType": "YulLiteral",
																		"src": "16209:3:7",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16182:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "16182:6:7"
																},
																"nativeSrc": "16182:31:7",
																"nodeType": "YulFunctionCall",
																"src": "16182:31:7"
															},
															"nativeSrc": "16182:31:7",
															"nodeType": "YulExpressionStatement",
															"src": "16182:31:7"
														},
														{
															"nativeSrc": "16222:17:7",
															"nodeType": "YulVariableDeclaration",
															"src": "16222:17:7",
															"value": {
																"name": "tail_1",
																"nativeSrc": "16233:6:7",
																"nodeType": "YulIdentifier",
																"src": "16233:6:7"
															},
															"variables": [
																{
																	"name": "pos",
																	"nativeSrc": "16226:3:7",
																	"nodeType": "YulTypedName",
																	"src": "16226:3:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "16248:27:7",
															"nodeType": "YulVariableDeclaration",
															"src": "16248:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "16268:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "16268:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "16262:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "16262:5:7"
																},
																"nativeSrc": "16262:13:7",
																"nodeType": "YulFunctionCall",
																"src": "16262:13:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "16252:6:7",
																	"nodeType": "YulTypedName",
																	"src": "16252:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nativeSrc": "16291:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "16291:6:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "16299:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "16299:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16284:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "16284:6:7"
																},
																"nativeSrc": "16284:22:7",
																"nodeType": "YulFunctionCall",
																"src": "16284:22:7"
															},
															"nativeSrc": "16284:22:7",
															"nodeType": "YulExpressionStatement",
															"src": "16284:22:7"
														},
														{
															"nativeSrc": "16315:26:7",
															"nodeType": "YulAssignment",
															"src": "16315:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16326:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "16326:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16337:3:7",
																		"nodeType": "YulLiteral",
																		"src": "16337:3:7",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16322:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "16322:3:7"
																},
																"nativeSrc": "16322:19:7",
																"nodeType": "YulFunctionCall",
																"src": "16322:19:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16315:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "16315:3:7"
																}
															]
														},
														{
															"nativeSrc": "16350:29:7",
															"nodeType": "YulVariableDeclaration",
															"src": "16350:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "16368:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "16368:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16376:2:7",
																		"nodeType": "YulLiteral",
																		"src": "16376:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16364:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "16364:3:7"
																},
																"nativeSrc": "16364:15:7",
																"nodeType": "YulFunctionCall",
																"src": "16364:15:7"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "16354:6:7",
																	"nodeType": "YulTypedName",
																	"src": "16354:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "16388:10:7",
															"nodeType": "YulVariableDeclaration",
															"src": "16388:10:7",
															"value": {
																"kind": "number",
																"nativeSrc": "16397:1:7",
																"nodeType": "YulLiteral",
																"src": "16397:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "16392:1:7",
																	"nodeType": "YulTypedName",
																	"src": "16392:1:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "16456:146:7",
																"nodeType": "YulBlock",
																"src": "16456:146:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "16477:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "16477:3:7"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "srcPtr",
																									"nativeSrc": "16492:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "16492:6:7"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nativeSrc": "16486:5:7",
																								"nodeType": "YulIdentifier",
																								"src": "16486:5:7"
																							},
																							"nativeSrc": "16486:13:7",
																							"nodeType": "YulFunctionCall",
																							"src": "16486:13:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "16509:3:7",
																											"nodeType": "YulLiteral",
																											"src": "16509:3:7",
																											"type": "",
																											"value": "160"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "16514:1:7",
																											"nodeType": "YulLiteral",
																											"src": "16514:1:7",
																											"type": "",
																											"value": "1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "16505:3:7",
																										"nodeType": "YulIdentifier",
																										"src": "16505:3:7"
																									},
																									"nativeSrc": "16505:11:7",
																									"nodeType": "YulFunctionCall",
																									"src": "16505:11:7"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "16518:1:7",
																									"nodeType": "YulLiteral",
																									"src": "16518:1:7",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nativeSrc": "16501:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "16501:3:7"
																							},
																							"nativeSrc": "16501:19:7",
																							"nodeType": "YulFunctionCall",
																							"src": "16501:19:7"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "16482:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "16482:3:7"
																					},
																					"nativeSrc": "16482:39:7",
																					"nodeType": "YulFunctionCall",
																					"src": "16482:39:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "16470:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "16470:6:7"
																			},
																			"nativeSrc": "16470:52:7",
																			"nodeType": "YulFunctionCall",
																			"src": "16470:52:7"
																		},
																		"nativeSrc": "16470:52:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "16470:52:7"
																	},
																	{
																		"nativeSrc": "16535:19:7",
																		"nodeType": "YulAssignment",
																		"src": "16535:19:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "16546:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "16546:3:7"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "16551:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "16551:2:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "16542:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "16542:3:7"
																			},
																			"nativeSrc": "16542:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "16542:12:7"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "16535:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "16535:3:7"
																			}
																		]
																	},
																	{
																		"nativeSrc": "16567:25:7",
																		"nodeType": "YulAssignment",
																		"src": "16567:25:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "16581:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "16581:6:7"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "16589:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "16589:2:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "16577:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "16577:3:7"
																			},
																			"nativeSrc": "16577:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "16577:15:7"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "16567:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "16567:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "16418:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "16418:1:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "16421:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "16421:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "16415:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "16415:2:7"
																},
																"nativeSrc": "16415:13:7",
																"nodeType": "YulFunctionCall",
																"src": "16415:13:7"
															},
															"nativeSrc": "16407:195:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "16429:18:7",
																"nodeType": "YulBlock",
																"src": "16429:18:7",
																"statements": [
																	{
																		"nativeSrc": "16431:14:7",
																		"nodeType": "YulAssignment",
																		"src": "16431:14:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "16440:1:7",
																					"nodeType": "YulIdentifier",
																					"src": "16440:1:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "16443:1:7",
																					"nodeType": "YulLiteral",
																					"src": "16443:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "16436:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "16436:3:7"
																			},
																			"nativeSrc": "16436:9:7",
																			"nodeType": "YulFunctionCall",
																			"src": "16436:9:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "16431:1:7",
																				"nodeType": "YulIdentifier",
																				"src": "16431:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "16411:3:7",
																"nodeType": "YulBlock",
																"src": "16411:3:7",
																"statements": []
															},
															"src": "16407:195:7"
														},
														{
															"nativeSrc": "16611:11:7",
															"nodeType": "YulAssignment",
															"src": "16611:11:7",
															"value": {
																"name": "pos",
																"nativeSrc": "16619:3:7",
																"nodeType": "YulIdentifier",
																"src": "16619:3:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16611:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "16611:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16642:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "16642:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16653:2:7",
																				"nodeType": "YulLiteral",
																				"src": "16653:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16638:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "16638:3:7"
																		},
																		"nativeSrc": "16638:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "16638:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value3",
																				"nativeSrc": "16662:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "16662:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "16678:3:7",
																								"nodeType": "YulLiteral",
																								"src": "16678:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "16683:1:7",
																								"nodeType": "YulLiteral",
																								"src": "16683:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "16674:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "16674:3:7"
																						},
																						"nativeSrc": "16674:11:7",
																						"nodeType": "YulFunctionCall",
																						"src": "16674:11:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "16687:1:7",
																						"nodeType": "YulLiteral",
																						"src": "16687:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "16670:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "16670:3:7"
																				},
																				"nativeSrc": "16670:19:7",
																				"nodeType": "YulFunctionCall",
																				"src": "16670:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "16658:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "16658:3:7"
																		},
																		"nativeSrc": "16658:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "16658:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16631:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "16631:6:7"
																},
																"nativeSrc": "16631:60:7",
																"nodeType": "YulFunctionCall",
																"src": "16631:60:7"
															},
															"nativeSrc": "16631:60:7",
															"nodeType": "YulExpressionStatement",
															"src": "16631:60:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16711:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "16711:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16722:3:7",
																				"nodeType": "YulLiteral",
																				"src": "16722:3:7",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16707:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "16707:3:7"
																		},
																		"nativeSrc": "16707:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "16707:19:7"
																	},
																	{
																		"name": "value4",
																		"nativeSrc": "16728:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "16728:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16700:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "16700:6:7"
																},
																"nativeSrc": "16700:35:7",
																"nodeType": "YulFunctionCall",
																"src": "16700:35:7"
															},
															"nativeSrc": "16700:35:7",
															"nodeType": "YulExpressionStatement",
															"src": "16700:35:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_rational_0_by_1_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "15761:980:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15969:9:7",
														"nodeType": "YulTypedName",
														"src": "15969:9:7",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "15980:6:7",
														"nodeType": "YulTypedName",
														"src": "15980:6:7",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "15988:6:7",
														"nodeType": "YulTypedName",
														"src": "15988:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "15996:6:7",
														"nodeType": "YulTypedName",
														"src": "15996:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "16004:6:7",
														"nodeType": "YulTypedName",
														"src": "16004:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "16012:6:7",
														"nodeType": "YulTypedName",
														"src": "16012:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16023:4:7",
														"nodeType": "YulTypedName",
														"src": "16023:4:7",
														"type": ""
													}
												],
												"src": "15761:980:7"
											},
											{
												"body": {
													"nativeSrc": "16852:999:7",
													"nodeType": "YulBlock",
													"src": "16852:999:7",
													"statements": [
														{
															"nativeSrc": "16862:12:7",
															"nodeType": "YulVariableDeclaration",
															"src": "16862:12:7",
															"value": {
																"kind": "number",
																"nativeSrc": "16872:2:7",
																"nodeType": "YulLiteral",
																"src": "16872:2:7",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "16866:2:7",
																	"nodeType": "YulTypedName",
																	"src": "16866:2:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "16919:16:7",
																"nodeType": "YulBlock",
																"src": "16919:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "16928:1:7",
																					"nodeType": "YulLiteral",
																					"src": "16928:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "16931:1:7",
																					"nodeType": "YulLiteral",
																					"src": "16931:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "16921:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "16921:6:7"
																			},
																			"nativeSrc": "16921:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "16921:12:7"
																		},
																		"nativeSrc": "16921:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "16921:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16894:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "16894:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16903:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "16903:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16890:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "16890:3:7"
																		},
																		"nativeSrc": "16890:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "16890:23:7"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "16915:2:7",
																		"nodeType": "YulIdentifier",
																		"src": "16915:2:7"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "16886:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "16886:3:7"
																},
																"nativeSrc": "16886:32:7",
																"nodeType": "YulFunctionCall",
																"src": "16886:32:7"
															},
															"nativeSrc": "16883:52:7",
															"nodeType": "YulIf",
															"src": "16883:52:7"
														},
														{
															"nativeSrc": "16944:30:7",
															"nodeType": "YulVariableDeclaration",
															"src": "16944:30:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16964:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "16964:9:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "16958:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "16958:5:7"
																},
																"nativeSrc": "16958:16:7",
																"nodeType": "YulFunctionCall",
																"src": "16958:16:7"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "16948:6:7",
																	"nodeType": "YulTypedName",
																	"src": "16948:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "16983:28:7",
															"nodeType": "YulVariableDeclaration",
															"src": "16983:28:7",
															"value": {
																"kind": "number",
																"nativeSrc": "16993:18:7",
																"nodeType": "YulLiteral",
																"src": "16993:18:7",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_2",
																	"nativeSrc": "16987:2:7",
																	"nodeType": "YulTypedName",
																	"src": "16987:2:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "17038:16:7",
																"nodeType": "YulBlock",
																"src": "17038:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "17047:1:7",
																					"nodeType": "YulLiteral",
																					"src": "17047:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "17050:1:7",
																					"nodeType": "YulLiteral",
																					"src": "17050:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "17040:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "17040:6:7"
																			},
																			"nativeSrc": "17040:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "17040:12:7"
																		},
																		"nativeSrc": "17040:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "17040:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "17026:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "17026:6:7"
																	},
																	{
																		"name": "_2",
																		"nativeSrc": "17034:2:7",
																		"nodeType": "YulIdentifier",
																		"src": "17034:2:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "17023:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "17023:2:7"
																},
																"nativeSrc": "17023:14:7",
																"nodeType": "YulFunctionCall",
																"src": "17023:14:7"
															},
															"nativeSrc": "17020:34:7",
															"nodeType": "YulIf",
															"src": "17020:34:7"
														},
														{
															"nativeSrc": "17063:32:7",
															"nodeType": "YulVariableDeclaration",
															"src": "17063:32:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17077:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "17077:9:7"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "17088:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "17088:6:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17073:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "17073:3:7"
																},
																"nativeSrc": "17073:22:7",
																"nodeType": "YulFunctionCall",
																"src": "17073:22:7"
															},
															"variables": [
																{
																	"name": "_3",
																	"nativeSrc": "17067:2:7",
																	"nodeType": "YulTypedName",
																	"src": "17067:2:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "17143:16:7",
																"nodeType": "YulBlock",
																"src": "17143:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "17152:1:7",
																					"nodeType": "YulLiteral",
																					"src": "17152:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "17155:1:7",
																					"nodeType": "YulLiteral",
																					"src": "17155:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "17145:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "17145:6:7"
																			},
																			"nativeSrc": "17145:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "17145:12:7"
																		},
																		"nativeSrc": "17145:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "17145:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nativeSrc": "17122:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "17122:2:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "17126:4:7",
																						"nodeType": "YulLiteral",
																						"src": "17126:4:7",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "17118:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "17118:3:7"
																				},
																				"nativeSrc": "17118:13:7",
																				"nodeType": "YulFunctionCall",
																				"src": "17118:13:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "17133:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "17133:7:7"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "17114:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "17114:3:7"
																		},
																		"nativeSrc": "17114:27:7",
																		"nodeType": "YulFunctionCall",
																		"src": "17114:27:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "17107:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "17107:6:7"
																},
																"nativeSrc": "17107:35:7",
																"nodeType": "YulFunctionCall",
																"src": "17107:35:7"
															},
															"nativeSrc": "17104:55:7",
															"nodeType": "YulIf",
															"src": "17104:55:7"
														},
														{
															"nativeSrc": "17168:19:7",
															"nodeType": "YulVariableDeclaration",
															"src": "17168:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nativeSrc": "17184:2:7",
																		"nodeType": "YulIdentifier",
																		"src": "17184:2:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "17178:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "17178:5:7"
																},
																"nativeSrc": "17178:9:7",
																"nodeType": "YulFunctionCall",
																"src": "17178:9:7"
															},
															"variables": [
																{
																	"name": "_4",
																	"nativeSrc": "17172:2:7",
																	"nodeType": "YulTypedName",
																	"src": "17172:2:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "17210:22:7",
																"nodeType": "YulBlock",
																"src": "17210:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "17212:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "17212:16:7"
																			},
																			"nativeSrc": "17212:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "17212:18:7"
																		},
																		"nativeSrc": "17212:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "17212:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_4",
																		"nativeSrc": "17202:2:7",
																		"nodeType": "YulIdentifier",
																		"src": "17202:2:7"
																	},
																	{
																		"name": "_2",
																		"nativeSrc": "17206:2:7",
																		"nodeType": "YulIdentifier",
																		"src": "17206:2:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "17199:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "17199:2:7"
																},
																"nativeSrc": "17199:10:7",
																"nodeType": "YulFunctionCall",
																"src": "17199:10:7"
															},
															"nativeSrc": "17196:36:7",
															"nodeType": "YulIf",
															"src": "17196:36:7"
														},
														{
															"nativeSrc": "17241:20:7",
															"nodeType": "YulVariableDeclaration",
															"src": "17241:20:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17255:1:7",
																		"nodeType": "YulLiteral",
																		"src": "17255:1:7",
																		"type": "",
																		"value": "5"
																	},
																	{
																		"name": "_4",
																		"nativeSrc": "17258:2:7",
																		"nodeType": "YulIdentifier",
																		"src": "17258:2:7"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "17251:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "17251:3:7"
																},
																"nativeSrc": "17251:10:7",
																"nodeType": "YulFunctionCall",
																"src": "17251:10:7"
															},
															"variables": [
																{
																	"name": "_5",
																	"nativeSrc": "17245:2:7",
																	"nodeType": "YulTypedName",
																	"src": "17245:2:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "17270:23:7",
															"nodeType": "YulVariableDeclaration",
															"src": "17270:23:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17290:2:7",
																		"nodeType": "YulLiteral",
																		"src": "17290:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "17284:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "17284:5:7"
																},
																"nativeSrc": "17284:9:7",
																"nodeType": "YulFunctionCall",
																"src": "17284:9:7"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "17274:6:7",
																	"nodeType": "YulTypedName",
																	"src": "17274:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "17302:56:7",
															"nodeType": "YulVariableDeclaration",
															"src": "17302:56:7",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "17324:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "17324:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_5",
																						"nativeSrc": "17340:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "17340:2:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "17344:2:7",
																						"nodeType": "YulLiteral",
																						"src": "17344:2:7",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "17336:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "17336:3:7"
																				},
																				"nativeSrc": "17336:11:7",
																				"nodeType": "YulFunctionCall",
																				"src": "17336:11:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "17353:2:7",
																						"nodeType": "YulLiteral",
																						"src": "17353:2:7",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "17349:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "17349:3:7"
																				},
																				"nativeSrc": "17349:7:7",
																				"nodeType": "YulFunctionCall",
																				"src": "17349:7:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "17332:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "17332:3:7"
																		},
																		"nativeSrc": "17332:25:7",
																		"nodeType": "YulFunctionCall",
																		"src": "17332:25:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17320:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "17320:3:7"
																},
																"nativeSrc": "17320:38:7",
																"nodeType": "YulFunctionCall",
																"src": "17320:38:7"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "17306:10:7",
																	"nodeType": "YulTypedName",
																	"src": "17306:10:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "17417:22:7",
																"nodeType": "YulBlock",
																"src": "17417:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "17419:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "17419:16:7"
																			},
																			"nativeSrc": "17419:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "17419:18:7"
																		},
																		"nativeSrc": "17419:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "17419:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "17376:10:7",
																				"nodeType": "YulIdentifier",
																				"src": "17376:10:7"
																			},
																			{
																				"name": "_2",
																				"nativeSrc": "17388:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "17388:2:7"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "17373:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "17373:2:7"
																		},
																		"nativeSrc": "17373:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "17373:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "17396:10:7",
																				"nodeType": "YulIdentifier",
																				"src": "17396:10:7"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "17408:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "17408:6:7"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "17393:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "17393:2:7"
																		},
																		"nativeSrc": "17393:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "17393:22:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "17370:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "17370:2:7"
																},
																"nativeSrc": "17370:46:7",
																"nodeType": "YulFunctionCall",
																"src": "17370:46:7"
															},
															"nativeSrc": "17367:72:7",
															"nodeType": "YulIf",
															"src": "17367:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17455:2:7",
																		"nodeType": "YulLiteral",
																		"src": "17455:2:7",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "17459:10:7",
																		"nodeType": "YulIdentifier",
																		"src": "17459:10:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17448:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "17448:6:7"
																},
																"nativeSrc": "17448:22:7",
																"nodeType": "YulFunctionCall",
																"src": "17448:22:7"
															},
															"nativeSrc": "17448:22:7",
															"nodeType": "YulExpressionStatement",
															"src": "17448:22:7"
														},
														{
															"nativeSrc": "17479:17:7",
															"nodeType": "YulVariableDeclaration",
															"src": "17479:17:7",
															"value": {
																"name": "memPtr",
																"nativeSrc": "17490:6:7",
																"nodeType": "YulIdentifier",
																"src": "17490:6:7"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "17483:3:7",
																	"nodeType": "YulTypedName",
																	"src": "17483:3:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "17512:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "17512:6:7"
																	},
																	{
																		"name": "_4",
																		"nativeSrc": "17520:2:7",
																		"nodeType": "YulIdentifier",
																		"src": "17520:2:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17505:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "17505:6:7"
																},
																"nativeSrc": "17505:18:7",
																"nodeType": "YulFunctionCall",
																"src": "17505:18:7"
															},
															"nativeSrc": "17505:18:7",
															"nodeType": "YulExpressionStatement",
															"src": "17505:18:7"
														},
														{
															"nativeSrc": "17532:22:7",
															"nodeType": "YulAssignment",
															"src": "17532:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "17543:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "17543:6:7"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "17551:2:7",
																		"nodeType": "YulIdentifier",
																		"src": "17551:2:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17539:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "17539:3:7"
																},
																"nativeSrc": "17539:15:7",
																"nodeType": "YulFunctionCall",
																"src": "17539:15:7"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nativeSrc": "17532:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "17532:3:7"
																}
															]
														},
														{
															"nativeSrc": "17563:34:7",
															"nodeType": "YulVariableDeclaration",
															"src": "17563:34:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_3",
																				"nativeSrc": "17585:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "17585:2:7"
																			},
																			{
																				"name": "_5",
																				"nativeSrc": "17589:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "17589:2:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17581:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "17581:3:7"
																		},
																		"nativeSrc": "17581:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "17581:11:7"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "17594:2:7",
																		"nodeType": "YulIdentifier",
																		"src": "17594:2:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17577:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "17577:3:7"
																},
																"nativeSrc": "17577:20:7",
																"nodeType": "YulFunctionCall",
																"src": "17577:20:7"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nativeSrc": "17567:6:7",
																	"nodeType": "YulTypedName",
																	"src": "17567:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "17629:16:7",
																"nodeType": "YulBlock",
																"src": "17629:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "17638:1:7",
																					"nodeType": "YulLiteral",
																					"src": "17638:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "17641:1:7",
																					"nodeType": "YulLiteral",
																					"src": "17641:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "17631:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "17631:6:7"
																			},
																			"nativeSrc": "17631:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "17631:12:7"
																		},
																		"nativeSrc": "17631:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "17631:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nativeSrc": "17612:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "17612:6:7"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "17620:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "17620:7:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "17609:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "17609:2:7"
																},
																"nativeSrc": "17609:19:7",
																"nodeType": "YulFunctionCall",
																"src": "17609:19:7"
															},
															"nativeSrc": "17606:39:7",
															"nodeType": "YulIf",
															"src": "17606:39:7"
														},
														{
															"nativeSrc": "17654:22:7",
															"nodeType": "YulVariableDeclaration",
															"src": "17654:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nativeSrc": "17669:2:7",
																		"nodeType": "YulIdentifier",
																		"src": "17669:2:7"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "17673:2:7",
																		"nodeType": "YulIdentifier",
																		"src": "17673:2:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17665:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "17665:3:7"
																},
																"nativeSrc": "17665:11:7",
																"nodeType": "YulFunctionCall",
																"src": "17665:11:7"
															},
															"variables": [
																{
																	"name": "src",
																	"nativeSrc": "17658:3:7",
																	"nodeType": "YulTypedName",
																	"src": "17658:3:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "17741:79:7",
																"nodeType": "YulBlock",
																"src": "17741:79:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "17762:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "17762:3:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nativeSrc": "17773:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "17773:3:7"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "17767:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "17767:5:7"
																					},
																					"nativeSrc": "17767:10:7",
																					"nodeType": "YulFunctionCall",
																					"src": "17767:10:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "17755:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "17755:6:7"
																			},
																			"nativeSrc": "17755:23:7",
																			"nodeType": "YulFunctionCall",
																			"src": "17755:23:7"
																		},
																		"nativeSrc": "17755:23:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "17755:23:7"
																	},
																	{
																		"nativeSrc": "17791:19:7",
																		"nodeType": "YulAssignment",
																		"src": "17791:19:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "17802:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "17802:3:7"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "17807:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "17807:2:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "17798:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "17798:3:7"
																			},
																			"nativeSrc": "17798:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "17798:12:7"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nativeSrc": "17791:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "17791:3:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "17696:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "17696:3:7"
																	},
																	{
																		"name": "srcEnd",
																		"nativeSrc": "17701:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "17701:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "17693:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "17693:2:7"
																},
																"nativeSrc": "17693:15:7",
																"nodeType": "YulFunctionCall",
																"src": "17693:15:7"
															},
															"nativeSrc": "17685:135:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "17709:23:7",
																"nodeType": "YulBlock",
																"src": "17709:23:7",
																"statements": [
																	{
																		"nativeSrc": "17711:19:7",
																		"nodeType": "YulAssignment",
																		"src": "17711:19:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "17722:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "17722:3:7"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "17727:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "17727:2:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "17718:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "17718:3:7"
																			},
																			"nativeSrc": "17718:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "17718:12:7"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nativeSrc": "17711:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "17711:3:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "17689:3:7",
																"nodeType": "YulBlock",
																"src": "17689:3:7",
																"statements": []
															},
															"src": "17685:135:7"
														},
														{
															"nativeSrc": "17829:16:7",
															"nodeType": "YulAssignment",
															"src": "17829:16:7",
															"value": {
																"name": "memPtr",
																"nativeSrc": "17839:6:7",
																"nodeType": "YulIdentifier",
																"src": "17839:6:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "17829:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "17829:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
												"nativeSrc": "16746:1105:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16818:9:7",
														"nodeType": "YulTypedName",
														"src": "16818:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "16829:7:7",
														"nodeType": "YulTypedName",
														"src": "16829:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "16841:6:7",
														"nodeType": "YulTypedName",
														"src": "16841:6:7",
														"type": ""
													}
												],
												"src": "16746:1105:7"
											},
											{
												"body": {
													"nativeSrc": "18113:350:7",
													"nodeType": "YulBlock",
													"src": "18113:350:7",
													"statements": [
														{
															"nativeSrc": "18123:27:7",
															"nodeType": "YulAssignment",
															"src": "18123:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18135:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "18135:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18146:3:7",
																		"nodeType": "YulLiteral",
																		"src": "18146:3:7",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18131:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "18131:3:7"
																},
																"nativeSrc": "18131:19:7",
																"nodeType": "YulFunctionCall",
																"src": "18131:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18123:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "18123:4:7"
																}
															]
														},
														{
															"nativeSrc": "18159:29:7",
															"nodeType": "YulVariableDeclaration",
															"src": "18159:29:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "18177:3:7",
																				"nodeType": "YulLiteral",
																				"src": "18177:3:7",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18182:1:7",
																				"nodeType": "YulLiteral",
																				"src": "18182:1:7",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "18173:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "18173:3:7"
																		},
																		"nativeSrc": "18173:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "18173:11:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18186:1:7",
																		"nodeType": "YulLiteral",
																		"src": "18186:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "18169:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "18169:3:7"
																},
																"nativeSrc": "18169:19:7",
																"nodeType": "YulFunctionCall",
																"src": "18169:19:7"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "18163:2:7",
																	"nodeType": "YulTypedName",
																	"src": "18163:2:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18204:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "18204:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "18219:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "18219:6:7"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "18227:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "18227:2:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "18215:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "18215:3:7"
																		},
																		"nativeSrc": "18215:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "18215:15:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18197:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "18197:6:7"
																},
																"nativeSrc": "18197:34:7",
																"nodeType": "YulFunctionCall",
																"src": "18197:34:7"
															},
															"nativeSrc": "18197:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "18197:34:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18251:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "18251:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18262:2:7",
																				"nodeType": "YulLiteral",
																				"src": "18262:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18247:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "18247:3:7"
																		},
																		"nativeSrc": "18247:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "18247:18:7"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "18267:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "18267:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18240:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "18240:6:7"
																},
																"nativeSrc": "18240:34:7",
																"nodeType": "YulFunctionCall",
																"src": "18240:34:7"
															},
															"nativeSrc": "18240:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "18240:34:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18294:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "18294:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18305:2:7",
																				"nodeType": "YulLiteral",
																				"src": "18305:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18290:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "18290:3:7"
																		},
																		"nativeSrc": "18290:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "18290:18:7"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "18310:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "18310:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18283:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "18283:6:7"
																},
																"nativeSrc": "18283:34:7",
																"nodeType": "YulFunctionCall",
																"src": "18283:34:7"
															},
															"nativeSrc": "18283:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "18283:34:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18337:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "18337:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18348:2:7",
																				"nodeType": "YulLiteral",
																				"src": "18348:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18333:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "18333:3:7"
																		},
																		"nativeSrc": "18333:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "18333:18:7"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "18353:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "18353:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18326:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "18326:6:7"
																},
																"nativeSrc": "18326:34:7",
																"nodeType": "YulFunctionCall",
																"src": "18326:34:7"
															},
															"nativeSrc": "18326:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "18326:34:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18380:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "18380:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18391:3:7",
																				"nodeType": "YulLiteral",
																				"src": "18391:3:7",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18376:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "18376:3:7"
																		},
																		"nativeSrc": "18376:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "18376:19:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value4",
																				"nativeSrc": "18401:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "18401:6:7"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "18409:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "18409:2:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "18397:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "18397:3:7"
																		},
																		"nativeSrc": "18397:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "18397:15:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18369:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "18369:6:7"
																},
																"nativeSrc": "18369:44:7",
																"nodeType": "YulFunctionCall",
																"src": "18369:44:7"
															},
															"nativeSrc": "18369:44:7",
															"nodeType": "YulExpressionStatement",
															"src": "18369:44:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18433:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "18433:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18444:3:7",
																				"nodeType": "YulLiteral",
																				"src": "18444:3:7",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18429:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "18429:3:7"
																		},
																		"nativeSrc": "18429:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "18429:19:7"
																	},
																	{
																		"name": "value5",
																		"nativeSrc": "18450:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "18450:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18422:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "18422:6:7"
																},
																"nativeSrc": "18422:35:7",
																"nodeType": "YulFunctionCall",
																"src": "18422:35:7"
															},
															"nativeSrc": "18422:35:7",
															"nodeType": "YulExpressionStatement",
															"src": "18422:35:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_rational_0_by_1_t_rational_0_by_1_t_address_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "17856:607:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18042:9:7",
														"nodeType": "YulTypedName",
														"src": "18042:9:7",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "18053:6:7",
														"nodeType": "YulTypedName",
														"src": "18053:6:7",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "18061:6:7",
														"nodeType": "YulTypedName",
														"src": "18061:6:7",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "18069:6:7",
														"nodeType": "YulTypedName",
														"src": "18069:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "18077:6:7",
														"nodeType": "YulTypedName",
														"src": "18077:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "18085:6:7",
														"nodeType": "YulTypedName",
														"src": "18085:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "18093:6:7",
														"nodeType": "YulTypedName",
														"src": "18093:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18104:4:7",
														"nodeType": "YulTypedName",
														"src": "18104:4:7",
														"type": ""
													}
												],
												"src": "17856:607:7"
											},
											{
												"body": {
													"nativeSrc": "18583:191:7",
													"nodeType": "YulBlock",
													"src": "18583:191:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "18629:16:7",
																"nodeType": "YulBlock",
																"src": "18629:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "18638:1:7",
																					"nodeType": "YulLiteral",
																					"src": "18638:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "18641:1:7",
																					"nodeType": "YulLiteral",
																					"src": "18641:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "18631:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "18631:6:7"
																			},
																			"nativeSrc": "18631:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "18631:12:7"
																		},
																		"nativeSrc": "18631:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "18631:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "18604:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "18604:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18613:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "18613:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18600:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "18600:3:7"
																		},
																		"nativeSrc": "18600:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "18600:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18625:2:7",
																		"nodeType": "YulLiteral",
																		"src": "18625:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "18596:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "18596:3:7"
																},
																"nativeSrc": "18596:32:7",
																"nodeType": "YulFunctionCall",
																"src": "18596:32:7"
															},
															"nativeSrc": "18593:52:7",
															"nodeType": "YulIf",
															"src": "18593:52:7"
														},
														{
															"nativeSrc": "18654:26:7",
															"nodeType": "YulAssignment",
															"src": "18654:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18670:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "18670:9:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "18664:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "18664:5:7"
																},
																"nativeSrc": "18664:16:7",
																"nodeType": "YulFunctionCall",
																"src": "18664:16:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "18654:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "18654:6:7"
																}
															]
														},
														{
															"nativeSrc": "18689:35:7",
															"nodeType": "YulAssignment",
															"src": "18689:35:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18709:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "18709:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18720:2:7",
																				"nodeType": "YulLiteral",
																				"src": "18720:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18705:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "18705:3:7"
																		},
																		"nativeSrc": "18705:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "18705:18:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "18699:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "18699:5:7"
																},
																"nativeSrc": "18699:25:7",
																"nodeType": "YulFunctionCall",
																"src": "18699:25:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "18689:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "18689:6:7"
																}
															]
														},
														{
															"nativeSrc": "18733:35:7",
															"nodeType": "YulAssignment",
															"src": "18733:35:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18753:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "18753:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18764:2:7",
																				"nodeType": "YulLiteral",
																				"src": "18764:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18749:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "18749:3:7"
																		},
																		"nativeSrc": "18749:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "18749:18:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "18743:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "18743:5:7"
																},
																"nativeSrc": "18743:25:7",
																"nodeType": "YulFunctionCall",
																"src": "18743:25:7"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "18733:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "18733:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_uint256_fromMemory",
												"nativeSrc": "18468:306:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18533:9:7",
														"nodeType": "YulTypedName",
														"src": "18533:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "18544:7:7",
														"nodeType": "YulTypedName",
														"src": "18544:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "18556:6:7",
														"nodeType": "YulTypedName",
														"src": "18556:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "18564:6:7",
														"nodeType": "YulTypedName",
														"src": "18564:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "18572:6:7",
														"nodeType": "YulTypedName",
														"src": "18572:6:7",
														"type": ""
													}
												],
												"src": "18468:306:7"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        mcopy(add(headStart, 64), add(value0, 32), length)\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_uint16(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint16t_uint16t_uint16t_uint16(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_uint16(headStart)\n        value1 := abi_decode_uint16(add(headStart, 32))\n        value2 := abi_decode_uint16(add(headStart, 64))\n        value3 := abi_decode_uint16(add(headStart, 96))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint16_t_uint16_t_uint16_t_uint16__to_t_uint16_t_uint16_t_uint16_t_uint16__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        let _1 := 0xffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), and(value3, _1))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_bool_t_uint32__to_t_bool_t_uint32__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, iszero(iszero(value0)))\n        mstore(add(headStart, 32), and(value1, 0xffffffff))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_decode_bool(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := abi_decode_bool(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool_t_uint16_t_uint256_t_bool_t_uint256__to_t_bool_t_uint16_t_uint256_t_bool_t_uint256__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, iszero(iszero(value0)))\n        mstore(add(headStart, 32), and(value1, 0xffff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), iszero(iszero(value3)))\n        mstore(add(headStart, 128), value4)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_boolt_uint16(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_bool(headStart)\n        value1 := abi_decode_uint16(add(headStart, 32))\n    }\n    function validator_revert_uint32(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_boolt_uint32(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_bool(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_uint32(value)\n        value1 := value\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint16(x, y) -> sum\n    {\n        let _1 := 0xffff\n        sum := add(and(x, _1), and(y, _1))\n        if gt(sum, _1) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_8b651597bafb95b427a4f660d871a5de5d1e311b7ec5bcd461acf7a21699d335__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Buy tax too high\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_77f71f16cf7fea8071257338db8d15c2b0742cafda4fe118dd4d019676d62627__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"Sell tax too high\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function negate_t_int256(value) -> ret\n    {\n        if eq(value, shl(255, 1)) { panic_error_0x11() }\n        ret := sub(0, value)\n    }\n    function abi_decode_uint112_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint112t_uint112t_uint32_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_uint112_fromMemory(headStart)\n        value1 := abi_decode_uint112_fromMemory(add(headStart, 32))\n        let value := mload(add(headStart, 64))\n        validator_revert_uint32(value)\n        value2 := value\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function mod_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function checked_mul_t_uint32(x, y) -> product\n    {\n        let _1 := 0xffffffff\n        let product_raw := mul(and(x, _1), and(y, _1))\n        product := and(product_raw, _1)\n        if iszero(eq(product, product_raw)) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_bf60dfdf0bc628580395fc38657d86ed24105efc4a69fdfae0dbdbb8a1ef6412__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Transfer amount must be >0\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_30dd4f997a6ca09c24570e16af51c4dd5e70cd227c7036b9ebf2853f38eba550__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"Sells stopped by Diamond Floor\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_74bfbd0e22b7de34cffebe5af74ea7eca5e99706ecb9129f4c3a64d8a95a2fa5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"Cooldown active\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d02ce7a72410a6351efcb149b27b582bc4ff73b7af05eaebe8fe75a22e828801__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Max wallet exceeded\")\n        tail := add(headStart, 96)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_uint256_t_rational_0_by_1_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let tail_1 := add(headStart, 160)\n        mstore(headStart, value0)\n        let _1 := 32\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), 160)\n        let pos := tail_1\n        let length := mload(value2)\n        mstore(tail_1, length)\n        pos := add(headStart, 192)\n        let srcPtr := add(value2, 32)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n        mstore(add(headStart, 96), and(value3, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 128), value4)\n    }\n    function abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        let _1 := 32\n        if slt(sub(dataEnd, headStart), _1) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _2 := 0xffffffffffffffff\n        if gt(offset, _2) { revert(0, 0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := mload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let _5 := shl(5, _4)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(_5, 63), not(31)))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        let dst := memPtr\n        mstore(memPtr, _4)\n        dst := add(memPtr, _1)\n        let srcEnd := add(add(_3, _5), _1)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_3, _1)\n        for { } lt(src, srcEnd) { src := add(src, _1) }\n        {\n            mstore(dst, mload(src))\n            dst := add(dst, _1)\n        }\n        value0 := memPtr\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_rational_0_by_1_t_rational_0_by_1_t_address_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256_t_address_t_uint256__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, _1))\n        mstore(add(headStart, 160), value5)\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := mload(headStart)\n        value1 := mload(add(headStart, 32))\n        value2 := mload(add(headStart, 64))\n    }\n}",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106101f4575f3560e01c80639491f94d11610108578063ad5dff731161009d578063d8d61c401161006d578063d8d61c401461064e578063dd62ed3e14610663578063f2fde38b14610682578063fe0bb982146106a1578063fe6b751e146106c0575f80fd5b8063ad5dff7314610588578063c0d78655146105b6578063c531b108146105d5578063c95457ff146105ea575f80fd5b80639fde54f5116100d85780639fde54f51461050c578063a457c2d71461052b578063a8b089821461054a578063a9059cbb14610569575f80fd5b80639491f94d1461048657806395d89b411461049a578063960bfe04146104ae5780639d82190f146104cd575f80fd5b8063333f4b3d11610189578063715018a611610159578063715018a6146103eb5780637773168f146103ff578063787a08a6146104135780638da5cb5b146104555780638f9a55c014610472575f80fd5b8063333f4b3d1461031d5780633950935114610383578063599ca397146103a257806370a08231146103b7575f80fd5b806318160ddd116101c457806318160ddd1461029857806323b872dd146102ac578063313ce567146102cb5780633268cc56146102e6575f80fd5b80630445b667146101ff57806306fdde0314610227578063095ea7b3146102485780631569d18114610277575f80fd5b366101fb57005b5f80fd5b34801561020a575f80fd5b5061021460095481565b6040519081526020015b60405180910390f35b348015610232575f80fd5b5061023b6106df565b60405161021e9190611d73565b348015610253575f80fd5b50610267610262366004611dbc565b61076f565b604051901515815260200161021e565b348015610282575f80fd5b50610296610291366004611dfc565b610788565b005b3480156102a3575f80fd5b50600254610214565b3480156102b7575f80fd5b506102676102c6366004611e4d565b6108b7565b3480156102d6575f80fd5b506040516012815260200161021e565b3480156102f1575f80fd5b50601354610305906001600160a01b031681565b6040516001600160a01b03909116815260200161021e565b348015610328575f80fd5b506007546103559061ffff80821691620100008104821691600160201b8204811691600160301b90041684565b6040805161ffff9586168152938516602085015291841691830191909152909116606082015260800161021e565b34801561038e575f80fd5b5061026761039d366004611dbc565b6108dc565b3480156103ad575f80fd5b5061021460065481565b3480156103c2575f80fd5b506102146103d1366004611e8b565b6001600160a01b03165f9081526020819052604090205490565b3480156103f6575f80fd5b506102966108fd565b34801561040a575f80fd5b50610214610910565b34801561041e575f80fd5b50600d546104399060ff811690610100900463ffffffff1682565b60408051921515835263ffffffff90911660208301520161021e565b348015610460575f80fd5b506005546001600160a01b0316610305565b34801561047d575f80fd5b5061021461098f565b348015610491575f80fd5b506102146109bc565b3480156104a5575f80fd5b5061023b610b16565b3480156104b9575f80fd5b506102966104c8366004611ea6565b610b25565b3480156104d8575f80fd5b506104ec6104e7366004611e8b565b610b32565b60408051948552602085019390935291830152606082015260800161021e565b348015610517575f80fd5b50610296610526366004611ecc565b610bde565b348015610536575f80fd5b50610267610545366004611dbc565b610c10565b348015610555575f80fd5b50601454610305906001600160a01b031681565b348015610574575f80fd5b50610267610583366004611dbc565b610c95565b348015610593575f80fd5b506102676105a2366004611e8b565b60156020525f908152604090205460ff1681565b3480156105c1575f80fd5b506102966105d0366004611e8b565b610ca2565b3480156105e0575f80fd5b50610214600b5481565b3480156105f5575f80fd5b50600f5460105460115460125461061f9360ff8082169461010090920461ffff1693919291169085565b60408051951515865261ffff90941660208601529284019190915215156060830152608082015260a00161021e565b348015610659575f80fd5b50610214600a5481565b34801561066e575f80fd5b5061021461067d366004611eff565b610d0c565b34801561068d575f80fd5b5061029661069c366004611e8b565b610d36565b3480156106ac575f80fd5b506102966106bb366004611f36565b610daf565b3480156106cb575f80fd5b506102966106da366004611f6f565b610de1565b6060600380546106ee90611f99565b80601f016020809104026020016040519081016040528092919081815260200182805461071a90611f99565b80156107655780601f1061073c57610100808354040283529160200191610765565b820191905f5260205f20905b81548152906001019060200180831161074857829003601f168201915b5050505050905090565b5f3361077c818585610e27565b60019150505b92915050565b610790610f4a565b6109c461079d8486611fe5565b61ffff1611156107e75760405162461bcd60e51b815260206004820152601060248201526f084eaf240e8c2f040e8dede40d0d2ced60831b60448201526064015b60405180910390fd5b6109c46107f48284611fe5565b61ffff16111561083a5760405162461bcd60e51b81526020600482015260116024820152700a6cad8d840e8c2f040e8dede40d0d2ced607b1b60448201526064016107de565b6040805160808101825261ffff958616808252948616602082018190529386169181018290529190941660609091018190526007805463ffffffff1916909317620100009092029190911767ffffffff000000001916600160201b90930267ffff000000000000191692909217600160301b909202919091179055565b5f336108c4858285610fa4565b6108cf85858561101c565b60019150505b9392505050565b5f3361077c8185856108ee8383610d0c565b6108f89190612007565b610e27565b610905610f4a565b61090e5f6112ec565b565b6010545f90810361092057505f90565b5f6109296109bc565b601054909150811161096c5760105461095e90610958670de0b6b3a7640000610952838661133d565b90611348565b90611353565b6109679061201a565b610989565b60105461098990610958670de0b6b3a7640000610952858461133d565b91505090565b5f6109b76127106109586006546b033b2e3c9fd0803ce800000061134890919063ffffffff16565b905090565b5f805f60145f9054906101000a90046001600160a01b03166001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa158015610a0f573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a33919061204a565b5091509150306001600160a01b031660145f9054906101000a90046001600160a01b03166001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a92573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610ab6919061208e565b6001600160a01b031614610aec57610ae76001600160701b0380831690610958908516670de0b6b3a7640000611348565b610b0f565b610b0f6001600160701b0380841690610958908416670de0b6b3a7640000611348565b9250505090565b6060600480546106ee90611f99565b610b2d610f4a565b600955565b6001600160a01b0381165f908152600e602052604081205481908190819081904210610b5e575f610b80565b6001600160a01b0386165f908152600e6020526040902054610b80904261133d565b9050610b8f8162015180611353565b9450610b9e62015180826120bd565b9050610bac81610e10611353565b9350610bba610e10826120bd565b9050610bc781603c611353565b9250610bd4603c826120bd565b9150509193509193565b610be6610f4a565b6001600160a01b03919091165f908152601560205260409020805460ff1916911515919091179055565b5f3381610c1d8286610d0c565b905083811015610c7d5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016107de565b610c8a8286868403610e27565b506001949350505050565b5f3361077c81858561101c565b610caa610f4a565b601380546001600160a01b0319166001600160a01b038316179055610ccd61135e565b6040516001600160a01b03821681527f7aed1d3e8155a07ccf395e44ea3109a0e2d6c9b29bbbe9f142d9790596f4dc809060200160405180910390a150565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b610d3e610f4a565b6001600160a01b038116610da35760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016107de565b610dac816112ec565b50565b610db7610f4a565b600f805462ffffff191692151562ffff0019169290921761010061ffff9290921691909102179055565b610de9610f4a565b600d805460ff1916831515179055610e0281603c6120d0565b600d805463ffffffff929092166101000264ffffffff00199092169190911790555050565b6001600160a01b038316610e895760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016107de565b6001600160a01b038216610eea5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016107de565b6001600160a01b038381165f8181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6005546001600160a01b0316331461090e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016107de565b5f610faf8484610d0c565b90505f19811461101657818110156110095760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016107de565b6110168484848403610e27565b50505050565b5f811161106b5760405162461bcd60e51b815260206004820152601a60248201527f5472616e7366657220616d6f756e74206d757374206265203e3000000000000060448201526064016107de565b6014545f906001600160a01b0385811691161480156110a257506001600160a01b0383165f9081526015602052604090205460ff16155b6014549091505f906001600160a01b0385811691161480156110dc57506001600160a01b0385165f9081526015602052604090205460ff16155b600f5490915060ff1680156110ee5750805b1561114e5760115460ff16156111465760405162461bcd60e51b815260206004820152601e60248201527f53656c6c732073746f70706564206279204469616d6f6e6420466c6f6f72000060448201526064016107de565b61114e6114e5565b600d5460ff16801561115d5750805b156111ec576001600160a01b0385165f908152600e60205260409020544210156111bb5760405162461bcd60e51b815260206004820152600f60248201526e436f6f6c646f776e2061637469766560881b60448201526064016107de565b600d546111d390610100900463ffffffff1642612007565b6001600160a01b0386165f908152600e60205260409020555b5f6111f886868661159b565b90505f611205858361133d565b6001600160a01b0387165f9081526015602052604090205490915060ff1615801561122e575082155b156112a75761123b61098f565b6112638261125d896001600160a01b03165f9081526020819052604090205490565b906116c7565b11156112a75760405162461bcd60e51b815260206004820152601360248201527213585e081dd85b1b195d08195e18d959591959606a1b60448201526064016107de565b81156112c3576112b88730846116d2565b6112c3828585611874565b6112ce8787836116d2565b6112d66119de565b156112e3576112e3611a1d565b50505050505050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b5f6108d582846120f8565b5f6108d5828461210b565b5f6108d58284612122565b60135f9054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa1580156113ae573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906113d2919061208e565b6001600160a01b031663c9c653963060135f9054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa158015611431573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611455919061208e565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303815f875af115801561149f573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906114c3919061208e565b601480546001600160a01b0319166001600160a01b0392909216919091179055565b5f6114ee6109bc565b60105490915081111561151857601081905560115460ff1615610dac576011805460ff1916905550565b600f545f9061154590612710906109589061153c90610100900461ffff16836120f8565b60105490611348565b905080821015611563576011805460ff191660011790556010546012555b60115460ff168015611582575060125461157e906002611348565b8210155b15611597576011805460ff1916905560108290555b5050565b6001600160a01b0383165f9081526015602052604081205460ff16806115d857506001600160a01b0383165f9081526015602052604090205460ff165b156115e457505f6108d5565b6014546001600160a01b0390811685821681149185161481156116375760075461162e9061271090610958906116279061ffff80821691620100009004166116c7565b8790611348565b925050506108d5565b801561166a5760075461162e9061271090610958906116279061ffff600160201b8204811691600160301b9004166116c7565b6007545f9061168d9061ffff600160201b8204811691600160301b9004166116c7565b90505f6116aa600a6109586008548561134890919063ffffffff16565b90506116bc6127106109588884611348565b9450505050506108d5565b5f6108d58284612007565b6001600160a01b0383166117365760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016107de565b6001600160a01b0382166117985760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016107de565b6001600160a01b0383165f908152602081905260409020548181101561180f5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016107de565b6001600160a01b038481165f81815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3611016565b5f8083156118b6576007546118af906118999061ffff62010000820481169116611fe5565b60075461ffff9182169161095891899116611348565b9150611964565b82156118ff576007546118af906118e19061ffff600160301b8204811691600160201b900416611fe5565b60075461ffff91821691610958918991600160201b90910416611348565b6007545f906119229061ffff600160301b8204811691600160201b900416611fe5565b61ffff169050611960600a6109586008546109528561095860075f0160049054906101000a900461ffff1661ffff168d61134890919063ffffffff16565b9250505b61196e82866120f8565b905081600a5f8282546119819190612007565b9250508190555080600b5f8282546119999190612007565b909155505060408051838152602081018390527ff2d9f3f00fc700757eb74f9aa3dba0e2eb1280e0c6e0cf65962cc055528d7a90910160405180910390a15050505050565b600c545f9060ff16158015611a035750600954600b54600a54611a00916116c7565b10155b80156109b75750506014546001600160a01b031633141590565b5f600b54600a54611a2e9190612007565b9050600954811015611a3d5750565b600c805460ff19166001179055600b544790611a5890611b07565b5f611a63478361133d565b9050611a776005546001600160a01b031690565b6001600160a01b03166108fc8290811502906040515f60405180830381858888f19350505050158015611aac573d5f803e3d5ffd5b50600a545f611abc826002611353565b9050611ac781611b07565b5f611ad2478561133d565b9050611ae7611ae1848461133d565b82611c68565b50505f600a819055600b555050600c805460ff191690555050565b505050565b6040805160028082526060820183525f9260208301908036833701905050905030815f81518110611b3a57611b3a612149565b6001600160a01b03928316602091820292909201810191909152601354604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa158015611b91573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611bb5919061208e565b81600181518110611bc857611bc8612149565b6001600160a01b039283166020918202929092010152601354611bee9130911684610e27565b6013546040516318cbafe560e01b81526001600160a01b03909116906318cbafe590611c269085905f9086903090429060040161215d565b5f604051808303815f875af1158015611c41573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f19168201604052611b0291908101906121ce565b601354611c809030906001600160a01b031684610e27565b6013546001600160a01b031663f305d7198230855f80611ca86005546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40160606040518083038185885af1158015611d0e573d5f803e3d5ffd5b50505050506040513d601f19601f82011682018060405250810190611d339190612287565b505060408051848152602081018490527f38f8a0c92f4c5b0b6877f878cb4c0c8d348a47b76d716c8e78f425043df9515b92500160405180910390a15050565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b6001600160a01b0381168114610dac575f80fd5b5f8060408385031215611dcd575f80fd5b8235611dd881611da8565b946020939093013593505050565b803561ffff81168114611df7575f80fd5b919050565b5f805f8060808587031215611e0f575f80fd5b611e1885611de6565b9350611e2660208601611de6565b9250611e3460408601611de6565b9150611e4260608601611de6565b905092959194509250565b5f805f60608486031215611e5f575f80fd5b8335611e6a81611da8565b92506020840135611e7a81611da8565b929592945050506040919091013590565b5f60208284031215611e9b575f80fd5b81356108d581611da8565b5f60208284031215611eb6575f80fd5b5035919050565b80358015158114611df7575f80fd5b5f8060408385031215611edd575f80fd5b8235611ee881611da8565b9150611ef660208401611ebd565b90509250929050565b5f8060408385031215611f10575f80fd5b8235611f1b81611da8565b91506020830135611f2b81611da8565b809150509250929050565b5f8060408385031215611f47575f80fd5b611f5083611ebd565b9150611ef660208401611de6565b63ffffffff81168114610dac575f80fd5b5f8060408385031215611f80575f80fd5b611f8983611ebd565b91506020830135611f2b81611f5e565b600181811c90821680611fad57607f821691505b602082108103611fcb57634e487b7160e01b5f52602260045260245ffd5b50919050565b634e487b7160e01b5f52601160045260245ffd5b61ffff81811683821601908082111561200057612000611fd1565b5092915050565b8082018082111561078257610782611fd1565b5f600160ff1b820161202e5761202e611fd1565b505f0390565b80516001600160701b0381168114611df7575f80fd5b5f805f6060848603121561205c575f80fd5b61206584612034565b925061207360208501612034565b9150604084015161208381611f5e565b809150509250925092565b5f6020828403121561209e575f80fd5b81516108d581611da8565b634e487b7160e01b5f52601260045260245ffd5b5f826120cb576120cb6120a9565b500690565b63ffffffff8181168382160280821691908281146120f0576120f0611fd1565b505092915050565b8181038181111561078257610782611fd1565b808202811582820484141761078257610782611fd1565b5f82612130576121306120a9565b500490565b634e487b7160e01b5f52604160045260245ffd5b634e487b7160e01b5f52603260045260245ffd5b5f60a08201878352602087602085015260a0604085015281875180845260c0860191506020890193505f5b818110156121ad5784516001600160a01b031683529383019391830191600101612188565b50506001600160a01b03969096166060850152505050608001529392505050565b5f60208083850312156121df575f80fd5b825167ffffffffffffffff808211156121f6575f80fd5b818501915085601f830112612209575f80fd5b81518181111561221b5761221b612135565b8060051b604051601f19603f8301168101818110858211171561224057612240612135565b60405291825284820192508381018501918883111561225d575f80fd5b938501935b8285101561227b57845184529385019392850192612262565b98975050505050505050565b5f805f60608486031215612299575f80fd5b835192506020840151915060408401519050925092509256fea264697066735822122058ff80e09a44ac810eca1f7ec706d8a9e4d48933c73aacb957ac449dba91ca2564736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1F4 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9491F94D GT PUSH2 0x108 JUMPI DUP1 PUSH4 0xAD5DFF73 GT PUSH2 0x9D JUMPI DUP1 PUSH4 0xD8D61C40 GT PUSH2 0x6D JUMPI DUP1 PUSH4 0xD8D61C40 EQ PUSH2 0x64E JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x663 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x682 JUMPI DUP1 PUSH4 0xFE0BB982 EQ PUSH2 0x6A1 JUMPI DUP1 PUSH4 0xFE6B751E EQ PUSH2 0x6C0 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xAD5DFF73 EQ PUSH2 0x588 JUMPI DUP1 PUSH4 0xC0D78655 EQ PUSH2 0x5B6 JUMPI DUP1 PUSH4 0xC531B108 EQ PUSH2 0x5D5 JUMPI DUP1 PUSH4 0xC95457FF EQ PUSH2 0x5EA JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9FDE54F5 GT PUSH2 0xD8 JUMPI DUP1 PUSH4 0x9FDE54F5 EQ PUSH2 0x50C JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x52B JUMPI DUP1 PUSH4 0xA8B08982 EQ PUSH2 0x54A JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x569 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9491F94D EQ PUSH2 0x486 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x49A JUMPI DUP1 PUSH4 0x960BFE04 EQ PUSH2 0x4AE JUMPI DUP1 PUSH4 0x9D82190F EQ PUSH2 0x4CD JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x333F4B3D GT PUSH2 0x189 JUMPI DUP1 PUSH4 0x715018A6 GT PUSH2 0x159 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3EB JUMPI DUP1 PUSH4 0x7773168F EQ PUSH2 0x3FF JUMPI DUP1 PUSH4 0x787A08A6 EQ PUSH2 0x413 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x455 JUMPI DUP1 PUSH4 0x8F9A55C0 EQ PUSH2 0x472 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x333F4B3D EQ PUSH2 0x31D JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x383 JUMPI DUP1 PUSH4 0x599CA397 EQ PUSH2 0x3A2 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3B7 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x1C4 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x298 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2AC JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2CB JUMPI DUP1 PUSH4 0x3268CC56 EQ PUSH2 0x2E6 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x445B667 EQ PUSH2 0x1FF JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x227 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x248 JUMPI DUP1 PUSH4 0x1569D181 EQ PUSH2 0x277 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x1FB JUMPI STOP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x214 PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x232 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x23B PUSH2 0x6DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21E SWAP2 SWAP1 PUSH2 0x1D73 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x253 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x267 PUSH2 0x262 CALLDATASIZE PUSH1 0x4 PUSH2 0x1DBC JUMP JUMPDEST PUSH2 0x76F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x21E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x282 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x296 PUSH2 0x291 CALLDATASIZE PUSH1 0x4 PUSH2 0x1DFC JUMP JUMPDEST PUSH2 0x788 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x214 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x267 PUSH2 0x2C6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E4D JUMP JUMPDEST PUSH2 0x8B7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x21E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x13 SLOAD PUSH2 0x305 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x21E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x328 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x7 SLOAD PUSH2 0x355 SWAP1 PUSH2 0xFFFF DUP1 DUP3 AND SWAP2 PUSH3 0x10000 DUP2 DIV DUP3 AND SWAP2 PUSH1 0x1 PUSH1 0x20 SHL DUP3 DIV DUP2 AND SWAP2 PUSH1 0x1 PUSH1 0x30 SHL SWAP1 DIV AND DUP5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0xFFFF SWAP6 DUP7 AND DUP2 MSTORE SWAP4 DUP6 AND PUSH1 0x20 DUP6 ADD MSTORE SWAP2 DUP5 AND SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP2 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0x21E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x38E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x267 PUSH2 0x39D CALLDATASIZE PUSH1 0x4 PUSH2 0x1DBC JUMP JUMPDEST PUSH2 0x8DC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3AD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x214 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x214 PUSH2 0x3D1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E8B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x296 PUSH2 0x8FD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x40A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x214 PUSH2 0x910 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x41E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xD SLOAD PUSH2 0x439 SWAP1 PUSH1 0xFF DUP2 AND SWAP1 PUSH2 0x100 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 ISZERO ISZERO DUP4 MSTORE PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH2 0x21E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x460 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x305 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x47D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x214 PUSH2 0x98F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x491 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x214 PUSH2 0x9BC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x23B PUSH2 0xB16 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x296 PUSH2 0x4C8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1EA6 JUMP JUMPDEST PUSH2 0xB25 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4EC PUSH2 0x4E7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E8B JUMP JUMPDEST PUSH2 0xB32 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0x21E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x517 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x296 PUSH2 0x526 CALLDATASIZE PUSH1 0x4 PUSH2 0x1ECC JUMP JUMPDEST PUSH2 0xBDE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x536 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x267 PUSH2 0x545 CALLDATASIZE PUSH1 0x4 PUSH2 0x1DBC JUMP JUMPDEST PUSH2 0xC10 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x555 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x14 SLOAD PUSH2 0x305 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x574 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x267 PUSH2 0x583 CALLDATASIZE PUSH1 0x4 PUSH2 0x1DBC JUMP JUMPDEST PUSH2 0xC95 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x593 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x267 PUSH2 0x5A2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E8B JUMP JUMPDEST PUSH1 0x15 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x296 PUSH2 0x5D0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E8B JUMP JUMPDEST PUSH2 0xCA2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5E0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x214 PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5F5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xF SLOAD PUSH1 0x10 SLOAD PUSH1 0x11 SLOAD PUSH1 0x12 SLOAD PUSH2 0x61F SWAP4 PUSH1 0xFF DUP1 DUP3 AND SWAP5 PUSH2 0x100 SWAP1 SWAP3 DIV PUSH2 0xFFFF AND SWAP4 SWAP2 SWAP3 SWAP2 AND SWAP1 DUP6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP6 ISZERO ISZERO DUP7 MSTORE PUSH2 0xFFFF SWAP1 SWAP5 AND PUSH1 0x20 DUP7 ADD MSTORE SWAP3 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE ISZERO ISZERO PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD PUSH2 0x21E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x659 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x214 PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x66E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x214 PUSH2 0x67D CALLDATASIZE PUSH1 0x4 PUSH2 0x1EFF JUMP JUMPDEST PUSH2 0xD0C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x68D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x296 PUSH2 0x69C CALLDATASIZE PUSH1 0x4 PUSH2 0x1E8B JUMP JUMPDEST PUSH2 0xD36 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6AC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x296 PUSH2 0x6BB CALLDATASIZE PUSH1 0x4 PUSH2 0x1F36 JUMP JUMPDEST PUSH2 0xDAF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6CB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x296 PUSH2 0x6DA CALLDATASIZE PUSH1 0x4 PUSH2 0x1F6F JUMP JUMPDEST PUSH2 0xDE1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x6EE SWAP1 PUSH2 0x1F99 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x71A SWAP1 PUSH2 0x1F99 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x765 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x73C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x765 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x748 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x77C DUP2 DUP6 DUP6 PUSH2 0xE27 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x790 PUSH2 0xF4A JUMP JUMPDEST PUSH2 0x9C4 PUSH2 0x79D DUP5 DUP7 PUSH2 0x1FE5 JUMP JUMPDEST PUSH2 0xFFFF AND GT ISZERO PUSH2 0x7E7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x84EAF240E8C2F040E8DEDE40D0D2CED PUSH1 0x83 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9C4 PUSH2 0x7F4 DUP3 DUP5 PUSH2 0x1FE5 JUMP JUMPDEST PUSH2 0xFFFF AND GT ISZERO PUSH2 0x83A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0xA6CAD8D840E8C2F040E8DEDE40D0D2CED PUSH1 0x7B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7DE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH2 0xFFFF SWAP6 DUP7 AND DUP1 DUP3 MSTORE SWAP5 DUP7 AND PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP4 DUP7 AND SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE SWAP2 SWAP1 SWAP5 AND PUSH1 0x60 SWAP1 SWAP2 ADD DUP2 SWAP1 MSTORE PUSH1 0x7 DUP1 SLOAD PUSH4 0xFFFFFFFF NOT AND SWAP1 SWAP4 OR PUSH3 0x10000 SWAP1 SWAP3 MUL SWAP2 SWAP1 SWAP2 OR PUSH8 0xFFFFFFFF00000000 NOT AND PUSH1 0x1 PUSH1 0x20 SHL SWAP1 SWAP4 MUL PUSH8 0xFFFF000000000000 NOT AND SWAP3 SWAP1 SWAP3 OR PUSH1 0x1 PUSH1 0x30 SHL SWAP1 SWAP3 MUL SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH0 CALLER PUSH2 0x8C4 DUP6 DUP3 DUP6 PUSH2 0xFA4 JUMP JUMPDEST PUSH2 0x8CF DUP6 DUP6 DUP6 PUSH2 0x101C JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x77C DUP2 DUP6 DUP6 PUSH2 0x8EE DUP4 DUP4 PUSH2 0xD0C JUMP JUMPDEST PUSH2 0x8F8 SWAP2 SWAP1 PUSH2 0x2007 JUMP JUMPDEST PUSH2 0xE27 JUMP JUMPDEST PUSH2 0x905 PUSH2 0xF4A JUMP JUMPDEST PUSH2 0x90E PUSH0 PUSH2 0x12EC JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x10 SLOAD PUSH0 SWAP1 DUP2 SUB PUSH2 0x920 JUMPI POP PUSH0 SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x929 PUSH2 0x9BC JUMP JUMPDEST PUSH1 0x10 SLOAD SWAP1 SWAP2 POP DUP2 GT PUSH2 0x96C JUMPI PUSH1 0x10 SLOAD PUSH2 0x95E SWAP1 PUSH2 0x958 PUSH8 0xDE0B6B3A7640000 PUSH2 0x952 DUP4 DUP7 PUSH2 0x133D JUMP JUMPDEST SWAP1 PUSH2 0x1348 JUMP JUMPDEST SWAP1 PUSH2 0x1353 JUMP JUMPDEST PUSH2 0x967 SWAP1 PUSH2 0x201A JUMP JUMPDEST PUSH2 0x989 JUMP JUMPDEST PUSH1 0x10 SLOAD PUSH2 0x989 SWAP1 PUSH2 0x958 PUSH8 0xDE0B6B3A7640000 PUSH2 0x952 DUP6 DUP5 PUSH2 0x133D JUMP JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x9B7 PUSH2 0x2710 PUSH2 0x958 PUSH1 0x6 SLOAD PUSH12 0x33B2E3C9FD0803CE8000000 PUSH2 0x1348 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x14 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x902F1AC PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA0F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA33 SWAP2 SWAP1 PUSH2 0x204A JUMP JUMPDEST POP SWAP2 POP SWAP2 POP ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x14 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA92 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAB6 SWAP2 SWAP1 PUSH2 0x208E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xAEC JUMPI PUSH2 0xAE7 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP1 DUP4 AND SWAP1 PUSH2 0x958 SWAP1 DUP6 AND PUSH8 0xDE0B6B3A7640000 PUSH2 0x1348 JUMP JUMPDEST PUSH2 0xB0F JUMP JUMPDEST PUSH2 0xB0F PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP1 DUP5 AND SWAP1 PUSH2 0x958 SWAP1 DUP5 AND PUSH8 0xDE0B6B3A7640000 PUSH2 0x1348 JUMP JUMPDEST SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x6EE SWAP1 PUSH2 0x1F99 JUMP JUMPDEST PUSH2 0xB2D PUSH2 0xF4A JUMP JUMPDEST PUSH1 0x9 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP2 SWAP1 DUP2 SWAP1 DUP2 SWAP1 DUP2 SWAP1 TIMESTAMP LT PUSH2 0xB5E JUMPI PUSH0 PUSH2 0xB80 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xB80 SWAP1 TIMESTAMP PUSH2 0x133D JUMP JUMPDEST SWAP1 POP PUSH2 0xB8F DUP2 PUSH3 0x15180 PUSH2 0x1353 JUMP JUMPDEST SWAP5 POP PUSH2 0xB9E PUSH3 0x15180 DUP3 PUSH2 0x20BD JUMP JUMPDEST SWAP1 POP PUSH2 0xBAC DUP2 PUSH2 0xE10 PUSH2 0x1353 JUMP JUMPDEST SWAP4 POP PUSH2 0xBBA PUSH2 0xE10 DUP3 PUSH2 0x20BD JUMP JUMPDEST SWAP1 POP PUSH2 0xBC7 DUP2 PUSH1 0x3C PUSH2 0x1353 JUMP JUMPDEST SWAP3 POP PUSH2 0xBD4 PUSH1 0x3C DUP3 PUSH2 0x20BD JUMP JUMPDEST SWAP2 POP POP SWAP2 SWAP4 POP SWAP2 SWAP4 JUMP JUMPDEST PUSH2 0xBE6 PUSH2 0xF4A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH0 CALLER DUP2 PUSH2 0xC1D DUP3 DUP7 PUSH2 0xD0C JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xC7D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7DE JUMP JUMPDEST PUSH2 0xC8A DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0xE27 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x77C DUP2 DUP6 DUP6 PUSH2 0x101C JUMP JUMPDEST PUSH2 0xCAA PUSH2 0xF4A JUMP JUMPDEST PUSH1 0x13 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND OR SWAP1 SSTORE PUSH2 0xCCD PUSH2 0x135E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP2 MSTORE PUSH32 0x7AED1D3E8155A07CCF395E44EA3109A0E2D6C9B29BBBE9F142D9790596F4DC80 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xD3E PUSH2 0xF4A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xDA3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7DE JUMP JUMPDEST PUSH2 0xDAC DUP2 PUSH2 0x12EC JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xDB7 PUSH2 0xF4A JUMP JUMPDEST PUSH1 0xF DUP1 SLOAD PUSH3 0xFFFFFF NOT AND SWAP3 ISZERO ISZERO PUSH3 0xFFFF00 NOT AND SWAP3 SWAP1 SWAP3 OR PUSH2 0x100 PUSH2 0xFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 MUL OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xDE9 PUSH2 0xF4A JUMP JUMPDEST PUSH1 0xD DUP1 SLOAD PUSH1 0xFF NOT AND DUP4 ISZERO ISZERO OR SWAP1 SSTORE PUSH2 0xE02 DUP2 PUSH1 0x3C PUSH2 0x20D0 JUMP JUMPDEST PUSH1 0xD DUP1 SLOAD PUSH4 0xFFFFFFFF SWAP3 SWAP1 SWAP3 AND PUSH2 0x100 MUL PUSH5 0xFFFFFFFF00 NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xE89 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7DE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xEEA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7DE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x90E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7DE JUMP JUMPDEST PUSH0 PUSH2 0xFAF DUP5 DUP5 PUSH2 0xD0C JUMP JUMPDEST SWAP1 POP PUSH0 NOT DUP2 EQ PUSH2 0x1016 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1009 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7DE JUMP JUMPDEST PUSH2 0x1016 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0xE27 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x106B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E7366657220616D6F756E74206D757374206265203E30000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7DE JUMP JUMPDEST PUSH1 0x14 SLOAD PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP2 AND EQ DUP1 ISZERO PUSH2 0x10A2 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH1 0x14 SLOAD SWAP1 SWAP2 POP PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP2 AND EQ DUP1 ISZERO PUSH2 0x10DC JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH1 0xF SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x10EE JUMPI POP DUP1 JUMPDEST ISZERO PUSH2 0x114E JUMPI PUSH1 0x11 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1146 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53656C6C732073746F70706564206279204469616D6F6E6420466C6F6F720000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7DE JUMP JUMPDEST PUSH2 0x114E PUSH2 0x14E5 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x115D JUMPI POP DUP1 JUMPDEST ISZERO PUSH2 0x11EC JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD TIMESTAMP LT ISZERO PUSH2 0x11BB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x436F6F6C646F776E20616374697665 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7DE JUMP JUMPDEST PUSH1 0xD SLOAD PUSH2 0x11D3 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH4 0xFFFFFFFF AND TIMESTAMP PUSH2 0x2007 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMPDEST PUSH0 PUSH2 0x11F8 DUP7 DUP7 DUP7 PUSH2 0x159B JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1205 DUP6 DUP4 PUSH2 0x133D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x122E JUMPI POP DUP3 ISZERO JUMPDEST ISZERO PUSH2 0x12A7 JUMPI PUSH2 0x123B PUSH2 0x98F JUMP JUMPDEST PUSH2 0x1263 DUP3 PUSH2 0x125D DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x16C7 JUMP JUMPDEST GT ISZERO PUSH2 0x12A7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x13585E081DD85B1B195D08195E18D959591959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7DE JUMP JUMPDEST DUP2 ISZERO PUSH2 0x12C3 JUMPI PUSH2 0x12B8 DUP8 ADDRESS DUP5 PUSH2 0x16D2 JUMP JUMPDEST PUSH2 0x12C3 DUP3 DUP6 DUP6 PUSH2 0x1874 JUMP JUMPDEST PUSH2 0x12CE DUP8 DUP8 DUP4 PUSH2 0x16D2 JUMP JUMPDEST PUSH2 0x12D6 PUSH2 0x19DE JUMP JUMPDEST ISZERO PUSH2 0x12E3 JUMPI PUSH2 0x12E3 PUSH2 0x1A1D JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x8D5 DUP3 DUP5 PUSH2 0x20F8 JUMP JUMPDEST PUSH0 PUSH2 0x8D5 DUP3 DUP5 PUSH2 0x210B JUMP JUMPDEST PUSH0 PUSH2 0x8D5 DUP3 DUP5 PUSH2 0x2122 JUMP JUMPDEST PUSH1 0x13 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xC45A0155 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x13AE JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x13D2 SWAP2 SWAP1 PUSH2 0x208E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xC9C65396 ADDRESS PUSH1 0x13 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xAD5C4648 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1431 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1455 SWAP2 SWAP1 PUSH2 0x208E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP2 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x149F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x14C3 SWAP2 SWAP1 PUSH2 0x208E JUMP JUMPDEST PUSH1 0x14 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH0 PUSH2 0x14EE PUSH2 0x9BC JUMP JUMPDEST PUSH1 0x10 SLOAD SWAP1 SWAP2 POP DUP2 GT ISZERO PUSH2 0x1518 JUMPI PUSH1 0x10 DUP2 SWAP1 SSTORE PUSH1 0x11 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xDAC JUMPI PUSH1 0x11 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0xF SLOAD PUSH0 SWAP1 PUSH2 0x1545 SWAP1 PUSH2 0x2710 SWAP1 PUSH2 0x958 SWAP1 PUSH2 0x153C SWAP1 PUSH2 0x100 SWAP1 DIV PUSH2 0xFFFF AND DUP4 PUSH2 0x20F8 JUMP JUMPDEST PUSH1 0x10 SLOAD SWAP1 PUSH2 0x1348 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 LT ISZERO PUSH2 0x1563 JUMPI PUSH1 0x11 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x10 SLOAD PUSH1 0x12 SSTORE JUMPDEST PUSH1 0x11 SLOAD PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x1582 JUMPI POP PUSH1 0x12 SLOAD PUSH2 0x157E SWAP1 PUSH1 0x2 PUSH2 0x1348 JUMP JUMPDEST DUP3 LT ISZERO JUMPDEST ISZERO PUSH2 0x1597 JUMPI PUSH1 0x11 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x10 DUP3 SWAP1 SSTORE JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 PUSH2 0x15D8 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x15E4 JUMPI POP PUSH0 PUSH2 0x8D5 JUMP JUMPDEST PUSH1 0x14 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP6 DUP3 AND DUP2 EQ SWAP2 DUP6 AND EQ DUP2 ISZERO PUSH2 0x1637 JUMPI PUSH1 0x7 SLOAD PUSH2 0x162E SWAP1 PUSH2 0x2710 SWAP1 PUSH2 0x958 SWAP1 PUSH2 0x1627 SWAP1 PUSH2 0xFFFF DUP1 DUP3 AND SWAP2 PUSH3 0x10000 SWAP1 DIV AND PUSH2 0x16C7 JUMP JUMPDEST DUP8 SWAP1 PUSH2 0x1348 JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x8D5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x166A JUMPI PUSH1 0x7 SLOAD PUSH2 0x162E SWAP1 PUSH2 0x2710 SWAP1 PUSH2 0x958 SWAP1 PUSH2 0x1627 SWAP1 PUSH2 0xFFFF PUSH1 0x1 PUSH1 0x20 SHL DUP3 DIV DUP2 AND SWAP2 PUSH1 0x1 PUSH1 0x30 SHL SWAP1 DIV AND PUSH2 0x16C7 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH0 SWAP1 PUSH2 0x168D SWAP1 PUSH2 0xFFFF PUSH1 0x1 PUSH1 0x20 SHL DUP3 DIV DUP2 AND SWAP2 PUSH1 0x1 PUSH1 0x30 SHL SWAP1 DIV AND PUSH2 0x16C7 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x16AA PUSH1 0xA PUSH2 0x958 PUSH1 0x8 SLOAD DUP6 PUSH2 0x1348 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x16BC PUSH2 0x2710 PUSH2 0x958 DUP9 DUP5 PUSH2 0x1348 JUMP JUMPDEST SWAP5 POP POP POP POP POP PUSH2 0x8D5 JUMP JUMPDEST PUSH0 PUSH2 0x8D5 DUP3 DUP5 PUSH2 0x2007 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1736 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7DE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1798 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7DE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x180F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7DE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x1016 JUMP JUMPDEST PUSH0 DUP1 DUP4 ISZERO PUSH2 0x18B6 JUMPI PUSH1 0x7 SLOAD PUSH2 0x18AF SWAP1 PUSH2 0x1899 SWAP1 PUSH2 0xFFFF PUSH3 0x10000 DUP3 DIV DUP2 AND SWAP2 AND PUSH2 0x1FE5 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0xFFFF SWAP2 DUP3 AND SWAP2 PUSH2 0x958 SWAP2 DUP10 SWAP2 AND PUSH2 0x1348 JUMP JUMPDEST SWAP2 POP PUSH2 0x1964 JUMP JUMPDEST DUP3 ISZERO PUSH2 0x18FF JUMPI PUSH1 0x7 SLOAD PUSH2 0x18AF SWAP1 PUSH2 0x18E1 SWAP1 PUSH2 0xFFFF PUSH1 0x1 PUSH1 0x30 SHL DUP3 DIV DUP2 AND SWAP2 PUSH1 0x1 PUSH1 0x20 SHL SWAP1 DIV AND PUSH2 0x1FE5 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0xFFFF SWAP2 DUP3 AND SWAP2 PUSH2 0x958 SWAP2 DUP10 SWAP2 PUSH1 0x1 PUSH1 0x20 SHL SWAP1 SWAP2 DIV AND PUSH2 0x1348 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH0 SWAP1 PUSH2 0x1922 SWAP1 PUSH2 0xFFFF PUSH1 0x1 PUSH1 0x30 SHL DUP3 DIV DUP2 AND SWAP2 PUSH1 0x1 PUSH1 0x20 SHL SWAP1 DIV AND PUSH2 0x1FE5 JUMP JUMPDEST PUSH2 0xFFFF AND SWAP1 POP PUSH2 0x1960 PUSH1 0xA PUSH2 0x958 PUSH1 0x8 SLOAD PUSH2 0x952 DUP6 PUSH2 0x958 PUSH1 0x7 PUSH0 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP14 PUSH2 0x1348 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP POP JUMPDEST PUSH2 0x196E DUP3 DUP7 PUSH2 0x20F8 JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0xA PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1981 SWAP2 SWAP1 PUSH2 0x2007 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0xB PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1999 SWAP2 SWAP1 PUSH2 0x2007 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0xF2D9F3F00FC700757EB74F9AA3DBA0E2EB1280E0C6E0CF65962CC055528D7A90 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP JUMP JUMPDEST PUSH1 0xC SLOAD PUSH0 SWAP1 PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x1A03 JUMPI POP PUSH1 0x9 SLOAD PUSH1 0xB SLOAD PUSH1 0xA SLOAD PUSH2 0x1A00 SWAP2 PUSH2 0x16C7 JUMP JUMPDEST LT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x9B7 JUMPI POP POP PUSH1 0x14 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0xB SLOAD PUSH1 0xA SLOAD PUSH2 0x1A2E SWAP2 SWAP1 PUSH2 0x2007 JUMP JUMPDEST SWAP1 POP PUSH1 0x9 SLOAD DUP2 LT ISZERO PUSH2 0x1A3D JUMPI POP JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0xB SLOAD SELFBALANCE SWAP1 PUSH2 0x1A58 SWAP1 PUSH2 0x1B07 JUMP JUMPDEST PUSH0 PUSH2 0x1A63 SELFBALANCE DUP4 PUSH2 0x133D JUMP JUMPDEST SWAP1 POP PUSH2 0x1A77 PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1AAC JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH1 0xA SLOAD PUSH0 PUSH2 0x1ABC DUP3 PUSH1 0x2 PUSH2 0x1353 JUMP JUMPDEST SWAP1 POP PUSH2 0x1AC7 DUP2 PUSH2 0x1B07 JUMP JUMPDEST PUSH0 PUSH2 0x1AD2 SELFBALANCE DUP6 PUSH2 0x133D JUMP JUMPDEST SWAP1 POP PUSH2 0x1AE7 PUSH2 0x1AE1 DUP5 DUP5 PUSH2 0x133D JUMP JUMPDEST DUP3 PUSH2 0x1C68 JUMP JUMPDEST POP POP PUSH0 PUSH1 0xA DUP2 SWAP1 SSTORE PUSH1 0xB SSTORE POP POP PUSH1 0xC DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE PUSH0 SWAP3 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP ADDRESS DUP2 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0x1B3A JUMPI PUSH2 0x1B3A PUSH2 0x2149 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x13 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP1 SWAP4 AND SWAP3 PUSH4 0xAD5C4648 SWAP3 PUSH1 0x4 DUP1 DUP4 ADD SWAP4 SWAP2 SWAP3 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1B91 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1BB5 SWAP2 SWAP1 PUSH2 0x208E JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1BC8 JUMPI PUSH2 0x1BC8 PUSH2 0x2149 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x13 SLOAD PUSH2 0x1BEE SWAP2 ADDRESS SWAP2 AND DUP5 PUSH2 0xE27 JUMP JUMPDEST PUSH1 0x13 SLOAD PUSH1 0x40 MLOAD PUSH4 0x18CBAFE5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x18CBAFE5 SWAP1 PUSH2 0x1C26 SWAP1 DUP6 SWAP1 PUSH0 SWAP1 DUP7 SWAP1 ADDRESS SWAP1 TIMESTAMP SWAP1 PUSH1 0x4 ADD PUSH2 0x215D JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1C41 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x1B02 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x21CE JUMP JUMPDEST PUSH1 0x13 SLOAD PUSH2 0x1C80 SWAP1 ADDRESS SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH2 0xE27 JUMP JUMPDEST PUSH1 0x13 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF305D719 DUP3 ADDRESS DUP6 PUSH0 DUP1 PUSH2 0x1CA8 PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xE0 DUP9 SWAP1 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x44 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x64 DUP4 ADD MSTORE SWAP1 SWAP2 AND PUSH1 0x84 DUP3 ADD MSTORE TIMESTAMP PUSH1 0xA4 DUP3 ADD MSTORE PUSH1 0xC4 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1D0E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1D33 SWAP2 SWAP1 PUSH2 0x2287 JUMP JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0x38F8A0C92F4C5B0B6877F878CB4C0C8D348A47B76D716C8E78F425043DF9515B SWAP3 POP ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xDAC JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1DCD JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1DD8 DUP2 PUSH2 0x1DA8 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0xFFFF DUP2 AND DUP2 EQ PUSH2 0x1DF7 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1E0F JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1E18 DUP6 PUSH2 0x1DE6 JUMP JUMPDEST SWAP4 POP PUSH2 0x1E26 PUSH1 0x20 DUP7 ADD PUSH2 0x1DE6 JUMP JUMPDEST SWAP3 POP PUSH2 0x1E34 PUSH1 0x40 DUP7 ADD PUSH2 0x1DE6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E42 PUSH1 0x60 DUP7 ADD PUSH2 0x1DE6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1E5F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x1E6A DUP2 PUSH2 0x1DA8 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x1E7A DUP2 PUSH2 0x1DA8 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E9B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x8D5 DUP2 PUSH2 0x1DA8 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1EB6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1DF7 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1EDD JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1EE8 DUP2 PUSH2 0x1DA8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EF6 PUSH1 0x20 DUP5 ADD PUSH2 0x1EBD JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F10 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1F1B DUP2 PUSH2 0x1DA8 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x1F2B DUP2 PUSH2 0x1DA8 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F47 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1F50 DUP4 PUSH2 0x1EBD JUMP JUMPDEST SWAP2 POP PUSH2 0x1EF6 PUSH1 0x20 DUP5 ADD PUSH2 0x1DE6 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xDAC JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F80 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1F89 DUP4 PUSH2 0x1EBD JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x1F2B DUP2 PUSH2 0x1F5E JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1FAD JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1FCB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0xFFFF DUP2 DUP2 AND DUP4 DUP3 AND ADD SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0x2000 JUMPI PUSH2 0x2000 PUSH2 0x1FD1 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x782 JUMPI PUSH2 0x782 PUSH2 0x1FD1 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0xFF SHL DUP3 ADD PUSH2 0x202E JUMPI PUSH2 0x202E PUSH2 0x1FD1 JUMP JUMPDEST POP PUSH0 SUB SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1DF7 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x205C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x2065 DUP5 PUSH2 0x2034 JUMP JUMPDEST SWAP3 POP PUSH2 0x2073 PUSH1 0x20 DUP6 ADD PUSH2 0x2034 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD MLOAD PUSH2 0x2083 DUP2 PUSH2 0x1F5E JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x209E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x8D5 DUP2 PUSH2 0x1DA8 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH2 0x20CB JUMPI PUSH2 0x20CB PUSH2 0x20A9 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP2 DUP2 AND DUP4 DUP3 AND MUL DUP1 DUP3 AND SWAP2 SWAP1 DUP3 DUP2 EQ PUSH2 0x20F0 JUMPI PUSH2 0x20F0 PUSH2 0x1FD1 JUMP JUMPDEST POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x782 JUMPI PUSH2 0x782 PUSH2 0x1FD1 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x782 JUMPI PUSH2 0x782 PUSH2 0x1FD1 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x2130 JUMPI PUSH2 0x2130 PUSH2 0x20A9 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD DUP8 DUP4 MSTORE PUSH1 0x20 DUP8 PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP6 ADD MSTORE DUP2 DUP8 MLOAD DUP1 DUP5 MSTORE PUSH1 0xC0 DUP7 ADD SWAP2 POP PUSH1 0x20 DUP10 ADD SWAP4 POP PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x21AD JUMPI DUP5 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP4 DUP4 ADD SWAP4 SWAP2 DUP4 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x2188 JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 SWAP1 SWAP7 AND PUSH1 0x60 DUP6 ADD MSTORE POP POP POP PUSH1 0x80 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x21DF JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x21F6 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2209 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x221B JUMPI PUSH2 0x221B PUSH2 0x2135 JUMP JUMPDEST DUP1 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT DUP6 DUP3 GT OR ISZERO PUSH2 0x2240 JUMPI PUSH2 0x2240 PUSH2 0x2135 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 DUP3 MSTORE DUP5 DUP3 ADD SWAP3 POP DUP4 DUP2 ADD DUP6 ADD SWAP2 DUP9 DUP4 GT ISZERO PUSH2 0x225D JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 DUP6 ADD SWAP4 JUMPDEST DUP3 DUP6 LT ISZERO PUSH2 0x227B JUMPI DUP5 MLOAD DUP5 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP3 DUP6 ADD SWAP3 PUSH2 0x2262 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2299 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 MLOAD SWAP3 POP PUSH1 0x20 DUP5 ADD MLOAD SWAP2 POP PUSH1 0x40 DUP5 ADD MLOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PC SELFDESTRUCT DUP1 0xE0 SWAP11 PREVRANDAO 0xAC DUP2 0xE 0xCA 0x1F PUSH31 0xC706D8A9E4D48933C73AACB957AC449DBA91CA2564736F6C63430008190033 ",
							"sourceMap": "1203:9829:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1639:50;;;;;;;;;;;;;;;;;;;160:25:7;;;148:2;133:18;1639:50:6;;;;;;;;2158:98:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;4444:197::-;;;;;;;;;;-1:-1:-1;4444:197:2;;;;;:::i;:::-;;:::i;:::-;;;1240:14:7;;1233:22;1215:41;;1203:2;1188:18;4444:197:2;1075:187:7;8699:293:6;;;;;;;;;;-1:-1:-1;8699:293:6;;;;;:::i;:::-;;:::i;:::-;;3255:106:2;;;;;;;;;;-1:-1:-1;3342:12:2;;3255:106;;5203:256;;;;;;;;;;-1:-1:-1;5203:256:2;;;;;:::i;:::-;;:::i;3104:91::-;;;;;;;;;;-1:-1:-1;3104:91:2;;3186:2;2440:36:7;;2428:2;2413:18;3104:91:2;2298:184:7;2164:28:6;;;;;;;;;;-1:-1:-1;2164:28:6;;;;-1:-1:-1;;;;;2164:28:6;;;;;;-1:-1:-1;;;;;2651:32:7;;;2633:51;;2621:2;2606:18;2164:28:6;2487:203:7;1563:24:6;;;;;;;;;;-1:-1:-1;1563:24:6;;;;;;;;;;;;;;;-1:-1:-1;;;1563:24:6;;;;;-1:-1:-1;;;1563:24:6;;;;;;;;;2928:6:7;2961:15;;;2943:34;;3013:15;;;3008:2;2993:18;;2986:43;3065:15;;;3045:18;;;3038:43;;;;3117:15;;;3112:2;3097:18;;3090:43;2905:3;2890:19;1563:24:6;2695:444:7;5854:234:2;;;;;;;;;;-1:-1:-1;5854:234:2;;;;;:::i;:::-;;:::i;1346:40:6:-;;;;;;;;;;;;;;;;3419:125:2;;;;;;;;;;-1:-1:-1;3419:125:2;;;;;:::i;:::-;-1:-1:-1;;;;;3519:18:2;3493:7;3519:18;;;;;;;;;;;;3419:125;1824:101:1;;;;;;;;;;;;;:::i;8119:408:6:-;;;;;;;;;;;;;:::i;1920:30::-;;;;;;;;;;-1:-1:-1;1920:30:6;;;;;;;;;;;;;;;;;;;3767:14:7;;3760:22;3742:41;;3831:10;3819:23;;;3814:2;3799:18;;3792:51;3715:18;1920:30:6;3576:273:7;1201:85:1;;;;;;;;;;-1:-1:-1;1273:6:1;;-1:-1:-1;;;;;1273:6:1;1201:85;;10661:133:6;;;;;;;;;;;;;:::i;7218:353::-;;;;;;;;;;;;;:::i;2369:102:2:-;;;;;;;;;;;;;:::i;8998::6:-;;;;;;;;;;-1:-1:-1;8998:102:6;;;;;:::i;:::-;;:::i;7577:536::-;;;;;;;;;;-1:-1:-1;7577:536:6;;;;;:::i;:::-;;:::i;:::-;;;;4270:25:7;;;4326:2;4311:18;;4304:34;;;;4354:18;;;4347:34;4412:2;4397:18;;4390:34;4257:3;4242:19;7577:536:6;4039:391:7;9479:111:6;;;;;;;;;;-1:-1:-1;9479:111:6;;;;;:::i;:::-;;:::i;6575:427:2:-;;;;;;;;;;-1:-1:-1;6575:427:2;;;;;:::i;:::-;;:::i;2198:26:6:-;;;;;;;;;;-1:-1:-1;2198:26:6;;;;-1:-1:-1;;;;;2198:26:6;;;3740:189:2;;;;;;;;;;-1:-1:-1;3740:189:2;;;;;:::i;:::-;;:::i;2321:40:6:-;;;;;;;;;;-1:-1:-1;2321:40:6;;;;;:::i;:::-;;;;;;;;;;;;;;;;8533:160;;;;;;;;;;-1:-1:-1;8533:160:6;;;;;:::i;:::-;;:::i;1729:29::-;;;;;;;;;;;;;;;;2125:32;;;;;;;;;;-1:-1:-1;2125:32:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5190:14:7;;5183:22;5165:41;;5254:6;5242:19;;;5237:2;5222:18;;5215:47;5278:18;;;5271:34;;;;5348:14;5341:22;5336:2;5321:18;;5314:50;5395:3;5380:19;;5373:35;5152:3;5137:19;2125:32:6;4920:494:7;1695:28:6;;;;;;;;;;;;;;;;3987:149:2;;;;;;;;;;-1:-1:-1;3987:149:2;;;;;:::i;:::-;;:::i;2074:198:1:-;;;;;;;;;;-1:-1:-1;2074:198:1;;;;;:::i;:::-;;:::i;9282:191:6:-;;;;;;;;;;-1:-1:-1;9282:191:6;;;;;:::i;:::-;;:::i;9106:170::-;;;;;;;;;;-1:-1:-1;9106:170:6;;;;;:::i;:::-;;:::i;2158:98:2:-;2212:13;2244:5;2237:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98;:::o;4444:197::-;4527:4;719:10:5;4581:32:2;719:10:5;4597:7:2;4606:6;4581:8;:32::i;:::-;4630:4;4623:11;;;4444:197;;;;;:::o;8699:293:6:-;1094:13:1;:11;:13::i;:::-;8835:4:6::1;8817:14;8825:6:::0;8817:5;:14:::1;:::i;:::-;:22;;;;8809:51;;;::::0;-1:-1:-1;;;8809:51:6;;7405:2:7;8809:51:6::1;::::0;::::1;7387:21:7::0;7444:2;7424:18;;;7417:30;-1:-1:-1;;;7463:18:7;;;7456:46;7519:18;;8809:51:6::1;;;;;;;;;8898:4;8878:16;8887:7:::0;8878:6;:16:::1;:::i;:::-;:24;;;;8870:54;;;::::0;-1:-1:-1;;;8870:54:6;;7750:2:7;8870:54:6::1;::::0;::::1;7732:21:7::0;7789:2;7769:18;;;7762:30;-1:-1:-1;;;7808:18:7;;;7801:47;7865:18;;8870:54:6::1;7548:341:7::0;8870:54:6::1;8945:40;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;;::::1;::::0;;;;;::::1;;::::0;::::1;::::0;;;;;::::1;::::0;;;;;;;;;::::1;::::0;;;;;;;8934:8:::1;:51:::0;;-1:-1:-1;;8934:51:6;;;;;;;::::1;::::0;;;::::1;-1:-1:-1::0;;8934:51:6;-1:-1:-1;;;8934:51:6;;::::1;-1:-1:-1::0;;8934:51:6;;;;;-1:-1:-1;;;8934:51:6;;::::1;::::0;;;::::1;::::0;;8699:293::o;5203:256:2:-;5300:4;719:10:5;5356:38:2;5372:4;719:10:5;5387:6:2;5356:15;:38::i;:::-;5404:27;5414:4;5420:2;5424:6;5404:9;:27::i;:::-;5448:4;5441:11;;;5203:256;;;;;;:::o;5854:234::-;5942:4;719:10:5;5996:64:2;719:10:5;6012:7:2;6049:10;6021:25;719:10:5;6012:7:2;6021:9;:25::i;:::-;:38;;;;:::i;:::-;5996:8;:64::i;1824:101:1:-;1094:13;:11;:13::i;:::-;1888:30:::1;1915:1;1888:18;:30::i;:::-;1824:101::o:0;8119:408:6:-;8188:21;;8166:6;;8188:26;;8184:40;;-1:-1:-1;8223:1:6;;8119:408::o;8184:40::-;8234:20;8257:11;:9;:11::i;:::-;8300:21;;8234:34;;-1:-1:-1;8285:36:6;;:235;;8497:21;;8443:76;;:49;8487:4;8443:39;8497:21;8469:12;8443:25;:39::i;:::-;:43;;:49::i;:::-;:53;;:76::i;:::-;8435:85;;;:::i;:::-;8285:235;;;8397:21;;8343:76;;:49;8387:4;8343:39;:12;8397:21;8343:16;:39::i;:76::-;8278:242;;;8119:408;:::o;10661:133::-;10708:7;10734:53;1430:6;10734:37;10751:19;;1318:22;10734:16;;:37;;;;:::i;:53::-;10727:60;;10661:133;:::o;7218:353::-;7260:7;7280:16;7298;7334:11;;;;;;;;;-1:-1:-1;;;;;7334:11:6;-1:-1:-1;;;;;7319:39:6;;:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7279:81;;;;;7425:4;-1:-1:-1;;;;;7377:53:6;7392:11;;;;;;;;;-1:-1:-1;;;;;7392:11:6;-1:-1:-1;;;;;7377:34:6;;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;7377:53:6;;:187;;7512:52;-1:-1:-1;;;;;7546:17:6;;;;7513:27;;:17;;7535:4;7513:21;:27::i;7512:52::-;7377:187;;;7445:52;-1:-1:-1;;;;;7479:17:6;;;;7446:27;;:17;;7468:4;7446:21;:27::i;7445:52::-;7370:194;;;;7218:353;:::o;2369:102:2:-;2425:13;2457:7;2450:14;;;;;:::i;8998:102:6:-;1094:13:1;:11;:13::i;:::-;9068::6::1;:25:::0;8998:102::o;7577:536::-;-1:-1:-1;;;;;7780:27:6;;7651:13;7780:27;;;:18;:27;;;;;;7651:13;;;;;;;;7810:15;-1:-1:-1;7780:113:6;;7892:1;7780:113;;;-1:-1:-1;;;;;7841:27:6;;;;;;:18;:27;;;;;;:48;;7873:15;7841:31;:48::i;:::-;7760:133;-1:-1:-1;7920:20:6;7760:133;7934:5;7920:13;:20::i;:::-;7912:28;-1:-1:-1;7950:18:6;7963:5;7950:18;;:::i;:::-;;-1:-1:-1;7987:19:6;7950:18;8001:4;7987:13;:19::i;:::-;7978:28;-1:-1:-1;8016:17:6;8029:4;8016:17;;:::i;:::-;;-1:-1:-1;8054:17:6;8016;8068:2;8054:13;:17::i;:::-;8043:28;-1:-1:-1;8092:14:6;8104:2;8092:9;:14;:::i;:::-;8081:25;;7750:363;7577:536;;;;;:::o;9479:111::-;1094:13:1;:11;:13::i;:::-;-1:-1:-1;;;;;9557:17:6;;;::::1;;::::0;;;:8:::1;:17;::::0;;;;:26;;-1:-1:-1;;9557:26:6::1;::::0;::::1;;::::0;;;::::1;::::0;;9479:111::o;6575:427:2:-;6668:4;719:10:5;6668:4:2;6749:25;719:10:5;6766:7:2;6749:9;:25::i;:::-;6722:52;;6812:15;6792:16;:35;;6784:85;;;;-1:-1:-1;;;6784:85:2;;9489:2:7;6784:85:2;;;9471:21:7;9528:2;9508:18;;;9501:30;9567:34;9547:18;;;9540:62;-1:-1:-1;;;9618:18:7;;;9611:35;9663:19;;6784:85:2;9287:401:7;6784:85:2;6903:60;6912:5;6919:7;6947:15;6928:16;:34;6903:8;:60::i;:::-;-1:-1:-1;6991:4:2;;6575:427;-1:-1:-1;;;;6575:427:2:o;3740:189::-;3819:4;719:10:5;3873:28:2;719:10:5;3890:2:2;3894:6;3873:9;:28::i;8533:160:6:-;1094:13:1;:11;:13::i;:::-;8600::6::1;:25:::0;;-1:-1:-1;;;;;;8600:25:6::1;-1:-1:-1::0;;;;;8600:25:6;::::1;;::::0;;8635:12:::1;:10;:12::i;:::-;8662:24;::::0;-1:-1:-1;;;;;2651:32:7;;2633:51;;8662:24:6::1;::::0;2621:2:7;2606:18;8662:24:6::1;;;;;;;8533:160:::0;:::o;3987:149:2:-;-1:-1:-1;;;;;4102:18:2;;;4076:7;4102:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3987:149::o;2074:198:1:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2162:22:1;::::1;2154:73;;;::::0;-1:-1:-1;;;2154:73:1;;9895:2:7;2154:73:1::1;::::0;::::1;9877:21:7::0;9934:2;9914:18;;;9907:30;9973:34;9953:18;;;9946:62;-1:-1:-1;;;10024:18:7;;;10017:36;10070:19;;2154:73:1::1;9693:402:7::0;2154:73:1::1;2237:28;2256:8;2237:18;:28::i;:::-;2074:198:::0;:::o;9282:191:6:-;1094:13:1;:11;:13::i;:::-;9379:12:6::1;:30:::0;;-1:-1:-1;;9419:47:6;9379:30;::::1;;-1:-1:-1::0;;9419:47:6;;;;;9379:30:::1;9419:47;::::0;;;::::1;::::0;;;::::1;;::::0;;9282:191::o;9106:170::-;1094:13:1;:11;:13::i;:::-;9193:8:6::1;:26:::0;;-1:-1:-1;;9193:26:6::1;::::0;::::1;;;::::0;;9249:20:::1;:8:::0;9260:9:::1;9249:20;:::i;:::-;9229:8;:40:::0;;::::1;::::0;;;::::1;;;-1:-1:-1::0;;9229:40:6;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;9106:170:6:o;10457:340:2:-;-1:-1:-1;;;;;10558:19:2;;10550:68;;;;-1:-1:-1;;;10550:68:2;;10556:2:7;10550:68:2;;;10538:21:7;10595:2;10575:18;;;10568:30;10634:34;10614:18;;;10607:62;-1:-1:-1;;;10685:18:7;;;10678:34;10729:19;;10550:68:2;10354:400:7;10550:68:2;-1:-1:-1;;;;;10636:21:2;;10628:68;;;;-1:-1:-1;;;10628:68:2;;10961:2:7;10628:68:2;;;10943:21:7;11000:2;10980:18;;;10973:30;11039:34;11019:18;;;11012:62;-1:-1:-1;;;11090:18:7;;;11083:32;11132:19;;10628:68:2;10759:398:7;10628:68:2;-1:-1:-1;;;;;10707:18:2;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10758:32;;160:25:7;;;10758:32:2;;133:18:7;10758:32:2;;;;;;;10457:340;;;:::o;1359:130:1:-;1273:6;;-1:-1:-1;;;;;1273:6:1;719:10:5;1422:23:1;1414:68;;;;-1:-1:-1;;;1414:68:1;;11364:2:7;1414:68:1;;;11346:21:7;;;11383:18;;;11376:30;11442:34;11422:18;;;11415:62;11494:18;;1414:68:1;11162:356:7;11078:411:2;11178:24;11205:25;11215:5;11222:7;11205:9;:25::i;:::-;11178:52;;-1:-1:-1;;11244:16:2;:37;11240:243;;11325:6;11305:16;:26;;11297:68;;;;-1:-1:-1;;;11297:68:2;;11725:2:7;11297:68:2;;;11707:21:7;11764:2;11744:18;;;11737:30;11803:31;11783:18;;;11776:59;11852:18;;11297:68:2;11523:353:7;11297:68:2;11407:51;11416:5;11423:7;11451:6;11432:16;:25;11407:8;:51::i;:::-;11168:321;11078:411;;;:::o;2841:1293:6:-;2994:1;2985:6;:10;2977:49;;;;-1:-1:-1;;;2977:49:6;;12083:2:7;2977:49:6;;;12065:21:7;12122:2;12102:18;;;12095:30;12161:28;12141:18;;;12134:56;12207:18;;2977:49:6;11881:350:7;2977:49:6;3060:11;;3037:10;;-1:-1:-1;;;;;3050:21:6;;;3060:11;;3050:21;:45;;;;-1:-1:-1;;;;;;3076:19:6;;;;;;:8;:19;;;;;;;;3075:20;3050:45;3132:11;;3037:58;;-1:-1:-1;3105:11:6;;-1:-1:-1;;;;;3119:24:6;;;3132:11;;3119:24;:45;;;;-1:-1:-1;;;;;;3148:16:6;;;;;;:8;:16;;;;;;;;3147:17;3119:45;3179:12;:20;3105:59;;-1:-1:-1;3179:20:6;;:30;;;;;3203:6;3179:30;3175:166;;;3234:24;;;;3233:25;3225:68;;;;-1:-1:-1;;;3225:68:6;;12438:2:7;3225:68:6;;;12420:21:7;12477:2;12457:18;;;12450:30;12516:32;12496:18;;;12489:60;12566:18;;3225:68:6;12236:354:7;3225:68:6;3307:23;:21;:23::i;:::-;3355:8;:16;;;:26;;;;;3375:6;3355:26;3351:208;;;-1:-1:-1;;;;;3424:26:6;;;;;;:18;:26;;;;;;3405:15;:45;;3397:73;;;;-1:-1:-1;;;3397:73:6;;12797:2:7;3397:73:6;;;12779:21:7;12836:2;12816:18;;;12809:30;-1:-1:-1;;;12855:18:7;;;12848:45;12910:18;;3397:73:6;12595:339:7;3397:73:6;3531:8;:17;3513:35;;3531:17;;;;;3513:15;:35;:::i;:::-;-1:-1:-1;;;;;3484:26:6;;;;;;:18;:26;;;;;:64;3351:208;3569:17;3589:40;3603:6;3611:9;3622:6;3589:13;:40::i;:::-;3569:60;-1:-1:-1;3639:17:6;3659:21;:6;3569:60;3659:10;:21::i;:::-;-1:-1:-1;;;;;3696:19:6;;;;;;:8;:19;;;;;;3639:41;;-1:-1:-1;3696:19:6;;3695:20;:31;;;;;3720:6;3719:7;3695:31;3691:149;;;3789:16;:14;:16::i;:::-;3750:35;3775:9;3750:20;3760:9;-1:-1:-1;;;;;3519:18:2;3493:7;3519:18;;;;;;;;;;;;3419:125;3750:20:6;:24;;:35::i;:::-;:55;;3742:87;;;;-1:-1:-1;;;3742:87:6;;13141:2:7;3742:87:6;;;13123:21:7;13180:2;13160:18;;;13153:30;-1:-1:-1;;;13199:18:7;;;13192:49;13258:18;;3742:87:6;12939:343:7;3742:87:6;3854:13;;3850:147;;3883:49;3899:6;3915:4;3922:9;3883:15;:49::i;:::-;3946:40;3961:9;3972:5;3979:6;3946:14;:40::i;:::-;4007:45;4023:6;4031:9;4042;4007:15;:45::i;:::-;4067:17;:15;:17::i;:::-;4063:65;;;4100:17;:15;:17::i;:::-;2967:1167;;;;2841:1293;;;:::o;2426:187:1:-;2518:6;;;-1:-1:-1;;;;;2534:17:1;;;-1:-1:-1;;;;;;2534:17:1;;;;;;;2566:40;;2518:6;;;2534:17;2518:6;;2566:40;;2499:16;;2566:40;2489:124;2426:187;:::o;3122:96:0:-;3180:7;3206:5;3210:1;3206;:5;:::i;3465:96::-;3523:7;3549:5;3553:1;3549;:5;:::i;3850:96::-;3908:7;3934:5;3938:1;3934;:5;:::i;9596:200:6:-;9685:13;;;;;;;;;-1:-1:-1;;;;;9685:13:6;-1:-1:-1;;;;;9668:39:6;;:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;9650:84:6;;9743:4;9767:13;;;;;;;;;-1:-1:-1;;;;;9767:13:6;-1:-1:-1;;;;;9750:36:6;;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9650:139;;-1:-1:-1;;;;;;9650:139:6;;;;;;;-1:-1:-1;;;;;13948:15:7;;;9650:139:6;;;13930:34:7;14000:15;;13980:18;;;13973:43;13865:18;;9650:139:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9636:11;:153;;-1:-1:-1;;;;;;9636:153:6;-1:-1:-1;;;;;9636:153:6;;;;;;;;;;9596:200::o;5660:840::-;5711:20;5734:11;:9;:11::i;:::-;5775:21;;5711:34;;-1:-1:-1;5760:36:6;;5756:231;;;5812:21;:36;;;5866:24;;;;5862:95;;;5910:24;:32;;-1:-1:-1;;5910:32:6;;;5970:7;5660:840::o;5756:231::-;6074:12;:30;5997:22;;6022:112;;1430:6;;6022:83;;6061:43;;6074:30;;;;;1430:6;6061:43;:::i;:::-;6022:21;;;:38;:83::i;:112::-;5997:137;;6164:14;6149:12;:29;6145:152;;;6194:24;:31;;-1:-1:-1;;6194:31:6;6221:4;6194:31;;;6265:21;;6239:23;:47;6145:152;6311:24;;;;:74;;;;-1:-1:-1;6355:23:6;;:30;;6383:1;6355:27;:30::i;:::-;6339:12;:46;;6311:74;6307:187;;;6401:24;:32;;-1:-1:-1;;6401:32:6;;;6447:21;:36;;;6307:187;5701:799;;5660:840::o;4140:781::-;-1:-1:-1;;;;;4289:16:6;;4266:7;4289:16;;;:8;:16;;;;;;;;;:39;;-1:-1:-1;;;;;;4309:19:6;;;;;;:8;:19;;;;;;;;4289:39;4285:53;;;-1:-1:-1;4337:1:6;4330:8;;4285:53;4372:11;;-1:-1:-1;;;;;4372:11:6;;;4362:21;;;;;;4407:24;;;4442:473;;;;4513:8;:15;4474:72;;1430:6;;4474:56;;4485:44;;4513:15;4493:14;;;;4513:15;;;;4485:27;:44::i;:::-;4474:6;;:10;:56::i;:72::-;4467:79;;;;;;4442:473;4567:6;4563:352;;;4636:8;:16;4596:74;;1430:6;;4596:58;;4607:46;;4636:16;-1:-1:-1;;;4615:15:6;;;;;-1:-1:-1;;;4636:16:6;;;4607:28;:46::i;4563:352::-;4750:8;:16;4701:17;;4721:46;;4750:16;-1:-1:-1;;;4729:15:6;;;;;-1:-1:-1;;;4750:16:6;;;4721:28;:46::i;:::-;4701:66;;4781:19;4803:41;4841:2;4803:33;4817:18;;4803:9;:13;;:33;;;;:::i;:41::-;4781:63;-1:-1:-1;4865:39:6;1430:6;4865:23;:6;4781:63;4865:10;:23::i;:39::-;4858:46;;;;;;;;2755:96:0;2813:7;2839:5;2843:1;2839;:5;:::i;7456:788:2:-;-1:-1:-1;;;;;7552:18:2;;7544:68;;;;-1:-1:-1;;;7544:68:2;;14229:2:7;7544:68:2;;;14211:21:7;14268:2;14248:18;;;14241:30;14307:34;14287:18;;;14280:62;-1:-1:-1;;;14358:18:7;;;14351:35;14403:19;;7544:68:2;14027:401:7;7544:68:2;-1:-1:-1;;;;;7630:16:2;;7622:64;;;;-1:-1:-1;;;7622:64:2;;14635:2:7;7622:64:2;;;14617:21:7;14674:2;14654:18;;;14647:30;14713:34;14693:18;;;14686:62;-1:-1:-1;;;14764:18:7;;;14757:33;14807:19;;7622:64:2;14433:399:7;7622:64:2;-1:-1:-1;;;;;7768:15:2;;7746:19;7768:15;;;;;;;;;;;7801:21;;;;7793:72;;;;-1:-1:-1;;;7793:72:2;;15039:2:7;7793:72:2;;;15021:21:7;15078:2;15058:18;;;15051:30;15117:34;15097:18;;;15090:62;-1:-1:-1;;;15168:18:7;;;15161:36;15214:19;;7793:72:2;14837:402:7;7793:72:2;-1:-1:-1;;;;;7899:15:2;;;:9;:15;;;;;;;;;;;7917:20;;;7899:38;;8114:13;;;;;;;;;;:23;;;;;;8163:26;;160:25:7;;;8114:13:2;;8163:26;;133:18:7;8163:26:2;;;;;;;8200:37;12073:91;4928:726:6;5014:15;5039:16;5070:5;5066:422;;;5152:8;:15;5101:67;;5135:32;;5152:15;;;;;;;5135:14;:32;:::i;:::-;5115:8;:14;5101:67;;;;;:29;;:9;;5115:14;5101:13;:29::i;:67::-;5091:77;;5066:422;;;5189:6;5185:303;;;5274:8;:16;5221:70;;5256:34;;5274:16;-1:-1:-1;;;5274:16:6;;;;;-1:-1:-1;;;5256:15:6;;;:34;:::i;:::-;5235:8;:15;5221:70;;;;;:30;;:9;;-1:-1:-1;;;5235:15:6;;;;5221:13;:30::i;5185:303::-;5360:8;:16;5322:17;;5342:34;;5360:16;-1:-1:-1;;;5360:16:6;;;;;-1:-1:-1;;;5342:15:6;;;:34;:::i;:::-;5322:54;;;;5400:77;5474:2;5400:69;5450:18;;5400:45;5435:9;5400:30;5414:8;:15;;;;;;;;;;;;5400:30;;:9;:13;;:30;;;;:::i;:77::-;5390:87;;5308:180;5185:303;5509:19;5521:7;5509:9;:19;:::i;:::-;5498:30;;5555:7;5538:13;;:24;;;;;;;:::i;:::-;;;;;;;;5590:8;5572:14;;:26;;;;;;;:::i;:::-;;;;-1:-1:-1;;5614:33:6;;;15418:25:7;;;15474:2;15459:18;;15452:34;;;5614:33:6;;15391:18:7;5614:33:6;;;;;;;5004:650;;4928:726;;;:::o;10800:195::-;10873:8;;10849:4;;10873:8;;10872:9;:75;;;;-1:-1:-1;10934:13:6;;10915:14;;10897:13;;:33;;:17;:33::i;:::-;:50;;10872:75;:116;;;;-1:-1:-1;;10977:11:6;;-1:-1:-1;;;;;10977:11:6;10963:10;:25;;;10800:195::o;6506:706::-;6551:19;6589:14;;6573:13;;:30;;;;:::i;:::-;6551:52;;6631:13;;6617:11;:27;6613:40;;;6646:7;6506:706::o;6613:40::-;6663:8;:15;;-1:-1:-1;;6663:15:6;6674:4;6663:15;;;6763:14;;6713:21;;6745:33;;:17;:33::i;:::-;6788:14;6805:41;:21;6831:14;6805:25;:41::i;:::-;6788:58;;6864:7;1273:6:1;;-1:-1:-1;;;;;1273:6:1;;1201:85;6864:7:6;-1:-1:-1;;;;;6856:25:6;:33;6882:6;6856:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6919:13:6;;6900:16;6957:15;6919:13;6970:1;6957:12;:15::i;:::-;6942:30;;6982:23;7000:4;6982:17;:23::i;:::-;7024:13;7040:33;:21;7066:6;7040:25;:33::i;:::-;7024:49;-1:-1:-1;7083:40:6;7097:18;:8;7110:4;7097:12;:18::i;:::-;7117:5;7083:13;:40::i;:::-;-1:-1:-1;;7150:1:6;7134:13;:17;;;7161:14;:18;-1:-1:-1;;7189:8:6;:16;;-1:-1:-1;;7189:16:6;;;-1:-1:-1;;6506:706:6:o;12073:91:2:-;;;;:::o;9802:438:6:-;9887:16;;;9901:1;9887:16;;;;;;;;9863:21;;9887:16;;;;;;;;;;-1:-1:-1;9887:16:6;9863:40;;9931:4;9913;9918:1;9913:7;;;;;;;;:::i;:::-;-1:-1:-1;;;;;9913:23:6;;;:7;;;;;;;;;;:23;;;;9973:13;;9956:38;;;-1:-1:-1;;;9956:38:6;;;;9973:13;;;;;9956:36;;:38;;;;;9913:7;;9956:38;;;;;9973:13;9956:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9946:4;9951:1;9946:7;;;;;;;;:::i;:::-;-1:-1:-1;;;;;9946:48:6;;;:7;;;;;;;;;:48;10029:13;;10005:46;;10022:4;;10029:13;10044:6;10005:8;:46::i;:::-;10078:13;;10061:172;;-1:-1:-1;;;10061:172:6;;-1:-1:-1;;;;;10078:13:6;;;;10061:53;;:172;;10128:6;;10078:13;;10163:4;;10189;;10208:15;;10061:172;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10061:172:6;;;;;;;;;;;;:::i;10246:409::-;10351:13;;10327:51;;10344:4;;-1:-1:-1;;;;;10351:13:6;10366:11;10327:8;:51::i;:::-;10405:13;;-1:-1:-1;;;;;10405:13:6;10388:47;10443:9;10475:4;10494:11;10405:13;;10549:7;1273:6:1;;-1:-1:-1;;;;;1273:6:1;;1201:85;10549:7:6;10388:207;;;;;;-1:-1:-1;;;;;;10388:207:6;;;-1:-1:-1;;;;;18215:15:7;;;10388:207:6;;;18197:34:7;18247:18;;;18240:34;;;;18290:18;;;18283:34;;;;18333:18;;;18326:34;18397:15;;;18376:19;;;18369:44;10570:15:6;18429:19:7;;;18422:35;18131:19;;10388:207:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;10610:38:6;;;15418:25:7;;;15474:2;15459:18;;15452:34;;;10610:38:6;;-1:-1:-1;15391:18:7;10610:38:6;;;;;;;10246:409;;:::o;196:418:7:-;345:2;334:9;327:21;308:4;377:6;371:13;420:6;415:2;404:9;400:18;393:34;479:6;474:2;466:6;462:15;457:2;446:9;442:18;436:50;535:1;530:2;521:6;510:9;506:22;502:31;495:42;605:2;598;594:7;589:2;581:6;577:15;573:29;562:9;558:45;554:54;546:62;;;196:418;;;;:::o;619:131::-;-1:-1:-1;;;;;694:31:7;;684:42;;674:70;;740:1;737;730:12;755:315;823:6;831;884:2;872:9;863:7;859:23;855:32;852:52;;;900:1;897;890:12;852:52;939:9;926:23;958:31;983:5;958:31;:::i;:::-;1008:5;1060:2;1045:18;;;;1032:32;;-1:-1:-1;;;755:315:7:o;1267:159::-;1334:20;;1394:6;1383:18;;1373:29;;1363:57;;1416:1;1413;1406:12;1363:57;1267:159;;;:::o;1431:401::-;1513:6;1521;1529;1537;1590:3;1578:9;1569:7;1565:23;1561:33;1558:53;;;1607:1;1604;1597:12;1558:53;1630:28;1648:9;1630:28;:::i;:::-;1620:38;;1677:37;1710:2;1699:9;1695:18;1677:37;:::i;:::-;1667:47;;1733:37;1766:2;1755:9;1751:18;1733:37;:::i;:::-;1723:47;;1789:37;1822:2;1811:9;1807:18;1789:37;:::i;:::-;1779:47;;1431:401;;;;;;;:::o;1837:456::-;1914:6;1922;1930;1983:2;1971:9;1962:7;1958:23;1954:32;1951:52;;;1999:1;1996;1989:12;1951:52;2038:9;2025:23;2057:31;2082:5;2057:31;:::i;:::-;2107:5;-1:-1:-1;2164:2:7;2149:18;;2136:32;2177:33;2136:32;2177:33;:::i;:::-;1837:456;;2229:7;;-1:-1:-1;;;2283:2:7;2268:18;;;;2255:32;;1837:456::o;3144:247::-;3203:6;3256:2;3244:9;3235:7;3231:23;3227:32;3224:52;;;3272:1;3269;3262:12;3224:52;3311:9;3298:23;3330:31;3355:5;3330:31;:::i;3854:180::-;3913:6;3966:2;3954:9;3945:7;3941:23;3937:32;3934:52;;;3982:1;3979;3972:12;3934:52;-1:-1:-1;4005:23:7;;3854:180;-1:-1:-1;3854:180:7:o;4435:160::-;4500:20;;4556:13;;4549:21;4539:32;;4529:60;;4585:1;4582;4575:12;4600:315;4665:6;4673;4726:2;4714:9;4705:7;4701:23;4697:32;4694:52;;;4742:1;4739;4732:12;4694:52;4781:9;4768:23;4800:31;4825:5;4800:31;:::i;:::-;4850:5;-1:-1:-1;4874:35:7;4905:2;4890:18;;4874:35;:::i;:::-;4864:45;;4600:315;;;;;:::o;5419:388::-;5487:6;5495;5548:2;5536:9;5527:7;5523:23;5519:32;5516:52;;;5564:1;5561;5554:12;5516:52;5603:9;5590:23;5622:31;5647:5;5622:31;:::i;:::-;5672:5;-1:-1:-1;5729:2:7;5714:18;;5701:32;5742:33;5701:32;5742:33;:::i;:::-;5794:7;5784:17;;;5419:388;;;;;:::o;5812:252::-;5876:6;5884;5937:2;5925:9;5916:7;5912:23;5908:32;5905:52;;;5953:1;5950;5943:12;5905:52;5976:26;5992:9;5976:26;:::i;:::-;5966:36;;6021:37;6054:2;6043:9;6039:18;6021:37;:::i;6069:121::-;6154:10;6147:5;6143:22;6136:5;6133:33;6123:61;;6180:1;6177;6170:12;6195:313;6259:6;6267;6320:2;6308:9;6299:7;6295:23;6291:32;6288:52;;;6336:1;6333;6326:12;6288:52;6359:26;6375:9;6359:26;:::i;:::-;6349:36;;6435:2;6424:9;6420:18;6407:32;6448:30;6472:5;6448:30;:::i;6513:380::-;6592:1;6588:12;;;;6635;;;6656:61;;6710:4;6702:6;6698:17;6688:27;;6656:61;6763:2;6755:6;6752:14;6732:18;6729:38;6726:161;;6809:10;6804:3;6800:20;6797:1;6790:31;6844:4;6841:1;6834:15;6872:4;6869:1;6862:15;6726:161;;6513:380;;;:::o;6898:127::-;6959:10;6954:3;6950:20;6947:1;6940:31;6990:4;6987:1;6980:15;7014:4;7011:1;7004:15;7030:168;7097:6;7123:10;;;7135;;;7119:27;;7158:11;;;7155:37;;;7172:18;;:::i;:::-;7155:37;7030:168;;;;:::o;7894:125::-;7959:9;;;7980:10;;;7977:36;;;7993:18;;:::i;8024:136::-;8059:3;-1:-1:-1;;;8080:22:7;;8077:48;;8105:18;;:::i;:::-;-1:-1:-1;8145:1:7;8141:13;;8024:136::o;8165:188::-;8244:13;;-1:-1:-1;;;;;8286:42:7;;8276:53;;8266:81;;8343:1;8340;8333:12;8358:419;8445:6;8453;8461;8514:2;8502:9;8493:7;8489:23;8485:32;8482:52;;;8530:1;8527;8520:12;8482:52;8553:40;8583:9;8553:40;:::i;:::-;8543:50;;8612:49;8657:2;8646:9;8642:18;8612:49;:::i;:::-;8602:59;;8704:2;8693:9;8689:18;8683:25;8717:30;8741:5;8717:30;:::i;:::-;8766:5;8756:15;;;8358:419;;;;;:::o;8782:251::-;8852:6;8905:2;8893:9;8884:7;8880:23;8876:32;8873:52;;;8921:1;8918;8911:12;8873:52;8953:9;8947:16;8972:31;8997:5;8972:31;:::i;9038:127::-;9099:10;9094:3;9090:20;9087:1;9080:31;9130:4;9127:1;9120:15;9154:4;9151:1;9144:15;9170:112;9202:1;9228;9218:35;;9233:18;;:::i;:::-;-1:-1:-1;9267:9:7;;9170:112::o;10100:249::-;10171:10;10213;;;10225;;;10209:27;10256:20;;;;10171:10;10295:24;;;10285:58;;10323:18;;:::i;:::-;10285:58;;10100:249;;;;:::o;13287:128::-;13354:9;;;13375:11;;;13372:37;;;13389:18;;:::i;13420:168::-;13493:9;;;13524;;13541:15;;;13535:22;;13521:37;13511:71;;13562:18;;:::i;13593:120::-;13633:1;13659;13649:35;;13664:18;;:::i;:::-;-1:-1:-1;13698:9:7;;13593:120::o;15497:127::-;15558:10;15553:3;15549:20;15546:1;15539:31;15589:4;15586:1;15579:15;15613:4;15610:1;15603:15;15629:127;15690:10;15685:3;15681:20;15678:1;15671:31;15721:4;15718:1;15711:15;15745:4;15742:1;15735:15;15761:980;16023:4;16071:3;16060:9;16056:19;16102:6;16091:9;16084:25;16128:2;16166:6;16161:2;16150:9;16146:18;16139:34;16209:3;16204:2;16193:9;16189:18;16182:31;16233:6;16268;16262:13;16299:6;16291;16284:22;16337:3;16326:9;16322:19;16315:26;;16376:2;16368:6;16364:15;16350:29;;16397:1;16407:195;16421:6;16418:1;16415:13;16407:195;;;16486:13;;-1:-1:-1;;;;;16482:39:7;16470:52;;16577:15;;;;16542:12;;;;16518:1;16436:9;16407:195;;;-1:-1:-1;;;;;;;16658:32:7;;;;16653:2;16638:18;;16631:60;-1:-1:-1;;;16722:3:7;16707:19;16700:35;16619:3;15761:980;-1:-1:-1;;;15761:980:7:o;16746:1105::-;16841:6;16872:2;16915;16903:9;16894:7;16890:23;16886:32;16883:52;;;16931:1;16928;16921:12;16883:52;16964:9;16958:16;16993:18;17034:2;17026:6;17023:14;17020:34;;;17050:1;17047;17040:12;17020:34;17088:6;17077:9;17073:22;17063:32;;17133:7;17126:4;17122:2;17118:13;17114:27;17104:55;;17155:1;17152;17145:12;17104:55;17184:2;17178:9;17206:2;17202;17199:10;17196:36;;;17212:18;;:::i;:::-;17258:2;17255:1;17251:10;17290:2;17284:9;17353:2;17349:7;17344:2;17340;17336:11;17332:25;17324:6;17320:38;17408:6;17396:10;17393:22;17388:2;17376:10;17373:18;17370:46;17367:72;;;17419:18;;:::i;:::-;17455:2;17448:22;17505:18;;;17539:15;;;;-1:-1:-1;17581:11:7;;;17577:20;;;17609:19;;;17606:39;;;17641:1;17638;17631:12;17606:39;17665:11;;;;17685:135;17701:6;17696:3;17693:15;17685:135;;;17767:10;;17755:23;;17718:12;;;;17798;;;;17685:135;;;17839:6;16746:1105;-1:-1:-1;;;;;;;;16746:1105:7:o;18468:306::-;18556:6;18564;18572;18625:2;18613:9;18604:7;18600:23;18596:32;18593:52;;;18641:1;18638;18631:12;18593:52;18670:9;18664:16;18654:26;;18720:2;18709:9;18705:18;18699:25;18689:35;;18764:2;18753:9;18749:18;18743:25;18733:35;;18468:306;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1787200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"_maxWalletSize()": "infinite",
								"accumulatedEco()": "2372",
								"accumulatedLp()": "2327",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24686",
								"balanceOf(address)": "2632",
								"configureCooldown(bool,uint32)": "51274",
								"configureDiamondFloor(bool,uint16)": "infinite",
								"cooldown()": "2448",
								"cooldownRemaining(address)": "infinite",
								"decimals()": "266",
								"decreaseAllowance(address,uint256)": "27006",
								"diamondFloor()": "8866",
								"increaseAllowance(address,uint256)": "infinite",
								"isExempt(address)": "2567",
								"maxWalletPercentage()": "2373",
								"name()": "infinite",
								"owner()": "2441",
								"pairAddress()": "2425",
								"pairPrice()": "infinite",
								"priceDeviation()": "infinite",
								"renounceOwnership()": "infinite",
								"routerAddress()": "2448",
								"setExempt(address,bool)": "26924",
								"setRouter(address)": "infinite",
								"setTaxRates(uint16,uint16,uint16,uint16)": "infinite",
								"setThreshold(uint256)": "24576",
								"swapThreshold()": "2330",
								"symbol()": "infinite",
								"taxRates()": "2517",
								"totalSupply()": "2326",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite"
							},
							"internal": {
								"_addLiquidity(uint256,uint256)": "infinite",
								"_calculateTax(address,address,uint256)": "infinite",
								"_checkPriceConditions()": "infinite",
								"_distributeTax(uint256,bool,bool)": "infinite",
								"_setupPair()": "infinite",
								"_shouldSwapBack()": "10734",
								"_swapAndLiquify()": "infinite",
								"_swapTokensForETH(uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1203,
									"end": 11032,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 1203,
									"end": 11032,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1203,
									"end": 11032,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1383,
									"end": 1386,
									"name": "PUSH",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 1346,
									"end": 1386,
									"name": "PUSH",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 1346,
									"end": 1386,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1630,
									"end": 1632,
									"name": "PUSH",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 1593,
									"end": 1632,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 1593,
									"end": 1632,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1670,
									"end": 1689,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1685,
									"end": 1689,
									"name": "PUSH",
									"source": 6,
									"value": "3E8"
								},
								{
									"begin": 1318,
									"end": 1340,
									"name": "PUSH",
									"source": 6,
									"value": "33B2E3C9FD0803CE8000000"
								},
								{
									"begin": 1670,
									"end": 1689,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1670,
									"end": 1689,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1670,
									"end": 1689,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1670,
									"end": 1689,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1639,
									"end": 1689,
									"name": "PUSH",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 1639,
									"end": 1689,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 2542,
									"end": 2835,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 2542,
									"end": 2835,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2542,
									"end": 2835,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2542,
									"end": 2835,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 2542,
									"end": 2835,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2542,
									"end": 2835,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2542,
									"end": 2835,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2542,
									"end": 2835,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 2542,
									"end": 2835,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 2542,
									"end": 2835,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2542,
									"end": 2835,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "26B2B6B29021B7B4B7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "B9"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4D454D45"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2054,
									"end": 2059,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2046,
									"end": 2051,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 2046,
									"end": 2059,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2069,
									"end": 2076,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 2079,
									"end": 2086,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2069,
									"end": 2076,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 2069,
									"end": 2086,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 955,
									"end": 967,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 955,
									"end": 967,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 936,
									"end": 968,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2603,
									"end": 2634,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 2609,
									"end": 2619,
									"modifierDepth": 2,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 1318,
									"end": 1340,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "33B2E3C9FD0803CE8000000"
								},
								{
									"begin": 2603,
									"end": 2608,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 2603,
									"end": 2634,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2603,
									"end": 2634,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 2603,
									"end": 2634,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2644,
									"end": 2657,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 2644,
									"end": 2674,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2644,
									"end": 2674,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2644,
									"end": 2674,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2272,
									"end": 2314,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "10ED43C718714EB63D5AA57B78B54704E256024E"
								},
								{
									"begin": 2644,
									"end": 2674,
									"modifierDepth": 2,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 2644,
									"end": 2674,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2644,
									"end": 2674,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 2684,
									"end": 2696,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 2684,
									"end": 2694,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2684,
									"end": 2696,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2684,
									"end": 2696,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 2684,
									"end": 2696,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2726,
									"end": 2746,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 2726,
									"end": 2746,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2726,
									"end": 2746,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 2726,
									"end": 2746,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 2726,
									"end": 2746,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2726,
									"end": 2746,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2726,
									"end": 2746,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2726,
									"end": 2746,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 2726,
									"end": 2746,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2726,
									"end": 2746,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2726,
									"end": 2746,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2726,
									"end": 2746,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2726,
									"end": 2746,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2726,
									"end": 2746,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2726,
									"end": 2746,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2726,
									"end": 2746,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2726,
									"end": 2746,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2726,
									"end": 2746,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2726,
									"end": 2746,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2726,
									"end": 2746,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2726,
									"end": 2746,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2726,
									"end": 2746,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2726,
									"end": 2746,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2726,
									"end": 2746,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2726,
									"end": 2746,
									"name": "PUSH",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 2726,
									"end": 2746,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2726,
									"end": 2746,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 2726,
									"end": 2746,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2726,
									"end": 2746,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2726,
									"end": 2746,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2726,
									"end": 2746,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2715,
									"end": 2723,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 2715,
									"end": 2746,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2715,
									"end": 2746,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2715,
									"end": 2746,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2715,
									"end": 2746,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2715,
									"end": 2746,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 2770,
									"end": 2780,
									"modifierDepth": 2,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 2761,
									"end": 2781,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2761,
									"end": 2781,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2761,
									"end": 2769,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 2761,
									"end": 2781,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2761,
									"end": 2781,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2761,
									"end": 2781,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2761,
									"end": 2781,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2761,
									"end": 2781,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2761,
									"end": 2781,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 2761,
									"end": 2788,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2761,
									"end": 2788,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2761,
									"end": 2788,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2761,
									"end": 2788,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2761,
									"end": 2788,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2715,
									"end": 2746,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 2761,
									"end": 2788,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2761,
									"end": 2788,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2761,
									"end": 2788,
									"modifierDepth": 2,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 2761,
									"end": 2788,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2761,
									"end": 2788,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 2761,
									"end": 2788,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 2815,
									"end": 2819,
									"modifierDepth": 2,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 2798,
									"end": 2821,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2798,
									"end": 2821,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2798,
									"end": 2821,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 2798,
									"end": 2821,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2798,
									"end": 2821,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2798,
									"end": 2821,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 2798,
									"end": 2828,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2798,
									"end": 2828,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 2798,
									"end": 2828,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2798,
									"end": 2828,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 2798,
									"end": 2828,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2798,
									"end": 2828,
									"modifierDepth": 2,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 2798,
									"end": 2828,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2798,
									"end": 2828,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1203,
									"end": 11032,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "56"
								},
								{
									"begin": 1203,
									"end": 11032,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 5
								},
								{
									"begin": 719,
									"end": 729,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 640,
									"end": 736,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2426,
									"end": 2613,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 2426,
									"end": 2613,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "AND",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "PUSH",
									"source": 1,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2499,
									"end": 2515,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2499,
									"end": 2515,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 2489,
									"end": 2613,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2426,
									"end": 2613,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2426,
									"end": 2613,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8520,
									"end": 9055,
									"name": "tag",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 8520,
									"end": 9055,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 8603,
									"end": 8624,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 8603,
									"end": 8624,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 3125,
									"end": 3127,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 3107,
									"end": 3128,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3164,
									"end": 3166,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 3144,
									"end": 3162,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 3144,
									"end": 3162,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3144,
									"end": 3162,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3137,
									"end": 3167,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3203,
									"end": 3236,
									"name": "PUSH",
									"source": 7,
									"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
								},
								{
									"begin": 3183,
									"end": 3201,
									"name": "PUSH",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 3183,
									"end": 3201,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3183,
									"end": 3201,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3176,
									"end": 3237,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3254,
									"end": 3272,
									"name": "PUSH",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 3254,
									"end": 3272,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "tag",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 8747,
									"end": 8753,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 8731,
									"end": 8743,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 8731,
									"end": 8743,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 8731,
									"end": 8753,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "tag",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 8899,
									"end": 8908,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 8899,
									"end": 8927,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 8899,
									"end": 8927,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 8899,
									"end": 8927,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 8899,
									"end": 8927,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 8899,
									"end": 8927,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8899,
									"end": 8927,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 8952,
									"end": 8989,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 3656,
									"end": 3681,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3656,
									"end": 3681,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3656,
									"end": 3681,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 8952,
									"end": 8989,
									"name": "PUSH",
									"source": 2,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 8952,
									"end": 8989,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 3629,
									"end": 3647,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8952,
									"end": 8989,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 8952,
									"end": 8989,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 8952,
									"end": 8989,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 8952,
									"end": 8989,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 8952,
									"end": 8989,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 8952,
									"end": 8989,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8952,
									"end": 8989,
									"name": "LOG3",
									"source": 2
								},
								{
									"begin": 8520,
									"end": 9055,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 8520,
									"end": 9055,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 8520,
									"end": 9055,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 9596,
									"end": 9796,
									"name": "tag",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 9596,
									"end": 9796,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9685,
									"end": 9698,
									"name": "PUSH",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 9685,
									"end": 9698,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 9685,
									"end": 9698,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 9685,
									"end": 9698,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 9685,
									"end": 9698,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 9685,
									"end": 9698,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 9685,
									"end": 9698,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 9685,
									"end": 9698,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 9685,
									"end": 9698,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 9685,
									"end": 9698,
									"name": "AND",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 9668,
									"end": 9707,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 9668,
									"end": 9707,
									"name": "PUSH",
									"source": 6,
									"value": "C45A0155"
								},
								{
									"begin": 9668,
									"end": 9709,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 9668,
									"end": 9709,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 9668,
									"end": 9709,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 9668,
									"end": 9709,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFF"
								},
								{
									"begin": 9668,
									"end": 9709,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 9668,
									"end": 9709,
									"name": "PUSH",
									"source": 6,
									"value": "E0"
								},
								{
									"begin": 9668,
									"end": 9709,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 9668,
									"end": 9709,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 9668,
									"end": 9709,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 9668,
									"end": 9709,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 9668,
									"end": 9709,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 9668,
									"end": 9709,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 9668,
									"end": 9709,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 9668,
									"end": 9709,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 9668,
									"end": 9709,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 9668,
									"end": 9709,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 9668,
									"end": 9709,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 9668,
									"end": 9709,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 9668,
									"end": 9709,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 9668,
									"end": 9709,
									"name": "GAS",
									"source": 6
								},
								{
									"begin": 9668,
									"end": 9709,
									"name": "STATICCALL",
									"source": 6
								},
								{
									"begin": 9668,
									"end": 9709,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 9668,
									"end": 9709,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 9668,
									"end": 9709,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 9668,
									"end": 9709,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 9668,
									"end": 9709,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 9668,
									"end": 9709,
									"name": "RETURNDATASIZE",
									"source": 6
								},
								{
									"begin": 9668,
									"end": 9709,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 9668,
									"end": 9709,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 9668,
									"end": 9709,
									"name": "RETURNDATACOPY",
									"source": 6
								},
								{
									"begin": 9668,
									"end": 9709,
									"name": "RETURNDATASIZE",
									"source": 6
								},
								{
									"begin": 9668,
									"end": 9709,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 9668,
									"end": 9709,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 9668,
									"end": 9709,
									"name": "tag",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 9668,
									"end": 9709,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9668,
									"end": 9709,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9668,
									"end": 9709,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9668,
									"end": 9709,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9668,
									"end": 9709,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9668,
									"end": 9709,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 9668,
									"end": 9709,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 9668,
									"end": 9709,
									"name": "RETURNDATASIZE",
									"source": 6
								},
								{
									"begin": 9668,
									"end": 9709,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 9668,
									"end": 9709,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 9668,
									"end": 9709,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 9668,
									"end": 9709,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 9668,
									"end": 9709,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 9668,
									"end": 9709,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 9668,
									"end": 9709,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 9668,
									"end": 9709,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 9668,
									"end": 9709,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 9668,
									"end": 9709,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 9668,
									"end": 9709,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 9668,
									"end": 9709,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9668,
									"end": 9709,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 9668,
									"end": 9709,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 9668,
									"end": 9709,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 9668,
									"end": 9709,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 9668,
									"end": 9709,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 9668,
									"end": 9709,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 9668,
									"end": 9709,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 9668,
									"end": 9709,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9668,
									"end": 9709,
									"name": "tag",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 9668,
									"end": 9709,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 9650,
									"end": 9734,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 9650,
									"end": 9734,
									"name": "PUSH",
									"source": 6,
									"value": "C9C65396"
								},
								{
									"begin": 9743,
									"end": 9747,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 9767,
									"end": 9780,
									"name": "PUSH",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 9767,
									"end": 9780,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 9767,
									"end": 9780,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 9767,
									"end": 9780,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 9767,
									"end": 9780,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 9767,
									"end": 9780,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 9767,
									"end": 9780,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 9767,
									"end": 9780,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 9767,
									"end": 9780,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 9767,
									"end": 9780,
									"name": "AND",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 9750,
									"end": 9786,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 9750,
									"end": 9786,
									"name": "PUSH",
									"source": 6,
									"value": "AD5C4648"
								},
								{
									"begin": 9750,
									"end": 9788,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 9750,
									"end": 9788,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 9750,
									"end": 9788,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 9750,
									"end": 9788,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFF"
								},
								{
									"begin": 9750,
									"end": 9788,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 9750,
									"end": 9788,
									"name": "PUSH",
									"source": 6,
									"value": "E0"
								},
								{
									"begin": 9750,
									"end": 9788,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 9750,
									"end": 9788,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 9750,
									"end": 9788,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 9750,
									"end": 9788,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 9750,
									"end": 9788,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 9750,
									"end": 9788,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 9750,
									"end": 9788,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 9750,
									"end": 9788,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 9750,
									"end": 9788,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 9750,
									"end": 9788,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 9750,
									"end": 9788,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 9750,
									"end": 9788,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 9750,
									"end": 9788,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 9750,
									"end": 9788,
									"name": "GAS",
									"source": 6
								},
								{
									"begin": 9750,
									"end": 9788,
									"name": "STATICCALL",
									"source": 6
								},
								{
									"begin": 9750,
									"end": 9788,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 9750,
									"end": 9788,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 9750,
									"end": 9788,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 9750,
									"end": 9788,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 9750,
									"end": 9788,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 9750,
									"end": 9788,
									"name": "RETURNDATASIZE",
									"source": 6
								},
								{
									"begin": 9750,
									"end": 9788,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 9750,
									"end": 9788,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 9750,
									"end": 9788,
									"name": "RETURNDATACOPY",
									"source": 6
								},
								{
									"begin": 9750,
									"end": 9788,
									"name": "RETURNDATASIZE",
									"source": 6
								},
								{
									"begin": 9750,
									"end": 9788,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 9750,
									"end": 9788,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 9750,
									"end": 9788,
									"name": "tag",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 9750,
									"end": 9788,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9750,
									"end": 9788,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9750,
									"end": 9788,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9750,
									"end": 9788,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9750,
									"end": 9788,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9750,
									"end": 9788,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 9750,
									"end": 9788,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 9750,
									"end": 9788,
									"name": "RETURNDATASIZE",
									"source": 6
								},
								{
									"begin": 9750,
									"end": 9788,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 9750,
									"end": 9788,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 9750,
									"end": 9788,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 9750,
									"end": 9788,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 9750,
									"end": 9788,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 9750,
									"end": 9788,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 9750,
									"end": 9788,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 9750,
									"end": 9788,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 9750,
									"end": 9788,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 9750,
									"end": 9788,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 9750,
									"end": 9788,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 9750,
									"end": 9788,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9750,
									"end": 9788,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 9750,
									"end": 9788,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 9750,
									"end": 9788,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 9750,
									"end": 9788,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 9750,
									"end": 9788,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 9750,
									"end": 9788,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 9750,
									"end": 9788,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 9750,
									"end": 9788,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9750,
									"end": 9788,
									"name": "tag",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 9750,
									"end": 9788,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9650,
									"end": 9789,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 9650,
									"end": 9789,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 9650,
									"end": 9789,
									"name": "PUSH",
									"source": 6,
									"value": "E0"
								},
								{
									"begin": 9650,
									"end": 9789,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 9650,
									"end": 9789,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 9650,
									"end": 9789,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 9650,
									"end": 9789,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 9650,
									"end": 9789,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 9650,
									"end": 9789,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 4217,
									"end": 4232,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 4217,
									"end": 4232,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4217,
									"end": 4232,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 9650,
									"end": 9789,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 9650,
									"end": 9789,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 9650,
									"end": 9789,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4199,
									"end": 4233,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4269,
									"end": 4284,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4269,
									"end": 4284,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 4249,
									"end": 4267,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 4249,
									"end": 4267,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4249,
									"end": 4267,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4242,
									"end": 4285,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4134,
									"end": 4152,
									"name": "PUSH",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 4134,
									"end": 4152,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9650,
									"end": 9789,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 9650,
									"end": 9789,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 9650,
									"end": 9789,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 9650,
									"end": 9789,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 9650,
									"end": 9789,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 9650,
									"end": 9789,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 9650,
									"end": 9789,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 9650,
									"end": 9789,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 9650,
									"end": 9789,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 9650,
									"end": 9789,
									"name": "GAS",
									"source": 6
								},
								{
									"begin": 9650,
									"end": 9789,
									"name": "CALL",
									"source": 6
								},
								{
									"begin": 9650,
									"end": 9789,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 9650,
									"end": 9789,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 9650,
									"end": 9789,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 9650,
									"end": 9789,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 9650,
									"end": 9789,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 9650,
									"end": 9789,
									"name": "RETURNDATASIZE",
									"source": 6
								},
								{
									"begin": 9650,
									"end": 9789,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 9650,
									"end": 9789,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 9650,
									"end": 9789,
									"name": "RETURNDATACOPY",
									"source": 6
								},
								{
									"begin": 9650,
									"end": 9789,
									"name": "RETURNDATASIZE",
									"source": 6
								},
								{
									"begin": 9650,
									"end": 9789,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 9650,
									"end": 9789,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 9650,
									"end": 9789,
									"name": "tag",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 9650,
									"end": 9789,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9650,
									"end": 9789,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9650,
									"end": 9789,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9650,
									"end": 9789,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9650,
									"end": 9789,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9650,
									"end": 9789,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 9650,
									"end": 9789,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 9650,
									"end": 9789,
									"name": "RETURNDATASIZE",
									"source": 6
								},
								{
									"begin": 9650,
									"end": 9789,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 9650,
									"end": 9789,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 9650,
									"end": 9789,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 9650,
									"end": 9789,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 9650,
									"end": 9789,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 9650,
									"end": 9789,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 9650,
									"end": 9789,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 9650,
									"end": 9789,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 9650,
									"end": 9789,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 9650,
									"end": 9789,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 9650,
									"end": 9789,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 9650,
									"end": 9789,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9650,
									"end": 9789,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 9650,
									"end": 9789,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 9650,
									"end": 9789,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 9650,
									"end": 9789,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "48"
								},
								{
									"begin": 9650,
									"end": 9789,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 9650,
									"end": 9789,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 9650,
									"end": 9789,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 9650,
									"end": 9789,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9650,
									"end": 9789,
									"name": "tag",
									"source": 6,
									"value": "48"
								},
								{
									"begin": 9650,
									"end": 9789,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9636,
									"end": 9647,
									"name": "PUSH",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 9636,
									"end": 9789,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 9636,
									"end": 9789,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 9636,
									"end": 9789,
									"name": "AND",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 9636,
									"end": 9789,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 9636,
									"end": 9789,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 9636,
									"end": 9789,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 9636,
									"end": 9789,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 9636,
									"end": 9789,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 9636,
									"end": 9789,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 9636,
									"end": 9789,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 9636,
									"end": 9789,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 9636,
									"end": 9789,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 9636,
									"end": 9789,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 9596,
									"end": 9796,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 12073,
									"end": 12164,
									"name": "tag",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 12073,
									"end": 12164,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 12073,
									"end": 12164,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 12073,
									"end": 12164,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 12073,
									"end": 12164,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 12073,
									"end": 12164,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 14,
									"end": 231,
									"name": "tag",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 14,
									"end": 231,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 54,
									"end": 55,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 80,
									"end": 81,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 70,
									"end": 202,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 70,
									"end": 202,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 124,
									"end": 134,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B71"
								},
								{
									"begin": 119,
									"end": 122,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 115,
									"end": 135,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 112,
									"end": 113,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 105,
									"end": 136,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 159,
									"end": 163,
									"name": "PUSH",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 156,
									"end": 157,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 149,
									"end": 164,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 187,
									"end": 191,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 184,
									"end": 185,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 177,
									"end": 192,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 70,
									"end": 202,
									"name": "tag",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 70,
									"end": 202,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 216,
									"end": 225,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 216,
									"end": 225,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 14,
									"end": 231,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 236,
									"end": 363,
									"name": "tag",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 236,
									"end": 363,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 297,
									"end": 307,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B71"
								},
								{
									"begin": 292,
									"end": 295,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 288,
									"end": 308,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 285,
									"end": 286,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 278,
									"end": 309,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 328,
									"end": 332,
									"name": "PUSH",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 325,
									"end": 326,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 318,
									"end": 333,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 352,
									"end": 356,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 349,
									"end": 350,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 342,
									"end": 357,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 368,
									"end": 748,
									"name": "tag",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 368,
									"end": 748,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 447,
									"end": 448,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 443,
									"end": 455,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 443,
									"end": 455,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 443,
									"end": 455,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 443,
									"end": 455,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 490,
									"end": 502,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 490,
									"end": 502,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 490,
									"end": 502,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 511,
									"end": 572,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 511,
									"end": 572,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 565,
									"end": 569,
									"name": "PUSH",
									"source": 7,
									"value": "7F"
								},
								{
									"begin": 557,
									"end": 563,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 553,
									"end": 570,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 543,
									"end": 570,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 543,
									"end": 570,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 511,
									"end": 572,
									"name": "tag",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 511,
									"end": 572,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 618,
									"end": 620,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 610,
									"end": 616,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 607,
									"end": 621,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 587,
									"end": 605,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 584,
									"end": 622,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 581,
									"end": 742,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 581,
									"end": 742,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 664,
									"end": 674,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B71"
								},
								{
									"begin": 659,
									"end": 662,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 655,
									"end": 675,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 652,
									"end": 653,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 645,
									"end": 676,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 699,
									"end": 703,
									"name": "PUSH",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 696,
									"end": 697,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 689,
									"end": 704,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 727,
									"end": 731,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 724,
									"end": 725,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 717,
									"end": 732,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 581,
									"end": 742,
									"name": "tag",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 581,
									"end": 742,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 581,
									"end": 742,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 368,
									"end": 748,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 368,
									"end": 748,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 368,
									"end": 748,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 368,
									"end": 748,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 879,
									"end": 1397,
									"name": "tag",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 879,
									"end": 1397,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 981,
									"end": 983,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 976,
									"end": 979,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 973,
									"end": 984,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 970,
									"end": 1391,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 970,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 970,
									"end": 1391,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1017,
									"end": 1022,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1014,
									"end": 1015,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1007,
									"end": 1023,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1061,
									"end": 1065,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1058,
									"end": 1059,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1048,
									"end": 1066,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 1131,
									"end": 1133,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 1119,
									"end": 1129,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1115,
									"end": 1134,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1112,
									"end": 1113,
									"name": "PUSH",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 1108,
									"end": 1135,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 1102,
									"end": 1106,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1098,
									"end": 1136,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1167,
									"end": 1171,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1155,
									"end": 1165,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1152,
									"end": 1172,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 1149,
									"end": 1196,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1149,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 1149,
									"end": 1196,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1190,
									"end": 1194,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1149,
									"end": 1196,
									"name": "tag",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 1149,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1245,
									"end": 1247,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 1240,
									"end": 1243,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1236,
									"end": 1248,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1233,
									"end": 1234,
									"name": "PUSH",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 1229,
									"end": 1249,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 1223,
									"end": 1227,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1219,
									"end": 1250,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1209,
									"end": 1250,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1209,
									"end": 1250,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1300,
									"end": 1381,
									"name": "tag",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 1300,
									"end": 1381,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1318,
									"end": 1320,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1311,
									"end": 1316,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1308,
									"end": 1321,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 1300,
									"end": 1381,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1300,
									"end": 1381,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 1300,
									"end": 1381,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1377,
									"end": 1378,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1363,
									"end": 1379,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1363,
									"end": 1379,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1344,
									"end": 1345,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1333,
									"end": 1346,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1300,
									"end": 1381,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 1300,
									"end": 1381,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1300,
									"end": 1381,
									"name": "tag",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 1300,
									"end": 1381,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1304,
									"end": 1307,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1304,
									"end": 1307,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 879,
									"end": 1397,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 879,
									"end": 1397,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 879,
									"end": 1397,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 879,
									"end": 1397,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1573,
									"end": 2918,
									"name": "tag",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 1573,
									"end": 2918,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1693,
									"end": 1703,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1693,
									"end": 1703,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1715,
									"end": 1745,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1715,
									"end": 1745,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 1712,
									"end": 1768,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1712,
									"end": 1768,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 1712,
									"end": 1768,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1748,
									"end": 1766,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 1748,
									"end": 1766,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 1748,
									"end": 1766,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1748,
									"end": 1766,
									"name": "tag",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 1748,
									"end": 1766,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1777,
									"end": 1874,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "74"
								},
								{
									"begin": 1867,
									"end": 1873,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1827,
									"end": 1865,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 1859,
									"end": 1863,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1853,
									"end": 1864,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 1827,
									"end": 1865,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 1827,
									"end": 1865,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1827,
									"end": 1865,
									"name": "tag",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 1827,
									"end": 1865,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1821,
									"end": 1825,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1777,
									"end": 1874,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 1777,
									"end": 1874,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1777,
									"end": 1874,
									"name": "tag",
									"source": 7,
									"value": "74"
								},
								{
									"begin": 1777,
									"end": 1874,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1929,
									"end": 1933,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1929,
									"end": 1933,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1986,
									"end": 1988,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 1975,
									"end": 1989,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1975,
									"end": 1989,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 2003,
									"end": 2004,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1998,
									"end": 2661,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1998,
									"end": 2661,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 1998,
									"end": 2661,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 1998,
									"end": 2661,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2705,
									"end": 2706,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2722,
									"end": 2728,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2719,
									"end": 2808,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2719,
									"end": 2808,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "78"
								},
								{
									"begin": 2719,
									"end": 2808,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2774,
									"end": 2793,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 2774,
									"end": 2793,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2774,
									"end": 2793,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2768,
									"end": 2794,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 2719,
									"end": 2808,
									"name": "tag",
									"source": 7,
									"value": "78"
								},
								{
									"begin": 2719,
									"end": 2808,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1530,
									"end": 1531,
									"name": "PUSH",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 1526,
									"end": 1537,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1526,
									"end": 1537,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1526,
									"end": 1537,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 1522,
									"end": 1546,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 1518,
									"end": 1547,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 1508,
									"end": 1548,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1554,
									"end": 1555,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1550,
									"end": 1561,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1550,
									"end": 1561,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1550,
									"end": 1561,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 1505,
									"end": 1562,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 2821,
									"end": 2902,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 2821,
									"end": 2902,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1968,
									"end": 2912,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 1968,
									"end": 2912,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1998,
									"end": 2661,
									"name": "tag",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 1998,
									"end": 2661,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 826,
									"end": 827,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 819,
									"end": 833,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 819,
									"end": 833,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 819,
									"end": 833,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 863,
									"end": 867,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 850,
									"end": 868,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 850,
									"end": 868,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2034,
									"end": 2054,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 2034,
									"end": 2054,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2034,
									"end": 2054,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2152,
									"end": 2388,
									"name": "tag",
									"source": 7,
									"value": "81"
								},
								{
									"begin": 2152,
									"end": 2388,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2166,
									"end": 2173,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2163,
									"end": 2164,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2160,
									"end": 2174,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 2152,
									"end": 2388,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2152,
									"end": 2388,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "83"
								},
								{
									"begin": 2152,
									"end": 2388,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2255,
									"end": 2274,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 2255,
									"end": 2274,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 2255,
									"end": 2274,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2249,
									"end": 2275,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 2234,
									"end": 2276,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2234,
									"end": 2276,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 2347,
									"end": 2374,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 2347,
									"end": 2374,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2347,
									"end": 2374,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2347,
									"end": 2374,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 2315,
									"end": 2316,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 2303,
									"end": 2317,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2303,
									"end": 2317,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2303,
									"end": 2317,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2303,
									"end": 2317,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2182,
									"end": 2201,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2182,
									"end": 2201,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2152,
									"end": 2388,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "81"
								},
								{
									"begin": 2152,
									"end": 2388,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2152,
									"end": 2388,
									"name": "tag",
									"source": 7,
									"value": "83"
								},
								{
									"begin": 2152,
									"end": 2388,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2156,
									"end": 2159,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2416,
									"end": 2422,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 2407,
									"end": 2414,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2404,
									"end": 2423,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 2401,
									"end": 2602,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2401,
									"end": 2602,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "84"
								},
								{
									"begin": 2401,
									"end": 2602,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2477,
									"end": 2496,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 2477,
									"end": 2496,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 2477,
									"end": 2496,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2471,
									"end": 2497,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2560,
									"end": 2561,
									"name": "PUSH",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 2556,
									"end": 2570,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 2556,
									"end": 2570,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2556,
									"end": 2570,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 2572,
									"end": 2575,
									"name": "PUSH",
									"source": 7,
									"value": "F8"
								},
								{
									"begin": 2552,
									"end": 2576,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2548,
									"end": 2585,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 2544,
									"end": 2586,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 2529,
									"end": 2587,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2514,
									"end": 2588,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2514,
									"end": 2588,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 2401,
									"end": 2602,
									"name": "tag",
									"source": 7,
									"value": "84"
								},
								{
									"begin": 2401,
									"end": 2602,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2401,
									"end": 2602,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2401,
									"end": 2602,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2648,
									"end": 2649,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 2639,
									"end": 2645,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2636,
									"end": 2637,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 2632,
									"end": 2646,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 2628,
									"end": 2650,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2622,
									"end": 2626,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 2615,
									"end": 2651,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1968,
									"end": 2912,
									"name": "tag",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 1968,
									"end": 2912,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1968,
									"end": 2912,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1968,
									"end": 2912,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1968,
									"end": 2912,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1968,
									"end": 2912,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1573,
									"end": 2918,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1573,
									"end": 2918,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1573,
									"end": 2918,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3283,
									"end": 3505,
									"name": "tag",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 3283,
									"end": 3505,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3348,
									"end": 3357,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3348,
									"end": 3357,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3348,
									"end": 3357,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3369,
									"end": 3379,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3369,
									"end": 3379,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3369,
									"end": 3379,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 3366,
									"end": 3499,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3366,
									"end": 3499,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "87"
								},
								{
									"begin": 3366,
									"end": 3499,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3421,
									"end": 3431,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B71"
								},
								{
									"begin": 3416,
									"end": 3419,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 3412,
									"end": 3432,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 3409,
									"end": 3410,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3402,
									"end": 3433,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3456,
									"end": 3460,
									"name": "PUSH",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 3453,
									"end": 3454,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 3446,
									"end": 3461,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3484,
									"end": 3488,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 3481,
									"end": 3482,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3474,
									"end": 3489,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 3366,
									"end": 3499,
									"name": "tag",
									"source": 7,
									"value": "87"
								},
								{
									"begin": 3366,
									"end": 3499,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3283,
									"end": 3505,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3283,
									"end": 3505,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3283,
									"end": 3505,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3283,
									"end": 3505,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3283,
									"end": 3505,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3692,
									"end": 3982,
									"name": "tag",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 3692,
									"end": 3982,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3762,
									"end": 3768,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3815,
									"end": 3817,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 3803,
									"end": 3812,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3794,
									"end": 3801,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3790,
									"end": 3813,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 3786,
									"end": 3818,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 3783,
									"end": 3835,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3783,
									"end": 3835,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "90"
								},
								{
									"begin": 3783,
									"end": 3835,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3831,
									"end": 3832,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3828,
									"end": 3829,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3821,
									"end": 3833,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 3783,
									"end": 3835,
									"name": "tag",
									"source": 7,
									"value": "90"
								},
								{
									"begin": 3783,
									"end": 3835,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3857,
									"end": 3873,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3857,
									"end": 3873,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3902,
									"end": 3933,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3902,
									"end": 3933,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3892,
									"end": 3934,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3892,
									"end": 3934,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 3882,
									"end": 3952,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "91"
								},
								{
									"begin": 3882,
									"end": 3952,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3948,
									"end": 3949,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3945,
									"end": 3946,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3938,
									"end": 3950,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 3882,
									"end": 3952,
									"name": "tag",
									"source": 7,
									"value": "91"
								},
								{
									"begin": 3882,
									"end": 3952,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3971,
									"end": 3976,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 3692,
									"end": 3982,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3692,
									"end": 3982,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3987,
									"end": 4291,
									"name": "tag",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 3987,
									"end": 4291,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1203,
									"end": 11032,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1203,
									"end": 11032,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1203,
									"end": 11032,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1203,
									"end": 11032,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1203,
									"end": 11032,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 1203,
									"end": 11032,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1203,
									"end": 11032,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122058ff80e09a44ac810eca1f7ec706d8a9e4d48933c73aacb957ac449dba91ca2564736f6c63430008190033",
									".code": [
										{
											"begin": 1203,
											"end": 11032,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "PUSH",
											"source": 6,
											"value": "9491F94D"
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "PUSH",
											"source": 6,
											"value": "AD5DFF73"
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "PUSH",
											"source": 6,
											"value": "D8D61C40"
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "PUSH",
											"source": 6,
											"value": "D8D61C40"
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "PUSH",
											"source": 6,
											"value": "DD62ED3E"
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "PUSH",
											"source": 6,
											"value": "F2FDE38B"
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "PUSH",
											"source": 6,
											"value": "FE0BB982"
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "PUSH",
											"source": 6,
											"value": "FE6B751E"
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "tag",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "PUSH",
											"source": 6,
											"value": "AD5DFF73"
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "PUSH",
											"source": 6,
											"value": "C0D78655"
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "PUSH",
											"source": 6,
											"value": "C531B108"
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "PUSH",
											"source": 6,
											"value": "C95457FF"
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "tag",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "PUSH",
											"source": 6,
											"value": "9FDE54F5"
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "PUSH",
											"source": 6,
											"value": "9FDE54F5"
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "PUSH",
											"source": 6,
											"value": "A457C2D7"
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "PUSH",
											"source": 6,
											"value": "A8B08982"
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "tag",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "PUSH",
											"source": 6,
											"value": "9491F94D"
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "PUSH",
											"source": 6,
											"value": "95D89B41"
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "PUSH",
											"source": 6,
											"value": "960BFE04"
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "PUSH",
											"source": 6,
											"value": "9D82190F"
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "tag",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "PUSH",
											"source": 6,
											"value": "333F4B3D"
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "PUSH",
											"source": 6,
											"value": "715018A6"
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "PUSH",
											"source": 6,
											"value": "715018A6"
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "PUSH",
											"source": 6,
											"value": "7773168F"
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "PUSH",
											"source": 6,
											"value": "787A08A6"
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "PUSH",
											"source": 6,
											"value": "8F9A55C0"
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "tag",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "PUSH",
											"source": 6,
											"value": "333F4B3D"
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "PUSH",
											"source": 6,
											"value": "39509351"
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "PUSH",
											"source": 6,
											"value": "599CA397"
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "tag",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "PUSH",
											"source": 6,
											"value": "18160DDD"
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "PUSH",
											"source": 6,
											"value": "18160DDD"
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "PUSH",
											"source": 6,
											"value": "313CE567"
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "PUSH",
											"source": 6,
											"value": "3268CC56"
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "tag",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "PUSH",
											"source": 6,
											"value": "445B667"
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "PUSH",
											"source": 6,
											"value": "6FDDE03"
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "PUSH",
											"source": 6,
											"value": "95EA7B3"
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "PUSH",
											"source": 6,
											"value": "1569D181"
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 11032,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1639,
											"end": 1689,
											"name": "tag",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 1639,
											"end": 1689,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1639,
											"end": 1689,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1639,
											"end": 1689,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1639,
											"end": 1689,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1639,
											"end": 1689,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 1639,
											"end": 1689,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1639,
											"end": 1689,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1639,
											"end": 1689,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1639,
											"end": 1689,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1639,
											"end": 1689,
											"name": "tag",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 1639,
											"end": 1689,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1639,
											"end": 1689,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1639,
											"end": 1689,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 1639,
											"end": 1689,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 1639,
											"end": 1689,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1639,
											"end": 1689,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1639,
											"end": 1689,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1639,
											"end": 1689,
											"name": "tag",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 1639,
											"end": 1689,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1639,
											"end": 1689,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1639,
											"end": 1689,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1639,
											"end": 1689,
											"name": "tag",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 1639,
											"end": 1689,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1639,
											"end": 1689,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1639,
											"end": 1689,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1639,
											"end": 1689,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1639,
											"end": 1689,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1639,
											"end": 1689,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1639,
											"end": 1689,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1639,
											"end": 1689,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 2158,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2158,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 4444,
											"end": 4641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 4444,
											"end": 4641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1240,
											"end": 1254,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1240,
											"end": 1254,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1233,
											"end": 1255,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1215,
											"end": 1256,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1215,
											"end": 1256,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1203,
											"end": 1205,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1188,
											"end": 1206,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1075,
											"end": 1262,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8699,
											"end": 8992,
											"name": "tag",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 8699,
											"end": 8992,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8699,
											"end": 8992,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 8699,
											"end": 8992,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8699,
											"end": 8992,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8699,
											"end": 8992,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 8699,
											"end": 8992,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8699,
											"end": 8992,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8699,
											"end": 8992,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8699,
											"end": 8992,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8699,
											"end": 8992,
											"name": "tag",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 8699,
											"end": 8992,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8699,
											"end": 8992,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 8699,
											"end": 8992,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 8699,
											"end": 8992,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 8699,
											"end": 8992,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8699,
											"end": 8992,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 8699,
											"end": 8992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8699,
											"end": 8992,
											"name": "tag",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 8699,
											"end": 8992,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8699,
											"end": 8992,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 8699,
											"end": 8992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8699,
											"end": 8992,
											"name": "tag",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 8699,
											"end": 8992,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8699,
											"end": 8992,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3342,
											"end": 3354,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3342,
											"end": 3354,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 5203,
											"end": 5459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 5203,
											"end": 5459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3186,
											"end": 3188,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2440,
											"end": 2476,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2440,
											"end": 2476,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2428,
											"end": 2430,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2413,
											"end": 2431,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 2298,
											"end": 2482,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2164,
											"end": 2192,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 2164,
											"end": 2192,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2164,
											"end": 2192,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 2164,
											"end": 2192,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2164,
											"end": 2192,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2164,
											"end": 2192,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 2164,
											"end": 2192,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2164,
											"end": 2192,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2164,
											"end": 2192,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2164,
											"end": 2192,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2164,
											"end": 2192,
											"name": "tag",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 2164,
											"end": 2192,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2164,
											"end": 2192,
											"name": "PUSH",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 2164,
											"end": 2192,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2164,
											"end": 2192,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 2164,
											"end": 2192,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2164,
											"end": 2192,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2164,
											"end": 2192,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2164,
											"end": 2192,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2164,
											"end": 2192,
											"name": "tag",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 2164,
											"end": 2192,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2164,
											"end": 2192,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2164,
											"end": 2192,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2651,
											"end": 2683,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2651,
											"end": 2683,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2651,
											"end": 2683,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2633,
											"end": 2684,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2633,
											"end": 2684,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2621,
											"end": 2623,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2606,
											"end": 2624,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2164,
											"end": 2192,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 2487,
											"end": 2690,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1563,
											"end": 1587,
											"name": "tag",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 1563,
											"end": 1587,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 1587,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 1587,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 1587,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 1587,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 1563,
											"end": 1587,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 1587,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1563,
											"end": 1587,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 1587,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 1587,
											"name": "tag",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 1563,
											"end": 1587,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1563,
											"end": 1587,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 1563,
											"end": 1587,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 1587,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 1563,
											"end": 1587,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 1587,
											"name": "PUSH",
											"source": 6,
											"value": "FFFF"
										},
										{
											"begin": 1563,
											"end": 1587,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 1587,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 1587,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 1587,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 1587,
											"name": "PUSH",
											"source": 6,
											"value": "10000"
										},
										{
											"begin": 1563,
											"end": 1587,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 1587,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 1587,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 1587,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 1587,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1563,
											"end": 1587,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 1587,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 1587,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 1587,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 1587,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "30"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1563,
											"end": 1587,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 1587,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 1587,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 1587,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 1587,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 1587,
											"name": "tag",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 1563,
											"end": 1587,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 1587,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1563,
											"end": 1587,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 1587,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2928,
											"end": 2934,
											"name": "PUSH",
											"source": 7,
											"value": "FFFF"
										},
										{
											"begin": 2961,
											"end": 2976,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 2961,
											"end": 2976,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2961,
											"end": 2976,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2943,
											"end": 2977,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2943,
											"end": 2977,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3013,
											"end": 3028,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3013,
											"end": 3028,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3013,
											"end": 3028,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3008,
											"end": 3010,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2993,
											"end": 3011,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2993,
											"end": 3011,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2986,
											"end": 3029,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3065,
											"end": 3080,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3065,
											"end": 3080,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3065,
											"end": 3080,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3045,
											"end": 3063,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3045,
											"end": 3063,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3045,
											"end": 3063,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3038,
											"end": 3081,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3038,
											"end": 3081,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3038,
											"end": 3081,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3038,
											"end": 3081,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3117,
											"end": 3132,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3117,
											"end": 3132,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3117,
											"end": 3132,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3112,
											"end": 3114,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 3097,
											"end": 3115,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3097,
											"end": 3115,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3090,
											"end": 3133,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2905,
											"end": 2908,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 2890,
											"end": 2909,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1563,
											"end": 1587,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 2695,
											"end": 3139,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 5854,
											"end": 6088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 5854,
											"end": 6088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1346,
											"end": 1386,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 1346,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1346,
											"end": 1386,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1346,
											"end": 1386,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1346,
											"end": 1386,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1346,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 1346,
											"end": 1386,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1346,
											"end": 1386,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1346,
											"end": 1386,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1346,
											"end": 1386,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1346,
											"end": 1386,
											"name": "tag",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 1346,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1346,
											"end": 1386,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1346,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 1346,
											"end": 1386,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 1346,
											"end": 1386,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1346,
											"end": 1386,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1346,
											"end": 1386,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 3419,
											"end": 3544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3493,
											"end": 3500,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 1824,
											"end": 1925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8119,
											"end": 8527,
											"name": "tag",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 8119,
											"end": 8527,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8119,
											"end": 8527,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 8119,
											"end": 8527,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8119,
											"end": 8527,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8119,
											"end": 8527,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 8119,
											"end": 8527,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8119,
											"end": 8527,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8119,
											"end": 8527,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8119,
											"end": 8527,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8119,
											"end": 8527,
											"name": "tag",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 8119,
											"end": 8527,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8119,
											"end": 8527,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8119,
											"end": 8527,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 8119,
											"end": 8527,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 8119,
											"end": 8527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 1950,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 1920,
											"end": 1950,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 1950,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 1950,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 1950,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 1950,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 1920,
											"end": 1950,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 1950,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1920,
											"end": 1950,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 1950,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 1950,
											"name": "tag",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 1920,
											"end": 1950,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1920,
											"end": 1950,
											"name": "PUSH",
											"source": 6,
											"value": "D"
										},
										{
											"begin": 1920,
											"end": 1950,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 1950,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 1920,
											"end": 1950,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 1950,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 1920,
											"end": 1950,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 1950,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 1950,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 1950,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1920,
											"end": 1950,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 1950,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 1950,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1920,
											"end": 1950,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 1950,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 1950,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 1950,
											"name": "tag",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 1920,
											"end": 1950,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 1950,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1920,
											"end": 1950,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 1950,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3767,
											"end": 3781,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3767,
											"end": 3781,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3760,
											"end": 3782,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3742,
											"end": 3783,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3742,
											"end": 3783,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3831,
											"end": 3841,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3819,
											"end": 3842,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3819,
											"end": 3842,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3819,
											"end": 3842,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3814,
											"end": 3816,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3799,
											"end": 3817,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3799,
											"end": 3817,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3792,
											"end": 3843,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3715,
											"end": 3733,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1920,
											"end": 1950,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 3576,
											"end": 3849,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10661,
											"end": 10794,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 10661,
											"end": 10794,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10661,
											"end": 10794,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 10661,
											"end": 10794,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10661,
											"end": 10794,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10661,
											"end": 10794,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 10661,
											"end": 10794,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10661,
											"end": 10794,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10661,
											"end": 10794,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10661,
											"end": 10794,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 10661,
											"end": 10794,
											"name": "tag",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 10661,
											"end": 10794,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10661,
											"end": 10794,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10661,
											"end": 10794,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 10661,
											"end": 10794,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 10661,
											"end": 10794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7218,
											"end": 7571,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7218,
											"end": 7571,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7218,
											"end": 7571,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 7218,
											"end": 7571,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7218,
											"end": 7571,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7218,
											"end": 7571,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 7218,
											"end": 7571,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7218,
											"end": 7571,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7218,
											"end": 7571,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7218,
											"end": 7571,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7218,
											"end": 7571,
											"name": "tag",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 7218,
											"end": 7571,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7218,
											"end": 7571,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7218,
											"end": 7571,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 7218,
											"end": 7571,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 7218,
											"end": 7571,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "tag",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 2369,
											"end": 2471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8998,
											"end": 9100,
											"name": "tag",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 8998,
											"end": 9100,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8998,
											"end": 9100,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 8998,
											"end": 9100,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8998,
											"end": 9100,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8998,
											"end": 9100,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 8998,
											"end": 9100,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8998,
											"end": 9100,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8998,
											"end": 9100,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8998,
											"end": 9100,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8998,
											"end": 9100,
											"name": "tag",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 8998,
											"end": 9100,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8998,
											"end": 9100,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 8998,
											"end": 9100,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 8998,
											"end": 9100,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 8998,
											"end": 9100,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8998,
											"end": 9100,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 8998,
											"end": 9100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8998,
											"end": 9100,
											"name": "tag",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 8998,
											"end": 9100,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8998,
											"end": 9100,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 8998,
											"end": 9100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7577,
											"end": 8113,
											"name": "tag",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 7577,
											"end": 8113,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7577,
											"end": 8113,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 7577,
											"end": 8113,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7577,
											"end": 8113,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7577,
											"end": 8113,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 7577,
											"end": 8113,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7577,
											"end": 8113,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7577,
											"end": 8113,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7577,
											"end": 8113,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7577,
											"end": 8113,
											"name": "tag",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 7577,
											"end": 8113,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7577,
											"end": 8113,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 7577,
											"end": 8113,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 7577,
											"end": 8113,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 7577,
											"end": 8113,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7577,
											"end": 8113,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 7577,
											"end": 8113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7577,
											"end": 8113,
											"name": "tag",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 7577,
											"end": 8113,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7577,
											"end": 8113,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 7577,
											"end": 8113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7577,
											"end": 8113,
											"name": "tag",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 7577,
											"end": 8113,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7577,
											"end": 8113,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7577,
											"end": 8113,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7577,
											"end": 8113,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4270,
											"end": 4295,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 4270,
											"end": 4295,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4270,
											"end": 4295,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4326,
											"end": 4328,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4311,
											"end": 4329,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4311,
											"end": 4329,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4304,
											"end": 4338,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 4304,
											"end": 4338,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4304,
											"end": 4338,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 4304,
											"end": 4338,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4354,
											"end": 4372,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4354,
											"end": 4372,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4354,
											"end": 4372,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4347,
											"end": 4381,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4412,
											"end": 4414,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 4397,
											"end": 4415,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4397,
											"end": 4415,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4390,
											"end": 4424,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4257,
											"end": 4260,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 4242,
											"end": 4261,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7577,
											"end": 8113,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 4039,
											"end": 4430,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9479,
											"end": 9590,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 9479,
											"end": 9590,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9479,
											"end": 9590,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 9479,
											"end": 9590,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9479,
											"end": 9590,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9479,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 9479,
											"end": 9590,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9479,
											"end": 9590,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9479,
											"end": 9590,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9479,
											"end": 9590,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 9479,
											"end": 9590,
											"name": "tag",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 9479,
											"end": 9590,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9479,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 9479,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 9479,
											"end": 9590,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 9479,
											"end": 9590,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9479,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 9479,
											"end": 9590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9479,
											"end": 9590,
											"name": "tag",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 9479,
											"end": 9590,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9479,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 9479,
											"end": 9590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "tag",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 6575,
											"end": 7002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "tag",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 6575,
											"end": 7002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2198,
											"end": 2224,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 2198,
											"end": 2224,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2198,
											"end": 2224,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 2198,
											"end": 2224,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2198,
											"end": 2224,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2198,
											"end": 2224,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 2198,
											"end": 2224,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2198,
											"end": 2224,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2198,
											"end": 2224,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2198,
											"end": 2224,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2198,
											"end": 2224,
											"name": "tag",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 2198,
											"end": 2224,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2198,
											"end": 2224,
											"name": "PUSH",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 2198,
											"end": 2224,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2198,
											"end": 2224,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 2198,
											"end": 2224,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2198,
											"end": 2224,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2198,
											"end": 2224,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2198,
											"end": 2224,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "tag",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 3740,
											"end": 3929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "tag",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 3740,
											"end": 3929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2321,
											"end": 2361,
											"name": "tag",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 2321,
											"end": 2361,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2321,
											"end": 2361,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 2321,
											"end": 2361,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2321,
											"end": 2361,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2321,
											"end": 2361,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 2321,
											"end": 2361,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2321,
											"end": 2361,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2321,
											"end": 2361,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2321,
											"end": 2361,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2321,
											"end": 2361,
											"name": "tag",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 2321,
											"end": 2361,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2321,
											"end": 2361,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 2321,
											"end": 2361,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 2321,
											"end": 2361,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2321,
											"end": 2361,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2321,
											"end": 2361,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 2321,
											"end": 2361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2321,
											"end": 2361,
											"name": "tag",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 2321,
											"end": 2361,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2321,
											"end": 2361,
											"name": "PUSH",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 2321,
											"end": 2361,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2321,
											"end": 2361,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2321,
											"end": 2361,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2321,
											"end": 2361,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2321,
											"end": 2361,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2321,
											"end": 2361,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2321,
											"end": 2361,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2321,
											"end": 2361,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2321,
											"end": 2361,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2321,
											"end": 2361,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2321,
											"end": 2361,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 2321,
											"end": 2361,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2321,
											"end": 2361,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2321,
											"end": 2361,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8533,
											"end": 8693,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 8533,
											"end": 8693,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8533,
											"end": 8693,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 8533,
											"end": 8693,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8533,
											"end": 8693,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8533,
											"end": 8693,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 8533,
											"end": 8693,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8533,
											"end": 8693,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8533,
											"end": 8693,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8533,
											"end": 8693,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8533,
											"end": 8693,
											"name": "tag",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 8533,
											"end": 8693,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8533,
											"end": 8693,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 8533,
											"end": 8693,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 8533,
											"end": 8693,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 8533,
											"end": 8693,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8533,
											"end": 8693,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 8533,
											"end": 8693,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8533,
											"end": 8693,
											"name": "tag",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 8533,
											"end": 8693,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8533,
											"end": 8693,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 8533,
											"end": 8693,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1729,
											"end": 1758,
											"name": "tag",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 1729,
											"end": 1758,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1729,
											"end": 1758,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1729,
											"end": 1758,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1729,
											"end": 1758,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1729,
											"end": 1758,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 1729,
											"end": 1758,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1729,
											"end": 1758,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1729,
											"end": 1758,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1729,
											"end": 1758,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1729,
											"end": 1758,
											"name": "tag",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 1729,
											"end": 1758,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1729,
											"end": 1758,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1729,
											"end": 1758,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 1729,
											"end": 1758,
											"name": "PUSH",
											"source": 6,
											"value": "B"
										},
										{
											"begin": 1729,
											"end": 1758,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1729,
											"end": 1758,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1729,
											"end": 1758,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2125,
											"end": 2157,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 2125,
											"end": 2157,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2125,
											"end": 2157,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 2125,
											"end": 2157,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2125,
											"end": 2157,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2125,
											"end": 2157,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 2125,
											"end": 2157,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2125,
											"end": 2157,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2125,
											"end": 2157,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2125,
											"end": 2157,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2125,
											"end": 2157,
											"name": "tag",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 2125,
											"end": 2157,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2125,
											"end": 2157,
											"name": "PUSH",
											"source": 6,
											"value": "F"
										},
										{
											"begin": 2125,
											"end": 2157,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2125,
											"end": 2157,
											"name": "PUSH",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 2125,
											"end": 2157,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2125,
											"end": 2157,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 2125,
											"end": 2157,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2125,
											"end": 2157,
											"name": "PUSH",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 2125,
											"end": 2157,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2125,
											"end": 2157,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 2125,
											"end": 2157,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2125,
											"end": 2157,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 2125,
											"end": 2157,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2125,
											"end": 2157,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2125,
											"end": 2157,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2125,
											"end": 2157,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 2125,
											"end": 2157,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2125,
											"end": 2157,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2125,
											"end": 2157,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2125,
											"end": 2157,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2125,
											"end": 2157,
											"name": "PUSH",
											"source": 6,
											"value": "FFFF"
										},
										{
											"begin": 2125,
											"end": 2157,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2125,
											"end": 2157,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2125,
											"end": 2157,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2125,
											"end": 2157,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2125,
											"end": 2157,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2125,
											"end": 2157,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2125,
											"end": 2157,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2125,
											"end": 2157,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2125,
											"end": 2157,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2125,
											"end": 2157,
											"name": "tag",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 2125,
											"end": 2157,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2125,
											"end": 2157,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2125,
											"end": 2157,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2125,
											"end": 2157,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5190,
											"end": 5204,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 5190,
											"end": 5204,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5183,
											"end": 5205,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5165,
											"end": 5206,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5165,
											"end": 5206,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5254,
											"end": 5260,
											"name": "PUSH",
											"source": 7,
											"value": "FFFF"
										},
										{
											"begin": 5242,
											"end": 5261,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5242,
											"end": 5261,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 5242,
											"end": 5261,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5237,
											"end": 5239,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5222,
											"end": 5240,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5222,
											"end": 5240,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5215,
											"end": 5262,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5278,
											"end": 5296,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5278,
											"end": 5296,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5278,
											"end": 5296,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5271,
											"end": 5305,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5271,
											"end": 5305,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5271,
											"end": 5305,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5271,
											"end": 5305,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5348,
											"end": 5362,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5341,
											"end": 5363,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5336,
											"end": 5338,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 5321,
											"end": 5339,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5321,
											"end": 5339,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5314,
											"end": 5364,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5395,
											"end": 5398,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 5380,
											"end": 5399,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5380,
											"end": 5399,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5373,
											"end": 5408,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5152,
											"end": 5155,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 5137,
											"end": 5156,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2125,
											"end": 2157,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 4920,
											"end": 5414,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1695,
											"end": 1723,
											"name": "tag",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 1695,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1695,
											"end": 1723,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1695,
											"end": 1723,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1695,
											"end": 1723,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1695,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 1695,
											"end": 1723,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1695,
											"end": 1723,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1695,
											"end": 1723,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1695,
											"end": 1723,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1695,
											"end": 1723,
											"name": "tag",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 1695,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1695,
											"end": 1723,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1695,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 1695,
											"end": 1723,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 1695,
											"end": 1723,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1695,
											"end": 1723,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1695,
											"end": 1723,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "tag",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 3987,
											"end": 4136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "tag",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 3987,
											"end": 4136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 2074,
											"end": 2272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 2074,
											"end": 2272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9282,
											"end": 9473,
											"name": "tag",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 9282,
											"end": 9473,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9282,
											"end": 9473,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 9282,
											"end": 9473,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9282,
											"end": 9473,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9282,
											"end": 9473,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 9282,
											"end": 9473,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9282,
											"end": 9473,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9282,
											"end": 9473,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9282,
											"end": 9473,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 9282,
											"end": 9473,
											"name": "tag",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 9282,
											"end": 9473,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9282,
											"end": 9473,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 9282,
											"end": 9473,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 9282,
											"end": 9473,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 9282,
											"end": 9473,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9282,
											"end": 9473,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 9282,
											"end": 9473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9282,
											"end": 9473,
											"name": "tag",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 9282,
											"end": 9473,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9282,
											"end": 9473,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 9282,
											"end": 9473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9106,
											"end": 9276,
											"name": "tag",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 9106,
											"end": 9276,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9106,
											"end": 9276,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 9106,
											"end": 9276,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9106,
											"end": 9276,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9106,
											"end": 9276,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 9106,
											"end": 9276,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9106,
											"end": 9276,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9106,
											"end": 9276,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9106,
											"end": 9276,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 9106,
											"end": 9276,
											"name": "tag",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 9106,
											"end": 9276,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9106,
											"end": 9276,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 9106,
											"end": 9276,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 9106,
											"end": 9276,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 9106,
											"end": 9276,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9106,
											"end": 9276,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 9106,
											"end": 9276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9106,
											"end": 9276,
											"name": "tag",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 9106,
											"end": 9276,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9106,
											"end": 9276,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 9106,
											"end": 9276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2212,
											"end": 2225,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2244,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 2237,
											"end": 2249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "212"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 2237,
											"end": 2249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 2,
											"value": "212"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "214"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 2,
											"value": "214"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 2,
											"value": "215"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "215"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4527,
											"end": 4531,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 4581,
											"end": 4613,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4597,
											"end": 4604,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4606,
											"end": 4612,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4581,
											"end": 4589,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 4581,
											"end": 4613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4581,
											"end": 4613,
											"name": "tag",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 4581,
											"end": 4613,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4630,
											"end": 4634,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4623,
											"end": 4634,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4623,
											"end": 4634,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4623,
											"end": 4634,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8699,
											"end": 8992,
											"name": "tag",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 8699,
											"end": 8992,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8835,
											"end": 8839,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "9C4"
										},
										{
											"begin": 8817,
											"end": 8831,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 8825,
											"end": 8831,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8817,
											"end": 8822,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 8817,
											"end": 8831,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 8817,
											"end": 8831,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8817,
											"end": 8831,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 8817,
											"end": 8831,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8817,
											"end": 8839,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFF"
										},
										{
											"begin": 8817,
											"end": 8839,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8817,
											"end": 8839,
											"modifierDepth": 1,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 8817,
											"end": 8839,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8809,
											"end": 8860,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 8809,
											"end": 8860,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8809,
											"end": 8860,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8809,
											"end": 8860,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8809,
											"end": 8860,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8809,
											"end": 8860,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7405,
											"end": 7407,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8809,
											"end": 8860,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8809,
											"end": 8860,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8809,
											"end": 8860,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7387,
											"end": 7408,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7444,
											"end": 7446,
											"name": "PUSH",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 7424,
											"end": 7442,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 7424,
											"end": 7442,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7424,
											"end": 7442,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7417,
											"end": 7447,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "84EAF240E8C2F040E8DEDE40D0D2CED"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "83"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7463,
											"end": 7481,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 7463,
											"end": 7481,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7463,
											"end": 7481,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7456,
											"end": 7502,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7519,
											"end": 7537,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 7519,
											"end": 7537,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8809,
											"end": 8860,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 8809,
											"end": 8860,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8809,
											"end": 8860,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8809,
											"end": 8860,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8809,
											"end": 8860,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8809,
											"end": 8860,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8809,
											"end": 8860,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8809,
											"end": 8860,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8809,
											"end": 8860,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8809,
											"end": 8860,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 8809,
											"end": 8860,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8898,
											"end": 8902,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "9C4"
										},
										{
											"begin": 8878,
											"end": 8894,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 8887,
											"end": 8894,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8878,
											"end": 8884,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8878,
											"end": 8894,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 8878,
											"end": 8894,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8878,
											"end": 8894,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 8878,
											"end": 8894,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8878,
											"end": 8902,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFF"
										},
										{
											"begin": 8878,
											"end": 8902,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8878,
											"end": 8902,
											"modifierDepth": 1,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 8878,
											"end": 8902,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8870,
											"end": 8924,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 8870,
											"end": 8924,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8870,
											"end": 8924,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8870,
											"end": 8924,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8870,
											"end": 8924,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8870,
											"end": 8924,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7750,
											"end": 7752,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8870,
											"end": 8924,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8870,
											"end": 8924,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8870,
											"end": 8924,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7732,
											"end": 7753,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7789,
											"end": 7791,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 7769,
											"end": 7787,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 7769,
											"end": 7787,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7769,
											"end": 7787,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7762,
											"end": 7792,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A6CAD8D840E8C2F040E8DEDE40D0D2CED"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7808,
											"end": 7826,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 7808,
											"end": 7826,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7808,
											"end": 7826,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7801,
											"end": 7848,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7865,
											"end": 7883,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 7865,
											"end": 7883,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8870,
											"end": 8924,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 7548,
											"end": 7889,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8870,
											"end": 8924,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 8870,
											"end": 8924,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8945,
											"end": 8985,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8945,
											"end": 8985,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8945,
											"end": 8985,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8945,
											"end": 8985,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 8945,
											"end": 8985,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8945,
											"end": 8985,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8945,
											"end": 8985,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8945,
											"end": 8985,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8945,
											"end": 8985,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFF"
										},
										{
											"begin": 8945,
											"end": 8985,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 8945,
											"end": 8985,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 8945,
											"end": 8985,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8945,
											"end": 8985,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8945,
											"end": 8985,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8945,
											"end": 8985,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8945,
											"end": 8985,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 8945,
											"end": 8985,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 8945,
											"end": 8985,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8945,
											"end": 8985,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8945,
											"end": 8985,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8945,
											"end": 8985,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8945,
											"end": 8985,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8945,
											"end": 8985,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8945,
											"end": 8985,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8945,
											"end": 8985,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 8945,
											"end": 8985,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 8945,
											"end": 8985,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8945,
											"end": 8985,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8945,
											"end": 8985,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8945,
											"end": 8985,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8945,
											"end": 8985,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8945,
											"end": 8985,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8945,
											"end": 8985,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8945,
											"end": 8985,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8945,
											"end": 8985,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8945,
											"end": 8985,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 8945,
											"end": 8985,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8945,
											"end": 8985,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 8945,
											"end": 8985,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8945,
											"end": 8985,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8945,
											"end": 8985,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8945,
											"end": 8985,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8945,
											"end": 8985,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8945,
											"end": 8985,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8934,
											"end": 8942,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 8934,
											"end": 8985,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8934,
											"end": 8985,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8934,
											"end": 8985,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8934,
											"end": 8985,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8934,
											"end": 8985,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 8934,
											"end": 8985,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 8934,
											"end": 8985,
											"name": "PUSH",
											"source": 6,
											"value": "10000"
										},
										{
											"begin": 8934,
											"end": 8985,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8934,
											"end": 8985,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8934,
											"end": 8985,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 8934,
											"end": 8985,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8934,
											"end": 8985,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8934,
											"end": 8985,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8934,
											"end": 8985,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFF00000000"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8934,
											"end": 8985,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8934,
											"end": 8985,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8934,
											"end": 8985,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 8934,
											"end": 8985,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFF000000000000"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8934,
											"end": 8985,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8934,
											"end": 8985,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8934,
											"end": 8985,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8934,
											"end": 8985,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8934,
											"end": 8985,
											"name": "OR",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "30"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8934,
											"end": 8985,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8934,
											"end": 8985,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8934,
											"end": 8985,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 8934,
											"end": 8985,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8934,
											"end": 8985,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8934,
											"end": 8985,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8934,
											"end": 8985,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 8934,
											"end": 8985,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8934,
											"end": 8985,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 8699,
											"end": 8992,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5300,
											"end": 5304,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 5356,
											"end": 5394,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 5372,
											"end": 5376,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5387,
											"end": 5393,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5356,
											"end": 5371,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 5356,
											"end": 5394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5356,
											"end": 5394,
											"name": "tag",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 5356,
											"end": 5394,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5404,
											"end": 5431,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 5414,
											"end": 5418,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5420,
											"end": 5422,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5424,
											"end": 5430,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5404,
											"end": 5413,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 5404,
											"end": 5431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5404,
											"end": 5431,
											"name": "tag",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 5404,
											"end": 5431,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5448,
											"end": 5452,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5441,
											"end": 5452,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5441,
											"end": 5452,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5441,
											"end": 5452,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "tag",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5203,
											"end": 5459,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5946,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 5996,
											"end": 6060,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6012,
											"end": 6019,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6049,
											"end": 6059,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6021,
											"end": 6046,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "245"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6012,
											"end": 6019,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6021,
											"end": 6030,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 6021,
											"end": 6046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6021,
											"end": 6046,
											"name": "tag",
											"source": 2,
											"value": "245"
										},
										{
											"begin": 6021,
											"end": 6046,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "246"
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 6021,
											"end": 6059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "tag",
											"source": 2,
											"value": "246"
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5996,
											"end": 6004,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 5996,
											"end": 6060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1888,
											"end": 1918,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 1915,
											"end": 1916,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1888,
											"end": 1906,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 1888,
											"end": 1918,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1888,
											"end": 1918,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 1888,
											"end": 1918,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8119,
											"end": 8527,
											"name": "tag",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 8119,
											"end": 8527,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8188,
											"end": 8209,
											"name": "PUSH",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 8188,
											"end": 8209,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8166,
											"end": 8172,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8166,
											"end": 8172,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8188,
											"end": 8214,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8188,
											"end": 8214,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8184,
											"end": 8224,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 8184,
											"end": 8224,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8223,
											"end": 8224,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8223,
											"end": 8224,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8119,
											"end": 8527,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8184,
											"end": 8224,
											"name": "tag",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 8184,
											"end": 8224,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8234,
											"end": 8254,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8257,
											"end": 8268,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 8257,
											"end": 8266,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 8257,
											"end": 8268,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8257,
											"end": 8268,
											"name": "tag",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 8257,
											"end": 8268,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8300,
											"end": 8321,
											"name": "PUSH",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 8300,
											"end": 8321,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8234,
											"end": 8268,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8234,
											"end": 8268,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8285,
											"end": 8321,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8285,
											"end": 8321,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 8285,
											"end": 8520,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 8285,
											"end": 8520,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8497,
											"end": 8518,
											"name": "PUSH",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 8497,
											"end": 8518,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8443,
											"end": 8519,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 8443,
											"end": 8519,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8443,
											"end": 8492,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 8487,
											"end": 8491,
											"name": "PUSH",
											"source": 6,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 8443,
											"end": 8482,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 8497,
											"end": 8518,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8469,
											"end": 8481,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 8443,
											"end": 8468,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 8443,
											"end": 8482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8443,
											"end": 8482,
											"name": "tag",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 8443,
											"end": 8482,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8443,
											"end": 8486,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8443,
											"end": 8486,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 8443,
											"end": 8492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8443,
											"end": 8492,
											"name": "tag",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 8443,
											"end": 8492,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8443,
											"end": 8496,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8443,
											"end": 8496,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "263"
										},
										{
											"begin": 8443,
											"end": 8519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8443,
											"end": 8519,
											"name": "tag",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 8443,
											"end": 8519,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8435,
											"end": 8520,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 8435,
											"end": 8520,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8435,
											"end": 8520,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 8435,
											"end": 8520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8435,
											"end": 8520,
											"name": "tag",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 8435,
											"end": 8520,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8285,
											"end": 8520,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 8285,
											"end": 8520,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8285,
											"end": 8520,
											"name": "tag",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 8285,
											"end": 8520,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8397,
											"end": 8418,
											"name": "PUSH",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 8397,
											"end": 8418,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8343,
											"end": 8419,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 8343,
											"end": 8419,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8343,
											"end": 8392,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 8387,
											"end": 8391,
											"name": "PUSH",
											"source": 6,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 8343,
											"end": 8382,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 8343,
											"end": 8355,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 8397,
											"end": 8418,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8343,
											"end": 8359,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 8343,
											"end": 8382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8343,
											"end": 8419,
											"name": "tag",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 8343,
											"end": 8419,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8278,
											"end": 8520,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8278,
											"end": 8520,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8278,
											"end": 8520,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8119,
											"end": 8527,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8119,
											"end": 8527,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10661,
											"end": 10794,
											"name": "tag",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 10661,
											"end": 10794,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10708,
											"end": 10715,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10734,
											"end": 10787,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 1430,
											"end": 1436,
											"name": "PUSH",
											"source": 6,
											"value": "2710"
										},
										{
											"begin": 10734,
											"end": 10771,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 10751,
											"end": 10770,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 10751,
											"end": 10770,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1318,
											"end": 1340,
											"name": "PUSH",
											"source": 6,
											"value": "33B2E3C9FD0803CE8000000"
										},
										{
											"begin": 10734,
											"end": 10750,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 10734,
											"end": 10750,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10734,
											"end": 10771,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10734,
											"end": 10771,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10734,
											"end": 10771,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10734,
											"end": 10771,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10734,
											"end": 10771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10734,
											"end": 10787,
											"name": "tag",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 10734,
											"end": 10787,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10727,
											"end": 10787,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10727,
											"end": 10787,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10661,
											"end": 10794,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10661,
											"end": 10794,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7218,
											"end": 7571,
											"name": "tag",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 7218,
											"end": 7571,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7260,
											"end": 7267,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7280,
											"end": 7296,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7298,
											"end": 7314,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7334,
											"end": 7345,
											"name": "PUSH",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 7334,
											"end": 7345,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7334,
											"end": 7345,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7334,
											"end": 7345,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7334,
											"end": 7345,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7334,
											"end": 7345,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 7334,
											"end": 7345,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 7334,
											"end": 7345,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7334,
											"end": 7345,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7334,
											"end": 7345,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7319,
											"end": 7358,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7319,
											"end": 7358,
											"name": "PUSH",
											"source": 6,
											"value": "902F1AC"
										},
										{
											"begin": 7319,
											"end": 7360,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7319,
											"end": 7360,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7319,
											"end": 7360,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7319,
											"end": 7360,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7319,
											"end": 7360,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7319,
											"end": 7360,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 7319,
											"end": 7360,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 7319,
											"end": 7360,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7319,
											"end": 7360,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7319,
											"end": 7360,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7319,
											"end": 7360,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7319,
											"end": 7360,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 7319,
											"end": 7360,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7319,
											"end": 7360,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7319,
											"end": 7360,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7319,
											"end": 7360,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7319,
											"end": 7360,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7319,
											"end": 7360,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7319,
											"end": 7360,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 7319,
											"end": 7360,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 7319,
											"end": 7360,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 7319,
											"end": 7360,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7319,
											"end": 7360,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7319,
											"end": 7360,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7319,
											"end": 7360,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 7319,
											"end": 7360,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7319,
											"end": 7360,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 7319,
											"end": 7360,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7319,
											"end": 7360,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7319,
											"end": 7360,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 7319,
											"end": 7360,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 7319,
											"end": 7360,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7319,
											"end": 7360,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7319,
											"end": 7360,
											"name": "tag",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 7319,
											"end": 7360,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7319,
											"end": 7360,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7319,
											"end": 7360,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7319,
											"end": 7360,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7319,
											"end": 7360,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7319,
											"end": 7360,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7319,
											"end": 7360,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7319,
											"end": 7360,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 7319,
											"end": 7360,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 7319,
											"end": 7360,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 7319,
											"end": 7360,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 7319,
											"end": 7360,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7319,
											"end": 7360,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7319,
											"end": 7360,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7319,
											"end": 7360,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7319,
											"end": 7360,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7319,
											"end": 7360,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7319,
											"end": 7360,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7319,
											"end": 7360,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7319,
											"end": 7360,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7319,
											"end": 7360,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7319,
											"end": 7360,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7319,
											"end": 7360,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7319,
											"end": 7360,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 7319,
											"end": 7360,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7319,
											"end": 7360,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7319,
											"end": 7360,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 7319,
											"end": 7360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7319,
											"end": 7360,
											"name": "tag",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 7319,
											"end": 7360,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7279,
											"end": 7360,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7279,
											"end": 7360,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7279,
											"end": 7360,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7279,
											"end": 7360,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7279,
											"end": 7360,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7425,
											"end": 7429,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7377,
											"end": 7430,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7392,
											"end": 7403,
											"name": "PUSH",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 7392,
											"end": 7403,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7392,
											"end": 7403,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7392,
											"end": 7403,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7392,
											"end": 7403,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7392,
											"end": 7403,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 7392,
											"end": 7403,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 7392,
											"end": 7403,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7392,
											"end": 7403,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7392,
											"end": 7403,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7377,
											"end": 7411,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7377,
											"end": 7411,
											"name": "PUSH",
											"source": 6,
											"value": "DFE1681"
										},
										{
											"begin": 7377,
											"end": 7413,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7377,
											"end": 7413,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7377,
											"end": 7413,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7377,
											"end": 7413,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7377,
											"end": 7413,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7377,
											"end": 7413,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 7377,
											"end": 7413,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 7377,
											"end": 7413,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7377,
											"end": 7413,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7377,
											"end": 7413,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7377,
											"end": 7413,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7377,
											"end": 7413,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7377,
											"end": 7413,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7377,
											"end": 7413,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7377,
											"end": 7413,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7377,
											"end": 7413,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7377,
											"end": 7413,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7377,
											"end": 7413,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7377,
											"end": 7413,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 7377,
											"end": 7413,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 7377,
											"end": 7413,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 7377,
											"end": 7413,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7377,
											"end": 7413,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7377,
											"end": 7413,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7377,
											"end": 7413,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 7377,
											"end": 7413,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7377,
											"end": 7413,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 7377,
											"end": 7413,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7377,
											"end": 7413,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7377,
											"end": 7413,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 7377,
											"end": 7413,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 7377,
											"end": 7413,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7377,
											"end": 7413,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7377,
											"end": 7413,
											"name": "tag",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 7377,
											"end": 7413,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7377,
											"end": 7413,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7377,
											"end": 7413,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7377,
											"end": 7413,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7377,
											"end": 7413,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7377,
											"end": 7413,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7377,
											"end": 7413,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7377,
											"end": 7413,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 7377,
											"end": 7413,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 7377,
											"end": 7413,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 7377,
											"end": 7413,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 7377,
											"end": 7413,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7377,
											"end": 7413,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7377,
											"end": 7413,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7377,
											"end": 7413,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7377,
											"end": 7413,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7377,
											"end": 7413,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7377,
											"end": 7413,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7377,
											"end": 7413,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7377,
											"end": 7413,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7377,
											"end": 7413,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7377,
											"end": 7413,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7377,
											"end": 7413,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7377,
											"end": 7413,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 7377,
											"end": 7413,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7377,
											"end": 7413,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7377,
											"end": 7413,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 7377,
											"end": 7413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7377,
											"end": 7413,
											"name": "tag",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 7377,
											"end": 7413,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7377,
											"end": 7430,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7377,
											"end": 7430,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 7377,
											"end": 7564,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "283"
										},
										{
											"begin": 7377,
											"end": 7564,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7512,
											"end": 7564,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "284"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7546,
											"end": 7563,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7546,
											"end": 7563,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7546,
											"end": 7563,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7546,
											"end": 7563,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7513,
											"end": 7540,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 7513,
											"end": 7540,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7513,
											"end": 7530,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7513,
											"end": 7530,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7535,
											"end": 7539,
											"name": "PUSH",
											"source": 6,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 7513,
											"end": 7534,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 7513,
											"end": 7540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7512,
											"end": 7564,
											"name": "tag",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 7512,
											"end": 7564,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7377,
											"end": 7564,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "287"
										},
										{
											"begin": 7377,
											"end": 7564,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7377,
											"end": 7564,
											"name": "tag",
											"source": 6,
											"value": "283"
										},
										{
											"begin": 7377,
											"end": 7564,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7445,
											"end": 7497,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "287"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7479,
											"end": 7496,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7479,
											"end": 7496,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7479,
											"end": 7496,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7479,
											"end": 7496,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7446,
											"end": 7473,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 7446,
											"end": 7473,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7446,
											"end": 7463,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7446,
											"end": 7463,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7468,
											"end": 7472,
											"name": "PUSH",
											"source": 6,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 7446,
											"end": 7467,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 7446,
											"end": 7473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7445,
											"end": 7497,
											"name": "tag",
											"source": 6,
											"value": "287"
										},
										{
											"begin": 7445,
											"end": 7497,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7370,
											"end": 7564,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7370,
											"end": 7564,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7370,
											"end": 7564,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7370,
											"end": 7564,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7218,
											"end": 7571,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7218,
											"end": 7571,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "tag",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2425,
											"end": 2438,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2457,
											"end": 2464,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 2450,
											"end": 2464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8998,
											"end": 9100,
											"name": "tag",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 8998,
											"end": 9100,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9068,
											"end": 9081,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 9068,
											"end": 9093,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 8998,
											"end": 9100,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7577,
											"end": 8113,
											"name": "tag",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 7577,
											"end": 8113,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7780,
											"end": 7807,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7780,
											"end": 7807,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7651,
											"end": 7664,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7780,
											"end": 7807,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7780,
											"end": 7807,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7780,
											"end": 7807,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7780,
											"end": 7798,
											"name": "PUSH",
											"source": 6,
											"value": "E"
										},
										{
											"begin": 7780,
											"end": 7807,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7780,
											"end": 7807,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7780,
											"end": 7807,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7780,
											"end": 7807,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7780,
											"end": 7807,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 7780,
											"end": 7807,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7651,
											"end": 7664,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7651,
											"end": 7664,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7651,
											"end": 7664,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7651,
											"end": 7664,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7651,
											"end": 7664,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7651,
											"end": 7664,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7651,
											"end": 7664,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7651,
											"end": 7664,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7810,
											"end": 7825,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 7780,
											"end": 7893,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "299"
										},
										{
											"begin": 7780,
											"end": 7893,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7892,
											"end": 7893,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7780,
											"end": 7893,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "301"
										},
										{
											"begin": 7780,
											"end": 7893,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7780,
											"end": 7893,
											"name": "tag",
											"source": 6,
											"value": "299"
										},
										{
											"begin": 7780,
											"end": 7893,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7841,
											"end": 7868,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 7841,
											"end": 7868,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7841,
											"end": 7868,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7841,
											"end": 7868,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7841,
											"end": 7868,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7841,
											"end": 7868,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7841,
											"end": 7859,
											"name": "PUSH",
											"source": 6,
											"value": "E"
										},
										{
											"begin": 7841,
											"end": 7868,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7841,
											"end": 7868,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7841,
											"end": 7868,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7841,
											"end": 7868,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7841,
											"end": 7868,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 7841,
											"end": 7868,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7841,
											"end": 7889,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "301"
										},
										{
											"begin": 7841,
											"end": 7889,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7873,
											"end": 7888,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 7841,
											"end": 7872,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 7841,
											"end": 7889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7841,
											"end": 7889,
											"name": "tag",
											"source": 6,
											"value": "301"
										},
										{
											"begin": 7841,
											"end": 7889,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7760,
											"end": 7893,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7920,
											"end": 7940,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "302"
										},
										{
											"begin": 7760,
											"end": 7893,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7934,
											"end": 7939,
											"name": "PUSH",
											"source": 6,
											"value": "15180"
										},
										{
											"begin": 7920,
											"end": 7933,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "263"
										},
										{
											"begin": 7920,
											"end": 7940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7920,
											"end": 7940,
											"name": "tag",
											"source": 6,
											"value": "302"
										},
										{
											"begin": 7920,
											"end": 7940,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7912,
											"end": 7940,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7950,
											"end": 7968,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "303"
										},
										{
											"begin": 7963,
											"end": 7968,
											"name": "PUSH",
											"source": 6,
											"value": "15180"
										},
										{
											"begin": 7950,
											"end": 7968,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7950,
											"end": 7968,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "304"
										},
										{
											"begin": 7950,
											"end": 7968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7950,
											"end": 7968,
											"name": "tag",
											"source": 6,
											"value": "303"
										},
										{
											"begin": 7950,
											"end": 7968,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7950,
											"end": 7968,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7987,
											"end": 8006,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "305"
										},
										{
											"begin": 7950,
											"end": 7968,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8001,
											"end": 8005,
											"name": "PUSH",
											"source": 6,
											"value": "E10"
										},
										{
											"begin": 7987,
											"end": 8000,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "263"
										},
										{
											"begin": 7987,
											"end": 8006,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7987,
											"end": 8006,
											"name": "tag",
											"source": 6,
											"value": "305"
										},
										{
											"begin": 7987,
											"end": 8006,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7978,
											"end": 8006,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8016,
											"end": 8033,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "306"
										},
										{
											"begin": 8029,
											"end": 8033,
											"name": "PUSH",
											"source": 6,
											"value": "E10"
										},
										{
											"begin": 8016,
											"end": 8033,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8016,
											"end": 8033,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "304"
										},
										{
											"begin": 8016,
											"end": 8033,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8016,
											"end": 8033,
											"name": "tag",
											"source": 6,
											"value": "306"
										},
										{
											"begin": 8016,
											"end": 8033,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8016,
											"end": 8033,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8054,
											"end": 8071,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "307"
										},
										{
											"begin": 8016,
											"end": 8033,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8068,
											"end": 8070,
											"name": "PUSH",
											"source": 6,
											"value": "3C"
										},
										{
											"begin": 8054,
											"end": 8067,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "263"
										},
										{
											"begin": 8054,
											"end": 8071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8054,
											"end": 8071,
											"name": "tag",
											"source": 6,
											"value": "307"
										},
										{
											"begin": 8054,
											"end": 8071,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8043,
											"end": 8071,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8092,
											"end": 8106,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "308"
										},
										{
											"begin": 8104,
											"end": 8106,
											"name": "PUSH",
											"source": 6,
											"value": "3C"
										},
										{
											"begin": 8092,
											"end": 8101,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8092,
											"end": 8106,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "304"
										},
										{
											"begin": 8092,
											"end": 8106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8092,
											"end": 8106,
											"name": "tag",
											"source": 6,
											"value": "308"
										},
										{
											"begin": 8092,
											"end": 8106,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8081,
											"end": 8106,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8081,
											"end": 8106,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7750,
											"end": 8113,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7577,
											"end": 8113,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7577,
											"end": 8113,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 7577,
											"end": 8113,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7577,
											"end": 8113,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7577,
											"end": 8113,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 7577,
											"end": 8113,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9479,
											"end": 9590,
											"name": "tag",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 9479,
											"end": 9590,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9557,
											"end": 9574,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9557,
											"end": 9574,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9557,
											"end": 9574,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9557,
											"end": 9574,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9557,
											"end": 9574,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9557,
											"end": 9574,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9557,
											"end": 9574,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9557,
											"end": 9574,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9557,
											"end": 9565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 9557,
											"end": 9574,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9557,
											"end": 9574,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9557,
											"end": 9574,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9557,
											"end": 9574,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9557,
											"end": 9574,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 9557,
											"end": 9583,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9557,
											"end": 9583,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9557,
											"end": 9583,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9557,
											"end": 9583,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9557,
											"end": 9583,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9557,
											"end": 9583,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9557,
											"end": 9583,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9557,
											"end": 9583,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9557,
											"end": 9583,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9557,
											"end": 9583,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 9557,
											"end": 9583,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9557,
											"end": 9583,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 9479,
											"end": 9590,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "tag",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6668,
											"end": 6672,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 6668,
											"end": 6672,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6749,
											"end": 6774,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "314"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6766,
											"end": 6773,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6749,
											"end": 6758,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 6749,
											"end": 6774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6749,
											"end": 6774,
											"name": "tag",
											"source": 2,
											"value": "314"
										},
										{
											"begin": 6749,
											"end": 6774,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6722,
											"end": 6774,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6722,
											"end": 6774,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6812,
											"end": 6827,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6792,
											"end": 6808,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6792,
											"end": 6827,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6792,
											"end": 6827,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "315"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9489,
											"end": 9491,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9471,
											"end": 9492,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9528,
											"end": 9530,
											"name": "PUSH",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 9508,
											"end": 9526,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 9508,
											"end": 9526,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9508,
											"end": 9526,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9501,
											"end": 9531,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9567,
											"end": 9601,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 9547,
											"end": 9565,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 9547,
											"end": 9565,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9547,
											"end": 9565,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9540,
											"end": 9602,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9618,
											"end": 9636,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 9618,
											"end": 9636,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9618,
											"end": 9636,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9611,
											"end": 9646,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9663,
											"end": 9682,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 9663,
											"end": 9682,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 9287,
											"end": 9688,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "tag",
											"source": 2,
											"value": "315"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6903,
											"end": 6963,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "318"
										},
										{
											"begin": 6912,
											"end": 6917,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6919,
											"end": 6926,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6947,
											"end": 6962,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6928,
											"end": 6944,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6928,
											"end": 6962,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6903,
											"end": 6911,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 6903,
											"end": 6963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6903,
											"end": 6963,
											"name": "tag",
											"source": 2,
											"value": "318"
										},
										{
											"begin": 6903,
											"end": 6963,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6991,
											"end": 6995,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 6991,
											"end": 6995,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6575,
											"end": 7002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "tag",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3819,
											"end": 3823,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3873,
											"end": 3901,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3890,
											"end": 3892,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3894,
											"end": 3900,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3873,
											"end": 3882,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 3873,
											"end": 3901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8533,
											"end": 8693,
											"name": "tag",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 8533,
											"end": 8693,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "323"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 1,
											"value": "323"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8600,
											"end": 8613,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 8600,
											"end": 8625,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8600,
											"end": 8625,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8600,
											"end": 8625,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8600,
											"end": 8625,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8600,
											"end": 8625,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8600,
											"end": 8625,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 8600,
											"end": 8625,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8600,
											"end": 8625,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 8635,
											"end": 8647,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "325"
										},
										{
											"begin": 8635,
											"end": 8645,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "326"
										},
										{
											"begin": 8635,
											"end": 8647,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8635,
											"end": 8647,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "325"
										},
										{
											"begin": 8635,
											"end": 8647,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8662,
											"end": 8686,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8662,
											"end": 8686,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2651,
											"end": 2683,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2651,
											"end": 2683,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2633,
											"end": 2684,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2633,
											"end": 2684,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8662,
											"end": 8686,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "7AED1D3E8155A07CCF395E44EA3109A0E2D6C9B29BBBE9F142D9790596F4DC80"
										},
										{
											"begin": 8662,
											"end": 8686,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2621,
											"end": 2623,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2606,
											"end": 2624,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8662,
											"end": 8686,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8662,
											"end": 8686,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8662,
											"end": 8686,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8662,
											"end": 8686,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8662,
											"end": 8686,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8662,
											"end": 8686,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8662,
											"end": 8686,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 6
										},
										{
											"begin": 8533,
											"end": 8693,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8533,
											"end": 8693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "tag",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4076,
											"end": 4083,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4113,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3987,
											"end": 4136,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "330"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 1,
											"value": "330"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2162,
											"end": 2184,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2162,
											"end": 2184,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "332"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9895,
											"end": 9897,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9877,
											"end": 9898,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9934,
											"end": 9936,
											"name": "PUSH",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 9914,
											"end": 9932,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 9914,
											"end": 9932,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9914,
											"end": 9932,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9907,
											"end": 9937,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9973,
											"end": 10007,
											"name": "PUSH",
											"source": 7,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 9953,
											"end": 9971,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 9953,
											"end": 9971,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9953,
											"end": 9971,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9946,
											"end": 10008,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10024,
											"end": 10042,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 10024,
											"end": 10042,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10024,
											"end": 10042,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10017,
											"end": 10053,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10070,
											"end": 10089,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 10070,
											"end": 10089,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 9693,
											"end": 10095,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "332"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2265,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "335"
										},
										{
											"begin": 2256,
											"end": 2264,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2255,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 2237,
											"end": 2265,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2265,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "335"
										},
										{
											"begin": 2237,
											"end": 2265,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2272,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9282,
											"end": 9473,
											"name": "tag",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 9282,
											"end": 9473,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "337"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 1,
											"value": "337"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9379,
											"end": 9391,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "F"
										},
										{
											"begin": 9379,
											"end": 9409,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9379,
											"end": 9409,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9419,
											"end": 9466,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9379,
											"end": 9409,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9379,
											"end": 9409,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9379,
											"end": 9409,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9419,
											"end": 9466,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9419,
											"end": 9466,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9419,
											"end": 9466,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9419,
											"end": 9466,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9419,
											"end": 9466,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 9379,
											"end": 9409,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 9419,
											"end": 9466,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFF"
										},
										{
											"begin": 9419,
											"end": 9466,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9419,
											"end": 9466,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9419,
											"end": 9466,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9419,
											"end": 9466,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9419,
											"end": 9466,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9419,
											"end": 9466,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9419,
											"end": 9466,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9419,
											"end": 9466,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 9419,
											"end": 9466,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 9419,
											"end": 9466,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9419,
											"end": 9466,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 9282,
											"end": 9473,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9106,
											"end": 9276,
											"name": "tag",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 9106,
											"end": 9276,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9193,
											"end": 9201,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "D"
										},
										{
											"begin": 9193,
											"end": 9219,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9193,
											"end": 9219,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9193,
											"end": 9219,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9193,
											"end": 9219,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9193,
											"end": 9219,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9193,
											"end": 9219,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9193,
											"end": 9219,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 9193,
											"end": 9219,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9193,
											"end": 9219,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 9249,
											"end": 9269,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "342"
										},
										{
											"begin": 9249,
											"end": 9257,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9260,
											"end": 9269,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "3C"
										},
										{
											"begin": 9249,
											"end": 9269,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "343"
										},
										{
											"begin": 9249,
											"end": 9269,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9249,
											"end": 9269,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "342"
										},
										{
											"begin": 9249,
											"end": 9269,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9229,
											"end": 9237,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "D"
										},
										{
											"begin": 9229,
											"end": 9269,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9229,
											"end": 9269,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9229,
											"end": 9269,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9229,
											"end": 9269,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9229,
											"end": 9269,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9229,
											"end": 9269,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9229,
											"end": 9269,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9229,
											"end": 9269,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 9229,
											"end": 9269,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9229,
											"end": 9269,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9229,
											"end": 9269,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9229,
											"end": 9269,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9229,
											"end": 9269,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9229,
											"end": 9269,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9229,
											"end": 9269,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9229,
											"end": 9269,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 9229,
											"end": 9269,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9229,
											"end": 9269,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9106,
											"end": 9276,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "tag",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10558,
											"end": 10577,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10558,
											"end": 10577,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "346"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10556,
											"end": 10558,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10538,
											"end": 10559,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10595,
											"end": 10597,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 10575,
											"end": 10593,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 10575,
											"end": 10593,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10575,
											"end": 10593,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10568,
											"end": 10598,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10634,
											"end": 10668,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 10614,
											"end": 10632,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 10614,
											"end": 10632,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10614,
											"end": 10632,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10607,
											"end": 10669,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10685,
											"end": 10703,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 10685,
											"end": 10703,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10685,
											"end": 10703,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10678,
											"end": 10712,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10729,
											"end": 10748,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 10729,
											"end": 10748,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 10354,
											"end": 10754,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "tag",
											"source": 2,
											"value": "346"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10636,
											"end": 10657,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10636,
											"end": 10657,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "349"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10961,
											"end": 10963,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10943,
											"end": 10964,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11000,
											"end": 11002,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 10980,
											"end": 10998,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 10980,
											"end": 10998,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10980,
											"end": 10998,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10973,
											"end": 11003,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11039,
											"end": 11073,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 11019,
											"end": 11037,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 11019,
											"end": 11037,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11019,
											"end": 11037,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11012,
											"end": 11074,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11090,
											"end": 11108,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 11090,
											"end": 11108,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11090,
											"end": 11108,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11083,
											"end": 11115,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11132,
											"end": 11151,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 11132,
											"end": 11151,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 10759,
											"end": 11157,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "tag",
											"source": 2,
											"value": "349"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10718,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10743,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10743,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10743,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10457,
											"end": 10797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11364,
											"end": 11366,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11346,
											"end": 11367,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11346,
											"end": 11367,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11346,
											"end": 11367,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11383,
											"end": 11401,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 11383,
											"end": 11401,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11383,
											"end": 11401,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11376,
											"end": 11406,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11442,
											"end": 11476,
											"name": "PUSH",
											"source": 7,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 11422,
											"end": 11440,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 11422,
											"end": 11440,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11422,
											"end": 11440,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11415,
											"end": 11477,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11494,
											"end": 11512,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 11494,
											"end": 11512,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 11162,
											"end": 11518,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "tag",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11178,
											"end": 11202,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11205,
											"end": 11230,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "360"
										},
										{
											"begin": 11215,
											"end": 11220,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11222,
											"end": 11229,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11205,
											"end": 11214,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 11205,
											"end": 11230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11205,
											"end": 11230,
											"name": "tag",
											"source": 2,
											"value": "360"
										},
										{
											"begin": 11205,
											"end": 11230,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11178,
											"end": 11230,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11178,
											"end": 11230,
											"name": "POP",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11244,
											"end": 11260,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11244,
											"end": 11281,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 11240,
											"end": 11483,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "365"
										},
										{
											"begin": 11240,
											"end": 11483,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11325,
											"end": 11331,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11305,
											"end": 11321,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11305,
											"end": 11331,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 11305,
											"end": 11331,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "362"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11725,
											"end": 11727,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11707,
											"end": 11728,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11764,
											"end": 11766,
											"name": "PUSH",
											"source": 7,
											"value": "1D"
										},
										{
											"begin": 11744,
											"end": 11762,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 11744,
											"end": 11762,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11744,
											"end": 11762,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11737,
											"end": 11767,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11803,
											"end": 11834,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 11783,
											"end": 11801,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 11783,
											"end": 11801,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11783,
											"end": 11801,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11776,
											"end": 11835,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11852,
											"end": 11870,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 11852,
											"end": 11870,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 11523,
											"end": 11876,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "tag",
											"source": 2,
											"value": "362"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11407,
											"end": 11458,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "365"
										},
										{
											"begin": 11416,
											"end": 11421,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11423,
											"end": 11430,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11451,
											"end": 11457,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11432,
											"end": 11448,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11432,
											"end": 11457,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11407,
											"end": 11415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 11407,
											"end": 11458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11407,
											"end": 11458,
											"name": "tag",
											"source": 2,
											"value": "365"
										},
										{
											"begin": 11407,
											"end": 11458,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11168,
											"end": 11489,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11078,
											"end": 11489,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2841,
											"end": 4134,
											"name": "tag",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 2841,
											"end": 4134,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2994,
											"end": 2995,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2985,
											"end": 2991,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2985,
											"end": 2995,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2977,
											"end": 3026,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "367"
										},
										{
											"begin": 2977,
											"end": 3026,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2977,
											"end": 3026,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2977,
											"end": 3026,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2977,
											"end": 3026,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2977,
											"end": 3026,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12083,
											"end": 12085,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2977,
											"end": 3026,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2977,
											"end": 3026,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2977,
											"end": 3026,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12065,
											"end": 12086,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12122,
											"end": 12124,
											"name": "PUSH",
											"source": 7,
											"value": "1A"
										},
										{
											"begin": 12102,
											"end": 12120,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 12102,
											"end": 12120,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12102,
											"end": 12120,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12095,
											"end": 12125,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12161,
											"end": 12189,
											"name": "PUSH",
											"source": 7,
											"value": "5472616E7366657220616D6F756E74206D757374206265203E30000000000000"
										},
										{
											"begin": 12141,
											"end": 12159,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 12141,
											"end": 12159,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12141,
											"end": 12159,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12134,
											"end": 12190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12207,
											"end": 12225,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 12207,
											"end": 12225,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2977,
											"end": 3026,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 11881,
											"end": 12231,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2977,
											"end": 3026,
											"name": "tag",
											"source": 6,
											"value": "367"
										},
										{
											"begin": 2977,
											"end": 3026,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3060,
											"end": 3071,
											"name": "PUSH",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 3060,
											"end": 3071,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3037,
											"end": 3047,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3037,
											"end": 3047,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3050,
											"end": 3071,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3050,
											"end": 3071,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3050,
											"end": 3071,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3060,
											"end": 3071,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3060,
											"end": 3071,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3050,
											"end": 3071,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3050,
											"end": 3095,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3050,
											"end": 3095,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3050,
											"end": 3095,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "370"
										},
										{
											"begin": 3050,
											"end": 3095,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3076,
											"end": 3095,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3076,
											"end": 3095,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3076,
											"end": 3095,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3095,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3076,
											"end": 3095,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3076,
											"end": 3095,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3076,
											"end": 3084,
											"name": "PUSH",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 3076,
											"end": 3095,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3076,
											"end": 3095,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3076,
											"end": 3095,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3076,
											"end": 3095,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3076,
											"end": 3095,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3076,
											"end": 3095,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3076,
											"end": 3095,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 3076,
											"end": 3095,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3075,
											"end": 3095,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3050,
											"end": 3095,
											"name": "tag",
											"source": 6,
											"value": "370"
										},
										{
											"begin": 3050,
											"end": 3095,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3132,
											"end": 3143,
											"name": "PUSH",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 3132,
											"end": 3143,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3037,
											"end": 3095,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3037,
											"end": 3095,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3105,
											"end": 3116,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3105,
											"end": 3116,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3119,
											"end": 3143,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3119,
											"end": 3143,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3119,
											"end": 3143,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3132,
											"end": 3143,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3132,
											"end": 3143,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3119,
											"end": 3143,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3119,
											"end": 3164,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3119,
											"end": 3164,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3119,
											"end": 3164,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "371"
										},
										{
											"begin": 3119,
											"end": 3164,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3148,
											"end": 3164,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3148,
											"end": 3164,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3148,
											"end": 3164,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3148,
											"end": 3164,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3148,
											"end": 3164,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3148,
											"end": 3164,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3148,
											"end": 3156,
											"name": "PUSH",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 3148,
											"end": 3164,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3148,
											"end": 3164,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3148,
											"end": 3164,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3148,
											"end": 3164,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3148,
											"end": 3164,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3148,
											"end": 3164,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3148,
											"end": 3164,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 3148,
											"end": 3164,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3147,
											"end": 3164,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3119,
											"end": 3164,
											"name": "tag",
											"source": 6,
											"value": "371"
										},
										{
											"begin": 3119,
											"end": 3164,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3179,
											"end": 3191,
											"name": "PUSH",
											"source": 6,
											"value": "F"
										},
										{
											"begin": 3179,
											"end": 3199,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3105,
											"end": 3164,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3105,
											"end": 3164,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3179,
											"end": 3199,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 3179,
											"end": 3199,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3179,
											"end": 3209,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3179,
											"end": 3209,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3179,
											"end": 3209,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "372"
										},
										{
											"begin": 3179,
											"end": 3209,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3179,
											"end": 3209,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3203,
											"end": 3209,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3179,
											"end": 3209,
											"name": "tag",
											"source": 6,
											"value": "372"
										},
										{
											"begin": 3179,
											"end": 3209,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3175,
											"end": 3341,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3175,
											"end": 3341,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "377"
										},
										{
											"begin": 3175,
											"end": 3341,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3234,
											"end": 3258,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 3234,
											"end": 3258,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3234,
											"end": 3258,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 3234,
											"end": 3258,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3233,
											"end": 3258,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3225,
											"end": 3293,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "374"
										},
										{
											"begin": 3225,
											"end": 3293,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3225,
											"end": 3293,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3225,
											"end": 3293,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3225,
											"end": 3293,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3225,
											"end": 3293,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12438,
											"end": 12440,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3225,
											"end": 3293,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3225,
											"end": 3293,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3225,
											"end": 3293,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12420,
											"end": 12441,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12477,
											"end": 12479,
											"name": "PUSH",
											"source": 7,
											"value": "1E"
										},
										{
											"begin": 12457,
											"end": 12475,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 12457,
											"end": 12475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12457,
											"end": 12475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12450,
											"end": 12480,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12516,
											"end": 12548,
											"name": "PUSH",
											"source": 7,
											"value": "53656C6C732073746F70706564206279204469616D6F6E6420466C6F6F720000"
										},
										{
											"begin": 12496,
											"end": 12514,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 12496,
											"end": 12514,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12496,
											"end": 12514,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12489,
											"end": 12549,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12566,
											"end": 12584,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 12566,
											"end": 12584,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3225,
											"end": 3293,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 12236,
											"end": 12590,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3225,
											"end": 3293,
											"name": "tag",
											"source": 6,
											"value": "374"
										},
										{
											"begin": 3225,
											"end": 3293,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3307,
											"end": 3330,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "377"
										},
										{
											"begin": 3307,
											"end": 3328,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "378"
										},
										{
											"begin": 3307,
											"end": 3330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3307,
											"end": 3330,
											"name": "tag",
											"source": 6,
											"value": "377"
										},
										{
											"begin": 3307,
											"end": 3330,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3355,
											"end": 3363,
											"name": "PUSH",
											"source": 6,
											"value": "D"
										},
										{
											"begin": 3355,
											"end": 3371,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3355,
											"end": 3371,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 3355,
											"end": 3371,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3355,
											"end": 3381,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3355,
											"end": 3381,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3355,
											"end": 3381,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "379"
										},
										{
											"begin": 3355,
											"end": 3381,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3355,
											"end": 3381,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3375,
											"end": 3381,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3355,
											"end": 3381,
											"name": "tag",
											"source": 6,
											"value": "379"
										},
										{
											"begin": 3355,
											"end": 3381,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3351,
											"end": 3559,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3351,
											"end": 3559,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "380"
										},
										{
											"begin": 3351,
											"end": 3559,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3424,
											"end": 3450,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3424,
											"end": 3450,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3424,
											"end": 3450,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3424,
											"end": 3450,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3424,
											"end": 3450,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3424,
											"end": 3450,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3424,
											"end": 3442,
											"name": "PUSH",
											"source": 6,
											"value": "E"
										},
										{
											"begin": 3424,
											"end": 3450,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3424,
											"end": 3450,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3424,
											"end": 3450,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3424,
											"end": 3450,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3424,
											"end": 3450,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3424,
											"end": 3450,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3405,
											"end": 3420,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 3405,
											"end": 3450,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3405,
											"end": 3450,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3397,
											"end": 3470,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "381"
										},
										{
											"begin": 3397,
											"end": 3470,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3397,
											"end": 3470,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3397,
											"end": 3470,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3397,
											"end": 3470,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3397,
											"end": 3470,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12797,
											"end": 12799,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3397,
											"end": 3470,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3397,
											"end": 3470,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3397,
											"end": 3470,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12779,
											"end": 12800,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12836,
											"end": 12838,
											"name": "PUSH",
											"source": 7,
											"value": "F"
										},
										{
											"begin": 12816,
											"end": 12834,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 12816,
											"end": 12834,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12816,
											"end": 12834,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12809,
											"end": 12839,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "436F6F6C646F776E20616374697665"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "88"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12855,
											"end": 12873,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 12855,
											"end": 12873,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12855,
											"end": 12873,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12848,
											"end": 12893,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12910,
											"end": 12928,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 12910,
											"end": 12928,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3397,
											"end": 3470,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 12595,
											"end": 12934,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3397,
											"end": 3470,
											"name": "tag",
											"source": 6,
											"value": "381"
										},
										{
											"begin": 3397,
											"end": 3470,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3531,
											"end": 3539,
											"name": "PUSH",
											"source": 6,
											"value": "D"
										},
										{
											"begin": 3531,
											"end": 3548,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3513,
											"end": 3548,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "384"
										},
										{
											"begin": 3513,
											"end": 3548,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3531,
											"end": 3548,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3531,
											"end": 3548,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3531,
											"end": 3548,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3531,
											"end": 3548,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3531,
											"end": 3548,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3513,
											"end": 3528,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 3513,
											"end": 3548,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 3513,
											"end": 3548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3513,
											"end": 3548,
											"name": "tag",
											"source": 6,
											"value": "384"
										},
										{
											"begin": 3513,
											"end": 3548,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3484,
											"end": 3510,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3484,
											"end": 3510,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3484,
											"end": 3510,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3484,
											"end": 3510,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3484,
											"end": 3510,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3484,
											"end": 3510,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3484,
											"end": 3502,
											"name": "PUSH",
											"source": 6,
											"value": "E"
										},
										{
											"begin": 3484,
											"end": 3510,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3484,
											"end": 3510,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3484,
											"end": 3510,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3484,
											"end": 3510,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3484,
											"end": 3510,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3484,
											"end": 3548,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3351,
											"end": 3559,
											"name": "tag",
											"source": 6,
											"value": "380"
										},
										{
											"begin": 3351,
											"end": 3559,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3569,
											"end": 3586,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3589,
											"end": 3629,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "385"
										},
										{
											"begin": 3603,
											"end": 3609,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3611,
											"end": 3620,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3622,
											"end": 3628,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3589,
											"end": 3602,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "386"
										},
										{
											"begin": 3589,
											"end": 3629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3589,
											"end": 3629,
											"name": "tag",
											"source": 6,
											"value": "385"
										},
										{
											"begin": 3589,
											"end": 3629,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3569,
											"end": 3629,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3639,
											"end": 3656,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3659,
											"end": 3680,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "387"
										},
										{
											"begin": 3659,
											"end": 3665,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3569,
											"end": 3629,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3659,
											"end": 3669,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 3659,
											"end": 3680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3659,
											"end": 3680,
											"name": "tag",
											"source": 6,
											"value": "387"
										},
										{
											"begin": 3659,
											"end": 3680,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3696,
											"end": 3715,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 3696,
											"end": 3715,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3696,
											"end": 3715,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3696,
											"end": 3715,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3696,
											"end": 3715,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3696,
											"end": 3715,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3696,
											"end": 3704,
											"name": "PUSH",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 3696,
											"end": 3715,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3696,
											"end": 3715,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3696,
											"end": 3715,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3696,
											"end": 3715,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3696,
											"end": 3715,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3696,
											"end": 3715,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3639,
											"end": 3680,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3639,
											"end": 3680,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3696,
											"end": 3715,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 3696,
											"end": 3715,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3695,
											"end": 3715,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3695,
											"end": 3726,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3695,
											"end": 3726,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3695,
											"end": 3726,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "388"
										},
										{
											"begin": 3695,
											"end": 3726,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3695,
											"end": 3726,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3720,
											"end": 3726,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3719,
											"end": 3726,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3695,
											"end": 3726,
											"name": "tag",
											"source": 6,
											"value": "388"
										},
										{
											"begin": 3695,
											"end": 3726,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3691,
											"end": 3840,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3691,
											"end": 3840,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "394"
										},
										{
											"begin": 3691,
											"end": 3840,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3789,
											"end": 3805,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "390"
										},
										{
											"begin": 3789,
											"end": 3803,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 3789,
											"end": 3805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3789,
											"end": 3805,
											"name": "tag",
											"source": 6,
											"value": "390"
										},
										{
											"begin": 3789,
											"end": 3805,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3750,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "391"
										},
										{
											"begin": 3775,
											"end": 3784,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3750,
											"end": 3770,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "392"
										},
										{
											"begin": 3760,
											"end": 3769,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3493,
											"end": 3500,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3750,
											"end": 3770,
											"name": "tag",
											"source": 6,
											"value": "392"
										},
										{
											"begin": 3750,
											"end": 3770,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3750,
											"end": 3774,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3750,
											"end": 3774,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "393"
										},
										{
											"begin": 3750,
											"end": 3785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3750,
											"end": 3785,
											"name": "tag",
											"source": 6,
											"value": "391"
										},
										{
											"begin": 3750,
											"end": 3785,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3750,
											"end": 3805,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3750,
											"end": 3805,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3742,
											"end": 3829,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "394"
										},
										{
											"begin": 3742,
											"end": 3829,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3742,
											"end": 3829,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3742,
											"end": 3829,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3742,
											"end": 3829,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3742,
											"end": 3829,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13141,
											"end": 13143,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3742,
											"end": 3829,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3742,
											"end": 3829,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3742,
											"end": 3829,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13123,
											"end": 13144,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13180,
											"end": 13182,
											"name": "PUSH",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 13160,
											"end": 13178,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 13160,
											"end": 13178,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13160,
											"end": 13178,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13153,
											"end": 13183,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "13585E081DD85B1B195D08195E18D959591959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13199,
											"end": 13217,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 13199,
											"end": 13217,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13199,
											"end": 13217,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13192,
											"end": 13241,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13258,
											"end": 13276,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 13258,
											"end": 13276,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3742,
											"end": 3829,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 12939,
											"end": 13282,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3742,
											"end": 3829,
											"name": "tag",
											"source": 6,
											"value": "394"
										},
										{
											"begin": 3742,
											"end": 3829,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3854,
											"end": 3867,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3854,
											"end": 3867,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3850,
											"end": 3997,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "400"
										},
										{
											"begin": 3850,
											"end": 3997,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3883,
											"end": 3932,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "398"
										},
										{
											"begin": 3899,
											"end": 3905,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 3915,
											"end": 3919,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 3922,
											"end": 3931,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3883,
											"end": 3898,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "399"
										},
										{
											"begin": 3883,
											"end": 3932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3883,
											"end": 3932,
											"name": "tag",
											"source": 6,
											"value": "398"
										},
										{
											"begin": 3883,
											"end": 3932,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3946,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "400"
										},
										{
											"begin": 3961,
											"end": 3970,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3972,
											"end": 3977,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3979,
											"end": 3985,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3946,
											"end": 3960,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "401"
										},
										{
											"begin": 3946,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3946,
											"end": 3986,
											"name": "tag",
											"source": 6,
											"value": "400"
										},
										{
											"begin": 3946,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4007,
											"end": 4052,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "402"
										},
										{
											"begin": 4023,
											"end": 4029,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4031,
											"end": 4040,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4042,
											"end": 4051,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4007,
											"end": 4022,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "399"
										},
										{
											"begin": 4007,
											"end": 4052,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4007,
											"end": 4052,
											"name": "tag",
											"source": 6,
											"value": "402"
										},
										{
											"begin": 4007,
											"end": 4052,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4067,
											"end": 4084,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "403"
										},
										{
											"begin": 4067,
											"end": 4082,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "404"
										},
										{
											"begin": 4067,
											"end": 4084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4067,
											"end": 4084,
											"name": "tag",
											"source": 6,
											"value": "403"
										},
										{
											"begin": 4067,
											"end": 4084,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4063,
											"end": 4128,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4063,
											"end": 4128,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "406"
										},
										{
											"begin": 4063,
											"end": 4128,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4100,
											"end": 4117,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "406"
										},
										{
											"begin": 4100,
											"end": 4115,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "407"
										},
										{
											"begin": 4100,
											"end": 4117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4100,
											"end": 4117,
											"name": "tag",
											"source": 6,
											"value": "406"
										},
										{
											"begin": 4100,
											"end": 4117,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2967,
											"end": 4134,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2967,
											"end": 4134,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2967,
											"end": 4134,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2967,
											"end": 4134,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2841,
											"end": 4134,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2841,
											"end": 4134,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2841,
											"end": 4134,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2841,
											"end": 4134,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2426,
											"end": 2613,
											"name": "tag",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 2426,
											"end": 2613,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "PUSH",
											"source": 1,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 2489,
											"end": 2613,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2426,
											"end": 2613,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2426,
											"end": 2613,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "tag",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3180,
											"end": 3187,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 3210,
											"end": 3211,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3206,
											"end": 3207,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "411"
										},
										{
											"begin": 3206,
											"end": 3211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "tag",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3523,
											"end": 3530,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 3553,
											"end": 3554,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3549,
											"end": 3550,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "414"
										},
										{
											"begin": 3549,
											"end": 3554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "tag",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3908,
											"end": 3915,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 3938,
											"end": 3939,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3934,
											"end": 3935,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "417"
										},
										{
											"begin": 3934,
											"end": 3939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9596,
											"end": 9796,
											"name": "tag",
											"source": 6,
											"value": "326"
										},
										{
											"begin": 9596,
											"end": 9796,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9685,
											"end": 9698,
											"name": "PUSH",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 9685,
											"end": 9698,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9685,
											"end": 9698,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9685,
											"end": 9698,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9685,
											"end": 9698,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9685,
											"end": 9698,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 9685,
											"end": 9698,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 9685,
											"end": 9698,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9685,
											"end": 9698,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9685,
											"end": 9698,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9668,
											"end": 9707,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9668,
											"end": 9707,
											"name": "PUSH",
											"source": 6,
											"value": "C45A0155"
										},
										{
											"begin": 9668,
											"end": 9709,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9668,
											"end": 9709,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9668,
											"end": 9709,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9668,
											"end": 9709,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9668,
											"end": 9709,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9668,
											"end": 9709,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 9668,
											"end": 9709,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 9668,
											"end": 9709,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9668,
											"end": 9709,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9668,
											"end": 9709,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9668,
											"end": 9709,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9668,
											"end": 9709,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9668,
											"end": 9709,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9668,
											"end": 9709,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9668,
											"end": 9709,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9668,
											"end": 9709,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9668,
											"end": 9709,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9668,
											"end": 9709,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9668,
											"end": 9709,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 9668,
											"end": 9709,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 9668,
											"end": 9709,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 9668,
											"end": 9709,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9668,
											"end": 9709,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9668,
											"end": 9709,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9668,
											"end": 9709,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "420"
										},
										{
											"begin": 9668,
											"end": 9709,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9668,
											"end": 9709,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 9668,
											"end": 9709,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9668,
											"end": 9709,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9668,
											"end": 9709,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 9668,
											"end": 9709,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 9668,
											"end": 9709,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9668,
											"end": 9709,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 9668,
											"end": 9709,
											"name": "tag",
											"source": 6,
											"value": "420"
										},
										{
											"begin": 9668,
											"end": 9709,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9668,
											"end": 9709,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9668,
											"end": 9709,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9668,
											"end": 9709,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9668,
											"end": 9709,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9668,
											"end": 9709,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9668,
											"end": 9709,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9668,
											"end": 9709,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 9668,
											"end": 9709,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 9668,
											"end": 9709,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 9668,
											"end": 9709,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 9668,
											"end": 9709,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9668,
											"end": 9709,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9668,
											"end": 9709,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9668,
											"end": 9709,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9668,
											"end": 9709,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9668,
											"end": 9709,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9668,
											"end": 9709,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9668,
											"end": 9709,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9668,
											"end": 9709,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9668,
											"end": 9709,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9668,
											"end": 9709,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9668,
											"end": 9709,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9668,
											"end": 9709,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "421"
										},
										{
											"begin": 9668,
											"end": 9709,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9668,
											"end": 9709,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9668,
											"end": 9709,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 9668,
											"end": 9709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9668,
											"end": 9709,
											"name": "tag",
											"source": 6,
											"value": "421"
										},
										{
											"begin": 9668,
											"end": 9709,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9650,
											"end": 9734,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9650,
											"end": 9734,
											"name": "PUSH",
											"source": 6,
											"value": "C9C65396"
										},
										{
											"begin": 9743,
											"end": 9747,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 9767,
											"end": 9780,
											"name": "PUSH",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 9767,
											"end": 9780,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9767,
											"end": 9780,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9767,
											"end": 9780,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9767,
											"end": 9780,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9767,
											"end": 9780,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 9767,
											"end": 9780,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 9767,
											"end": 9780,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9767,
											"end": 9780,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9767,
											"end": 9780,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9750,
											"end": 9786,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9750,
											"end": 9786,
											"name": "PUSH",
											"source": 6,
											"value": "AD5C4648"
										},
										{
											"begin": 9750,
											"end": 9788,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9750,
											"end": 9788,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9750,
											"end": 9788,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9750,
											"end": 9788,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9750,
											"end": 9788,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9750,
											"end": 9788,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 9750,
											"end": 9788,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 9750,
											"end": 9788,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9750,
											"end": 9788,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9750,
											"end": 9788,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9750,
											"end": 9788,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9750,
											"end": 9788,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9750,
											"end": 9788,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9750,
											"end": 9788,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9750,
											"end": 9788,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9750,
											"end": 9788,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9750,
											"end": 9788,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9750,
											"end": 9788,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9750,
											"end": 9788,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 9750,
											"end": 9788,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 9750,
											"end": 9788,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 9750,
											"end": 9788,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9750,
											"end": 9788,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9750,
											"end": 9788,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9750,
											"end": 9788,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "423"
										},
										{
											"begin": 9750,
											"end": 9788,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9750,
											"end": 9788,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 9750,
											"end": 9788,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9750,
											"end": 9788,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9750,
											"end": 9788,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 9750,
											"end": 9788,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 9750,
											"end": 9788,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9750,
											"end": 9788,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 9750,
											"end": 9788,
											"name": "tag",
											"source": 6,
											"value": "423"
										},
										{
											"begin": 9750,
											"end": 9788,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9750,
											"end": 9788,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9750,
											"end": 9788,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9750,
											"end": 9788,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9750,
											"end": 9788,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9750,
											"end": 9788,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9750,
											"end": 9788,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9750,
											"end": 9788,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 9750,
											"end": 9788,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 9750,
											"end": 9788,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 9750,
											"end": 9788,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 9750,
											"end": 9788,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9750,
											"end": 9788,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9750,
											"end": 9788,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9750,
											"end": 9788,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9750,
											"end": 9788,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9750,
											"end": 9788,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9750,
											"end": 9788,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9750,
											"end": 9788,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9750,
											"end": 9788,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9750,
											"end": 9788,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9750,
											"end": 9788,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9750,
											"end": 9788,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9750,
											"end": 9788,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "424"
										},
										{
											"begin": 9750,
											"end": 9788,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9750,
											"end": 9788,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9750,
											"end": 9788,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 9750,
											"end": 9788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9750,
											"end": 9788,
											"name": "tag",
											"source": 6,
											"value": "424"
										},
										{
											"begin": 9750,
											"end": 9788,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9650,
											"end": 9789,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9650,
											"end": 9789,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9650,
											"end": 9789,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 9650,
											"end": 9789,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 9650,
											"end": 9789,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9650,
											"end": 9789,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 9650,
											"end": 9789,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9650,
											"end": 9789,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9650,
											"end": 9789,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13948,
											"end": 13963,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 13948,
											"end": 13963,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13948,
											"end": 13963,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9650,
											"end": 9789,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9650,
											"end": 9789,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9650,
											"end": 9789,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13930,
											"end": 13964,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14000,
											"end": 14015,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14000,
											"end": 14015,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 13980,
											"end": 13998,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 13980,
											"end": 13998,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13980,
											"end": 13998,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13973,
											"end": 14016,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13865,
											"end": 13883,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 13865,
											"end": 13883,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9650,
											"end": 9789,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9650,
											"end": 9789,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9650,
											"end": 9789,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9650,
											"end": 9789,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9650,
											"end": 9789,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9650,
											"end": 9789,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9650,
											"end": 9789,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9650,
											"end": 9789,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9650,
											"end": 9789,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 9650,
											"end": 9789,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 9650,
											"end": 9789,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 9650,
											"end": 9789,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9650,
											"end": 9789,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9650,
											"end": 9789,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9650,
											"end": 9789,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "428"
										},
										{
											"begin": 9650,
											"end": 9789,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9650,
											"end": 9789,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 9650,
											"end": 9789,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9650,
											"end": 9789,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9650,
											"end": 9789,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 9650,
											"end": 9789,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 9650,
											"end": 9789,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9650,
											"end": 9789,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 9650,
											"end": 9789,
											"name": "tag",
											"source": 6,
											"value": "428"
										},
										{
											"begin": 9650,
											"end": 9789,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9650,
											"end": 9789,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9650,
											"end": 9789,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9650,
											"end": 9789,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9650,
											"end": 9789,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9650,
											"end": 9789,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9650,
											"end": 9789,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9650,
											"end": 9789,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 9650,
											"end": 9789,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 9650,
											"end": 9789,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 9650,
											"end": 9789,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 9650,
											"end": 9789,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9650,
											"end": 9789,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9650,
											"end": 9789,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9650,
											"end": 9789,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9650,
											"end": 9789,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9650,
											"end": 9789,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9650,
											"end": 9789,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9650,
											"end": 9789,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9650,
											"end": 9789,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9650,
											"end": 9789,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9650,
											"end": 9789,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9650,
											"end": 9789,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9650,
											"end": 9789,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "429"
										},
										{
											"begin": 9650,
											"end": 9789,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9650,
											"end": 9789,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9650,
											"end": 9789,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 9650,
											"end": 9789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9650,
											"end": 9789,
											"name": "tag",
											"source": 6,
											"value": "429"
										},
										{
											"begin": 9650,
											"end": 9789,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9636,
											"end": 9647,
											"name": "PUSH",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 9636,
											"end": 9789,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9636,
											"end": 9789,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9636,
											"end": 9789,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9636,
											"end": 9789,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9636,
											"end": 9789,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9636,
											"end": 9789,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9636,
											"end": 9789,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9636,
											"end": 9789,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9636,
											"end": 9789,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9636,
											"end": 9789,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9636,
											"end": 9789,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 9636,
											"end": 9789,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9636,
											"end": 9789,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 9596,
											"end": 9796,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5660,
											"end": 6500,
											"name": "tag",
											"source": 6,
											"value": "378"
										},
										{
											"begin": 5660,
											"end": 6500,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5711,
											"end": 5731,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5734,
											"end": 5745,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "431"
										},
										{
											"begin": 5734,
											"end": 5743,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 5734,
											"end": 5745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5734,
											"end": 5745,
											"name": "tag",
											"source": 6,
											"value": "431"
										},
										{
											"begin": 5734,
											"end": 5745,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5775,
											"end": 5796,
											"name": "PUSH",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 5775,
											"end": 5796,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5711,
											"end": 5745,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5711,
											"end": 5745,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5760,
											"end": 5796,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5760,
											"end": 5796,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 5756,
											"end": 5987,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5756,
											"end": 5987,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "432"
										},
										{
											"begin": 5756,
											"end": 5987,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5812,
											"end": 5833,
											"name": "PUSH",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 5812,
											"end": 5848,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5812,
											"end": 5848,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5812,
											"end": 5848,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 5866,
											"end": 5890,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 5866,
											"end": 5890,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5866,
											"end": 5890,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 5866,
											"end": 5890,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5862,
											"end": 5957,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5862,
											"end": 5957,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "335"
										},
										{
											"begin": 5862,
											"end": 5957,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5910,
											"end": 5934,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 5910,
											"end": 5942,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5910,
											"end": 5942,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5910,
											"end": 5942,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5910,
											"end": 5942,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5910,
											"end": 5942,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 5970,
											"end": 5977,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5660,
											"end": 6500,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5756,
											"end": 5987,
											"name": "tag",
											"source": 6,
											"value": "432"
										},
										{
											"begin": 5756,
											"end": 5987,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6074,
											"end": 6086,
											"name": "PUSH",
											"source": 6,
											"value": "F"
										},
										{
											"begin": 6074,
											"end": 6104,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5997,
											"end": 6019,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5997,
											"end": 6019,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6022,
											"end": 6134,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "434"
										},
										{
											"begin": 6022,
											"end": 6134,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1430,
											"end": 1436,
											"name": "PUSH",
											"source": 6,
											"value": "2710"
										},
										{
											"begin": 1430,
											"end": 1436,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6022,
											"end": 6105,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 6022,
											"end": 6105,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6061,
											"end": 6104,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "436"
										},
										{
											"begin": 6061,
											"end": 6104,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6074,
											"end": 6104,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 6074,
											"end": 6104,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6074,
											"end": 6104,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 6074,
											"end": 6104,
											"name": "PUSH",
											"source": 6,
											"value": "FFFF"
										},
										{
											"begin": 6074,
											"end": 6104,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1430,
											"end": 1436,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6061,
											"end": 6104,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "411"
										},
										{
											"begin": 6061,
											"end": 6104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6061,
											"end": 6104,
											"name": "tag",
											"source": 6,
											"value": "436"
										},
										{
											"begin": 6061,
											"end": 6104,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6022,
											"end": 6043,
											"name": "PUSH",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 6022,
											"end": 6043,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6022,
											"end": 6043,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6022,
											"end": 6060,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 6022,
											"end": 6105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6022,
											"end": 6134,
											"name": "tag",
											"source": 6,
											"value": "434"
										},
										{
											"begin": 6022,
											"end": 6134,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5997,
											"end": 6134,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5997,
											"end": 6134,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6164,
											"end": 6178,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6149,
											"end": 6161,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6149,
											"end": 6178,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 6145,
											"end": 6297,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6145,
											"end": 6297,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "437"
										},
										{
											"begin": 6145,
											"end": 6297,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6194,
											"end": 6218,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 6194,
											"end": 6225,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6194,
											"end": 6225,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6194,
											"end": 6225,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6221,
											"end": 6225,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 6194,
											"end": 6225,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 6194,
											"end": 6225,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6194,
											"end": 6225,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 6265,
											"end": 6286,
											"name": "PUSH",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 6265,
											"end": 6286,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6239,
											"end": 6262,
											"name": "PUSH",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 6239,
											"end": 6286,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 6145,
											"end": 6297,
											"name": "tag",
											"source": 6,
											"value": "437"
										},
										{
											"begin": 6145,
											"end": 6297,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6311,
											"end": 6335,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 6311,
											"end": 6335,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6311,
											"end": 6335,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 6311,
											"end": 6335,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6311,
											"end": 6385,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6311,
											"end": 6385,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6311,
											"end": 6385,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "438"
										},
										{
											"begin": 6311,
											"end": 6385,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6355,
											"end": 6378,
											"name": "PUSH",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 6355,
											"end": 6378,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6355,
											"end": 6385,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "439"
										},
										{
											"begin": 6355,
											"end": 6385,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6383,
											"end": 6384,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 6355,
											"end": 6382,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 6355,
											"end": 6385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6355,
											"end": 6385,
											"name": "tag",
											"source": 6,
											"value": "439"
										},
										{
											"begin": 6355,
											"end": 6385,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6339,
											"end": 6351,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6339,
											"end": 6385,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 6339,
											"end": 6385,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6311,
											"end": 6385,
											"name": "tag",
											"source": 6,
											"value": "438"
										},
										{
											"begin": 6311,
											"end": 6385,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6307,
											"end": 6494,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6307,
											"end": 6494,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "440"
										},
										{
											"begin": 6307,
											"end": 6494,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6401,
											"end": 6425,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 6401,
											"end": 6433,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6401,
											"end": 6433,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6401,
											"end": 6433,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6401,
											"end": 6433,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6401,
											"end": 6433,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 6447,
											"end": 6468,
											"name": "PUSH",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 6447,
											"end": 6483,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6447,
											"end": 6483,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6447,
											"end": 6483,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 6307,
											"end": 6494,
											"name": "tag",
											"source": 6,
											"value": "440"
										},
										{
											"begin": 6307,
											"end": 6494,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5701,
											"end": 6500,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5701,
											"end": 6500,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5660,
											"end": 6500,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4140,
											"end": 4921,
											"name": "tag",
											"source": 6,
											"value": "386"
										},
										{
											"begin": 4140,
											"end": 4921,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4289,
											"end": 4305,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4289,
											"end": 4305,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4266,
											"end": 4273,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4289,
											"end": 4305,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4289,
											"end": 4305,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4289,
											"end": 4305,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4289,
											"end": 4297,
											"name": "PUSH",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 4289,
											"end": 4305,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4289,
											"end": 4305,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4289,
											"end": 4305,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4289,
											"end": 4305,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4289,
											"end": 4305,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4289,
											"end": 4305,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4289,
											"end": 4305,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 4289,
											"end": 4305,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4289,
											"end": 4305,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4289,
											"end": 4328,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "442"
										},
										{
											"begin": 4289,
											"end": 4328,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4309,
											"end": 4328,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4309,
											"end": 4328,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4309,
											"end": 4328,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4309,
											"end": 4328,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4309,
											"end": 4328,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4309,
											"end": 4328,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4309,
											"end": 4317,
											"name": "PUSH",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 4309,
											"end": 4328,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4309,
											"end": 4328,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4309,
											"end": 4328,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4309,
											"end": 4328,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4309,
											"end": 4328,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4309,
											"end": 4328,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4309,
											"end": 4328,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 4309,
											"end": 4328,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4289,
											"end": 4328,
											"name": "tag",
											"source": 6,
											"value": "442"
										},
										{
											"begin": 4289,
											"end": 4328,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4285,
											"end": 4338,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4285,
											"end": 4338,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "443"
										},
										{
											"begin": 4285,
											"end": 4338,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4337,
											"end": 4338,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4330,
											"end": 4338,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 4330,
											"end": 4338,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4285,
											"end": 4338,
											"name": "tag",
											"source": 6,
											"value": "443"
										},
										{
											"begin": 4285,
											"end": 4338,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4372,
											"end": 4383,
											"name": "PUSH",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 4372,
											"end": 4383,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4372,
											"end": 4383,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4372,
											"end": 4383,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4372,
											"end": 4383,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4362,
											"end": 4383,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4362,
											"end": 4383,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4362,
											"end": 4383,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4362,
											"end": 4383,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4362,
											"end": 4383,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 4362,
											"end": 4383,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4407,
											"end": 4431,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4407,
											"end": 4431,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4407,
											"end": 4431,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 4442,
											"end": 4915,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4442,
											"end": 4915,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4442,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "444"
										},
										{
											"begin": 4442,
											"end": 4915,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4513,
											"end": 4521,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 4513,
											"end": 4528,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4474,
											"end": 4546,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "445"
										},
										{
											"begin": 4474,
											"end": 4546,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1430,
											"end": 1436,
											"name": "PUSH",
											"source": 6,
											"value": "2710"
										},
										{
											"begin": 1430,
											"end": 1436,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4474,
											"end": 4530,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 4474,
											"end": 4530,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4485,
											"end": 4529,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "447"
										},
										{
											"begin": 4485,
											"end": 4529,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4513,
											"end": 4528,
											"name": "PUSH",
											"source": 6,
											"value": "FFFF"
										},
										{
											"begin": 4493,
											"end": 4507,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4493,
											"end": 4507,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4493,
											"end": 4507,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4493,
											"end": 4507,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4513,
											"end": 4528,
											"name": "PUSH",
											"source": 6,
											"value": "10000"
										},
										{
											"begin": 4513,
											"end": 4528,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4513,
											"end": 4528,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 4513,
											"end": 4528,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4485,
											"end": 4512,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "393"
										},
										{
											"begin": 4485,
											"end": 4529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4485,
											"end": 4529,
											"name": "tag",
											"source": 6,
											"value": "447"
										},
										{
											"begin": 4485,
											"end": 4529,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4474,
											"end": 4480,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4474,
											"end": 4480,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4474,
											"end": 4484,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 4474,
											"end": 4530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4474,
											"end": 4546,
											"name": "tag",
											"source": 6,
											"value": "445"
										},
										{
											"begin": 4474,
											"end": 4546,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4467,
											"end": 4546,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4467,
											"end": 4546,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4467,
											"end": 4546,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4467,
											"end": 4546,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4467,
											"end": 4546,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 4467,
											"end": 4546,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4442,
											"end": 4915,
											"name": "tag",
											"source": 6,
											"value": "444"
										},
										{
											"begin": 4442,
											"end": 4915,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4567,
											"end": 4573,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4563,
											"end": 4915,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4563,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "449"
										},
										{
											"begin": 4563,
											"end": 4915,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4636,
											"end": 4644,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 4636,
											"end": 4652,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4596,
											"end": 4670,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "445"
										},
										{
											"begin": 4596,
											"end": 4670,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1430,
											"end": 1436,
											"name": "PUSH",
											"source": 6,
											"value": "2710"
										},
										{
											"begin": 1430,
											"end": 1436,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4596,
											"end": 4654,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 4596,
											"end": 4654,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4607,
											"end": 4653,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "447"
										},
										{
											"begin": 4607,
											"end": 4653,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4636,
											"end": 4652,
											"name": "PUSH",
											"source": 6,
											"value": "FFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4615,
											"end": 4630,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4615,
											"end": 4630,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 4615,
											"end": 4630,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4615,
											"end": 4630,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4615,
											"end": 4630,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "30"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4636,
											"end": 4652,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4636,
											"end": 4652,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 4636,
											"end": 4652,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4607,
											"end": 4635,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "393"
										},
										{
											"begin": 4607,
											"end": 4653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4563,
											"end": 4915,
											"name": "tag",
											"source": 6,
											"value": "449"
										},
										{
											"begin": 4563,
											"end": 4915,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4750,
											"end": 4758,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 4750,
											"end": 4766,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4701,
											"end": 4718,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4701,
											"end": 4718,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4721,
											"end": 4767,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "454"
										},
										{
											"begin": 4721,
											"end": 4767,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4750,
											"end": 4766,
											"name": "PUSH",
											"source": 6,
											"value": "FFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4729,
											"end": 4744,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4729,
											"end": 4744,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 4729,
											"end": 4744,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4729,
											"end": 4744,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4729,
											"end": 4744,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "30"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4750,
											"end": 4766,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4750,
											"end": 4766,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 4750,
											"end": 4766,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4721,
											"end": 4749,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "393"
										},
										{
											"begin": 4721,
											"end": 4767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4721,
											"end": 4767,
											"name": "tag",
											"source": 6,
											"value": "454"
										},
										{
											"begin": 4721,
											"end": 4767,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4701,
											"end": 4767,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4701,
											"end": 4767,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4781,
											"end": 4800,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4803,
											"end": 4844,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "455"
										},
										{
											"begin": 4841,
											"end": 4843,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 4803,
											"end": 4836,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 4817,
											"end": 4835,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 4817,
											"end": 4835,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4803,
											"end": 4812,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4803,
											"end": 4816,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 4803,
											"end": 4816,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4803,
											"end": 4836,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4803,
											"end": 4836,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4803,
											"end": 4836,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4803,
											"end": 4836,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4803,
											"end": 4836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4803,
											"end": 4844,
											"name": "tag",
											"source": 6,
											"value": "455"
										},
										{
											"begin": 4803,
											"end": 4844,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4781,
											"end": 4844,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4865,
											"end": 4904,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "457"
										},
										{
											"begin": 1430,
											"end": 1436,
											"name": "PUSH",
											"source": 6,
											"value": "2710"
										},
										{
											"begin": 4865,
											"end": 4888,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 4865,
											"end": 4871,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 4781,
											"end": 4844,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4865,
											"end": 4875,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 4865,
											"end": 4888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4865,
											"end": 4904,
											"name": "tag",
											"source": 6,
											"value": "457"
										},
										{
											"begin": 4865,
											"end": 4904,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4858,
											"end": 4904,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 4858,
											"end": 4904,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4858,
											"end": 4904,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4858,
											"end": 4904,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4858,
											"end": 4904,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4858,
											"end": 4904,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4858,
											"end": 4904,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 4858,
											"end": 4904,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "tag",
											"source": 0,
											"value": "393"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2813,
											"end": 2820,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 2843,
											"end": 2844,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2839,
											"end": 2840,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 2839,
											"end": 2844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7456,
											"end": 8244,
											"name": "tag",
											"source": 2,
											"value": "399"
										},
										{
											"begin": 7456,
											"end": 8244,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7552,
											"end": 7570,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7552,
											"end": 7570,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "462"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14229,
											"end": 14231,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14211,
											"end": 14232,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14268,
											"end": 14270,
											"name": "PUSH",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 14248,
											"end": 14266,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 14248,
											"end": 14266,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14248,
											"end": 14266,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14241,
											"end": 14271,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14307,
											"end": 14341,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 14287,
											"end": 14305,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 14287,
											"end": 14305,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14287,
											"end": 14305,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14280,
											"end": 14342,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14358,
											"end": 14376,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 14358,
											"end": 14376,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14358,
											"end": 14376,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14351,
											"end": 14386,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14403,
											"end": 14422,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 14403,
											"end": 14422,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 14027,
											"end": 14428,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "tag",
											"source": 2,
											"value": "462"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7630,
											"end": 7646,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7630,
											"end": 7646,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "465"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14635,
											"end": 14637,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14617,
											"end": 14638,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14674,
											"end": 14676,
											"name": "PUSH",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 14654,
											"end": 14672,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 14654,
											"end": 14672,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14654,
											"end": 14672,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14647,
											"end": 14677,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14713,
											"end": 14747,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 14693,
											"end": 14711,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 14693,
											"end": 14711,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14693,
											"end": 14711,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14686,
											"end": 14748,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14764,
											"end": 14782,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 14764,
											"end": 14782,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14764,
											"end": 14782,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14757,
											"end": 14790,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14807,
											"end": 14826,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 14807,
											"end": 14826,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 14433,
											"end": 14832,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "tag",
											"source": 2,
											"value": "465"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7746,
											"end": 7765,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "470"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15039,
											"end": 15041,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15021,
											"end": 15042,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 15078,
											"end": 15080,
											"name": "PUSH",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 15058,
											"end": 15076,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 15058,
											"end": 15076,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15058,
											"end": 15076,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15051,
											"end": 15081,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 15117,
											"end": 15151,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 15097,
											"end": 15115,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 15097,
											"end": 15115,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15097,
											"end": 15115,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15090,
											"end": 15152,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15168,
											"end": 15186,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 15168,
											"end": 15186,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15168,
											"end": 15186,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15161,
											"end": 15197,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 15214,
											"end": 15233,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 15214,
											"end": 15233,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 14837,
											"end": 15239,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "tag",
											"source": 2,
											"value": "470"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7908,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7917,
											"end": 7937,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7917,
											"end": 7937,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7917,
											"end": 7937,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7937,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7937,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 8200,
											"end": 8237,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "365"
										},
										{
											"begin": 12073,
											"end": 12164,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4928,
											"end": 5654,
											"name": "tag",
											"source": 6,
											"value": "401"
										},
										{
											"begin": 4928,
											"end": 5654,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5014,
											"end": 5029,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5039,
											"end": 5055,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5070,
											"end": 5075,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5066,
											"end": 5488,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5066,
											"end": 5488,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "477"
										},
										{
											"begin": 5066,
											"end": 5488,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5152,
											"end": 5160,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 5152,
											"end": 5167,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5101,
											"end": 5168,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "478"
										},
										{
											"begin": 5101,
											"end": 5168,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5135,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "479"
										},
										{
											"begin": 5135,
											"end": 5167,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5152,
											"end": 5167,
											"name": "PUSH",
											"source": 6,
											"value": "FFFF"
										},
										{
											"begin": 5152,
											"end": 5167,
											"name": "PUSH",
											"source": 6,
											"value": "10000"
										},
										{
											"begin": 5152,
											"end": 5167,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5152,
											"end": 5167,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 5152,
											"end": 5167,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5152,
											"end": 5167,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5152,
											"end": 5167,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5135,
											"end": 5149,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5135,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 5135,
											"end": 5167,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5135,
											"end": 5167,
											"name": "tag",
											"source": 6,
											"value": "479"
										},
										{
											"begin": 5135,
											"end": 5167,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5115,
											"end": 5123,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 5115,
											"end": 5129,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5101,
											"end": 5168,
											"name": "PUSH",
											"source": 6,
											"value": "FFFF"
										},
										{
											"begin": 5101,
											"end": 5168,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5101,
											"end": 5168,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5101,
											"end": 5168,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5101,
											"end": 5168,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5101,
											"end": 5130,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 5101,
											"end": 5130,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5101,
											"end": 5110,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 5101,
											"end": 5110,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5115,
											"end": 5129,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5101,
											"end": 5114,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 5101,
											"end": 5130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5101,
											"end": 5168,
											"name": "tag",
											"source": 6,
											"value": "478"
										},
										{
											"begin": 5101,
											"end": 5168,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5091,
											"end": 5168,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5091,
											"end": 5168,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5066,
											"end": 5488,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "486"
										},
										{
											"begin": 5066,
											"end": 5488,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5066,
											"end": 5488,
											"name": "tag",
											"source": 6,
											"value": "477"
										},
										{
											"begin": 5066,
											"end": 5488,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5189,
											"end": 5195,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5185,
											"end": 5488,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5185,
											"end": 5488,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "482"
										},
										{
											"begin": 5185,
											"end": 5488,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5274,
											"end": 5282,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 5274,
											"end": 5290,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5221,
											"end": 5291,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "478"
										},
										{
											"begin": 5221,
											"end": 5291,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5256,
											"end": 5290,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "484"
										},
										{
											"begin": 5256,
											"end": 5290,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5274,
											"end": 5290,
											"name": "PUSH",
											"source": 6,
											"value": "FFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "30"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5274,
											"end": 5290,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5274,
											"end": 5290,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 5274,
											"end": 5290,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5274,
											"end": 5290,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5274,
											"end": 5290,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5256,
											"end": 5271,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5256,
											"end": 5271,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 5256,
											"end": 5271,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5256,
											"end": 5290,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 5256,
											"end": 5290,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5256,
											"end": 5290,
											"name": "tag",
											"source": 6,
											"value": "484"
										},
										{
											"begin": 5256,
											"end": 5290,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5235,
											"end": 5243,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 5235,
											"end": 5250,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5221,
											"end": 5291,
											"name": "PUSH",
											"source": 6,
											"value": "FFFF"
										},
										{
											"begin": 5221,
											"end": 5291,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5221,
											"end": 5291,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5221,
											"end": 5291,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5221,
											"end": 5291,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5221,
											"end": 5251,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 5221,
											"end": 5251,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5221,
											"end": 5230,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 5221,
											"end": 5230,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5235,
											"end": 5250,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5235,
											"end": 5250,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5235,
											"end": 5250,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 5235,
											"end": 5250,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5221,
											"end": 5234,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 5221,
											"end": 5251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5185,
											"end": 5488,
											"name": "tag",
											"source": 6,
											"value": "482"
										},
										{
											"begin": 5185,
											"end": 5488,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5360,
											"end": 5368,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 5360,
											"end": 5376,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5322,
											"end": 5339,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5322,
											"end": 5339,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5342,
											"end": 5376,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "487"
										},
										{
											"begin": 5342,
											"end": 5376,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5360,
											"end": 5376,
											"name": "PUSH",
											"source": 6,
											"value": "FFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "30"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5360,
											"end": 5376,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5360,
											"end": 5376,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 5360,
											"end": 5376,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5360,
											"end": 5376,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5360,
											"end": 5376,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5342,
											"end": 5357,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5342,
											"end": 5357,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 5342,
											"end": 5357,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5342,
											"end": 5376,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 5342,
											"end": 5376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5342,
											"end": 5376,
											"name": "tag",
											"source": 6,
											"value": "487"
										},
										{
											"begin": 5342,
											"end": 5376,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5322,
											"end": 5376,
											"name": "PUSH",
											"source": 6,
											"value": "FFFF"
										},
										{
											"begin": 5322,
											"end": 5376,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5322,
											"end": 5376,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5322,
											"end": 5376,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5400,
											"end": 5477,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "488"
										},
										{
											"begin": 5474,
											"end": 5476,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 5400,
											"end": 5469,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 5450,
											"end": 5468,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 5450,
											"end": 5468,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5400,
											"end": 5445,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 5435,
											"end": 5444,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5400,
											"end": 5430,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 5414,
											"end": 5422,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 5414,
											"end": 5429,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5414,
											"end": 5429,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5414,
											"end": 5429,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5414,
											"end": 5429,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5414,
											"end": 5429,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5414,
											"end": 5429,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5414,
											"end": 5429,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 5414,
											"end": 5429,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 5414,
											"end": 5429,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5414,
											"end": 5429,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 5414,
											"end": 5429,
											"name": "PUSH",
											"source": 6,
											"value": "FFFF"
										},
										{
											"begin": 5414,
											"end": 5429,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5400,
											"end": 5430,
											"name": "PUSH",
											"source": 6,
											"value": "FFFF"
										},
										{
											"begin": 5400,
											"end": 5430,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5400,
											"end": 5409,
											"name": "DUP14",
											"source": 6
										},
										{
											"begin": 5400,
											"end": 5413,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 5400,
											"end": 5413,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5400,
											"end": 5430,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5400,
											"end": 5430,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5400,
											"end": 5430,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5400,
											"end": 5430,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5400,
											"end": 5430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5400,
											"end": 5477,
											"name": "tag",
											"source": 6,
											"value": "488"
										},
										{
											"begin": 5400,
											"end": 5477,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5390,
											"end": 5477,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5390,
											"end": 5477,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5308,
											"end": 5488,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5185,
											"end": 5488,
											"name": "tag",
											"source": 6,
											"value": "486"
										},
										{
											"begin": 5185,
											"end": 5488,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5509,
											"end": 5528,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "492"
										},
										{
											"begin": 5521,
											"end": 5528,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5509,
											"end": 5518,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5509,
											"end": 5528,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "411"
										},
										{
											"begin": 5509,
											"end": 5528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5509,
											"end": 5528,
											"name": "tag",
											"source": 6,
											"value": "492"
										},
										{
											"begin": 5509,
											"end": 5528,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5555,
											"end": 5562,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5538,
											"end": 5551,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 5538,
											"end": 5551,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5538,
											"end": 5562,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5538,
											"end": 5562,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5538,
											"end": 5562,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5538,
											"end": 5562,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "493"
										},
										{
											"begin": 5538,
											"end": 5562,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5538,
											"end": 5562,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5538,
											"end": 5562,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 5538,
											"end": 5562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5538,
											"end": 5562,
											"name": "tag",
											"source": 6,
											"value": "493"
										},
										{
											"begin": 5538,
											"end": 5562,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5538,
											"end": 5562,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5538,
											"end": 5562,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5538,
											"end": 5562,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5538,
											"end": 5562,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5538,
											"end": 5562,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5538,
											"end": 5562,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 5538,
											"end": 5562,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5590,
											"end": 5598,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5572,
											"end": 5586,
											"name": "PUSH",
											"source": 6,
											"value": "B"
										},
										{
											"begin": 5572,
											"end": 5586,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5572,
											"end": 5598,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5572,
											"end": 5598,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5572,
											"end": 5598,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5572,
											"end": 5598,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "494"
										},
										{
											"begin": 5572,
											"end": 5598,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5572,
											"end": 5598,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5572,
											"end": 5598,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 5572,
											"end": 5598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5572,
											"end": 5598,
											"name": "tag",
											"source": 6,
											"value": "494"
										},
										{
											"begin": 5572,
											"end": 5598,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5572,
											"end": 5598,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5572,
											"end": 5598,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5572,
											"end": 5598,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5614,
											"end": 5647,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5614,
											"end": 5647,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5614,
											"end": 5647,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 15418,
											"end": 15443,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 15418,
											"end": 15443,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15418,
											"end": 15443,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 15474,
											"end": 15476,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 15459,
											"end": 15477,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15459,
											"end": 15477,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15452,
											"end": 15486,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 15452,
											"end": 15486,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15452,
											"end": 15486,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5614,
											"end": 5647,
											"name": "PUSH",
											"source": 6,
											"value": "F2D9F3F00FC700757EB74F9AA3DBA0E2EB1280E0C6E0CF65962CC055528D7A90"
										},
										{
											"begin": 5614,
											"end": 5647,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 15391,
											"end": 15409,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5614,
											"end": 5647,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5614,
											"end": 5647,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5614,
											"end": 5647,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5614,
											"end": 5647,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5614,
											"end": 5647,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5614,
											"end": 5647,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5614,
											"end": 5647,
											"name": "LOG1",
											"source": 6
										},
										{
											"begin": 5004,
											"end": 5654,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5004,
											"end": 5654,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4928,
											"end": 5654,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4928,
											"end": 5654,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4928,
											"end": 5654,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4928,
											"end": 5654,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10800,
											"end": 10995,
											"name": "tag",
											"source": 6,
											"value": "404"
										},
										{
											"begin": 10800,
											"end": 10995,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10873,
											"end": 10881,
											"name": "PUSH",
											"source": 6,
											"value": "C"
										},
										{
											"begin": 10873,
											"end": 10881,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10849,
											"end": 10853,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10849,
											"end": 10853,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10873,
											"end": 10881,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 10873,
											"end": 10881,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10872,
											"end": 10881,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10872,
											"end": 10947,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10872,
											"end": 10947,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10872,
											"end": 10947,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "498"
										},
										{
											"begin": 10872,
											"end": 10947,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10934,
											"end": 10947,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 10934,
											"end": 10947,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10915,
											"end": 10929,
											"name": "PUSH",
											"source": 6,
											"value": "B"
										},
										{
											"begin": 10915,
											"end": 10929,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10897,
											"end": 10910,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 10897,
											"end": 10910,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10897,
											"end": 10930,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "499"
										},
										{
											"begin": 10897,
											"end": 10930,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10897,
											"end": 10914,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "393"
										},
										{
											"begin": 10897,
											"end": 10930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10897,
											"end": 10930,
											"name": "tag",
											"source": 6,
											"value": "499"
										},
										{
											"begin": 10897,
											"end": 10930,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10897,
											"end": 10947,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 10897,
											"end": 10947,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10872,
											"end": 10947,
											"name": "tag",
											"source": 6,
											"value": "498"
										},
										{
											"begin": 10872,
											"end": 10947,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10872,
											"end": 10988,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10872,
											"end": 10988,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10872,
											"end": 10988,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 10872,
											"end": 10988,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10977,
											"end": 10988,
											"name": "PUSH",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 10977,
											"end": 10988,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10977,
											"end": 10988,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10963,
											"end": 10973,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 10963,
											"end": 10988,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 10963,
											"end": 10988,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10963,
											"end": 10988,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10800,
											"end": 10995,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6506,
											"end": 7212,
											"name": "tag",
											"source": 6,
											"value": "407"
										},
										{
											"begin": 6506,
											"end": 7212,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6551,
											"end": 6570,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6589,
											"end": 6603,
											"name": "PUSH",
											"source": 6,
											"value": "B"
										},
										{
											"begin": 6589,
											"end": 6603,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6573,
											"end": 6586,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 6573,
											"end": 6586,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6573,
											"end": 6603,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "502"
										},
										{
											"begin": 6573,
											"end": 6603,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6573,
											"end": 6603,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6573,
											"end": 6603,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 6573,
											"end": 6603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6573,
											"end": 6603,
											"name": "tag",
											"source": 6,
											"value": "502"
										},
										{
											"begin": 6573,
											"end": 6603,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6551,
											"end": 6603,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6551,
											"end": 6603,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6631,
											"end": 6644,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 6631,
											"end": 6644,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6617,
											"end": 6628,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6617,
											"end": 6644,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 6613,
											"end": 6653,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6613,
											"end": 6653,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "503"
										},
										{
											"begin": 6613,
											"end": 6653,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6646,
											"end": 6653,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6506,
											"end": 7212,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6613,
											"end": 6653,
											"name": "tag",
											"source": 6,
											"value": "503"
										},
										{
											"begin": 6613,
											"end": 6653,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6663,
											"end": 6671,
											"name": "PUSH",
											"source": 6,
											"value": "C"
										},
										{
											"begin": 6663,
											"end": 6678,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6663,
											"end": 6678,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6663,
											"end": 6678,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6674,
											"end": 6678,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 6663,
											"end": 6678,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 6663,
											"end": 6678,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6663,
											"end": 6678,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 6763,
											"end": 6777,
											"name": "PUSH",
											"source": 6,
											"value": "B"
										},
										{
											"begin": 6763,
											"end": 6777,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6713,
											"end": 6734,
											"name": "SELFBALANCE",
											"source": 6
										},
										{
											"begin": 6713,
											"end": 6734,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6745,
											"end": 6778,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "504"
										},
										{
											"begin": 6745,
											"end": 6778,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6745,
											"end": 6762,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "505"
										},
										{
											"begin": 6745,
											"end": 6778,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6745,
											"end": 6778,
											"name": "tag",
											"source": 6,
											"value": "504"
										},
										{
											"begin": 6745,
											"end": 6778,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6788,
											"end": 6802,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6805,
											"end": 6846,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "506"
										},
										{
											"begin": 6805,
											"end": 6826,
											"name": "SELFBALANCE",
											"source": 6
										},
										{
											"begin": 6831,
											"end": 6845,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6805,
											"end": 6830,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 6805,
											"end": 6846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6805,
											"end": 6846,
											"name": "tag",
											"source": 6,
											"value": "506"
										},
										{
											"begin": 6805,
											"end": 6846,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6788,
											"end": 6846,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6788,
											"end": 6846,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6864,
											"end": 6871,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "507"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6864,
											"end": 6871,
											"name": "tag",
											"source": 6,
											"value": "507"
										},
										{
											"begin": 6864,
											"end": 6871,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6856,
											"end": 6881,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6856,
											"end": 6889,
											"name": "PUSH",
											"source": 6,
											"value": "8FC"
										},
										{
											"begin": 6882,
											"end": 6888,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6856,
											"end": 6889,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6856,
											"end": 6889,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6856,
											"end": 6889,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6856,
											"end": 6889,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 6856,
											"end": 6889,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6856,
											"end": 6889,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6856,
											"end": 6889,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6856,
											"end": 6889,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6856,
											"end": 6889,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6856,
											"end": 6889,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6856,
											"end": 6889,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6856,
											"end": 6889,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6856,
											"end": 6889,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6856,
											"end": 6889,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6856,
											"end": 6889,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6856,
											"end": 6889,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 6856,
											"end": 6889,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 6856,
											"end": 6889,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 6856,
											"end": 6889,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 6856,
											"end": 6889,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6856,
											"end": 6889,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6856,
											"end": 6889,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6856,
											"end": 6889,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6856,
											"end": 6889,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6856,
											"end": 6889,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6856,
											"end": 6889,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6856,
											"end": 6889,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "509"
										},
										{
											"begin": 6856,
											"end": 6889,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6856,
											"end": 6889,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 6856,
											"end": 6889,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6856,
											"end": 6889,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6856,
											"end": 6889,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 6856,
											"end": 6889,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 6856,
											"end": 6889,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6856,
											"end": 6889,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6856,
											"end": 6889,
											"name": "tag",
											"source": 6,
											"value": "509"
										},
										{
											"begin": 6856,
											"end": 6889,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6919,
											"end": 6932,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 6919,
											"end": 6932,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6900,
											"end": 6916,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6957,
											"end": 6972,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "510"
										},
										{
											"begin": 6919,
											"end": 6932,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6970,
											"end": 6971,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 6957,
											"end": 6969,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "263"
										},
										{
											"begin": 6957,
											"end": 6972,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6957,
											"end": 6972,
											"name": "tag",
											"source": 6,
											"value": "510"
										},
										{
											"begin": 6957,
											"end": 6972,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6942,
											"end": 6972,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6942,
											"end": 6972,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6982,
											"end": 7005,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "511"
										},
										{
											"begin": 7000,
											"end": 7004,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6982,
											"end": 6999,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "505"
										},
										{
											"begin": 6982,
											"end": 7005,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6982,
											"end": 7005,
											"name": "tag",
											"source": 6,
											"value": "511"
										},
										{
											"begin": 6982,
											"end": 7005,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7024,
											"end": 7037,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7040,
											"end": 7073,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "512"
										},
										{
											"begin": 7040,
											"end": 7061,
											"name": "SELFBALANCE",
											"source": 6
										},
										{
											"begin": 7066,
											"end": 7072,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7040,
											"end": 7065,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 7040,
											"end": 7073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7040,
											"end": 7073,
											"name": "tag",
											"source": 6,
											"value": "512"
										},
										{
											"begin": 7040,
											"end": 7073,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7024,
											"end": 7073,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7083,
											"end": 7123,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "513"
										},
										{
											"begin": 7097,
											"end": 7115,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "514"
										},
										{
											"begin": 7097,
											"end": 7105,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7110,
											"end": 7114,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7097,
											"end": 7109,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 7097,
											"end": 7115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7097,
											"end": 7115,
											"name": "tag",
											"source": 6,
											"value": "514"
										},
										{
											"begin": 7097,
											"end": 7115,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7117,
											"end": 7122,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7083,
											"end": 7096,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "515"
										},
										{
											"begin": 7083,
											"end": 7123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7083,
											"end": 7123,
											"name": "tag",
											"source": 6,
											"value": "513"
										},
										{
											"begin": 7083,
											"end": 7123,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7150,
											"end": 7151,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7134,
											"end": 7147,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 7134,
											"end": 7151,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7134,
											"end": 7151,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7134,
											"end": 7151,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 7161,
											"end": 7175,
											"name": "PUSH",
											"source": 6,
											"value": "B"
										},
										{
											"begin": 7161,
											"end": 7179,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7189,
											"end": 7197,
											"name": "PUSH",
											"source": 6,
											"value": "C"
										},
										{
											"begin": 7189,
											"end": 7205,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7189,
											"end": 7205,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7189,
											"end": 7205,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7189,
											"end": 7205,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7189,
											"end": 7205,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6506,
											"end": 7212,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12073,
											"end": 12164,
											"name": "tag",
											"source": 2,
											"value": "469"
										},
										{
											"begin": 12073,
											"end": 12164,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12073,
											"end": 12164,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12073,
											"end": 12164,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12073,
											"end": 12164,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12073,
											"end": 12164,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9802,
											"end": 10240,
											"name": "tag",
											"source": 6,
											"value": "505"
										},
										{
											"begin": 9802,
											"end": 10240,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9887,
											"end": 9903,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9887,
											"end": 9903,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9887,
											"end": 9903,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9901,
											"end": 9902,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 9887,
											"end": 9903,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9887,
											"end": 9903,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9887,
											"end": 9903,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9887,
											"end": 9903,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 9887,
											"end": 9903,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9887,
											"end": 9903,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9887,
											"end": 9903,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9887,
											"end": 9903,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9863,
											"end": 9884,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9863,
											"end": 9884,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9887,
											"end": 9903,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9887,
											"end": 9903,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9887,
											"end": 9903,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9887,
											"end": 9903,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9887,
											"end": 9903,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9887,
											"end": 9903,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 9887,
											"end": 9903,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9887,
											"end": 9903,
											"name": "CALLDATACOPY",
											"source": 6
										},
										{
											"begin": 9887,
											"end": 9903,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9887,
											"end": 9903,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9887,
											"end": 9903,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9863,
											"end": 9903,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9863,
											"end": 9903,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9931,
											"end": 9935,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 9913,
											"end": 9917,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9918,
											"end": 9919,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9913,
											"end": 9920,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9913,
											"end": 9920,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9913,
											"end": 9920,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9913,
											"end": 9920,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 9913,
											"end": 9920,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "524"
										},
										{
											"begin": 9913,
											"end": 9920,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9913,
											"end": 9920,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "524"
										},
										{
											"begin": 9913,
											"end": 9920,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "525"
										},
										{
											"begin": 9913,
											"end": 9920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9913,
											"end": 9920,
											"name": "tag",
											"source": 6,
											"value": "524"
										},
										{
											"begin": 9913,
											"end": 9920,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9913,
											"end": 9936,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9913,
											"end": 9936,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9913,
											"end": 9936,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9913,
											"end": 9920,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9913,
											"end": 9920,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9913,
											"end": 9920,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9913,
											"end": 9920,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 9913,
											"end": 9920,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9913,
											"end": 9920,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9913,
											"end": 9920,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9913,
											"end": 9920,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9913,
											"end": 9920,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9913,
											"end": 9920,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9913,
											"end": 9936,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9913,
											"end": 9936,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9913,
											"end": 9936,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9913,
											"end": 9936,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9973,
											"end": 9986,
											"name": "PUSH",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 9973,
											"end": 9986,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9956,
											"end": 9994,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9956,
											"end": 9994,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9956,
											"end": 9994,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "15AB88C9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9956,
											"end": 9994,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9956,
											"end": 9994,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9956,
											"end": 9994,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9956,
											"end": 9994,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9973,
											"end": 9986,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9973,
											"end": 9986,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9973,
											"end": 9986,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 9973,
											"end": 9986,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9973,
											"end": 9986,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9956,
											"end": 9992,
											"name": "PUSH",
											"source": 6,
											"value": "AD5C4648"
										},
										{
											"begin": 9956,
											"end": 9992,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9956,
											"end": 9994,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9956,
											"end": 9994,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9956,
											"end": 9994,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9956,
											"end": 9994,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9956,
											"end": 9994,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 9913,
											"end": 9920,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9913,
											"end": 9920,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9956,
											"end": 9994,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9956,
											"end": 9994,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9956,
											"end": 9994,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9956,
											"end": 9994,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9956,
											"end": 9994,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9973,
											"end": 9986,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 9956,
											"end": 9994,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 9956,
											"end": 9994,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 9956,
											"end": 9994,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9956,
											"end": 9994,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9956,
											"end": 9994,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9956,
											"end": 9994,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "527"
										},
										{
											"begin": 9956,
											"end": 9994,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9956,
											"end": 9994,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 9956,
											"end": 9994,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9956,
											"end": 9994,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9956,
											"end": 9994,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 9956,
											"end": 9994,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 9956,
											"end": 9994,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9956,
											"end": 9994,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 9956,
											"end": 9994,
											"name": "tag",
											"source": 6,
											"value": "527"
										},
										{
											"begin": 9956,
											"end": 9994,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9956,
											"end": 9994,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9956,
											"end": 9994,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9956,
											"end": 9994,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9956,
											"end": 9994,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9956,
											"end": 9994,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9956,
											"end": 9994,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9956,
											"end": 9994,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 9956,
											"end": 9994,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 9956,
											"end": 9994,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 9956,
											"end": 9994,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 9956,
											"end": 9994,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9956,
											"end": 9994,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9956,
											"end": 9994,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9956,
											"end": 9994,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9956,
											"end": 9994,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9956,
											"end": 9994,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9956,
											"end": 9994,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9956,
											"end": 9994,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9956,
											"end": 9994,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9956,
											"end": 9994,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9956,
											"end": 9994,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9956,
											"end": 9994,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9956,
											"end": 9994,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "528"
										},
										{
											"begin": 9956,
											"end": 9994,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9956,
											"end": 9994,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9956,
											"end": 9994,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 9956,
											"end": 9994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9956,
											"end": 9994,
											"name": "tag",
											"source": 6,
											"value": "528"
										},
										{
											"begin": 9956,
											"end": 9994,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9946,
											"end": 9950,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9951,
											"end": 9952,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 9946,
											"end": 9953,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9946,
											"end": 9953,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9946,
											"end": 9953,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9946,
											"end": 9953,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 9946,
											"end": 9953,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "530"
										},
										{
											"begin": 9946,
											"end": 9953,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9946,
											"end": 9953,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "530"
										},
										{
											"begin": 9946,
											"end": 9953,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "525"
										},
										{
											"begin": 9946,
											"end": 9953,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9946,
											"end": 9953,
											"name": "tag",
											"source": 6,
											"value": "530"
										},
										{
											"begin": 9946,
											"end": 9953,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9946,
											"end": 9994,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9946,
											"end": 9994,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9946,
											"end": 9994,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9946,
											"end": 9953,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9946,
											"end": 9953,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9946,
											"end": 9953,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9946,
											"end": 9953,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 9946,
											"end": 9953,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9946,
											"end": 9953,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9946,
											"end": 9953,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9946,
											"end": 9953,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9946,
											"end": 9953,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9946,
											"end": 9994,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10029,
											"end": 10042,
											"name": "PUSH",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 10029,
											"end": 10042,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10005,
											"end": 10051,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "531"
										},
										{
											"begin": 10005,
											"end": 10051,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10022,
											"end": 10026,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 10022,
											"end": 10026,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10029,
											"end": 10042,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10044,
											"end": 10050,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 10005,
											"end": 10013,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 10005,
											"end": 10051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10005,
											"end": 10051,
											"name": "tag",
											"source": 6,
											"value": "531"
										},
										{
											"begin": 10005,
											"end": 10051,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10078,
											"end": 10091,
											"name": "PUSH",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 10078,
											"end": 10091,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10061,
											"end": 10233,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10061,
											"end": 10233,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "18CBAFE5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10061,
											"end": 10233,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10061,
											"end": 10233,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10078,
											"end": 10091,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10078,
											"end": 10091,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10078,
											"end": 10091,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10078,
											"end": 10091,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10061,
											"end": 10114,
											"name": "PUSH",
											"source": 6,
											"value": "18CBAFE5"
										},
										{
											"begin": 10061,
											"end": 10114,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10061,
											"end": 10233,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "532"
										},
										{
											"begin": 10061,
											"end": 10233,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10128,
											"end": 10134,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 10128,
											"end": 10134,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10078,
											"end": 10091,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10078,
											"end": 10091,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10163,
											"end": 10167,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 10163,
											"end": 10167,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10189,
											"end": 10193,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 10189,
											"end": 10193,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10208,
											"end": 10223,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 10208,
											"end": 10223,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10061,
											"end": 10233,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 10061,
											"end": 10233,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10061,
											"end": 10233,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "533"
										},
										{
											"begin": 10061,
											"end": 10233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10061,
											"end": 10233,
											"name": "tag",
											"source": 6,
											"value": "532"
										},
										{
											"begin": 10061,
											"end": 10233,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10061,
											"end": 10233,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10061,
											"end": 10233,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10061,
											"end": 10233,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10061,
											"end": 10233,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10061,
											"end": 10233,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10061,
											"end": 10233,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10061,
											"end": 10233,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10061,
											"end": 10233,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10061,
											"end": 10233,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 10061,
											"end": 10233,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 10061,
											"end": 10233,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 10061,
											"end": 10233,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10061,
											"end": 10233,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10061,
											"end": 10233,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10061,
											"end": 10233,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "535"
										},
										{
											"begin": 10061,
											"end": 10233,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10061,
											"end": 10233,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 10061,
											"end": 10233,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10061,
											"end": 10233,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10061,
											"end": 10233,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 10061,
											"end": 10233,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 10061,
											"end": 10233,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10061,
											"end": 10233,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 10061,
											"end": 10233,
											"name": "tag",
											"source": 6,
											"value": "535"
										},
										{
											"begin": 10061,
											"end": 10233,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10061,
											"end": 10233,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10061,
											"end": 10233,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10061,
											"end": 10233,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10061,
											"end": 10233,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10061,
											"end": 10233,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10061,
											"end": 10233,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10061,
											"end": 10233,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 10061,
											"end": 10233,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10061,
											"end": 10233,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10061,
											"end": 10233,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 10061,
											"end": 10233,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 10061,
											"end": 10233,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 10061,
											"end": 10233,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10061,
											"end": 10233,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10061,
											"end": 10233,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10061,
											"end": 10233,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10061,
											"end": 10233,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10061,
											"end": 10233,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10061,
											"end": 10233,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10061,
											"end": 10233,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10061,
											"end": 10233,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "469"
										},
										{
											"begin": 10061,
											"end": 10233,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10061,
											"end": 10233,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10061,
											"end": 10233,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10061,
											"end": 10233,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10061,
											"end": 10233,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10061,
											"end": 10233,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "537"
										},
										{
											"begin": 10061,
											"end": 10233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10246,
											"end": 10655,
											"name": "tag",
											"source": 6,
											"value": "515"
										},
										{
											"begin": 10246,
											"end": 10655,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10351,
											"end": 10364,
											"name": "PUSH",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 10351,
											"end": 10364,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10327,
											"end": 10378,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "539"
										},
										{
											"begin": 10327,
											"end": 10378,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10344,
											"end": 10348,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 10344,
											"end": 10348,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10351,
											"end": 10364,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10366,
											"end": 10377,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 10327,
											"end": 10335,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 10327,
											"end": 10378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10327,
											"end": 10378,
											"name": "tag",
											"source": 6,
											"value": "539"
										},
										{
											"begin": 10327,
											"end": 10378,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10405,
											"end": 10418,
											"name": "PUSH",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 10405,
											"end": 10418,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10405,
											"end": 10418,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10388,
											"end": 10435,
											"name": "PUSH",
											"source": 6,
											"value": "F305D719"
										},
										{
											"begin": 10443,
											"end": 10452,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10475,
											"end": 10479,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 10494,
											"end": 10505,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 10405,
											"end": 10418,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10405,
											"end": 10418,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10549,
											"end": 10556,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "540"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10549,
											"end": 10556,
											"name": "tag",
											"source": 6,
											"value": "540"
										},
										{
											"begin": 10549,
											"end": 10556,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10388,
											"end": 10595,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10388,
											"end": 10595,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10388,
											"end": 10595,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 10388,
											"end": 10595,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 10388,
											"end": 10595,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10388,
											"end": 10595,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10388,
											"end": 10595,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10388,
											"end": 10595,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10388,
											"end": 10595,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18215,
											"end": 18230,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 18215,
											"end": 18230,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 18215,
											"end": 18230,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 10388,
											"end": 10595,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 10388,
											"end": 10595,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10388,
											"end": 10595,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 18197,
											"end": 18231,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 18247,
											"end": 18265,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 18247,
											"end": 18265,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 18247,
											"end": 18265,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18240,
											"end": 18274,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 18240,
											"end": 18274,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18240,
											"end": 18274,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 18240,
											"end": 18274,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 18290,
											"end": 18308,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 18290,
											"end": 18308,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 18290,
											"end": 18308,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18283,
											"end": 18317,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 18283,
											"end": 18317,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18283,
											"end": 18317,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 18283,
											"end": 18317,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 18333,
											"end": 18351,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 18333,
											"end": 18351,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 18333,
											"end": 18351,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18326,
											"end": 18360,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 18397,
											"end": 18412,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18397,
											"end": 18412,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 18397,
											"end": 18412,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 18376,
											"end": 18395,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 18376,
											"end": 18395,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18376,
											"end": 18395,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18369,
											"end": 18413,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10570,
											"end": 10585,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 18429,
											"end": 18448,
											"name": "PUSH",
											"source": 7,
											"value": "A4"
										},
										{
											"begin": 18429,
											"end": 18448,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18429,
											"end": 18448,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18422,
											"end": 18457,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 18131,
											"end": 18150,
											"name": "PUSH",
											"source": 7,
											"value": "C4"
										},
										{
											"begin": 18131,
											"end": 18150,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10388,
											"end": 10595,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 10388,
											"end": 10595,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10388,
											"end": 10595,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10388,
											"end": 10595,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10388,
											"end": 10595,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10388,
											"end": 10595,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10388,
											"end": 10595,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10388,
											"end": 10595,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 10388,
											"end": 10595,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 10388,
											"end": 10595,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 10388,
											"end": 10595,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 10388,
											"end": 10595,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10388,
											"end": 10595,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10388,
											"end": 10595,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10388,
											"end": 10595,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "544"
										},
										{
											"begin": 10388,
											"end": 10595,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10388,
											"end": 10595,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 10388,
											"end": 10595,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10388,
											"end": 10595,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10388,
											"end": 10595,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 10388,
											"end": 10595,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 10388,
											"end": 10595,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10388,
											"end": 10595,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 10388,
											"end": 10595,
											"name": "tag",
											"source": 6,
											"value": "544"
										},
										{
											"begin": 10388,
											"end": 10595,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10388,
											"end": 10595,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10388,
											"end": 10595,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10388,
											"end": 10595,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10388,
											"end": 10595,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10388,
											"end": 10595,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10388,
											"end": 10595,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10388,
											"end": 10595,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10388,
											"end": 10595,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 10388,
											"end": 10595,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 10388,
											"end": 10595,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 10388,
											"end": 10595,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 10388,
											"end": 10595,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10388,
											"end": 10595,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10388,
											"end": 10595,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10388,
											"end": 10595,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10388,
											"end": 10595,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10388,
											"end": 10595,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10388,
											"end": 10595,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10388,
											"end": 10595,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10388,
											"end": 10595,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10388,
											"end": 10595,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10388,
											"end": 10595,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10388,
											"end": 10595,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10388,
											"end": 10595,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "545"
										},
										{
											"begin": 10388,
											"end": 10595,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10388,
											"end": 10595,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10388,
											"end": 10595,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "546"
										},
										{
											"begin": 10388,
											"end": 10595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10388,
											"end": 10595,
											"name": "tag",
											"source": 6,
											"value": "545"
										},
										{
											"begin": 10388,
											"end": 10595,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10610,
											"end": 10648,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10610,
											"end": 10648,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10610,
											"end": 10648,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 15418,
											"end": 15443,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 15418,
											"end": 15443,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15418,
											"end": 15443,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 15474,
											"end": 15476,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 15459,
											"end": 15477,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15459,
											"end": 15477,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15452,
											"end": 15486,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 15452,
											"end": 15486,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15452,
											"end": 15486,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10610,
											"end": 10648,
											"name": "PUSH",
											"source": 6,
											"value": "38F8A0C92F4C5B0B6877F878CB4C0C8D348A47B76D716C8E78F425043DF9515B"
										},
										{
											"begin": 10610,
											"end": 10648,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15391,
											"end": 15409,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10610,
											"end": 10648,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10610,
											"end": 10648,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10610,
											"end": 10648,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10610,
											"end": 10648,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10610,
											"end": 10648,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10610,
											"end": 10648,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10610,
											"end": 10648,
											"name": "LOG1",
											"source": 6
										},
										{
											"begin": 10246,
											"end": 10655,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10246,
											"end": 10655,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10246,
											"end": 10655,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 196,
											"end": 614,
											"name": "tag",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 196,
											"end": 614,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 327,
											"end": 348,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 308,
											"end": 312,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 377,
											"end": 383,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 371,
											"end": 384,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 420,
											"end": 426,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 415,
											"end": 417,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 404,
											"end": 413,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 400,
											"end": 418,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 393,
											"end": 427,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 479,
											"end": 485,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 474,
											"end": 476,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 472,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 462,
											"end": 477,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 457,
											"end": 459,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 446,
											"end": 455,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 442,
											"end": 460,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 436,
											"end": 486,
											"name": "MCOPY",
											"source": 7
										},
										{
											"begin": 535,
											"end": 536,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 530,
											"end": 532,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 521,
											"end": 527,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 510,
											"end": 519,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 506,
											"end": 528,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 502,
											"end": 533,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 495,
											"end": 537,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 605,
											"end": 607,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 598,
											"end": 600,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 594,
											"end": 601,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 589,
											"end": 591,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 581,
											"end": 587,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 577,
											"end": 592,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 573,
											"end": 602,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 562,
											"end": 571,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 558,
											"end": 603,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 554,
											"end": 608,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 546,
											"end": 608,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 546,
											"end": 608,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 546,
											"end": 608,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 196,
											"end": 614,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 196,
											"end": 614,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 196,
											"end": 614,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 196,
											"end": 614,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 196,
											"end": 614,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 619,
											"end": 750,
											"name": "tag",
											"source": 7,
											"value": "548"
										},
										{
											"begin": 619,
											"end": 750,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 694,
											"end": 725,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 694,
											"end": 725,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 684,
											"end": 726,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 684,
											"end": 726,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 674,
											"end": 744,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 674,
											"end": 744,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 740,
											"end": 741,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 737,
											"end": 738,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 730,
											"end": 742,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 755,
											"end": 1070,
											"name": "tag",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 755,
											"end": 1070,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 823,
											"end": 829,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 831,
											"end": 837,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 884,
											"end": 886,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 872,
											"end": 881,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 863,
											"end": 870,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 859,
											"end": 882,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 855,
											"end": 887,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 852,
											"end": 904,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 852,
											"end": 904,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "561"
										},
										{
											"begin": 852,
											"end": 904,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 900,
											"end": 901,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 897,
											"end": 898,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 890,
											"end": 902,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 852,
											"end": 904,
											"name": "tag",
											"source": 7,
											"value": "561"
										},
										{
											"begin": 852,
											"end": 904,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 939,
											"end": 948,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 926,
											"end": 949,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 958,
											"end": 989,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "562"
										},
										{
											"begin": 983,
											"end": 988,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 958,
											"end": 989,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "548"
										},
										{
											"begin": 958,
											"end": 989,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 958,
											"end": 989,
											"name": "tag",
											"source": 7,
											"value": "562"
										},
										{
											"begin": 958,
											"end": 989,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1008,
											"end": 1013,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 1060,
											"end": 1062,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1045,
											"end": 1063,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1045,
											"end": 1063,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1045,
											"end": 1063,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1045,
											"end": 1063,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1032,
											"end": 1064,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1032,
											"end": 1064,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 755,
											"end": 1070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1267,
											"end": 1426,
											"name": "tag",
											"source": 7,
											"value": "549"
										},
										{
											"begin": 1267,
											"end": 1426,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1334,
											"end": 1354,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1334,
											"end": 1354,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1394,
											"end": 1400,
											"name": "PUSH",
											"source": 7,
											"value": "FFFF"
										},
										{
											"begin": 1383,
											"end": 1401,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1383,
											"end": 1401,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1373,
											"end": 1402,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1373,
											"end": 1402,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1363,
											"end": 1420,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "565"
										},
										{
											"begin": 1363,
											"end": 1420,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1416,
											"end": 1417,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1413,
											"end": 1414,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1406,
											"end": 1418,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1363,
											"end": 1420,
											"name": "tag",
											"source": 7,
											"value": "565"
										},
										{
											"begin": 1363,
											"end": 1420,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1267,
											"end": 1426,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1267,
											"end": 1426,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1267,
											"end": 1426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1267,
											"end": 1426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1431,
											"end": 1832,
											"name": "tag",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 1431,
											"end": 1832,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1521,
											"end": 1527,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1529,
											"end": 1535,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1537,
											"end": 1543,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1590,
											"end": 1593,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 1578,
											"end": 1587,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1569,
											"end": 1576,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 1565,
											"end": 1588,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1561,
											"end": 1594,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1558,
											"end": 1611,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1558,
											"end": 1611,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "567"
										},
										{
											"begin": 1558,
											"end": 1611,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1607,
											"end": 1608,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1605,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1597,
											"end": 1609,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1558,
											"end": 1611,
											"name": "tag",
											"source": 7,
											"value": "567"
										},
										{
											"begin": 1558,
											"end": 1611,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1630,
											"end": 1658,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "568"
										},
										{
											"begin": 1648,
											"end": 1657,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1630,
											"end": 1658,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "549"
										},
										{
											"begin": 1630,
											"end": 1658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1630,
											"end": 1658,
											"name": "tag",
											"source": 7,
											"value": "568"
										},
										{
											"begin": 1630,
											"end": 1658,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1620,
											"end": 1658,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1620,
											"end": 1658,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1677,
											"end": 1714,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "569"
										},
										{
											"begin": 1710,
											"end": 1712,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1699,
											"end": 1708,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1695,
											"end": 1713,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1677,
											"end": 1714,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "549"
										},
										{
											"begin": 1677,
											"end": 1714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1677,
											"end": 1714,
											"name": "tag",
											"source": 7,
											"value": "569"
										},
										{
											"begin": 1677,
											"end": 1714,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1667,
											"end": 1714,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1667,
											"end": 1714,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1733,
											"end": 1770,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "570"
										},
										{
											"begin": 1766,
											"end": 1768,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1755,
											"end": 1764,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1751,
											"end": 1769,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1733,
											"end": 1770,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "549"
										},
										{
											"begin": 1733,
											"end": 1770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1733,
											"end": 1770,
											"name": "tag",
											"source": 7,
											"value": "570"
										},
										{
											"begin": 1733,
											"end": 1770,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1723,
											"end": 1770,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1723,
											"end": 1770,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1789,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "571"
										},
										{
											"begin": 1822,
											"end": 1824,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1811,
											"end": 1820,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1807,
											"end": 1825,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1789,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "549"
										},
										{
											"begin": 1789,
											"end": 1826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1789,
											"end": 1826,
											"name": "tag",
											"source": 7,
											"value": "571"
										},
										{
											"begin": 1789,
											"end": 1826,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1779,
											"end": 1826,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1779,
											"end": 1826,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1431,
											"end": 1832,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1431,
											"end": 1832,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 1431,
											"end": 1832,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1431,
											"end": 1832,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 1431,
											"end": 1832,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1431,
											"end": 1832,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1431,
											"end": 1832,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1431,
											"end": 1832,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1837,
											"end": 2293,
											"name": "tag",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 1837,
											"end": 2293,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1914,
											"end": 1920,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1922,
											"end": 1928,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1930,
											"end": 1936,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1983,
											"end": 1985,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1971,
											"end": 1980,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1962,
											"end": 1969,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1958,
											"end": 1981,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1954,
											"end": 1986,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1951,
											"end": 2003,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1951,
											"end": 2003,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "573"
										},
										{
											"begin": 1951,
											"end": 2003,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1999,
											"end": 2000,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1996,
											"end": 1997,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1989,
											"end": 2001,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1951,
											"end": 2003,
											"name": "tag",
											"source": 7,
											"value": "573"
										},
										{
											"begin": 1951,
											"end": 2003,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2038,
											"end": 2047,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2025,
											"end": 2048,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2057,
											"end": 2088,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "574"
										},
										{
											"begin": 2082,
											"end": 2087,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2057,
											"end": 2088,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "548"
										},
										{
											"begin": 2057,
											"end": 2088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2057,
											"end": 2088,
											"name": "tag",
											"source": 7,
											"value": "574"
										},
										{
											"begin": 2057,
											"end": 2088,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2107,
											"end": 2112,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2164,
											"end": 2166,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2149,
											"end": 2167,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2149,
											"end": 2167,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2136,
											"end": 2168,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2177,
											"end": 2210,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "575"
										},
										{
											"begin": 2136,
											"end": 2168,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2177,
											"end": 2210,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "548"
										},
										{
											"begin": 2177,
											"end": 2210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2177,
											"end": 2210,
											"name": "tag",
											"source": 7,
											"value": "575"
										},
										{
											"begin": 2177,
											"end": 2210,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1837,
											"end": 2293,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1837,
											"end": 2293,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 2229,
											"end": 2236,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2229,
											"end": 2236,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2283,
											"end": 2285,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2268,
											"end": 2286,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2268,
											"end": 2286,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2268,
											"end": 2286,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2268,
											"end": 2286,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2255,
											"end": 2287,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2255,
											"end": 2287,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1837,
											"end": 2293,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3391,
											"name": "tag",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 3144,
											"end": 3391,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3203,
											"end": 3209,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3256,
											"end": 3258,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3244,
											"end": 3253,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3235,
											"end": 3242,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3231,
											"end": 3254,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3227,
											"end": 3259,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 3224,
											"end": 3276,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3224,
											"end": 3276,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "580"
										},
										{
											"begin": 3224,
											"end": 3276,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3272,
											"end": 3273,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3269,
											"end": 3270,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3262,
											"end": 3274,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3224,
											"end": 3276,
											"name": "tag",
											"source": 7,
											"value": "580"
										},
										{
											"begin": 3224,
											"end": 3276,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3311,
											"end": 3320,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3298,
											"end": 3321,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 3330,
											"end": 3361,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 3355,
											"end": 3360,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3330,
											"end": 3361,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "548"
										},
										{
											"begin": 3330,
											"end": 3361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3854,
											"end": 4034,
											"name": "tag",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 3854,
											"end": 4034,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3913,
											"end": 3919,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3966,
											"end": 3968,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3954,
											"end": 3963,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3945,
											"end": 3952,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3941,
											"end": 3964,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3937,
											"end": 3969,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 3934,
											"end": 3986,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3934,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "585"
										},
										{
											"begin": 3934,
											"end": 3986,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3982,
											"end": 3983,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3979,
											"end": 3980,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3972,
											"end": 3984,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3934,
											"end": 3986,
											"name": "tag",
											"source": 7,
											"value": "585"
										},
										{
											"begin": 3934,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4005,
											"end": 4028,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 4005,
											"end": 4028,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3854,
											"end": 4034,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3854,
											"end": 4034,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4435,
											"end": 4595,
											"name": "tag",
											"source": 7,
											"value": "550"
										},
										{
											"begin": 4435,
											"end": 4595,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4500,
											"end": 4520,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4500,
											"end": 4520,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 4556,
											"end": 4569,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4556,
											"end": 4569,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4549,
											"end": 4570,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4539,
											"end": 4571,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4539,
											"end": 4571,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 4529,
											"end": 4589,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "565"
										},
										{
											"begin": 4529,
											"end": 4589,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4585,
											"end": 4586,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4582,
											"end": 4583,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4575,
											"end": 4587,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4915,
											"name": "tag",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 4600,
											"end": 4915,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4665,
											"end": 4671,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4673,
											"end": 4679,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4726,
											"end": 4728,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4714,
											"end": 4723,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4705,
											"end": 4712,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4701,
											"end": 4724,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4697,
											"end": 4729,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 4694,
											"end": 4746,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4694,
											"end": 4746,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "590"
										},
										{
											"begin": 4694,
											"end": 4746,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4742,
											"end": 4743,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4739,
											"end": 4740,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4732,
											"end": 4744,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4694,
											"end": 4746,
											"name": "tag",
											"source": 7,
											"value": "590"
										},
										{
											"begin": 4694,
											"end": 4746,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4781,
											"end": 4790,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4768,
											"end": 4791,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 4800,
											"end": 4831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "591"
										},
										{
											"begin": 4825,
											"end": 4830,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4800,
											"end": 4831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "548"
										},
										{
											"begin": 4800,
											"end": 4831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4800,
											"end": 4831,
											"name": "tag",
											"source": 7,
											"value": "591"
										},
										{
											"begin": 4800,
											"end": 4831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4850,
											"end": 4855,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4874,
											"end": 4909,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "592"
										},
										{
											"begin": 4905,
											"end": 4907,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4890,
											"end": 4908,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4890,
											"end": 4908,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4874,
											"end": 4909,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "550"
										},
										{
											"begin": 4874,
											"end": 4909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4874,
											"end": 4909,
											"name": "tag",
											"source": 7,
											"value": "592"
										},
										{
											"begin": 4874,
											"end": 4909,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4864,
											"end": 4909,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4864,
											"end": 4909,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4915,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4915,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4915,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4915,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4915,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4915,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5419,
											"end": 5807,
											"name": "tag",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 5419,
											"end": 5807,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5487,
											"end": 5493,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5495,
											"end": 5501,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5548,
											"end": 5550,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5536,
											"end": 5545,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5527,
											"end": 5534,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5523,
											"end": 5546,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5519,
											"end": 5551,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 5516,
											"end": 5568,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5516,
											"end": 5568,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "595"
										},
										{
											"begin": 5516,
											"end": 5568,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5564,
											"end": 5565,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5561,
											"end": 5562,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5554,
											"end": 5566,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5516,
											"end": 5568,
											"name": "tag",
											"source": 7,
											"value": "595"
										},
										{
											"begin": 5516,
											"end": 5568,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5603,
											"end": 5612,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5590,
											"end": 5613,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "596"
										},
										{
											"begin": 5647,
											"end": 5652,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "548"
										},
										{
											"begin": 5622,
											"end": 5653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "tag",
											"source": 7,
											"value": "596"
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5672,
											"end": 5677,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5729,
											"end": 5731,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5714,
											"end": 5732,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5714,
											"end": 5732,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5701,
											"end": 5733,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 5742,
											"end": 5775,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "597"
										},
										{
											"begin": 5701,
											"end": 5733,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5742,
											"end": 5775,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "548"
										},
										{
											"begin": 5742,
											"end": 5775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5742,
											"end": 5775,
											"name": "tag",
											"source": 7,
											"value": "597"
										},
										{
											"begin": 5742,
											"end": 5775,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5794,
											"end": 5801,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5784,
											"end": 5801,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5784,
											"end": 5801,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5784,
											"end": 5801,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5419,
											"end": 5807,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5419,
											"end": 5807,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5419,
											"end": 5807,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5419,
											"end": 5807,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5419,
											"end": 5807,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5419,
											"end": 5807,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5812,
											"end": 6064,
											"name": "tag",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 5812,
											"end": 6064,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5876,
											"end": 5882,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5884,
											"end": 5890,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5937,
											"end": 5939,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5925,
											"end": 5934,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5916,
											"end": 5923,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5912,
											"end": 5935,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5908,
											"end": 5940,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 5905,
											"end": 5957,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5905,
											"end": 5957,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "599"
										},
										{
											"begin": 5905,
											"end": 5957,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5953,
											"end": 5954,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5950,
											"end": 5951,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5943,
											"end": 5955,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5905,
											"end": 5957,
											"name": "tag",
											"source": 7,
											"value": "599"
										},
										{
											"begin": 5905,
											"end": 5957,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5976,
											"end": 6002,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "600"
										},
										{
											"begin": 5992,
											"end": 6001,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5976,
											"end": 6002,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "550"
										},
										{
											"begin": 5976,
											"end": 6002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5976,
											"end": 6002,
											"name": "tag",
											"source": 7,
											"value": "600"
										},
										{
											"begin": 5976,
											"end": 6002,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5966,
											"end": 6002,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5966,
											"end": 6002,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6021,
											"end": 6058,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "592"
										},
										{
											"begin": 6054,
											"end": 6056,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6043,
											"end": 6052,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6039,
											"end": 6057,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6021,
											"end": 6058,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "549"
										},
										{
											"begin": 6021,
											"end": 6058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6069,
											"end": 6190,
											"name": "tag",
											"source": 7,
											"value": "551"
										},
										{
											"begin": 6069,
											"end": 6190,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6154,
											"end": 6164,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6147,
											"end": 6152,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6143,
											"end": 6165,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6136,
											"end": 6141,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6133,
											"end": 6166,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 6123,
											"end": 6184,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 6123,
											"end": 6184,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6180,
											"end": 6181,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6177,
											"end": 6178,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6170,
											"end": 6182,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6195,
											"end": 6508,
											"name": "tag",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 6195,
											"end": 6508,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6259,
											"end": 6265,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6267,
											"end": 6273,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6320,
											"end": 6322,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6308,
											"end": 6317,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6299,
											"end": 6306,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6295,
											"end": 6318,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6291,
											"end": 6323,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 6288,
											"end": 6340,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6288,
											"end": 6340,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "605"
										},
										{
											"begin": 6288,
											"end": 6340,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6336,
											"end": 6337,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6333,
											"end": 6334,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6326,
											"end": 6338,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6288,
											"end": 6340,
											"name": "tag",
											"source": 7,
											"value": "605"
										},
										{
											"begin": 6288,
											"end": 6340,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6359,
											"end": 6385,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "606"
										},
										{
											"begin": 6375,
											"end": 6384,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6359,
											"end": 6385,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "550"
										},
										{
											"begin": 6359,
											"end": 6385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6359,
											"end": 6385,
											"name": "tag",
											"source": 7,
											"value": "606"
										},
										{
											"begin": 6359,
											"end": 6385,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6349,
											"end": 6385,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6349,
											"end": 6385,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6435,
											"end": 6437,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6424,
											"end": 6433,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6420,
											"end": 6438,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6407,
											"end": 6439,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 6448,
											"end": 6478,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "597"
										},
										{
											"begin": 6472,
											"end": 6477,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6448,
											"end": 6478,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "551"
										},
										{
											"begin": 6448,
											"end": 6478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6513,
											"end": 6893,
											"name": "tag",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 6513,
											"end": 6893,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6592,
											"end": 6593,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 6588,
											"end": 6600,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6588,
											"end": 6600,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6588,
											"end": 6600,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 6588,
											"end": 6600,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6635,
											"end": 6647,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6635,
											"end": 6647,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6635,
											"end": 6647,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6656,
											"end": 6717,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "609"
										},
										{
											"begin": 6656,
											"end": 6717,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6710,
											"end": 6714,
											"name": "PUSH",
											"source": 7,
											"value": "7F"
										},
										{
											"begin": 6702,
											"end": 6708,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6698,
											"end": 6715,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6688,
											"end": 6715,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6688,
											"end": 6715,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6656,
											"end": 6717,
											"name": "tag",
											"source": 7,
											"value": "609"
										},
										{
											"begin": 6656,
											"end": 6717,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6763,
											"end": 6765,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6755,
											"end": 6761,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6752,
											"end": 6766,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 6732,
											"end": 6750,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6729,
											"end": 6767,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6726,
											"end": 6887,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "610"
										},
										{
											"begin": 6726,
											"end": 6887,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6809,
											"end": 6819,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 6804,
											"end": 6807,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 6800,
											"end": 6820,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 6797,
											"end": 6798,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6790,
											"end": 6821,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6844,
											"end": 6848,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 6841,
											"end": 6842,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6872,
											"end": 6876,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 6869,
											"end": 6870,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6862,
											"end": 6877,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6726,
											"end": 6887,
											"name": "tag",
											"source": 7,
											"value": "610"
										},
										{
											"begin": 6726,
											"end": 6887,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6726,
											"end": 6887,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6513,
											"end": 6893,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6513,
											"end": 6893,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6513,
											"end": 6893,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6513,
											"end": 6893,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6898,
											"end": 7025,
											"name": "tag",
											"source": 7,
											"value": "552"
										},
										{
											"begin": 6898,
											"end": 7025,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6959,
											"end": 6969,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 6954,
											"end": 6957,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 6950,
											"end": 6970,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 6947,
											"end": 6948,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6940,
											"end": 6971,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6990,
											"end": 6994,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 6987,
											"end": 6988,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6980,
											"end": 6995,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7014,
											"end": 7018,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 7011,
											"end": 7012,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7004,
											"end": 7019,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7030,
											"end": 7198,
											"name": "tag",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 7030,
											"end": 7198,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7097,
											"end": 7103,
											"name": "PUSH",
											"source": 7,
											"value": "FFFF"
										},
										{
											"begin": 7123,
											"end": 7133,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7123,
											"end": 7133,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7123,
											"end": 7133,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7135,
											"end": 7145,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7135,
											"end": 7145,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7135,
											"end": 7145,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7119,
											"end": 7146,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7119,
											"end": 7146,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7158,
											"end": 7169,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7158,
											"end": 7169,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7158,
											"end": 7169,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 7155,
											"end": 7192,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7155,
											"end": 7192,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "614"
										},
										{
											"begin": 7155,
											"end": 7192,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7172,
											"end": 7190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "614"
										},
										{
											"begin": 7172,
											"end": 7190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "552"
										},
										{
											"begin": 7172,
											"end": 7190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7172,
											"end": 7190,
											"name": "tag",
											"source": 7,
											"value": "614"
										},
										{
											"begin": 7172,
											"end": 7190,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7155,
											"end": 7192,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7030,
											"end": 7198,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7030,
											"end": 7198,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7030,
											"end": 7198,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7030,
											"end": 7198,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7030,
											"end": 7198,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7894,
											"end": 8019,
											"name": "tag",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 7894,
											"end": 8019,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7959,
											"end": 7968,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7959,
											"end": 7968,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7959,
											"end": 7968,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7980,
											"end": 7990,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7980,
											"end": 7990,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7980,
											"end": 7990,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 7977,
											"end": 8013,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7977,
											"end": 8013,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 7977,
											"end": 8013,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7993,
											"end": 8011,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 7993,
											"end": 8011,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "552"
										},
										{
											"begin": 7993,
											"end": 8011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8024,
											"end": 8160,
											"name": "tag",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 8024,
											"end": 8160,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8059,
											"end": 8062,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8080,
											"end": 8102,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8080,
											"end": 8102,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8077,
											"end": 8125,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "622"
										},
										{
											"begin": 8077,
											"end": 8125,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8105,
											"end": 8123,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "622"
										},
										{
											"begin": 8105,
											"end": 8123,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "552"
										},
										{
											"begin": 8105,
											"end": 8123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8105,
											"end": 8123,
											"name": "tag",
											"source": 7,
											"value": "622"
										},
										{
											"begin": 8105,
											"end": 8123,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8145,
											"end": 8146,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8141,
											"end": 8154,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8141,
											"end": 8154,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8024,
											"end": 8160,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8165,
											"end": 8353,
											"name": "tag",
											"source": 7,
											"value": "553"
										},
										{
											"begin": 8165,
											"end": 8353,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8244,
											"end": 8257,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8244,
											"end": 8257,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8286,
											"end": 8328,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8286,
											"end": 8328,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8276,
											"end": 8329,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8276,
											"end": 8329,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 8266,
											"end": 8347,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "565"
										},
										{
											"begin": 8266,
											"end": 8347,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8343,
											"end": 8344,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8340,
											"end": 8341,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8333,
											"end": 8345,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8358,
											"end": 8777,
											"name": "tag",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 8358,
											"end": 8777,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8445,
											"end": 8451,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8453,
											"end": 8459,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8461,
											"end": 8467,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8514,
											"end": 8516,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 8502,
											"end": 8511,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8493,
											"end": 8500,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 8489,
											"end": 8512,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8485,
											"end": 8517,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 8482,
											"end": 8534,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8482,
											"end": 8534,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "626"
										},
										{
											"begin": 8482,
											"end": 8534,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8530,
											"end": 8531,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8527,
											"end": 8528,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8520,
											"end": 8532,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8482,
											"end": 8534,
											"name": "tag",
											"source": 7,
											"value": "626"
										},
										{
											"begin": 8482,
											"end": 8534,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8553,
											"end": 8593,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "627"
										},
										{
											"begin": 8583,
											"end": 8592,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8553,
											"end": 8593,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "553"
										},
										{
											"begin": 8553,
											"end": 8593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8553,
											"end": 8593,
											"name": "tag",
											"source": 7,
											"value": "627"
										},
										{
											"begin": 8553,
											"end": 8593,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8543,
											"end": 8593,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8543,
											"end": 8593,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8612,
											"end": 8661,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "628"
										},
										{
											"begin": 8657,
											"end": 8659,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8646,
											"end": 8655,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 8642,
											"end": 8660,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8612,
											"end": 8661,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "553"
										},
										{
											"begin": 8612,
											"end": 8661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8612,
											"end": 8661,
											"name": "tag",
											"source": 7,
											"value": "628"
										},
										{
											"begin": 8612,
											"end": 8661,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8602,
											"end": 8661,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8602,
											"end": 8661,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8704,
											"end": 8706,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8693,
											"end": 8702,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8689,
											"end": 8707,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8683,
											"end": 8708,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8717,
											"end": 8747,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "629"
										},
										{
											"begin": 8741,
											"end": 8746,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8717,
											"end": 8747,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "551"
										},
										{
											"begin": 8717,
											"end": 8747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8717,
											"end": 8747,
											"name": "tag",
											"source": 7,
											"value": "629"
										},
										{
											"begin": 8717,
											"end": 8747,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8766,
											"end": 8771,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8756,
											"end": 8771,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8756,
											"end": 8771,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8756,
											"end": 8771,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8358,
											"end": 8777,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8358,
											"end": 8777,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8358,
											"end": 8777,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8358,
											"end": 8777,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8358,
											"end": 8777,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8358,
											"end": 8777,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8782,
											"end": 9033,
											"name": "tag",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 8782,
											"end": 9033,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8852,
											"end": 8858,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8905,
											"end": 8907,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8893,
											"end": 8902,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8884,
											"end": 8891,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8880,
											"end": 8903,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8876,
											"end": 8908,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 8873,
											"end": 8925,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8873,
											"end": 8925,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "631"
										},
										{
											"begin": 8873,
											"end": 8925,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8921,
											"end": 8922,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8918,
											"end": 8919,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8911,
											"end": 8923,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8873,
											"end": 8925,
											"name": "tag",
											"source": 7,
											"value": "631"
										},
										{
											"begin": 8873,
											"end": 8925,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8953,
											"end": 8962,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8947,
											"end": 8963,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8972,
											"end": 9003,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 8997,
											"end": 9002,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8972,
											"end": 9003,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "548"
										},
										{
											"begin": 8972,
											"end": 9003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9038,
											"end": 9165,
											"name": "tag",
											"source": 7,
											"value": "554"
										},
										{
											"begin": 9038,
											"end": 9165,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9099,
											"end": 9109,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 9094,
											"end": 9097,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 9090,
											"end": 9110,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 9087,
											"end": 9088,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9080,
											"end": 9111,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9130,
											"end": 9134,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 9127,
											"end": 9128,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9120,
											"end": 9135,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9154,
											"end": 9158,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 9151,
											"end": 9152,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9144,
											"end": 9159,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 9170,
											"end": 9282,
											"name": "tag",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 9170,
											"end": 9282,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9202,
											"end": 9203,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9228,
											"end": 9229,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9218,
											"end": 9253,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "636"
										},
										{
											"begin": 9218,
											"end": 9253,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9233,
											"end": 9251,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "636"
										},
										{
											"begin": 9233,
											"end": 9251,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "554"
										},
										{
											"begin": 9233,
											"end": 9251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9233,
											"end": 9251,
											"name": "tag",
											"source": 7,
											"value": "636"
										},
										{
											"begin": 9233,
											"end": 9251,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9267,
											"end": 9276,
											"name": "MOD",
											"source": 7
										},
										{
											"begin": 9267,
											"end": 9276,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9170,
											"end": 9282,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10100,
											"end": 10349,
											"name": "tag",
											"source": 7,
											"value": "343"
										},
										{
											"begin": 10100,
											"end": 10349,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10171,
											"end": 10181,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10213,
											"end": 10223,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10213,
											"end": 10223,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10213,
											"end": 10223,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 10225,
											"end": 10235,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10225,
											"end": 10235,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10225,
											"end": 10235,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 10209,
											"end": 10236,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 10256,
											"end": 10276,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 10256,
											"end": 10276,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10256,
											"end": 10276,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 10256,
											"end": 10276,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10171,
											"end": 10181,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10295,
											"end": 10319,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10295,
											"end": 10319,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10295,
											"end": 10319,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 10285,
											"end": 10343,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "641"
										},
										{
											"begin": 10285,
											"end": 10343,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10323,
											"end": 10341,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "641"
										},
										{
											"begin": 10323,
											"end": 10341,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "552"
										},
										{
											"begin": 10323,
											"end": 10341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10323,
											"end": 10341,
											"name": "tag",
											"source": 7,
											"value": "641"
										},
										{
											"begin": 10323,
											"end": 10341,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10285,
											"end": 10343,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10285,
											"end": 10343,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10100,
											"end": 10349,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10100,
											"end": 10349,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10100,
											"end": 10349,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10100,
											"end": 10349,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10100,
											"end": 10349,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13287,
											"end": 13415,
											"name": "tag",
											"source": 7,
											"value": "411"
										},
										{
											"begin": 13287,
											"end": 13415,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13354,
											"end": 13363,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13354,
											"end": 13363,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13354,
											"end": 13363,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 13375,
											"end": 13386,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13375,
											"end": 13386,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13375,
											"end": 13386,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 13372,
											"end": 13409,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 13372,
											"end": 13409,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 13372,
											"end": 13409,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 13389,
											"end": 13407,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 13389,
											"end": 13407,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "552"
										},
										{
											"begin": 13389,
											"end": 13407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13420,
											"end": 13588,
											"name": "tag",
											"source": 7,
											"value": "414"
										},
										{
											"begin": 13420,
											"end": 13588,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13493,
											"end": 13502,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 13493,
											"end": 13502,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13493,
											"end": 13502,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 13524,
											"end": 13533,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13524,
											"end": 13533,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 13541,
											"end": 13556,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13541,
											"end": 13556,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13541,
											"end": 13556,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 13535,
											"end": 13557,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 13535,
											"end": 13557,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 13521,
											"end": 13558,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 13511,
											"end": 13582,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 13511,
											"end": 13582,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 13562,
											"end": 13580,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 13562,
											"end": 13580,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "552"
										},
										{
											"begin": 13562,
											"end": 13580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13593,
											"end": 13713,
											"name": "tag",
											"source": 7,
											"value": "417"
										},
										{
											"begin": 13593,
											"end": 13713,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13633,
											"end": 13634,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13659,
											"end": 13660,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13649,
											"end": 13684,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "658"
										},
										{
											"begin": 13649,
											"end": 13684,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 13664,
											"end": 13682,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "658"
										},
										{
											"begin": 13664,
											"end": 13682,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "554"
										},
										{
											"begin": 13664,
											"end": 13682,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13664,
											"end": 13682,
											"name": "tag",
											"source": 7,
											"value": "658"
										},
										{
											"begin": 13664,
											"end": 13682,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13698,
											"end": 13707,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 13698,
											"end": 13707,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13593,
											"end": 13713,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15497,
											"end": 15624,
											"name": "tag",
											"source": 7,
											"value": "521"
										},
										{
											"begin": 15497,
											"end": 15624,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15558,
											"end": 15568,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 15553,
											"end": 15556,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 15549,
											"end": 15569,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 15546,
											"end": 15547,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15539,
											"end": 15570,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 15589,
											"end": 15593,
											"name": "PUSH",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 15586,
											"end": 15587,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 15579,
											"end": 15594,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 15613,
											"end": 15617,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 15610,
											"end": 15611,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15603,
											"end": 15618,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 15629,
											"end": 15756,
											"name": "tag",
											"source": 7,
											"value": "525"
										},
										{
											"begin": 15629,
											"end": 15756,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15690,
											"end": 15700,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 15685,
											"end": 15688,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 15681,
											"end": 15701,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 15678,
											"end": 15679,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15671,
											"end": 15702,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 15721,
											"end": 15725,
											"name": "PUSH",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 15718,
											"end": 15719,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 15711,
											"end": 15726,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 15745,
											"end": 15749,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 15742,
											"end": 15743,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15735,
											"end": 15750,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 15761,
											"end": 16741,
											"name": "tag",
											"source": 7,
											"value": "533"
										},
										{
											"begin": 15761,
											"end": 16741,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16023,
											"end": 16027,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16071,
											"end": 16074,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 16060,
											"end": 16069,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16056,
											"end": 16075,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16102,
											"end": 16108,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 16091,
											"end": 16100,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 16084,
											"end": 16109,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 16128,
											"end": 16130,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 16166,
											"end": 16172,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 16161,
											"end": 16163,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 16150,
											"end": 16159,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 16146,
											"end": 16164,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16139,
											"end": 16173,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 16209,
											"end": 16212,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 16204,
											"end": 16206,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 16193,
											"end": 16202,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 16189,
											"end": 16207,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16182,
											"end": 16213,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 16233,
											"end": 16239,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16268,
											"end": 16274,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 16262,
											"end": 16275,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 16299,
											"end": 16305,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 16291,
											"end": 16297,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 16284,
											"end": 16306,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 16337,
											"end": 16340,
											"name": "PUSH",
											"source": 7,
											"value": "C0"
										},
										{
											"begin": 16326,
											"end": 16335,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 16322,
											"end": 16341,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16315,
											"end": 16341,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16315,
											"end": 16341,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16376,
											"end": 16378,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 16368,
											"end": 16374,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 16364,
											"end": 16379,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16350,
											"end": 16379,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 16350,
											"end": 16379,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16397,
											"end": 16398,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16407,
											"end": 16602,
											"name": "tag",
											"source": 7,
											"value": "667"
										},
										{
											"begin": 16407,
											"end": 16602,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16421,
											"end": 16427,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16418,
											"end": 16419,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16415,
											"end": 16428,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 16407,
											"end": 16602,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 16407,
											"end": 16602,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "669"
										},
										{
											"begin": 16407,
											"end": 16602,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 16486,
											"end": 16499,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 16486,
											"end": 16499,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16482,
											"end": 16521,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 16470,
											"end": 16522,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 16470,
											"end": 16522,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 16577,
											"end": 16592,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 16577,
											"end": 16592,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 16577,
											"end": 16592,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16577,
											"end": 16592,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 16542,
											"end": 16554,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16542,
											"end": 16554,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 16542,
											"end": 16554,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16542,
											"end": 16554,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16518,
											"end": 16519,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 16436,
											"end": 16445,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16407,
											"end": 16602,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "667"
										},
										{
											"begin": 16407,
											"end": 16602,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16407,
											"end": 16602,
											"name": "tag",
											"source": 7,
											"value": "669"
										},
										{
											"begin": 16407,
											"end": 16602,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16658,
											"end": 16690,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": 16658,
											"end": 16690,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16658,
											"end": 16690,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": 16658,
											"end": 16690,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 16653,
											"end": 16655,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 16638,
											"end": 16656,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 16638,
											"end": 16656,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16631,
											"end": 16691,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16722,
											"end": 16725,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 16707,
											"end": 16726,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16700,
											"end": 16735,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 16619,
											"end": 16622,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 15761,
											"end": 16741,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15761,
											"end": 16741,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16746,
											"end": 17851,
											"name": "tag",
											"source": 7,
											"value": "537"
										},
										{
											"begin": 16746,
											"end": 17851,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16841,
											"end": 16847,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16872,
											"end": 16874,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 16915,
											"end": 16917,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 16903,
											"end": 16912,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 16894,
											"end": 16901,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 16890,
											"end": 16913,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 16886,
											"end": 16918,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 16883,
											"end": 16935,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 16883,
											"end": 16935,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "671"
										},
										{
											"begin": 16883,
											"end": 16935,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 16931,
											"end": 16932,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16928,
											"end": 16929,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 16921,
											"end": 16933,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 16883,
											"end": 16935,
											"name": "tag",
											"source": 7,
											"value": "671"
										},
										{
											"begin": 16883,
											"end": 16935,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16964,
											"end": 16973,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16958,
											"end": 16974,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 16993,
											"end": 17011,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17034,
											"end": 17036,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 17026,
											"end": 17032,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17023,
											"end": 17037,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 17020,
											"end": 17054,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 17020,
											"end": 17054,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "672"
										},
										{
											"begin": 17020,
											"end": 17054,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 17050,
											"end": 17051,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17047,
											"end": 17048,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 17040,
											"end": 17052,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 17020,
											"end": 17054,
											"name": "tag",
											"source": 7,
											"value": "672"
										},
										{
											"begin": 17020,
											"end": 17054,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17088,
											"end": 17094,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17077,
											"end": 17086,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 17073,
											"end": 17095,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17063,
											"end": 17095,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 17063,
											"end": 17095,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17133,
											"end": 17140,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 17126,
											"end": 17130,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 17122,
											"end": 17124,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 17118,
											"end": 17131,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17114,
											"end": 17141,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 17104,
											"end": 17159,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "673"
										},
										{
											"begin": 17104,
											"end": 17159,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 17155,
											"end": 17156,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17152,
											"end": 17153,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 17145,
											"end": 17157,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 17104,
											"end": 17159,
											"name": "tag",
											"source": 7,
											"value": "673"
										},
										{
											"begin": 17104,
											"end": 17159,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17184,
											"end": 17186,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17178,
											"end": 17187,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 17206,
											"end": 17208,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17202,
											"end": 17204,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17199,
											"end": 17209,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 17196,
											"end": 17232,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 17196,
											"end": 17232,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "675"
										},
										{
											"begin": 17196,
											"end": 17232,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 17212,
											"end": 17230,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "675"
										},
										{
											"begin": 17212,
											"end": 17230,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "521"
										},
										{
											"begin": 17212,
											"end": 17230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17212,
											"end": 17230,
											"name": "tag",
											"source": 7,
											"value": "675"
										},
										{
											"begin": 17212,
											"end": 17230,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17258,
											"end": 17260,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 17255,
											"end": 17256,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 17251,
											"end": 17261,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 17290,
											"end": 17292,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 17284,
											"end": 17293,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 17353,
											"end": 17355,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 17349,
											"end": 17356,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 17344,
											"end": 17346,
											"name": "PUSH",
											"source": 7,
											"value": "3F"
										},
										{
											"begin": 17340,
											"end": 17342,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 17336,
											"end": 17347,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17332,
											"end": 17357,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 17324,
											"end": 17330,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17320,
											"end": 17358,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17408,
											"end": 17414,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17396,
											"end": 17406,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17393,
											"end": 17415,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 17388,
											"end": 17390,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 17376,
											"end": 17386,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17373,
											"end": 17391,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 17370,
											"end": 17416,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 17367,
											"end": 17439,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 17367,
											"end": 17439,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "677"
										},
										{
											"begin": 17367,
											"end": 17439,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 17419,
											"end": 17437,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "677"
										},
										{
											"begin": 17419,
											"end": 17437,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "521"
										},
										{
											"begin": 17419,
											"end": 17437,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17419,
											"end": 17437,
											"name": "tag",
											"source": 7,
											"value": "677"
										},
										{
											"begin": 17419,
											"end": 17437,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17455,
											"end": 17457,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 17448,
											"end": 17470,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 17505,
											"end": 17523,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 17505,
											"end": 17523,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17505,
											"end": 17523,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 17539,
											"end": 17554,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 17539,
											"end": 17554,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17539,
											"end": 17554,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17539,
											"end": 17554,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17581,
											"end": 17592,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 17581,
											"end": 17592,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17581,
											"end": 17592,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17577,
											"end": 17597,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 17577,
											"end": 17597,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17577,
											"end": 17597,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 17609,
											"end": 17628,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 17609,
											"end": 17628,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 17609,
											"end": 17628,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 17606,
											"end": 17645,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 17606,
											"end": 17645,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "678"
										},
										{
											"begin": 17606,
											"end": 17645,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 17641,
											"end": 17642,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17638,
											"end": 17639,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 17631,
											"end": 17643,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 17606,
											"end": 17645,
											"name": "tag",
											"source": 7,
											"value": "678"
										},
										{
											"begin": 17606,
											"end": 17645,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17665,
											"end": 17676,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 17665,
											"end": 17676,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 17665,
											"end": 17676,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17665,
											"end": 17676,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 17685,
											"end": 17820,
											"name": "tag",
											"source": 7,
											"value": "679"
										},
										{
											"begin": 17685,
											"end": 17820,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17701,
											"end": 17707,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17696,
											"end": 17699,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 17693,
											"end": 17708,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 17685,
											"end": 17820,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 17685,
											"end": 17820,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "681"
										},
										{
											"begin": 17685,
											"end": 17820,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 17767,
											"end": 17777,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 17767,
											"end": 17777,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 17755,
											"end": 17778,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 17755,
											"end": 17778,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 17718,
											"end": 17730,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 17718,
											"end": 17730,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 17718,
											"end": 17730,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17718,
											"end": 17730,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 17798,
											"end": 17810,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 17798,
											"end": 17810,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 17798,
											"end": 17810,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17798,
											"end": 17810,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 17685,
											"end": 17820,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "679"
										},
										{
											"begin": 17685,
											"end": 17820,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17685,
											"end": 17820,
											"name": "tag",
											"source": 7,
											"value": "681"
										},
										{
											"begin": 17685,
											"end": 17820,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17839,
											"end": 17845,
											"name": "SWAP9",
											"source": 7
										},
										{
											"begin": 16746,
											"end": 17851,
											"name": "SWAP8",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16746,
											"end": 17851,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18468,
											"end": 18774,
											"name": "tag",
											"source": 7,
											"value": "546"
										},
										{
											"begin": 18468,
											"end": 18774,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18556,
											"end": 18562,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 18564,
											"end": 18570,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 18572,
											"end": 18578,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 18625,
											"end": 18627,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 18613,
											"end": 18622,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 18604,
											"end": 18611,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 18600,
											"end": 18623,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 18596,
											"end": 18628,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 18593,
											"end": 18645,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 18593,
											"end": 18645,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "684"
										},
										{
											"begin": 18593,
											"end": 18645,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 18641,
											"end": 18642,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 18638,
											"end": 18639,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 18631,
											"end": 18643,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 18593,
											"end": 18645,
											"name": "tag",
											"source": 7,
											"value": "684"
										},
										{
											"begin": 18593,
											"end": 18645,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18670,
											"end": 18679,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 18664,
											"end": 18680,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 18654,
											"end": 18680,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 18654,
											"end": 18680,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18720,
											"end": 18722,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 18709,
											"end": 18718,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 18705,
											"end": 18723,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18699,
											"end": 18724,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 18689,
											"end": 18724,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 18689,
											"end": 18724,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18764,
											"end": 18766,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 18753,
											"end": 18762,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 18749,
											"end": 18767,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18743,
											"end": 18768,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 18733,
											"end": 18768,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18733,
											"end": 18768,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18468,
											"end": 18774,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 18468,
											"end": 18774,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18468,
											"end": 18774,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 18468,
											"end": 18774,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18468,
											"end": 18774,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 18468,
											"end": 18774,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"@openzeppelin/contracts@4.9.3/access/Ownable.sol",
								"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts@4.9.3/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts@4.9.3/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts@4.9.3/utils/Context.sol",
								"contracts/gainzilla.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"_maxWalletSize()": "8f9a55c0",
							"accumulatedEco()": "c531b108",
							"accumulatedLp()": "d8d61c40",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"configureCooldown(bool,uint32)": "fe6b751e",
							"configureDiamondFloor(bool,uint16)": "fe0bb982",
							"cooldown()": "787a08a6",
							"cooldownRemaining(address)": "9d82190f",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"diamondFloor()": "c95457ff",
							"increaseAllowance(address,uint256)": "39509351",
							"isExempt(address)": "ad5dff73",
							"maxWalletPercentage()": "599ca397",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"pairAddress()": "a8b08982",
							"pairPrice()": "9491f94d",
							"priceDeviation()": "7773168f",
							"renounceOwnership()": "715018a6",
							"routerAddress()": "3268cc56",
							"setExempt(address,bool)": "9fde54f5",
							"setRouter(address)": "c0d78655",
							"setTaxRates(uint16,uint16,uint16,uint16)": "1569d181",
							"setThreshold(uint256)": "960bfe04",
							"swapThreshold()": "0445b667",
							"symbol()": "95d89b41",
							"taxRates()": "333f4b3d",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ethAmount\",\"type\":\"uint256\"}],\"name\":\"LiquidityAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newRouter\",\"type\":\"address\"}],\"name\":\"RouterUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lpAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ecoAmount\",\"type\":\"uint256\"}],\"name\":\"TaxesCollected\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_maxWalletSize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"accumulatedEco\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"accumulatedLp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"},{\"internalType\":\"uint32\",\"name\":\"duration\",\"type\":\"uint32\"}],\"name\":\"configureCooldown\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"},{\"internalType\":\"uint16\",\"name\":\"triggerPercent\",\"type\":\"uint16\"}],\"name\":\"configureDiamondFloor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cooldown\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"},{\"internalType\":\"uint32\",\"name\":\"duration\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"cooldownRemaining\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"days_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"hours_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minutes_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"seconds_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"diamondFloor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"},{\"internalType\":\"uint16\",\"name\":\"triggerPercentage\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"athPrice\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"sellStopped\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"blockedAth\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isExempt\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxWalletPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pairAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pairPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceDeviation\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"routerAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"exempt\",\"type\":\"bool\"}],\"name\":\"setExempt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newRouter\",\"type\":\"address\"}],\"name\":\"setRouter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"buyLp\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"buyEco\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"sellLp\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"sellEco\",\"type\":\"uint16\"}],\"name\":\"setTaxRates\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"}],\"name\":\"setThreshold\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"taxRates\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"buyLp\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"buyEco\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"sellLp\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"sellEco\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/gainzilla.sol\":\"MemeCoin\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]},\"@openzeppelin/contracts@4.9.3/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"@openzeppelin/contracts@4.9.3/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts@4.9.3/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts@4.9.3/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/gainzilla.sol\":{\"keccak256\":\"0xaf24b2443607f3081fbd12dba1576dfb037d438656eb72f314d83e1ceff98cb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7496ef2ce61329758ebef813381458d5f6bd216f0beb914574045f2ad4dffd0f\",\"dweb:/ipfs/QmRLcUZ522vYzzzK2JdQ3pCpDq2bdCndUN8s9sae7n8Lq1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 440,
								"contract": "contracts/gainzilla.sol:MemeCoin",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 446,
								"contract": "contracts/gainzilla.sol:MemeCoin",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 448,
								"contract": "contracts/gainzilla.sol:MemeCoin",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 450,
								"contract": "contracts/gainzilla.sol:MemeCoin",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 452,
								"contract": "contracts/gainzilla.sol:MemeCoin",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "contracts/gainzilla.sol:MemeCoin",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 1237,
								"contract": "contracts/gainzilla.sol:MemeCoin",
								"label": "maxWalletPercentage",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 1252,
								"contract": "contracts/gainzilla.sol:MemeCoin",
								"label": "taxRates",
								"offset": 0,
								"slot": "7",
								"type": "t_struct(TaxRates)1249_storage"
							},
							{
								"astId": 1255,
								"contract": "contracts/gainzilla.sol:MemeCoin",
								"label": "transferMultiplier",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 1260,
								"contract": "contracts/gainzilla.sol:MemeCoin",
								"label": "swapThreshold",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 1262,
								"contract": "contracts/gainzilla.sol:MemeCoin",
								"label": "accumulatedLp",
								"offset": 0,
								"slot": "10",
								"type": "t_uint256"
							},
							{
								"astId": 1264,
								"contract": "contracts/gainzilla.sol:MemeCoin",
								"label": "accumulatedEco",
								"offset": 0,
								"slot": "11",
								"type": "t_uint256"
							},
							{
								"astId": 1266,
								"contract": "contracts/gainzilla.sol:MemeCoin",
								"label": "swapping",
								"offset": 0,
								"slot": "12",
								"type": "t_bool"
							},
							{
								"astId": 1278,
								"contract": "contracts/gainzilla.sol:MemeCoin",
								"label": "cooldown",
								"offset": 0,
								"slot": "13",
								"type": "t_struct(CooldownConfig)1275_storage"
							},
							{
								"astId": 1292,
								"contract": "contracts/gainzilla.sol:MemeCoin",
								"label": "diamondFloor",
								"offset": 0,
								"slot": "15",
								"type": "t_struct(DiamondFloor)1289_storage"
							},
							{
								"astId": 1294,
								"contract": "contracts/gainzilla.sol:MemeCoin",
								"label": "routerAddress",
								"offset": 0,
								"slot": "19",
								"type": "t_address"
							},
							{
								"astId": 1296,
								"contract": "contracts/gainzilla.sol:MemeCoin",
								"label": "pairAddress",
								"offset": 0,
								"slot": "20",
								"type": "t_address"
							},
							{
								"astId": 1303,
								"contract": "contracts/gainzilla.sol:MemeCoin",
								"label": "isExempt",
								"offset": 0,
								"slot": "21",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(CooldownConfig)1275_storage": {
								"encoding": "inplace",
								"label": "struct MemeCoin.CooldownConfig",
								"members": [
									{
										"astId": 1268,
										"contract": "contracts/gainzilla.sol:MemeCoin",
										"label": "enabled",
										"offset": 0,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 1270,
										"contract": "contracts/gainzilla.sol:MemeCoin",
										"label": "duration",
										"offset": 1,
										"slot": "0",
										"type": "t_uint32"
									},
									{
										"astId": 1274,
										"contract": "contracts/gainzilla.sol:MemeCoin",
										"label": "cooldowns",
										"offset": 0,
										"slot": "1",
										"type": "t_mapping(t_address,t_uint256)"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(DiamondFloor)1289_storage": {
								"encoding": "inplace",
								"label": "struct MemeCoin.DiamondFloor",
								"members": [
									{
										"astId": 1280,
										"contract": "contracts/gainzilla.sol:MemeCoin",
										"label": "enabled",
										"offset": 0,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 1282,
										"contract": "contracts/gainzilla.sol:MemeCoin",
										"label": "triggerPercentage",
										"offset": 1,
										"slot": "0",
										"type": "t_uint16"
									},
									{
										"astId": 1284,
										"contract": "contracts/gainzilla.sol:MemeCoin",
										"label": "athPrice",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1286,
										"contract": "contracts/gainzilla.sol:MemeCoin",
										"label": "sellStopped",
										"offset": 0,
										"slot": "2",
										"type": "t_bool"
									},
									{
										"astId": 1288,
										"contract": "contracts/gainzilla.sol:MemeCoin",
										"label": "blockedAth",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "128"
							},
							"t_struct(TaxRates)1249_storage": {
								"encoding": "inplace",
								"label": "struct MemeCoin.TaxRates",
								"members": [
									{
										"astId": 1242,
										"contract": "contracts/gainzilla.sol:MemeCoin",
										"label": "buyLp",
										"offset": 0,
										"slot": "0",
										"type": "t_uint16"
									},
									{
										"astId": 1244,
										"contract": "contracts/gainzilla.sol:MemeCoin",
										"label": "buyEco",
										"offset": 2,
										"slot": "0",
										"type": "t_uint16"
									},
									{
										"astId": 1246,
										"contract": "contracts/gainzilla.sol:MemeCoin",
										"label": "sellLp",
										"offset": 4,
										"slot": "0",
										"type": "t_uint16"
									},
									{
										"astId": 1248,
										"contract": "contracts/gainzilla.sol:MemeCoin",
										"label": "sellEco",
										"offset": 6,
										"slot": "0",
										"type": "t_uint16"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint16": {
								"encoding": "inplace",
								"label": "uint16",
								"numberOfBytes": "2"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint32": {
								"encoding": "inplace",
								"label": "uint32",
								"numberOfBytes": "4"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							311
						]
					},
					"id": 312,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:0",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 311,
							"linearizedBaseContracts": [
								311
							],
							"name": "SafeMath",
							"nameLocation": "490:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 33,
										"nodeType": "Block",
										"src": "717:140:0",
										"statements": [
											{
												"id": 32,
												"nodeType": "UncheckedBlock",
												"src": "727:124:0",
												"statements": [
													{
														"assignments": [
															15
														],
														"declarations": [
															{
																"constant": false,
																"id": 15,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 32,
																"src": "751:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 14,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 19,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 18,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 16,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "763:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 17,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 7,
																"src": "767:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 22,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 20,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 15,
																"src": "786:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 21,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "790:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 27,
														"nodeType": "IfStatement",
														"src": "782:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 23,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 24,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 25,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 13,
															"id": 26,
															"nodeType": "Return",
															"src": "793:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 28,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 29,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "838:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 30,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 13,
														"id": 31,
														"nodeType": "Return",
														"src": "824:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:0",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 34,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "657:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "668:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:0"
									},
									"returnParameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "702:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 9,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 12,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "708:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 11,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:0"
									},
									"scope": 311,
									"src": "641:216:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "1078:113:0",
										"statements": [
											{
												"id": 60,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 48,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 46,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 39,
																"src": "1116:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 47,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 37,
																"src": "1120:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 53,
														"nodeType": "IfStatement",
														"src": "1112:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 49,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 50,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 51,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 45,
															"id": 52,
															"nodeType": "Return",
															"src": "1123:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 54,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 57,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 55,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 37,
																		"src": "1168:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 56,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 39,
																		"src": "1172:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 58,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 45,
														"id": 59,
														"nodeType": "Return",
														"src": "1154:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:0",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 62,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1018:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 36,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1029:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:0"
									},
									"returnParameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1063:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1069:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 43,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:0"
									},
									"scope": 311,
									"src": "1002:189:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 103,
										"nodeType": "Block",
										"src": "1415:417:0",
										"statements": [
											{
												"id": 102,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 76,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 74,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "1683:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 75,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 81,
														"nodeType": "IfStatement",
														"src": "1679:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 77,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 79,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 73,
															"id": 80,
															"nodeType": "Return",
															"src": "1691:16:0"
														}
													},
													{
														"assignments": [
															83
														],
														"declarations": [
															{
																"constant": false,
																"id": 83,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 102,
																"src": "1721:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 82,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 87,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 86,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 84,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "1733:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 85,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "1737:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 92,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 90,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 88,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 83,
																	"src": "1756:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 89,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 65,
																	"src": "1760:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 91,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "1765:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 97,
														"nodeType": "IfStatement",
														"src": "1752:33:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 93,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 94,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 95,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 73,
															"id": 96,
															"nodeType": "Return",
															"src": "1768:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 98,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 99,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 83,
																	"src": "1813:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 100,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 73,
														"id": 101,
														"nodeType": "Return",
														"src": "1799:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:0",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 104,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1355:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1366:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 66,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:0"
									},
									"returnParameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1400:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 69,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1406:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 71,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:0"
									},
									"scope": 311,
									"src": "1339:493:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 131,
										"nodeType": "Block",
										"src": "2057:114:0",
										"statements": [
											{
												"id": 130,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 118,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 116,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 109,
																"src": "2095:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 123,
														"nodeType": "IfStatement",
														"src": "2091:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 119,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 120,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 121,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 115,
															"id": 122,
															"nodeType": "Return",
															"src": "2103:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 127,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 125,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 107,
																		"src": "2148:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 126,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 109,
																		"src": "2152:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 128,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 115,
														"id": 129,
														"nodeType": "Return",
														"src": "2134:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 105,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:0",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 132,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "1997:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2008:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 108,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:0"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2042:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 111,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2048:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:0"
									},
									"scope": 311,
									"src": "1981:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 159,
										"nodeType": "Block",
										"src": "2406:114:0",
										"statements": [
											{
												"id": 158,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 144,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 137,
																"src": "2444:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 145,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 151,
														"nodeType": "IfStatement",
														"src": "2440:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 147,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 148,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 149,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 143,
															"id": 150,
															"nodeType": "Return",
															"src": "2452:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 152,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 153,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 135,
																		"src": "2497:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 154,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 137,
																		"src": "2501:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 156,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 143,
														"id": 157,
														"nodeType": "Return",
														"src": "2483:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 133,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 160,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2346:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2357:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:0"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2391:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 139,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2397:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:0"
									},
									"scope": 311,
									"src": "2330:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 174,
										"nodeType": "Block",
										"src": "2822:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 170,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 163,
														"src": "2839:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 171,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 165,
														"src": "2843:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 169,
												"id": 173,
												"nodeType": "Return",
												"src": "2832:12:0"
											}
										]
									},
									"documentation": {
										"id": 161,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:0",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2768:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2779:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:0"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2813:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:0"
									},
									"scope": 311,
									"src": "2755:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "3189:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 185,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 178,
														"src": "3206:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 186,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 180,
														"src": "3210:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 184,
												"id": 188,
												"nodeType": "Return",
												"src": "3199:12:0"
											}
										]
									},
									"documentation": {
										"id": 176,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 190,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3135:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 177,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3146:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:0"
									},
									"returnParameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3180:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:0"
									},
									"scope": 311,
									"src": "3122:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 204,
										"nodeType": "Block",
										"src": "3532:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 200,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3549:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 201,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 195,
														"src": "3553:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 199,
												"id": 203,
												"nodeType": "Return",
												"src": "3542:12:0"
											}
										]
									},
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:0",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 205,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3478:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 192,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3489:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:0"
									},
									"returnParameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3523:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:0"
									},
									"scope": 311,
									"src": "3465:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 219,
										"nodeType": "Block",
										"src": "3917:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 215,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 208,
														"src": "3934:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 216,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 210,
														"src": "3938:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 214,
												"id": 218,
												"nodeType": "Return",
												"src": "3927:12:0"
											}
										]
									},
									"documentation": {
										"id": 206,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 220,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3863:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3874:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:0"
									},
									"returnParameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3908:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:0"
									},
									"scope": 311,
									"src": "3850:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 234,
										"nodeType": "Block",
										"src": "4466:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 230,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 223,
														"src": "4483:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 231,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 225,
														"src": "4487:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 229,
												"id": 233,
												"nodeType": "Return",
												"src": "4476:12:0"
											}
										]
									},
									"documentation": {
										"id": 221,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 235,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4412:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4423:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:0"
									},
									"returnParameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4457:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:0"
									},
									"scope": 311,
									"src": "4399:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 259,
										"nodeType": "Block",
										"src": "5054:106:0",
										"statements": [
											{
												"id": 258,
												"nodeType": "UncheckedBlock",
												"src": "5064:90:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 250,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 248,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 240,
																		"src": "5096:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 249,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 238,
																		"src": "5101:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5096:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 251,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 242,
																	"src": "5104:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 247,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5088:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 252,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5088:29:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 253,
														"nodeType": "ExpressionStatement",
														"src": "5088:29:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 254,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 238,
																"src": "5138:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 255,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 240,
																"src": "5142:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5138:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 246,
														"id": 257,
														"nodeType": "Return",
														"src": "5131:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 236,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 260,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4980:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "4972:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4972:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4991:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "4983:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4983:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5008:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "4994:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 241,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4994:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:50:0"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "5045:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5045:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5044:9:0"
									},
									"scope": 311,
									"src": "4959:201:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 284,
										"nodeType": "Block",
										"src": "5739:105:0",
										"statements": [
											{
												"id": 283,
												"nodeType": "UncheckedBlock",
												"src": "5749:89:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 275,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 273,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 265,
																		"src": "5781:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 274,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5785:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5781:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 276,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 267,
																	"src": "5788:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 272,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5773:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 277,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5773:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 278,
														"nodeType": "ExpressionStatement",
														"src": "5773:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 279,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 263,
																"src": "5822:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 280,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 265,
																"src": "5826:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5822:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 271,
														"id": 282,
														"nodeType": "Return",
														"src": "5815:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 261,
										"nodeType": "StructuredDocumentation",
										"src": "5166:473:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 285,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5653:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5665:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5657:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5657:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5676:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5668:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5668:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5693:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5679:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 266,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5679:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5656:50:0"
									},
									"returnParameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5730:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5730:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5729:9:0"
									},
									"scope": 311,
									"src": "5644:200:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 309,
										"nodeType": "Block",
										"src": "6585:105:0",
										"statements": [
											{
												"id": 308,
												"nodeType": "UncheckedBlock",
												"src": "6595:89:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 300,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 298,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 290,
																		"src": "6627:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 299,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6631:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6627:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 301,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 292,
																	"src": "6634:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 297,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6619:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 302,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6619:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 303,
														"nodeType": "ExpressionStatement",
														"src": "6619:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 304,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 288,
																"src": "6668:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 305,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 290,
																"src": "6672:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6668:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 296,
														"id": 307,
														"nodeType": "Return",
														"src": "6661:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 286,
										"nodeType": "StructuredDocumentation",
										"src": "5850:635:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 310,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6499:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6511:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6503:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6503:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6522:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6514:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6514:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6539:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6525:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 291,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6525:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6502:50:0"
									},
									"returnParameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6576:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6576:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6575:9:0"
									},
									"scope": 311,
									"src": "6490:200:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 312,
							"src": "482:6210:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "107:6586:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts@4.9.3/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@4.9.3/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1136
						],
						"Ownable": [
							424
						]
					},
					"id": 425,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 313,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.9.3/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 314,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 425,
							"sourceUnit": 1137,
							"src": "127:30:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 316,
										"name": "Context",
										"nameLocations": [
											"683:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1136,
										"src": "683:7:1"
									},
									"id": 317,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:1"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 315,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:1",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 424,
							"linearizedBaseContracts": [
								424,
								1136
							],
							"name": "Ownable",
							"nameLocation": "672:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 319,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 424,
									"src": "697:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 318,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 325,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "753:29:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 320,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 323,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "784:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 322,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:1"
									},
									"src": "726:84:1"
								},
								{
									"body": {
										"id": 334,
										"nodeType": "Block",
										"src": "926:49:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 330,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1126,
																"src": "955:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 331,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 329,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 423,
														"src": "936:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 333,
												"nodeType": "ExpressionStatement",
												"src": "936:32:1"
											}
										]
									},
									"documentation": {
										"id": 326,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:1",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 335,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 327,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:1"
									},
									"returnParameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:1"
									},
									"scope": 424,
									"src": "912:63:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 342,
										"nodeType": "Block",
										"src": "1084:41:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 338,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 366,
														"src": "1094:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 340,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:1"
											},
											{
												"id": 341,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:1"
											}
										]
									},
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:1",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 343,
									"name": "onlyOwner",
									"nameLocation": "1072:9:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:1"
									},
									"src": "1063:62:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 351,
										"nodeType": "Block",
										"src": "1256:30:1",
										"statements": [
											{
												"expression": {
													"id": 349,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 319,
													"src": "1273:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 348,
												"id": 350,
												"nodeType": "Return",
												"src": "1266:13:1"
											}
										]
									},
									"documentation": {
										"id": 344,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:1",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 352,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:1"
									},
									"returnParameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "1247:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:1"
									},
									"scope": 424,
									"src": "1201:85:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 365,
										"nodeType": "Block",
										"src": "1404:85:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 357,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 352,
																	"src": "1422:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 358,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 359,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1126,
																	"src": "1433:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 360,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 362,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 356,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 364,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:1"
											}
										]
									},
									"documentation": {
										"id": 353,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:1",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 366,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 354,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:1"
									},
									"returnParameters": {
										"id": 355,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:1"
									},
									"scope": 424,
									"src": "1359:130:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 379,
										"nodeType": "Block",
										"src": "1878:47:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 375,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1915:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 374,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1907:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 373,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1907:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 376,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1907:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 372,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 423,
														"src": "1888:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 377,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1888:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 378,
												"nodeType": "ExpressionStatement",
												"src": "1888:30:1"
											}
										]
									},
									"documentation": {
										"id": 367,
										"nodeType": "StructuredDocumentation",
										"src": "1495:324:1",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 380,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 370,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 369,
												"name": "onlyOwner",
												"nameLocations": [
													"1868:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 343,
												"src": "1868:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "1868:9:1"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1833:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1850:2:1"
									},
									"returnParameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1878:0:1"
									},
									"scope": 424,
									"src": "1824:101:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 402,
										"nodeType": "Block",
										"src": "2144:128:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 394,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 389,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 383,
																"src": "2162:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 392,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2182:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 391,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2174:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 390,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2174:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 393,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2174:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2162:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 395,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2186:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 388,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2154:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2154:73:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 397,
												"nodeType": "ExpressionStatement",
												"src": "2154:73:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 399,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 383,
															"src": "2256:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 398,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 423,
														"src": "2237:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2237:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 401,
												"nodeType": "ExpressionStatement",
												"src": "2237:28:1"
											}
										]
									},
									"documentation": {
										"id": 381,
										"nodeType": "StructuredDocumentation",
										"src": "1931:138:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 403,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 386,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 385,
												"name": "onlyOwner",
												"nameLocations": [
													"2134:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 343,
												"src": "2134:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2134:9:1"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2083:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 384,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 383,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2109:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "2101:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 382,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2101:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2100:18:1"
									},
									"returnParameters": {
										"id": 387,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2144:0:1"
									},
									"scope": 424,
									"src": "2074:198:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 422,
										"nodeType": "Block",
										"src": "2489:124:1",
										"statements": [
											{
												"assignments": [
													410
												],
												"declarations": [
													{
														"constant": false,
														"id": 410,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2507:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 422,
														"src": "2499:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 409,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2499:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 412,
												"initialValue": {
													"id": 411,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 319,
													"src": "2518:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2499:25:1"
											},
											{
												"expression": {
													"id": 415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 413,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "2534:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 414,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 406,
														"src": "2543:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2534:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 416,
												"nodeType": "ExpressionStatement",
												"src": "2534:17:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 418,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 410,
															"src": "2587:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 419,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 406,
															"src": "2597:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 417,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 325,
														"src": "2566:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2566:40:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 421,
												"nodeType": "EmitStatement",
												"src": "2561:45:1"
											}
										]
									},
									"documentation": {
										"id": 404,
										"nodeType": "StructuredDocumentation",
										"src": "2278:143:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 423,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2435:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2462:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "2454:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 405,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2454:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2453:18:1"
									},
									"returnParameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2489:0:1"
									},
									"scope": 424,
									"src": "2426:187:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 425,
							"src": "654:1961:1",
							"usedErrors": [],
							"usedEvents": [
								325
							]
						}
					],
					"src": "102:2514:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							1136
						],
						"ERC20": [
							1011
						],
						"IERC20": [
							1089
						],
						"IERC20Metadata": [
							1114
						]
					},
					"id": 1012,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 426,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "105:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.9.3/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 427,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1012,
							"sourceUnit": 1090,
							"src": "130:22:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.9.3/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 428,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1012,
							"sourceUnit": 1115,
							"src": "153:41:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.9.3/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 429,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1012,
							"sourceUnit": 1137,
							"src": "195:33:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 431,
										"name": "Context",
										"nameLocations": [
											"1550:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1136,
										"src": "1550:7:2"
									},
									"id": 432,
									"nodeType": "InheritanceSpecifier",
									"src": "1550:7:2"
								},
								{
									"baseName": {
										"id": 433,
										"name": "IERC20",
										"nameLocations": [
											"1559:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1089,
										"src": "1559:6:2"
									},
									"id": 434,
									"nodeType": "InheritanceSpecifier",
									"src": "1559:6:2"
								},
								{
									"baseName": {
										"id": 435,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1567:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1114,
										"src": "1567:14:2"
									},
									"id": 436,
									"nodeType": "InheritanceSpecifier",
									"src": "1567:14:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 430,
								"nodeType": "StructuredDocumentation",
								"src": "230:1301:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 1011,
							"linearizedBaseContracts": [
								1011,
								1114,
								1089,
								1136
							],
							"name": "ERC20",
							"nameLocation": "1541:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 440,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1624:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 1011,
									"src": "1588:45:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 439,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 437,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1596:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1588:27:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 438,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1607:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 446,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1696:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 1011,
									"src": "1640:67:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 445,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 441,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1648:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1640:47:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 444,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 442,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1667:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1659:27:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 443,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1678:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 448,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1730:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 1011,
									"src": "1714:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 447,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1714:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 450,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1764:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 1011,
									"src": "1749:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 449,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1749:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 452,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1790:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 1011,
									"src": "1775:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 451,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1775:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 468,
										"nodeType": "Block",
										"src": "2036:57:2",
										"statements": [
											{
												"expression": {
													"id": 462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 460,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 450,
														"src": "2046:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 461,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 455,
														"src": "2054:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2046:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 463,
												"nodeType": "ExpressionStatement",
												"src": "2046:13:2"
											},
											{
												"expression": {
													"id": 466,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 464,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 452,
														"src": "2069:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 465,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 457,
														"src": "2079:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2069:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 467,
												"nodeType": "ExpressionStatement",
												"src": "2069:17:2"
											}
										]
									},
									"documentation": {
										"id": 453,
										"nodeType": "StructuredDocumentation",
										"src": "1804:171:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 469,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2006:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 469,
												"src": "1992:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 454,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1992:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2027:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 469,
												"src": "2013:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 456,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2013:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1991:44:2"
									},
									"returnParameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2036:0:2"
									},
									"scope": 1011,
									"src": "1980:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1101
									],
									"body": {
										"id": 478,
										"nodeType": "Block",
										"src": "2227:29:2",
										"statements": [
											{
												"expression": {
													"id": 476,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 450,
													"src": "2244:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 475,
												"id": 477,
												"nodeType": "Return",
												"src": "2237:12:2"
											}
										]
									},
									"documentation": {
										"id": 470,
										"nodeType": "StructuredDocumentation",
										"src": "2099:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 479,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2167:4:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 472,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2194:8:2"
									},
									"parameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2171:2:2"
									},
									"returnParameters": {
										"id": 475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 479,
												"src": "2212:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 473,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2212:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2211:15:2"
									},
									"scope": 1011,
									"src": "2158:98:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1107
									],
									"body": {
										"id": 488,
										"nodeType": "Block",
										"src": "2440:31:2",
										"statements": [
											{
												"expression": {
													"id": 486,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 452,
													"src": "2457:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 485,
												"id": 487,
												"nodeType": "Return",
												"src": "2450:14:2"
											}
										]
									},
									"documentation": {
										"id": 480,
										"nodeType": "StructuredDocumentation",
										"src": "2262:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 489,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2378:6:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 482,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2407:8:2"
									},
									"parameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2384:2:2"
									},
									"returnParameters": {
										"id": 485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "2425:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 483,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2425:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2424:15:2"
									},
									"scope": 1011,
									"src": "2369:102:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1113
									],
									"body": {
										"id": 498,
										"nodeType": "Block",
										"src": "3169:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 496,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3186:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 495,
												"id": 497,
												"nodeType": "Return",
												"src": "3179:9:2"
											}
										]
									},
									"documentation": {
										"id": 490,
										"nodeType": "StructuredDocumentation",
										"src": "2477:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 499,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3113:8:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 492,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3144:8:2"
									},
									"parameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3121:2:2"
									},
									"returnParameters": {
										"id": 495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "3162:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 493,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3162:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3161:7:2"
									},
									"scope": 1011,
									"src": "3104:91:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1038
									],
									"body": {
										"id": 508,
										"nodeType": "Block",
										"src": "3325:36:2",
										"statements": [
											{
												"expression": {
													"id": 506,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 448,
													"src": "3342:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 505,
												"id": 507,
												"nodeType": "Return",
												"src": "3335:19:2"
											}
										]
									},
									"documentation": {
										"id": 500,
										"nodeType": "StructuredDocumentation",
										"src": "3201:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 509,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3264:11:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 502,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3298:8:2"
									},
									"parameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3275:2:2"
									},
									"returnParameters": {
										"id": 505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "3316:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 503,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3316:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3315:9:2"
									},
									"scope": 1011,
									"src": "3255:106:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1046
									],
									"body": {
										"id": 522,
										"nodeType": "Block",
										"src": "3502:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 518,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 440,
														"src": "3519:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 520,
													"indexExpression": {
														"id": 519,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 512,
														"src": "3529:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3519:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 517,
												"id": 521,
												"nodeType": "Return",
												"src": "3512:25:2"
											}
										]
									},
									"documentation": {
										"id": 510,
										"nodeType": "StructuredDocumentation",
										"src": "3367:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 523,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3428:9:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 514,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3475:8:2"
									},
									"parameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3446:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "3438:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 511,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3438:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3437:17:2"
									},
									"returnParameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "3493:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 515,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3493:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3492:9:2"
									},
									"scope": 1011,
									"src": "3419:125:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1056
									],
									"body": {
										"id": 547,
										"nodeType": "Block",
										"src": "3825:104:2",
										"statements": [
											{
												"assignments": [
													535
												],
												"declarations": [
													{
														"constant": false,
														"id": 535,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3843:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 547,
														"src": "3835:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 534,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3835:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 538,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 536,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1126,
														"src": "3851:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3851:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3835:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 540,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 535,
															"src": "3883:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 541,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "3890:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 542,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "3894:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 539,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 771,
														"src": "3873:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3873:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 544,
												"nodeType": "ExpressionStatement",
												"src": "3873:28:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 545,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3918:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 533,
												"id": 546,
												"nodeType": "Return",
												"src": "3911:11:2"
											}
										]
									},
									"documentation": {
										"id": 524,
										"nodeType": "StructuredDocumentation",
										"src": "3550:185:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 548,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3749:8:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 530,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3801:8:2"
									},
									"parameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3766:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "3758:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 525,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3758:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3778:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "3770:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 527,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3770:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3757:28:2"
									},
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "3819:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 531,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3819:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:6:2"
									},
									"scope": 1011,
									"src": "3740:189:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1066
									],
									"body": {
										"id": 565,
										"nodeType": "Block",
										"src": "4085:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 559,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 446,
															"src": "4102:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 561,
														"indexExpression": {
															"id": 560,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 551,
															"src": "4114:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4102:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 563,
													"indexExpression": {
														"id": 562,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 553,
														"src": "4121:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4102:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 558,
												"id": 564,
												"nodeType": "Return",
												"src": "4095:34:2"
											}
										]
									},
									"documentation": {
										"id": 549,
										"nodeType": "StructuredDocumentation",
										"src": "3935:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 566,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3996:9:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 555,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4058:8:2"
									},
									"parameters": {
										"id": 554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4014:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 566,
												"src": "4006:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 550,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4006:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 553,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4029:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 566,
												"src": "4021:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 552,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4021:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4005:32:2"
									},
									"returnParameters": {
										"id": 558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 566,
												"src": "4076:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 556,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4076:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4075:9:2"
									},
									"scope": 1011,
									"src": "3987:149:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1076
									],
									"body": {
										"id": 590,
										"nodeType": "Block",
										"src": "4533:108:2",
										"statements": [
											{
												"assignments": [
													578
												],
												"declarations": [
													{
														"constant": false,
														"id": 578,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4551:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 590,
														"src": "4543:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 577,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4543:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 581,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 579,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1126,
														"src": "4559:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4559:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4543:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 583,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 578,
															"src": "4590:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 584,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 569,
															"src": "4597:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 585,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 571,
															"src": "4606:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 582,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 945,
														"src": "4581:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 586,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4581:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 587,
												"nodeType": "ExpressionStatement",
												"src": "4581:32:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 588,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4630:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 576,
												"id": 589,
												"nodeType": "Return",
												"src": "4623:11:2"
											}
										]
									},
									"documentation": {
										"id": 567,
										"nodeType": "StructuredDocumentation",
										"src": "4142:297:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 591,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4453:7:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 573,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4509:8:2"
									},
									"parameters": {
										"id": 572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 569,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4469:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 591,
												"src": "4461:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 568,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4461:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 571,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4486:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 591,
												"src": "4478:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 570,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4478:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4460:33:2"
									},
									"returnParameters": {
										"id": 576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 575,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 591,
												"src": "4527:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 574,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4527:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4526:6:2"
									},
									"scope": 1011,
									"src": "4444:197:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1088
									],
									"body": {
										"id": 623,
										"nodeType": "Block",
										"src": "5306:153:2",
										"statements": [
											{
												"assignments": [
													605
												],
												"declarations": [
													{
														"constant": false,
														"id": 605,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5324:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 623,
														"src": "5316:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 604,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5316:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 608,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 606,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1126,
														"src": "5334:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 607,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5334:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5316:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 610,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 594,
															"src": "5372:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 611,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "5378:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 612,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 598,
															"src": "5387:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 609,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 988,
														"src": "5356:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 613,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5356:38:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 614,
												"nodeType": "ExpressionStatement",
												"src": "5356:38:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 616,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 594,
															"src": "5414:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 617,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 596,
															"src": "5420:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 618,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 598,
															"src": "5424:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 615,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 771,
														"src": "5404:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5404:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 620,
												"nodeType": "ExpressionStatement",
												"src": "5404:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 621,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5448:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 603,
												"id": 622,
												"nodeType": "Return",
												"src": "5441:11:2"
											}
										]
									},
									"documentation": {
										"id": 592,
										"nodeType": "StructuredDocumentation",
										"src": "4647:551:2",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 624,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5212:12:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 600,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5282:8:2"
									},
									"parameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 594,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5233:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 624,
												"src": "5225:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 593,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5225:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 596,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5247:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 624,
												"src": "5239:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 595,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5239:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5259:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 624,
												"src": "5251:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 597,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5251:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5224:42:2"
									},
									"returnParameters": {
										"id": 603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 602,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 624,
												"src": "5300:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 601,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5300:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5299:6:2"
									},
									"scope": 1011,
									"src": "5203:256:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 652,
										"nodeType": "Block",
										"src": "5948:140:2",
										"statements": [
											{
												"assignments": [
													635
												],
												"declarations": [
													{
														"constant": false,
														"id": 635,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "5966:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 652,
														"src": "5958:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 634,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5958:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 638,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 636,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1126,
														"src": "5974:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5974:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5958:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 640,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 635,
															"src": "6005:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 641,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 627,
															"src": "6012:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 647,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 643,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 635,
																		"src": "6031:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 644,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 627,
																		"src": "6038:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 642,
																	"name": "allowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 566,
																	"src": "6021:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view returns (uint256)"
																	}
																},
																"id": 645,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6021:25:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 646,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 629,
																"src": "6049:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6021:38:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 639,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 945,
														"src": "5996:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5996:64:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 649,
												"nodeType": "ExpressionStatement",
												"src": "5996:64:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 650,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6077:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 633,
												"id": 651,
												"nodeType": "Return",
												"src": "6070:11:2"
											}
										]
									},
									"documentation": {
										"id": 625,
										"nodeType": "StructuredDocumentation",
										"src": "5465:384:2",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 653,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "5863:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 627,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5889:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "5881:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 626,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5881:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 629,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "5906:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "5898:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 628,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5880:37:2"
									},
									"returnParameters": {
										"id": 633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "5942:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 631,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5942:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5941:6:2"
									},
									"scope": 1011,
									"src": "5854:234:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 693,
										"nodeType": "Block",
										"src": "6674:328:2",
										"statements": [
											{
												"assignments": [
													664
												],
												"declarations": [
													{
														"constant": false,
														"id": 664,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "6692:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 693,
														"src": "6684:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 663,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6684:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 667,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 665,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1126,
														"src": "6700:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 666,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6700:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6684:28:2"
											},
											{
												"assignments": [
													669
												],
												"declarations": [
													{
														"constant": false,
														"id": 669,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "6730:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 693,
														"src": "6722:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 668,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6722:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 674,
												"initialValue": {
													"arguments": [
														{
															"id": 671,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 664,
															"src": "6759:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 672,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 656,
															"src": "6766:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 670,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 566,
														"src": "6749:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 673,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6749:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6722:52:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 678,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 676,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 669,
																"src": "6792:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 677,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 658,
																"src": "6812:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6792:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 679,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6829:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															},
															"value": "ERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															}
														],
														"id": 675,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6784:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6784:85:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 681,
												"nodeType": "ExpressionStatement",
												"src": "6784:85:2"
											},
											{
												"id": 690,
												"nodeType": "UncheckedBlock",
												"src": "6879:95:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 683,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 664,
																	"src": "6912:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 684,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 656,
																	"src": "6919:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 687,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 685,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 669,
																		"src": "6928:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 686,
																		"name": "subtractedValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 658,
																		"src": "6947:15:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6928:34:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 682,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 945,
																"src": "6903:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 688,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6903:60:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 689,
														"nodeType": "ExpressionStatement",
														"src": "6903:60:2"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 691,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6991:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 662,
												"id": 692,
												"nodeType": "Return",
												"src": "6984:11:2"
											}
										]
									},
									"documentation": {
										"id": 654,
										"nodeType": "StructuredDocumentation",
										"src": "6094:476:2",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 694,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "6584:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 656,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6610:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 694,
												"src": "6602:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 655,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6602:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "6627:15:2",
												"nodeType": "VariableDeclaration",
												"scope": 694,
												"src": "6619:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 657,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6619:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6601:42:2"
									},
									"returnParameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 661,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 694,
												"src": "6668:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 660,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6668:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6667:6:2"
									},
									"scope": 1011,
									"src": "6575:427:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 770,
										"nodeType": "Block",
										"src": "7534:710:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 710,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 705,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 697,
																"src": "7552:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 708,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7568:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 707,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7560:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 706,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7560:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 709,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7560:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7552:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 711,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7572:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 704,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7544:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 712,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7544:68:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 713,
												"nodeType": "ExpressionStatement",
												"src": "7544:68:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 720,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 715,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 699,
																"src": "7630:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 718,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7644:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 717,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7636:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 716,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7636:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 719,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7636:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7630:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 721,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7648:37:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 714,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7622:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7622:64:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 723,
												"nodeType": "ExpressionStatement",
												"src": "7622:64:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 725,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 697,
															"src": "7718:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 726,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 699,
															"src": "7724:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 727,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 701,
															"src": "7728:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 724,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 999,
														"src": "7697:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7697:38:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 729,
												"nodeType": "ExpressionStatement",
												"src": "7697:38:2"
											},
											{
												"assignments": [
													731
												],
												"declarations": [
													{
														"constant": false,
														"id": 731,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "7754:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 770,
														"src": "7746:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 730,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7746:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 735,
												"initialValue": {
													"baseExpression": {
														"id": 732,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 440,
														"src": "7768:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 734,
													"indexExpression": {
														"id": 733,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 697,
														"src": "7778:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7768:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7746:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 739,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 737,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 731,
																"src": "7801:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 738,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 701,
																"src": "7816:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7801:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 740,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7824:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															},
															"value": "ERC20: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															}
														],
														"id": 736,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7793:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7793:72:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 742,
												"nodeType": "ExpressionStatement",
												"src": "7793:72:2"
											},
											{
												"id": 757,
												"nodeType": "UncheckedBlock",
												"src": "7875:273:2",
												"statements": [
													{
														"expression": {
															"id": 749,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 743,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 440,
																	"src": "7899:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 745,
																"indexExpression": {
																	"id": 744,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 697,
																	"src": "7909:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "7899:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 748,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 746,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 731,
																	"src": "7917:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 747,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 701,
																	"src": "7931:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7917:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7899:38:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 750,
														"nodeType": "ExpressionStatement",
														"src": "7899:38:2"
													},
													{
														"expression": {
															"id": 755,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 751,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 440,
																	"src": "8114:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 753,
																"indexExpression": {
																	"id": 752,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 699,
																	"src": "8124:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8114:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 754,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 701,
																"src": "8131:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8114:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 756,
														"nodeType": "ExpressionStatement",
														"src": "8114:23:2"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 759,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 697,
															"src": "8172:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 760,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 699,
															"src": "8178:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 761,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 701,
															"src": "8182:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 758,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1023,
														"src": "8163:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 762,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8163:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 763,
												"nodeType": "EmitStatement",
												"src": "8158:31:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 765,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 697,
															"src": "8220:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 766,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 699,
															"src": "8226:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 767,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 701,
															"src": "8230:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 764,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1010,
														"src": "8200:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 768,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8200:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 769,
												"nodeType": "ExpressionStatement",
												"src": "8200:37:2"
											}
										]
									},
									"documentation": {
										"id": 695,
										"nodeType": "StructuredDocumentation",
										"src": "7008:443:2",
										"text": " @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."
									},
									"id": 771,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "7465:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7483:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 771,
												"src": "7475:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 696,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7475:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7497:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 771,
												"src": "7489:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7489:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7509:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 771,
												"src": "7501:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 700,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7501:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7474:42:2"
									},
									"returnParameters": {
										"id": 703,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7534:0:2"
									},
									"scope": 1011,
									"src": "7456:788:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 827,
										"nodeType": "Block",
										"src": "8585:470:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 785,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 780,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 774,
																"src": "8603:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 783,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8622:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 782,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8614:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 781,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8614:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 784,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8614:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8603:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 786,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8626:33:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 779,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8595:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 787,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8595:65:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 788,
												"nodeType": "ExpressionStatement",
												"src": "8595:65:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 792,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8700:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 791,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8692:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 790,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8692:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 793,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8692:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 794,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 774,
															"src": "8704:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 795,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 776,
															"src": "8713:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 789,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 999,
														"src": "8671:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 796,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8671:49:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 797,
												"nodeType": "ExpressionStatement",
												"src": "8671:49:2"
											},
											{
												"expression": {
													"id": 800,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 798,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 448,
														"src": "8731:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 799,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 776,
														"src": "8747:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8731:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 801,
												"nodeType": "ExpressionStatement",
												"src": "8731:22:2"
											},
											{
												"id": 808,
												"nodeType": "UncheckedBlock",
												"src": "8763:175:2",
												"statements": [
													{
														"expression": {
															"id": 806,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 802,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 440,
																	"src": "8899:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 804,
																"indexExpression": {
																	"id": 803,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 774,
																	"src": "8909:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8899:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 805,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 776,
																"src": "8921:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8899:28:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 807,
														"nodeType": "ExpressionStatement",
														"src": "8899:28:2"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 812,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8969:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 811,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8961:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 810,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8961:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 813,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8961:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 814,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 774,
															"src": "8973:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 815,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 776,
															"src": "8982:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 809,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1023,
														"src": "8952:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8952:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 817,
												"nodeType": "EmitStatement",
												"src": "8947:42:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 821,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9028:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 820,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9020:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 819,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9020:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 822,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9020:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 823,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 774,
															"src": "9032:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 824,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 776,
															"src": "9041:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 818,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1010,
														"src": "9000:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 825,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9000:48:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 826,
												"nodeType": "ExpressionStatement",
												"src": "9000:48:2"
											}
										]
									},
									"documentation": {
										"id": 772,
										"nodeType": "StructuredDocumentation",
										"src": "8250:265:2",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
									},
									"id": 828,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "8529:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 774,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8543:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 828,
												"src": "8535:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 773,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8535:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 776,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8560:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 828,
												"src": "8552:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 775,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8552:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8534:33:2"
									},
									"returnParameters": {
										"id": 778,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8585:0:2"
									},
									"scope": 1011,
									"src": "8520:535:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 899,
										"nodeType": "Block",
										"src": "9440:594:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 842,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 837,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 831,
																"src": "9458:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 840,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9477:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 839,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9469:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 838,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9469:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 841,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9469:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9458:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 843,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9481:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 836,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9450:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 844,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9450:67:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 845,
												"nodeType": "ExpressionStatement",
												"src": "9450:67:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 847,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 831,
															"src": "9549:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 850,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9566:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 849,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9558:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 848,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9558:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 851,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9558:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 852,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 833,
															"src": "9570:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 846,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 999,
														"src": "9528:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 853,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9528:49:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 854,
												"nodeType": "ExpressionStatement",
												"src": "9528:49:2"
											},
											{
												"assignments": [
													856
												],
												"declarations": [
													{
														"constant": false,
														"id": 856,
														"mutability": "mutable",
														"name": "accountBalance",
														"nameLocation": "9596:14:2",
														"nodeType": "VariableDeclaration",
														"scope": 899,
														"src": "9588:22:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 855,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9588:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 860,
												"initialValue": {
													"baseExpression": {
														"id": 857,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 440,
														"src": "9613:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 859,
													"indexExpression": {
														"id": 858,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 831,
														"src": "9623:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9613:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9588:43:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 864,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 862,
																"name": "accountBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 856,
																"src": "9649:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 863,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 833,
																"src": "9667:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9649:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 865,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9675:36:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															},
															"value": "ERC20: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															}
														],
														"id": 861,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9641:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 866,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9641:71:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 867,
												"nodeType": "ExpressionStatement",
												"src": "9641:71:2"
											},
											{
												"id": 880,
												"nodeType": "UncheckedBlock",
												"src": "9722:194:2",
												"statements": [
													{
														"expression": {
															"id": 874,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 868,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 440,
																	"src": "9746:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 870,
																"indexExpression": {
																	"id": 869,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 831,
																	"src": "9756:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "9746:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 873,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 871,
																	"name": "accountBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 856,
																	"src": "9767:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 872,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 833,
																	"src": "9784:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9767:23:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9746:44:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 875,
														"nodeType": "ExpressionStatement",
														"src": "9746:44:2"
													},
													{
														"expression": {
															"id": 878,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 876,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 448,
																"src": "9883:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "-=",
															"rightHandSide": {
																"id": 877,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 833,
																"src": "9899:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9883:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 879,
														"nodeType": "ExpressionStatement",
														"src": "9883:22:2"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 882,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 831,
															"src": "9940:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 885,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9957:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 884,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9949:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 883,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9949:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 886,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9949:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 887,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 833,
															"src": "9961:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 881,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1023,
														"src": "9931:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 888,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9931:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 889,
												"nodeType": "EmitStatement",
												"src": "9926:42:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 891,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 831,
															"src": "9999:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 894,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10016:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 893,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10008:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 892,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10008:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 895,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10008:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 896,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 833,
															"src": "10020:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 890,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1010,
														"src": "9979:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 897,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9979:48:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 898,
												"nodeType": "ExpressionStatement",
												"src": "9979:48:2"
											}
										]
									},
									"documentation": {
										"id": 829,
										"nodeType": "StructuredDocumentation",
										"src": "9061:309:2",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 900,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "9384:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 834,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 831,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "9398:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 900,
												"src": "9390:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 830,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9390:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 833,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9415:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 900,
												"src": "9407:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 832,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9407:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9389:33:2"
									},
									"returnParameters": {
										"id": 835,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9440:0:2"
									},
									"scope": 1011,
									"src": "9375:659:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 944,
										"nodeType": "Block",
										"src": "10540:257:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 916,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 911,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 903,
																"src": "10558:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 914,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10575:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 913,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10567:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 912,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10567:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 915,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10567:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10558:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 917,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10579:38:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 910,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10550:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10550:68:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 919,
												"nodeType": "ExpressionStatement",
												"src": "10550:68:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 926,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 921,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 905,
																"src": "10636:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 924,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10655:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 923,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10647:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 922,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10647:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 925,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10647:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10636:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 927,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10659:36:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 920,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10628:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 928,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10628:68:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 929,
												"nodeType": "ExpressionStatement",
												"src": "10628:68:2"
											},
											{
												"expression": {
													"id": 936,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 930,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 446,
																"src": "10707:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 933,
															"indexExpression": {
																"id": 931,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 903,
																"src": "10719:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10707:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 934,
														"indexExpression": {
															"id": 932,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 905,
															"src": "10726:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10707:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 935,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 907,
														"src": "10737:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10707:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 937,
												"nodeType": "ExpressionStatement",
												"src": "10707:36:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 939,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 903,
															"src": "10767:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 940,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 905,
															"src": "10774:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 941,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 907,
															"src": "10783:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 938,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1032,
														"src": "10758:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 942,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10758:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 943,
												"nodeType": "EmitStatement",
												"src": "10753:37:2"
											}
										]
									},
									"documentation": {
										"id": 901,
										"nodeType": "StructuredDocumentation",
										"src": "10040:412:2",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 945,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "10466:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 903,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10483:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "10475:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 902,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10475:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 905,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10498:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "10490:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 904,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10490:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 907,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10515:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "10507:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 906,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10507:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10474:48:2"
									},
									"returnParameters": {
										"id": 909,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10540:0:2"
									},
									"scope": 1011,
									"src": "10457:340:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 987,
										"nodeType": "Block",
										"src": "11168:321:2",
										"statements": [
											{
												"assignments": [
													956
												],
												"declarations": [
													{
														"constant": false,
														"id": 956,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "11186:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 987,
														"src": "11178:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 955,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11178:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 961,
												"initialValue": {
													"arguments": [
														{
															"id": 958,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 948,
															"src": "11215:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 959,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 950,
															"src": "11222:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 957,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 566,
														"src": "11205:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 960,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11205:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11178:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 968,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 962,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 956,
														"src": "11244:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 965,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11269:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 964,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "11269:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 963,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "11264:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 966,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11264:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 967,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "11278:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "11264:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11244:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 986,
												"nodeType": "IfStatement",
												"src": "11240:243:2",
												"trueBody": {
													"id": 985,
													"nodeType": "Block",
													"src": "11283:200:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 972,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 970,
																			"name": "currentAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 956,
																			"src": "11305:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 971,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 952,
																			"src": "11325:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "11305:26:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"id": 973,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11333:31:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		},
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		}
																	],
																	"id": 969,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "11297:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 974,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11297:68:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 975,
															"nodeType": "ExpressionStatement",
															"src": "11297:68:2"
														},
														{
															"id": 984,
															"nodeType": "UncheckedBlock",
															"src": "11379:94:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 977,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 948,
																				"src": "11416:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 978,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 950,
																				"src": "11423:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 981,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 979,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 956,
																					"src": "11432:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 980,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 952,
																					"src": "11451:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11432:25:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 976,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 945,
																			"src": "11407:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																				"typeString": "function (address,address,uint256)"
																			}
																		},
																		"id": 982,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11407:51:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 983,
																	"nodeType": "ExpressionStatement",
																	"src": "11407:51:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 946,
										"nodeType": "StructuredDocumentation",
										"src": "10803:270:2",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."
									},
									"id": 988,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "11087:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 953,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 948,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "11111:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 988,
												"src": "11103:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 947,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11103:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 950,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "11126:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 988,
												"src": "11118:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 949,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11118:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 952,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11143:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 988,
												"src": "11135:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 951,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11135:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11102:48:2"
									},
									"returnParameters": {
										"id": 954,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11168:0:2"
									},
									"scope": 1011,
									"src": "11078:411:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 998,
										"nodeType": "Block",
										"src": "12162:2:2",
										"statements": []
									},
									"documentation": {
										"id": 989,
										"nodeType": "StructuredDocumentation",
										"src": "11495:573:2",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 999,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "12082:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 996,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 991,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12111:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 999,
												"src": "12103:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 990,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12103:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 993,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12125:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 999,
												"src": "12117:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 992,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12117:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 995,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12137:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 999,
												"src": "12129:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 994,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12129:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12102:42:2"
									},
									"returnParameters": {
										"id": 997,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12162:0:2"
									},
									"scope": 1011,
									"src": "12073:91:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1009,
										"nodeType": "Block",
										"src": "12840:2:2",
										"statements": []
									},
									"documentation": {
										"id": 1000,
										"nodeType": "StructuredDocumentation",
										"src": "12170:577:2",
										"text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1010,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "12761:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1007,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1002,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12789:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1010,
												"src": "12781:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1001,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12781:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1004,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12803:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1010,
												"src": "12795:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1003,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12795:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1006,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12815:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1010,
												"src": "12807:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1005,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12807:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12780:42:2"
									},
									"returnParameters": {
										"id": 1008,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12840:0:2"
									},
									"scope": 1011,
									"src": "12752:90:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1012,
							"src": "1532:11312:2",
							"usedErrors": [],
							"usedEvents": [
								1023,
								1032
							]
						}
					],
					"src": "105:12740:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts@4.9.3/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@4.9.3/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1089
						]
					},
					"id": 1090,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1013,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1014,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:3",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 1089,
							"linearizedBaseContracts": [
								1089
							],
							"name": "IERC20",
							"nameLocation": "212:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1015,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1023,
									"name": "Transfer",
									"nameLocation": "394:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1022,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1017,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1023,
												"src": "403:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1016,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1019,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1023,
												"src": "425:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1018,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1021,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1023,
												"src": "445:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1020,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:3"
									},
									"src": "388:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1024,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1032,
									"name": "Approval",
									"nameLocation": "625:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1031,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1026,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "634:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1025,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1028,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "657:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1027,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1030,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "682:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1029,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:3"
									},
									"src": "619:78:3"
								},
								{
									"documentation": {
										"id": 1033,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:3",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1038,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1034,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:3"
									},
									"returnParameters": {
										"id": 1037,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1036,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1038,
												"src": "820:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1035,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:3"
									},
									"scope": 1089,
									"src": "774:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1039,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:3",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1046,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1042,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1041,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "931:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1040,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:3"
									},
									"returnParameters": {
										"id": 1045,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1044,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "971:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1043,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:3"
									},
									"scope": 1089,
									"src": "912:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1047,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:3",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1056,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1052,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1049,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1056,
												"src": "1211:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1048,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1051,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1056,
												"src": "1223:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1050,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:3"
									},
									"returnParameters": {
										"id": 1055,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1054,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1056,
												"src": "1257:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1053,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:3"
									},
									"scope": 1089,
									"src": "1193:70:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1057,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1066,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1062,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1059,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "1557:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1058,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1061,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "1572:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1060,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:3"
									},
									"returnParameters": {
										"id": 1065,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1064,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "1612:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1063,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:3"
									},
									"scope": 1089,
									"src": "1538:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1067,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:3",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1076,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1072,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1069,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1076,
												"src": "2291:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1068,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1071,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1076,
												"src": "2308:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1070,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:3"
									},
									"returnParameters": {
										"id": 1075,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1074,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1076,
												"src": "2342:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1073,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:3"
									},
									"scope": 1089,
									"src": "2274:74:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1077,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:3",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1088,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1084,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1079,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2676:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1088,
												"src": "2668:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1078,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2668:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1081,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2690:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1088,
												"src": "2682:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1080,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2682:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1083,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2702:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1088,
												"src": "2694:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1082,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2694:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:42:3"
									},
									"returnParameters": {
										"id": 1087,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1086,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1088,
												"src": "2728:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1085,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2728:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2727:6:3"
									},
									"scope": 1089,
									"src": "2646:88:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1090,
							"src": "202:2534:3",
							"usedErrors": [],
							"usedEvents": [
								1023,
								1032
							]
						}
					],
					"src": "106:2631:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts@4.9.3/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@4.9.3/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							1089
						],
						"IERC20Metadata": [
							1114
						]
					},
					"id": 1115,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1091,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "110:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.9.3/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 1092,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1115,
							"sourceUnit": 1090,
							"src": "135:23:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1094,
										"name": "IERC20",
										"nameLocations": [
											"305:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1089,
										"src": "305:6:4"
									},
									"id": 1095,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:4"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1093,
								"nodeType": "StructuredDocumentation",
								"src": "160:116:4",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 1114,
							"linearizedBaseContracts": [
								1114,
								1089
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1096,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1101,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1097,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:4"
									},
									"returnParameters": {
										"id": 1100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1099,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1101,
												"src": "416:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1098,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:4"
									},
									"scope": 1114,
									"src": "377:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1102,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:4",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 1107,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1103,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:4"
									},
									"returnParameters": {
										"id": 1106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1105,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "539:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1104,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:4"
									},
									"scope": 1114,
									"src": "498:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1108,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:4",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 1113,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1109,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:4"
									},
									"returnParameters": {
										"id": 1112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1111,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1113,
												"src": "673:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1110,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:4"
									},
									"scope": 1114,
									"src": "630:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1115,
							"src": "277:405:4",
							"usedErrors": [],
							"usedEvents": [
								1023,
								1032
							]
						}
					],
					"src": "110:573:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts@4.9.3/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@4.9.3/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1136
						]
					},
					"id": 1137,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1116,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1117,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1136,
							"linearizedBaseContracts": [
								1136
							],
							"name": "Context",
							"nameLocation": "626:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1125,
										"nodeType": "Block",
										"src": "702:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1122,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1121,
												"id": 1124,
												"nodeType": "Return",
												"src": "712:17:5"
											}
										]
									},
									"id": 1126,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1118,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:5"
									},
									"returnParameters": {
										"id": 1121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1126,
												"src": "693:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1119,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:5"
									},
									"scope": 1136,
									"src": "640:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1134,
										"nodeType": "Block",
										"src": "809:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1131,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1132,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1130,
												"id": 1133,
												"nodeType": "Return",
												"src": "819:15:5"
											}
										]
									},
									"id": 1135,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1127,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:5"
									},
									"returnParameters": {
										"id": 1130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1129,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1135,
												"src": "793:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1128,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:5"
									},
									"scope": 1136,
									"src": "742:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1137,
							"src": "608:235:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "86:758:5"
				},
				"id": 5
			},
			"contracts/gainzilla.sol": {
				"ast": {
					"absolutePath": "contracts/gainzilla.sol",
					"exportedSymbols": {
						"Context": [
							1136
						],
						"ERC20": [
							1011
						],
						"IERC20": [
							1089
						],
						"IERC20Metadata": [
							1114
						],
						"IUniswapV2Factory": [
							1200
						],
						"IUniswapV2Pair": [
							1220
						],
						"IUniswapV2Router": [
							1190
						],
						"MemeCoin": [
							2391
						],
						"Ownable": [
							424
						],
						"SafeMath": [
							311
						]
					},
					"id": 2392,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1138,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".25"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts@4.9.3/token/ERC20/ERC20.sol",
							"id": 1139,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2392,
							"sourceUnit": 1012,
							"src": "58:61:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.9.3/access/Ownable.sol",
							"file": "@openzeppelin/contracts@4.9.3/access/Ownable.sol",
							"id": 1140,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2392,
							"sourceUnit": 425,
							"src": "120:58:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 1141,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2392,
							"sourceUnit": 312,
							"src": "179:57:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV2Router",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1190,
							"linearizedBaseContracts": [
								1190
							],
							"name": "IUniswapV2Router",
							"nameLocation": "248:16:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "c45a0155",
									"id": 1146,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nameLocation": "280:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1142,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "287:2:6"
									},
									"returnParameters": {
										"id": 1145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1144,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1146,
												"src": "313:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1143,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "313:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "312:9:6"
									},
									"scope": 1190,
									"src": "271:51:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ad5c4648",
									"id": 1151,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "WETH",
									"nameLocation": "336:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1147,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "340:2:6"
									},
									"returnParameters": {
										"id": 1150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1149,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1151,
												"src": "366:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1148,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "366:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "365:9:6"
									},
									"scope": 1190,
									"src": "327:48:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f305d719",
									"id": 1172,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidityETH",
									"nameLocation": "389:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1153,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "422:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1172,
												"src": "414:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "414:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1155,
												"mutability": "mutable",
												"name": "amountTokenDesired",
												"nameLocation": "442:18:6",
												"nodeType": "VariableDeclaration",
												"scope": 1172,
												"src": "437:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1154,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "437:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1157,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "475:14:6",
												"nodeType": "VariableDeclaration",
												"scope": 1172,
												"src": "470:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1156,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "470:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1159,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nameLocation": "504:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1172,
												"src": "499:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1158,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "499:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1161,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "534:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1172,
												"src": "526:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "526:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1163,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "551:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1172,
												"src": "546:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1162,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "546:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:161:6"
									},
									"returnParameters": {
										"id": 1171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1166,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1172,
												"src": "592:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1165,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "592:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1168,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1172,
												"src": "598:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1167,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "598:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1170,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1172,
												"src": "604:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1169,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "604:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "591:18:6"
									},
									"scope": 1190,
									"src": "380:230:6",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "18cbafe5",
									"id": 1189,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForETH",
									"nameLocation": "624:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1174,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "660:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1189,
												"src": "655:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1173,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "655:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1176,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "684:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1189,
												"src": "679:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1175,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "679:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1179,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "726:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1189,
												"src": "707:23:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1177,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "707:7:6",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1178,
													"nodeType": "ArrayTypeName",
													"src": "707:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1181,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "749:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1189,
												"src": "741:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "741:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1183,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "767:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1189,
												"src": "762:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1182,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "762:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:136:6"
									},
									"returnParameters": {
										"id": 1188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1187,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "814:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1189,
												"src": "800:21:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1185,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "800:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1186,
													"nodeType": "ArrayTypeName",
													"src": "800:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "799:23:6"
									},
									"scope": 1190,
									"src": "615:208:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2392,
							"src": "238:587:6",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV2Factory",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1200,
							"linearizedBaseContracts": [
								1200
							],
							"name": "IUniswapV2Factory",
							"nameLocation": "837:17:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "c9c65396",
									"id": 1199,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createPair",
									"nameLocation": "870:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1192,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "889:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1199,
												"src": "881:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1191,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "881:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1194,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "905:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1199,
												"src": "897:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1193,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "897:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "880:32:6"
									},
									"returnParameters": {
										"id": 1198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1197,
												"mutability": "mutable",
												"name": "pair",
												"nameLocation": "939:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1199,
												"src": "931:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:14:6"
									},
									"scope": 1200,
									"src": "861:84:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2392,
							"src": "827:120:6",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV2Pair",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1220,
							"linearizedBaseContracts": [
								1220
							],
							"name": "IUniswapV2Pair",
							"nameLocation": "959:14:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "0902f1ac",
									"id": 1209,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getReserves",
									"nameLocation": "989:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1201,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1000:2:6"
									},
									"returnParameters": {
										"id": 1208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1203,
												"mutability": "mutable",
												"name": "reserve0",
												"nameLocation": "1034:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1209,
												"src": "1026:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 1202,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "1026:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1205,
												"mutability": "mutable",
												"name": "reserve1",
												"nameLocation": "1052:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1209,
												"src": "1044:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 1204,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "1044:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1207,
												"mutability": "mutable",
												"name": "blockTimestampLast",
												"nameLocation": "1069:18:6",
												"nodeType": "VariableDeclaration",
												"scope": 1209,
												"src": "1062:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1206,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1062:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1025:63:6"
									},
									"scope": 1220,
									"src": "980:109:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0dfe1681",
									"id": 1214,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token0",
									"nameLocation": "1103:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1210,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1109:2:6"
									},
									"returnParameters": {
										"id": 1213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1212,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1214,
												"src": "1135:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1135:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1134:9:6"
									},
									"scope": 1220,
									"src": "1094:50:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d21220a7",
									"id": 1219,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token1",
									"nameLocation": "1158:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1215,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1164:2:6"
									},
									"returnParameters": {
										"id": 1218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1217,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1219,
												"src": "1190:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1190:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1189:9:6"
									},
									"scope": 1220,
									"src": "1149:50:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2392,
							"src": "949:252:6",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1221,
										"name": "ERC20",
										"nameLocations": [
											"1224:5:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1011,
										"src": "1224:5:6"
									},
									"id": 1222,
									"nodeType": "InheritanceSpecifier",
									"src": "1224:5:6"
								},
								{
									"baseName": {
										"id": 1223,
										"name": "Ownable",
										"nameLocations": [
											"1231:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 424,
										"src": "1231:7:6"
									},
									"id": 1224,
									"nodeType": "InheritanceSpecifier",
									"src": "1231:7:6"
								}
							],
							"canonicalName": "MemeCoin",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2391,
							"linearizedBaseContracts": [
								2391,
								424,
								1011,
								1114,
								1089,
								1136
							],
							"name": "MemeCoin",
							"nameLocation": "1212:8:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1227,
									"libraryName": {
										"id": 1225,
										"name": "SafeMath",
										"nameLocations": [
											"1251:8:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 311,
										"src": "1251:8:6"
									},
									"nodeType": "UsingForDirective",
									"src": "1245:27:6",
									"typeName": {
										"id": 1226,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1264:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": true,
									"id": 1234,
									"mutability": "constant",
									"name": "TOTAL_SUPPLY",
									"nameLocation": "1303:12:6",
									"nodeType": "VariableDeclaration",
									"scope": 2391,
									"src": "1278:62:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1228,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1278:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000000000000"
										},
										"id": 1233,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "315f3030305f3030305f303030",
											"id": 1229,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1318:13:6",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000_by_1",
												"typeString": "int_const 1000000000"
											},
											"value": "1_000_000_000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 1232,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 1230,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1334:2:6",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 1231,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1338:2:6",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "1334:6:6",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "1318:22:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000000000000"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "599ca397",
									"id": 1237,
									"mutability": "mutable",
									"name": "maxWalletPercentage",
									"nameLocation": "1361:19:6",
									"nodeType": "VariableDeclaration",
									"scope": 2391,
									"src": "1346:40:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1235,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1346:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313030",
										"id": 1236,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1383:3:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100_by_1",
											"typeString": "int_const 100"
										},
										"value": "100"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 1240,
									"mutability": "constant",
									"name": "BP_DIVISOR",
									"nameLocation": "1417:10:6",
									"nodeType": "VariableDeclaration",
									"scope": 2391,
									"src": "1392:44:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1238,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1392:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31305f303030",
										"id": 1239,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1430:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10000_by_1",
											"typeString": "int_const 10000"
										},
										"value": "10_000"
									},
									"visibility": "private"
								},
								{
									"canonicalName": "MemeCoin.TaxRates",
									"id": 1249,
									"members": [
										{
											"constant": false,
											"id": 1242,
											"mutability": "mutable",
											"name": "buyLp",
											"nameLocation": "1476:5:6",
											"nodeType": "VariableDeclaration",
											"scope": 1249,
											"src": "1469:12:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 1241,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "1469:6:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1244,
											"mutability": "mutable",
											"name": "buyEco",
											"nameLocation": "1498:6:6",
											"nodeType": "VariableDeclaration",
											"scope": 1249,
											"src": "1491:13:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 1243,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "1491:6:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1246,
											"mutability": "mutable",
											"name": "sellLp",
											"nameLocation": "1521:6:6",
											"nodeType": "VariableDeclaration",
											"scope": 1249,
											"src": "1514:13:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 1245,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "1514:6:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1248,
											"mutability": "mutable",
											"name": "sellEco",
											"nameLocation": "1544:7:6",
											"nodeType": "VariableDeclaration",
											"scope": 1249,
											"src": "1537:14:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 1247,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "1537:6:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TaxRates",
									"nameLocation": "1450:8:6",
									"nodeType": "StructDefinition",
									"scope": 2391,
									"src": "1443:115:6",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "333f4b3d",
									"id": 1252,
									"mutability": "mutable",
									"name": "taxRates",
									"nameLocation": "1579:8:6",
									"nodeType": "VariableDeclaration",
									"scope": 2391,
									"src": "1563:24:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_TaxRates_$1249_storage",
										"typeString": "struct MemeCoin.TaxRates"
									},
									"typeName": {
										"id": 1251,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1250,
											"name": "TaxRates",
											"nameLocations": [
												"1563:8:6"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1249,
											"src": "1563:8:6"
										},
										"referencedDeclaration": 1249,
										"src": "1563:8:6",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_TaxRates_$1249_storage_ptr",
											"typeString": "struct MemeCoin.TaxRates"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1255,
									"mutability": "mutable",
									"name": "transferMultiplier",
									"nameLocation": "1609:18:6",
									"nodeType": "VariableDeclaration",
									"scope": 2391,
									"src": "1593:39:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1253,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1593:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3335",
										"id": 1254,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1630:2:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_35_by_1",
											"typeString": "int_const 35"
										},
										"value": "35"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "0445b667",
									"id": 1260,
									"mutability": "mutable",
									"name": "swapThreshold",
									"nameLocation": "1654:13:6",
									"nodeType": "VariableDeclaration",
									"scope": 2391,
									"src": "1639:50:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1256,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1639:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 1259,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"id": 1257,
											"name": "TOTAL_SUPPLY",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 1234,
											"src": "1670:12:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "/",
										"rightExpression": {
											"hexValue": "31303030",
											"id": 1258,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1685:4:6",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000_by_1",
												"typeString": "int_const 1000"
											},
											"value": "1000"
										},
										"src": "1670:19:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d8d61c40",
									"id": 1262,
									"mutability": "mutable",
									"name": "accumulatedLp",
									"nameLocation": "1710:13:6",
									"nodeType": "VariableDeclaration",
									"scope": 2391,
									"src": "1695:28:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1261,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1695:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c531b108",
									"id": 1264,
									"mutability": "mutable",
									"name": "accumulatedEco",
									"nameLocation": "1744:14:6",
									"nodeType": "VariableDeclaration",
									"scope": 2391,
									"src": "1729:29:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1263,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1729:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1266,
									"mutability": "mutable",
									"name": "swapping",
									"nameLocation": "1777:8:6",
									"nodeType": "VariableDeclaration",
									"scope": 2391,
									"src": "1764:21:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1265,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1764:4:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"canonicalName": "MemeCoin.CooldownConfig",
									"id": 1275,
									"members": [
										{
											"constant": false,
											"id": 1268,
											"mutability": "mutable",
											"name": "enabled",
											"nameLocation": "1829:7:6",
											"nodeType": "VariableDeclaration",
											"scope": 1275,
											"src": "1824:12:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1267,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1824:4:6",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1270,
											"mutability": "mutable",
											"name": "duration",
											"nameLocation": "1853:8:6",
											"nodeType": "VariableDeclaration",
											"scope": 1275,
											"src": "1846:15:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 1269,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "1846:6:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1274,
											"mutability": "mutable",
											"name": "cooldowns",
											"nameLocation": "1899:9:6",
											"nodeType": "VariableDeclaration",
											"scope": 1275,
											"src": "1871:37:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"typeName": {
												"id": 1273,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 1271,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1879:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "1871:27:6",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
													"typeString": "mapping(address => uint256)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 1272,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1890:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										}
									],
									"name": "CooldownConfig",
									"nameLocation": "1799:14:6",
									"nodeType": "StructDefinition",
									"scope": 2391,
									"src": "1792:123:6",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "787a08a6",
									"id": 1278,
									"mutability": "mutable",
									"name": "cooldown",
									"nameLocation": "1942:8:6",
									"nodeType": "VariableDeclaration",
									"scope": 2391,
									"src": "1920:30:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_CooldownConfig_$1275_storage",
										"typeString": "struct MemeCoin.CooldownConfig"
									},
									"typeName": {
										"id": 1277,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1276,
											"name": "CooldownConfig",
											"nameLocations": [
												"1920:14:6"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1275,
											"src": "1920:14:6"
										},
										"referencedDeclaration": 1275,
										"src": "1920:14:6",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_CooldownConfig_$1275_storage_ptr",
											"typeString": "struct MemeCoin.CooldownConfig"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "MemeCoin.DiamondFloor",
									"id": 1289,
									"members": [
										{
											"constant": false,
											"id": 1280,
											"mutability": "mutable",
											"name": "enabled",
											"nameLocation": "1992:7:6",
											"nodeType": "VariableDeclaration",
											"scope": 1289,
											"src": "1987:12:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1279,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1987:4:6",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1282,
											"mutability": "mutable",
											"name": "triggerPercentage",
											"nameLocation": "2016:17:6",
											"nodeType": "VariableDeclaration",
											"scope": 1289,
											"src": "2009:24:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 1281,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "2009:6:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1284,
											"mutability": "mutable",
											"name": "athPrice",
											"nameLocation": "2051:8:6",
											"nodeType": "VariableDeclaration",
											"scope": 1289,
											"src": "2043:16:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1283,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2043:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1286,
											"mutability": "mutable",
											"name": "sellStopped",
											"nameLocation": "2074:11:6",
											"nodeType": "VariableDeclaration",
											"scope": 1289,
											"src": "2069:16:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1285,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2069:4:6",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1288,
											"mutability": "mutable",
											"name": "blockedAth",
											"nameLocation": "2103:10:6",
											"nodeType": "VariableDeclaration",
											"scope": 1289,
											"src": "2095:18:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1287,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2095:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "DiamondFloor",
									"nameLocation": "1964:12:6",
									"nodeType": "StructDefinition",
									"scope": 2391,
									"src": "1957:163:6",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c95457ff",
									"id": 1292,
									"mutability": "mutable",
									"name": "diamondFloor",
									"nameLocation": "2145:12:6",
									"nodeType": "VariableDeclaration",
									"scope": 2391,
									"src": "2125:32:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_DiamondFloor_$1289_storage",
										"typeString": "struct MemeCoin.DiamondFloor"
									},
									"typeName": {
										"id": 1291,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1290,
											"name": "DiamondFloor",
											"nameLocations": [
												"2125:12:6"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1289,
											"src": "2125:12:6"
										},
										"referencedDeclaration": 1289,
										"src": "2125:12:6",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_DiamondFloor_$1289_storage_ptr",
											"typeString": "struct MemeCoin.DiamondFloor"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3268cc56",
									"id": 1294,
									"mutability": "mutable",
									"name": "routerAddress",
									"nameLocation": "2179:13:6",
									"nodeType": "VariableDeclaration",
									"scope": 2391,
									"src": "2164:28:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1293,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2164:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a8b08982",
									"id": 1296,
									"mutability": "mutable",
									"name": "pairAddress",
									"nameLocation": "2213:11:6",
									"nodeType": "VariableDeclaration",
									"scope": 2391,
									"src": "2198:26:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1295,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2198:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 1299,
									"mutability": "constant",
									"name": "DEFAULT_ROUTER",
									"nameLocation": "2255:14:6",
									"nodeType": "VariableDeclaration",
									"scope": 2391,
									"src": "2230:84:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1297,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2230:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307831304544343343373138373134656236336435614135374237384235343730344532353630323445",
										"id": 1298,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2272:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x10ED43C718714eb63d5aA57B78B54704E256024E"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "ad5dff73",
									"id": 1303,
									"mutability": "mutable",
									"name": "isExempt",
									"nameLocation": "2353:8:6",
									"nodeType": "VariableDeclaration",
									"scope": 2391,
									"src": "2321:40:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 1302,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1300,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2329:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2321:24:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1301,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "2340:4:6",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "7aed1d3e8155a07ccf395e44ea3109a0e2d6c9b29bbbe9f142d9790596f4dc80",
									"id": 1307,
									"name": "RouterUpdated",
									"nameLocation": "2374:13:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1305,
												"indexed": false,
												"mutability": "mutable",
												"name": "newRouter",
												"nameLocation": "2396:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1307,
												"src": "2388:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2388:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2387:19:6"
									},
									"src": "2368:39:6"
								},
								{
									"anonymous": false,
									"eventSelector": "f2d9f3f00fc700757eb74f9aa3dba0e2eb1280e0c6e0cf65962cc055528d7a90",
									"id": 1313,
									"name": "TaxesCollected",
									"nameLocation": "2418:14:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1309,
												"indexed": false,
												"mutability": "mutable",
												"name": "lpAmount",
												"nameLocation": "2441:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1313,
												"src": "2433:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2433:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1311,
												"indexed": false,
												"mutability": "mutable",
												"name": "ecoAmount",
												"nameLocation": "2459:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1313,
												"src": "2451:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1310,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2451:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2432:37:6"
									},
									"src": "2412:58:6"
								},
								{
									"anonymous": false,
									"eventSelector": "38f8a0c92f4c5b0b6877f878cb4c0c8d348a47b76d716c8e78f425043df9515b",
									"id": 1319,
									"name": "LiquidityAdded",
									"nameLocation": "2481:14:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1315,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenAmount",
												"nameLocation": "2504:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1319,
												"src": "2496:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1314,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2496:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1317,
												"indexed": false,
												"mutability": "mutable",
												"name": "ethAmount",
												"nameLocation": "2525:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1319,
												"src": "2517:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1316,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2517:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2495:40:6"
									},
									"src": "2475:61:6"
								},
								{
									"body": {
										"id": 1366,
										"nodeType": "Block",
										"src": "2593:242:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1329,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2609:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1330,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2613:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2609:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1331,
															"name": "TOTAL_SUPPLY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1234,
															"src": "2621:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1328,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 828,
														"src": "2603:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2603:31:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1333,
												"nodeType": "ExpressionStatement",
												"src": "2603:31:6"
											},
											{
												"expression": {
													"id": 1336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1334,
														"name": "routerAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1294,
														"src": "2644:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1335,
														"name": "DEFAULT_ROUTER",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1299,
														"src": "2660:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2644:30:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1337,
												"nodeType": "ExpressionStatement",
												"src": "2644:30:6"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1338,
														"name": "_setupPair",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2250,
														"src": "2684:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2684:12:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1340,
												"nodeType": "ExpressionStatement",
												"src": "2684:12:6"
											},
											{
												"expression": {
													"id": 1348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1341,
														"name": "taxRates",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1252,
														"src": "2715:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TaxRates_$1249_storage",
															"typeString": "struct MemeCoin.TaxRates storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1343,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2735:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"hexValue": "30",
																"id": 1344,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2738:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"hexValue": "30",
																"id": 1345,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2741:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"hexValue": "30",
																"id": 1346,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2744:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1342,
															"name": "TaxRates",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1249,
															"src": "2726:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_TaxRates_$1249_storage_ptr_$",
																"typeString": "type(struct MemeCoin.TaxRates storage pointer)"
															}
														},
														"id": 1347,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2726:20:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TaxRates_$1249_memory_ptr",
															"typeString": "struct MemeCoin.TaxRates memory"
														}
													},
													"src": "2715:31:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TaxRates_$1249_storage",
														"typeString": "struct MemeCoin.TaxRates storage ref"
													}
												},
												"id": 1349,
												"nodeType": "ExpressionStatement",
												"src": "2715:31:6"
											},
											{
												"expression": {
													"id": 1355,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1350,
															"name": "isExempt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1303,
															"src": "2761:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1353,
														"indexExpression": {
															"expression": {
																"id": 1351,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2770:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1352,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2774:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2770:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2761:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1354,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2784:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2761:27:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1356,
												"nodeType": "ExpressionStatement",
												"src": "2761:27:6"
											},
											{
												"expression": {
													"id": 1364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1357,
															"name": "isExempt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1303,
															"src": "2798:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1362,
														"indexExpression": {
															"arguments": [
																{
																	"id": 1360,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2815:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_MemeCoin_$2391",
																		"typeString": "contract MemeCoin"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_MemeCoin_$2391",
																		"typeString": "contract MemeCoin"
																	}
																],
																"id": 1359,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2807:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1358,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2807:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1361,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2807:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2798:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1363,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2824:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2798:30:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1365,
												"nodeType": "ExpressionStatement",
												"src": "2798:30:6"
											}
										]
									},
									"id": 1367,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "4d656d6520436f696e",
													"id": 1322,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2562:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_eb091f380366c2534fd57a30e7241a348334a10359f9acfefd73588527795662",
														"typeString": "literal_string \"Meme Coin\""
													},
													"value": "Meme Coin"
												},
												{
													"hexValue": "4d454d45",
													"id": 1323,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2575:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_aa45935facc8cbd8c55ef59eb2083d70572611d9daaaa3b31e42daad65f7f5c8",
														"typeString": "literal_string \"MEME\""
													},
													"value": "MEME"
												}
											],
											"id": 1324,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1321,
												"name": "ERC20",
												"nameLocations": [
													"2556:5:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1011,
												"src": "2556:5:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "2556:26:6"
										},
										{
											"arguments": [],
											"id": 1326,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1325,
												"name": "Ownable",
												"nameLocations": [
													"2583:7:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 424,
												"src": "2583:7:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "2583:9:6"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1320,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2553:2:6"
									},
									"returnParameters": {
										"id": 1327,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2593:0:6"
									},
									"scope": 2391,
									"src": "2542:293:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										771
									],
									"body": {
										"id": 1525,
										"nodeType": "Block",
										"src": "2967:1167:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1380,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1378,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1373,
																"src": "2985:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1379,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2994:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2985:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e7366657220616d6f756e74206d757374206265203e30",
															"id": 1381,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2997:28:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bf60dfdf0bc628580395fc38657d86ed24105efc4a69fdfae0dbdbb8a1ef6412",
																"typeString": "literal_string \"Transfer amount must be >0\""
															},
															"value": "Transfer amount must be >0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bf60dfdf0bc628580395fc38657d86ed24105efc4a69fdfae0dbdbb8a1ef6412",
																"typeString": "literal_string \"Transfer amount must be >0\""
															}
														],
														"id": 1377,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2977:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1382,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2977:49:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1383,
												"nodeType": "ExpressionStatement",
												"src": "2977:49:6"
											},
											{
												"assignments": [
													1385
												],
												"declarations": [
													{
														"constant": false,
														"id": 1385,
														"mutability": "mutable",
														"name": "isBuy",
														"nameLocation": "3042:5:6",
														"nodeType": "VariableDeclaration",
														"scope": 1525,
														"src": "3037:10:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1384,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3037:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1394,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1393,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1388,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1386,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1369,
															"src": "3050:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 1387,
															"name": "pairAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1296,
															"src": "3060:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "3050:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 1392,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "3075:20:6",
														"subExpression": {
															"baseExpression": {
																"id": 1389,
																"name": "isExempt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1303,
																"src": "3076:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 1391,
															"indexExpression": {
																"id": 1390,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1371,
																"src": "3085:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3076:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3050:45:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3037:58:6"
											},
											{
												"assignments": [
													1396
												],
												"declarations": [
													{
														"constant": false,
														"id": 1396,
														"mutability": "mutable",
														"name": "isSell",
														"nameLocation": "3110:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1525,
														"src": "3105:11:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1395,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3105:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1405,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1399,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1397,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1371,
															"src": "3119:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 1398,
															"name": "pairAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1296,
															"src": "3132:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "3119:24:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 1403,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "3147:17:6",
														"subExpression": {
															"baseExpression": {
																"id": 1400,
																"name": "isExempt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1303,
																"src": "3148:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 1402,
															"indexExpression": {
																"id": 1401,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1369,
																"src": "3157:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3148:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3119:45:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3105:59:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1406,
															"name": "diamondFloor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1292,
															"src": "3179:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_DiamondFloor_$1289_storage",
																"typeString": "struct MemeCoin.DiamondFloor storage ref"
															}
														},
														"id": 1407,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3192:7:6",
														"memberName": "enabled",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1280,
														"src": "3179:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 1408,
														"name": "isSell",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1396,
														"src": "3203:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3179:30:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1421,
												"nodeType": "IfStatement",
												"src": "3175:166:6",
												"trueBody": {
													"id": 1420,
													"nodeType": "Block",
													"src": "3211:130:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1413,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "!",
																		"prefix": true,
																		"src": "3233:25:6",
																		"subExpression": {
																			"expression": {
																				"id": 1411,
																				"name": "diamondFloor",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1292,
																				"src": "3234:12:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_DiamondFloor_$1289_storage",
																					"typeString": "struct MemeCoin.DiamondFloor storage ref"
																				}
																			},
																			"id": 1412,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3247:11:6",
																			"memberName": "sellStopped",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1286,
																			"src": "3234:24:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "53656c6c732073746f70706564206279204469616d6f6e6420466c6f6f72",
																		"id": 1414,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3260:32:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_30dd4f997a6ca09c24570e16af51c4dd5e70cd227c7036b9ebf2853f38eba550",
																			"typeString": "literal_string \"Sells stopped by Diamond Floor\""
																		},
																		"value": "Sells stopped by Diamond Floor"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_30dd4f997a6ca09c24570e16af51c4dd5e70cd227c7036b9ebf2853f38eba550",
																			"typeString": "literal_string \"Sells stopped by Diamond Floor\""
																		}
																	],
																	"id": 1410,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3225:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1415,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3225:68:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1416,
															"nodeType": "ExpressionStatement",
															"src": "3225:68:6"
														},
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1417,
																	"name": "_checkPriceConditions",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1814,
																	"src": "3307:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 1418,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3307:23:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1419,
															"nodeType": "ExpressionStatement",
															"src": "3307:23:6"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1422,
															"name": "cooldown",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1278,
															"src": "3355:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_CooldownConfig_$1275_storage",
																"typeString": "struct MemeCoin.CooldownConfig storage ref"
															}
														},
														"id": 1423,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3364:7:6",
														"memberName": "enabled",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1268,
														"src": "3355:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 1424,
														"name": "isSell",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1396,
														"src": "3375:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3355:26:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1450,
												"nodeType": "IfStatement",
												"src": "3351:208:6",
												"trueBody": {
													"id": 1449,
													"nodeType": "Block",
													"src": "3383:176:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1433,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 1427,
																				"name": "block",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967292,
																				"src": "3405:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_block",
																					"typeString": "block"
																				}
																			},
																			"id": 1428,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3411:9:6",
																			"memberName": "timestamp",
																			"nodeType": "MemberAccess",
																			"src": "3405:15:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"baseExpression": {
																				"expression": {
																					"id": 1429,
																					"name": "cooldown",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1278,
																					"src": "3424:8:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_CooldownConfig_$1275_storage",
																						"typeString": "struct MemeCoin.CooldownConfig storage ref"
																					}
																				},
																				"id": 1430,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3433:9:6",
																				"memberName": "cooldowns",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1274,
																				"src": "3424:18:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1432,
																			"indexExpression": {
																				"id": 1431,
																				"name": "sender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1369,
																				"src": "3443:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3424:26:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3405:45:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "436f6f6c646f776e20616374697665",
																		"id": 1434,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3452:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_74bfbd0e22b7de34cffebe5af74ea7eca5e99706ecb9129f4c3a64d8a95a2fa5",
																			"typeString": "literal_string \"Cooldown active\""
																		},
																		"value": "Cooldown active"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_74bfbd0e22b7de34cffebe5af74ea7eca5e99706ecb9129f4c3a64d8a95a2fa5",
																			"typeString": "literal_string \"Cooldown active\""
																		}
																	],
																	"id": 1426,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3397:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1435,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3397:73:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1436,
															"nodeType": "ExpressionStatement",
															"src": "3397:73:6"
														},
														{
															"expression": {
																"id": 1447,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"id": 1437,
																			"name": "cooldown",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1278,
																			"src": "3484:8:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_CooldownConfig_$1275_storage",
																				"typeString": "struct MemeCoin.CooldownConfig storage ref"
																			}
																		},
																		"id": 1440,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3493:9:6",
																		"memberName": "cooldowns",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1274,
																		"src": "3484:18:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1441,
																	"indexExpression": {
																		"id": 1439,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1369,
																		"src": "3503:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3484:26:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1446,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1442,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "3513:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 1443,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3519:9:6",
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "3513:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"expression": {
																			"id": 1444,
																			"name": "cooldown",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1278,
																			"src": "3531:8:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_CooldownConfig_$1275_storage",
																				"typeString": "struct MemeCoin.CooldownConfig storage ref"
																			}
																		},
																		"id": 1445,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3540:8:6",
																		"memberName": "duration",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1270,
																		"src": "3531:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"src": "3513:35:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3484:64:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1448,
															"nodeType": "ExpressionStatement",
															"src": "3484:64:6"
														}
													]
												}
											},
											{
												"assignments": [
													1452
												],
												"declarations": [
													{
														"constant": false,
														"id": 1452,
														"mutability": "mutable",
														"name": "taxAmount",
														"nameLocation": "3577:9:6",
														"nodeType": "VariableDeclaration",
														"scope": 1525,
														"src": "3569:17:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1451,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3569:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1458,
												"initialValue": {
													"arguments": [
														{
															"id": 1454,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1369,
															"src": "3603:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1455,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1371,
															"src": "3611:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1456,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1373,
															"src": "3622:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1453,
														"name": "_calculateTax",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1629,
														"src": "3589:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (address,address,uint256) view returns (uint256)"
														}
													},
													"id": 1457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3589:40:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3569:60:6"
											},
											{
												"assignments": [
													1460
												],
												"declarations": [
													{
														"constant": false,
														"id": 1460,
														"mutability": "mutable",
														"name": "netAmount",
														"nameLocation": "3647:9:6",
														"nodeType": "VariableDeclaration",
														"scope": 1525,
														"src": "3639:17:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1459,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3639:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1465,
												"initialValue": {
													"arguments": [
														{
															"id": 1463,
															"name": "taxAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1452,
															"src": "3670:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1461,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1373,
															"src": "3659:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1462,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3666:3:6",
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 190,
														"src": "3659:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3659:21:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3639:41:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1472,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1469,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "3695:20:6",
														"subExpression": {
															"baseExpression": {
																"id": 1466,
																"name": "isExempt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1303,
																"src": "3696:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 1468,
															"indexExpression": {
																"id": 1467,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1371,
																"src": "3705:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3696:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 1471,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "3719:7:6",
														"subExpression": {
															"id": 1470,
															"name": "isSell",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1396,
															"src": "3720:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3695:31:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1487,
												"nodeType": "IfStatement",
												"src": "3691:149:6",
												"trueBody": {
													"id": 1486,
													"nodeType": "Block",
													"src": "3728:112:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1482,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 1478,
																					"name": "netAmount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1460,
																					"src": "3775:9:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"id": 1475,
																							"name": "recipient",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1371,
																							"src": "3760:9:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 1474,
																						"name": "balanceOf",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 523,
																						"src": "3750:9:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																							"typeString": "function (address) view returns (uint256)"
																						}
																					},
																					"id": 1476,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "3750:20:6",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1477,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3771:3:6",
																				"memberName": "add",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 175,
																				"src": "3750:24:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1479,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3750:35:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<=",
																		"rightExpression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 1480,
																				"name": "_maxWalletSize",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2365,
																				"src": "3789:14:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																					"typeString": "function () view returns (uint256)"
																				}
																			},
																			"id": 1481,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3789:16:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3750:55:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4d61782077616c6c6574206578636565646564",
																		"id": 1483,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3807:21:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_d02ce7a72410a6351efcb149b27b582bc4ff73b7af05eaebe8fe75a22e828801",
																			"typeString": "literal_string \"Max wallet exceeded\""
																		},
																		"value": "Max wallet exceeded"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_d02ce7a72410a6351efcb149b27b582bc4ff73b7af05eaebe8fe75a22e828801",
																			"typeString": "literal_string \"Max wallet exceeded\""
																		}
																	],
																	"id": 1473,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3742:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1484,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3742:87:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1485,
															"nodeType": "ExpressionStatement",
															"src": "3742:87:6"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1488,
														"name": "taxAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1452,
														"src": "3854:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1489,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3866:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3854:13:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1509,
												"nodeType": "IfStatement",
												"src": "3850:147:6",
												"trueBody": {
													"id": 1508,
													"nodeType": "Block",
													"src": "3869:128:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1494,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1369,
																		"src": "3899:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 1497,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "3915:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_MemeCoin_$2391",
																					"typeString": "contract MemeCoin"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_MemeCoin_$2391",
																					"typeString": "contract MemeCoin"
																				}
																			],
																			"id": 1496,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3907:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1495,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3907:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1498,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3907:13:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1499,
																		"name": "taxAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1452,
																		"src": "3922:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1491,
																		"name": "super",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967271,
																		"src": "3883:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_super$_MemeCoin_$2391_$",
																			"typeString": "type(contract super MemeCoin)"
																		}
																	},
																	"id": 1493,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3889:9:6",
																	"memberName": "_transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 771,
																	"src": "3883:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1500,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3883:49:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1501,
															"nodeType": "ExpressionStatement",
															"src": "3883:49:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1503,
																		"name": "taxAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1452,
																		"src": "3961:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1504,
																		"name": "isBuy",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1385,
																		"src": "3972:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"id": 1505,
																		"name": "isSell",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1396,
																		"src": "3979:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 1502,
																	"name": "_distributeTax",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1726,
																	"src": "3946:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bool_$_t_bool_$returns$__$",
																		"typeString": "function (uint256,bool,bool)"
																	}
																},
																"id": 1506,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3946:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1507,
															"nodeType": "ExpressionStatement",
															"src": "3946:40:6"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1513,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1369,
															"src": "4023:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1514,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1371,
															"src": "4031:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1515,
															"name": "netAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1460,
															"src": "4042:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1510,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "4007:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_MemeCoin_$2391_$",
																"typeString": "type(contract super MemeCoin)"
															}
														},
														"id": 1512,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4013:9:6",
														"memberName": "_transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 771,
														"src": "4007:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4007:45:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1517,
												"nodeType": "ExpressionStatement",
												"src": "4007:45:6"
											},
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1518,
														"name": "_shouldSwapBack",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2386,
														"src": "4067:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
															"typeString": "function () view returns (bool)"
														}
													},
													"id": 1519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4067:17:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1524,
												"nodeType": "IfStatement",
												"src": "4063:65:6",
												"trueBody": {
													"id": 1523,
													"nodeType": "Block",
													"src": "4086:42:6",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1520,
																	"name": "_swapAndLiquify",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1911,
																	"src": "4100:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 1521,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4100:17:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1522,
															"nodeType": "ExpressionStatement",
															"src": "4100:17:6"
														}
													]
												}
											}
										]
									},
									"id": 1526,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "2850:9:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1375,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2958:8:6"
									},
									"parameters": {
										"id": 1374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1369,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2877:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1526,
												"src": "2869:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1368,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2869:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1371,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2901:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1526,
												"src": "2893:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1370,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2893:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1373,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2928:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1526,
												"src": "2920:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1372,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2920:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2859:81:6"
									},
									"returnParameters": {
										"id": 1376,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2967:0:6"
									},
									"scope": 2391,
									"src": "2841:1293:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1628,
										"nodeType": "Block",
										"src": "4275:646:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 1537,
															"name": "isExempt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1303,
															"src": "4289:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1539,
														"indexExpression": {
															"id": 1538,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1528,
															"src": "4298:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4289:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"baseExpression": {
															"id": 1540,
															"name": "isExempt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1303,
															"src": "4309:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1542,
														"indexExpression": {
															"id": 1541,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1530,
															"src": "4318:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4309:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4289:39:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1546,
												"nodeType": "IfStatement",
												"src": "4285:53:6",
												"trueBody": {
													"expression": {
														"hexValue": "30",
														"id": 1544,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4337:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 1536,
													"id": 1545,
													"nodeType": "Return",
													"src": "4330:8:6"
												}
											},
											{
												"assignments": [
													1548
												],
												"declarations": [
													{
														"constant": false,
														"id": 1548,
														"mutability": "mutable",
														"name": "isBuy",
														"nameLocation": "4354:5:6",
														"nodeType": "VariableDeclaration",
														"scope": 1628,
														"src": "4349:10:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1547,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4349:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1552,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1549,
														"name": "sender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1528,
														"src": "4362:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1550,
														"name": "pairAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1296,
														"src": "4372:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4362:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4349:34:6"
											},
											{
												"assignments": [
													1554
												],
												"declarations": [
													{
														"constant": false,
														"id": 1554,
														"mutability": "mutable",
														"name": "isSell",
														"nameLocation": "4398:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1628,
														"src": "4393:11:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1553,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4393:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1558,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1557,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1555,
														"name": "recipient",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1530,
														"src": "4407:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1556,
														"name": "pairAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1296,
														"src": "4420:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4407:24:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4393:38:6"
											},
											{
												"condition": {
													"id": 1559,
													"name": "isBuy",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1548,
													"src": "4446:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 1577,
														"name": "isSell",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1554,
														"src": "4567:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 1625,
														"nodeType": "Block",
														"src": "4687:228:6",
														"statements": [
															{
																"assignments": [
																	1596
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 1596,
																		"mutability": "mutable",
																		"name": "sellTotal",
																		"nameLocation": "4709:9:6",
																		"nodeType": "VariableDeclaration",
																		"scope": 1625,
																		"src": "4701:17:6",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 1595,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "4701:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 1606,
																"initialValue": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 1603,
																				"name": "taxRates",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1252,
																				"src": "4750:8:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_TaxRates_$1249_storage",
																					"typeString": "struct MemeCoin.TaxRates storage ref"
																				}
																			},
																			"id": 1604,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4759:7:6",
																			"memberName": "sellEco",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1248,
																			"src": "4750:16:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint16",
																				"typeString": "uint16"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint16",
																				"typeString": "uint16"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 1599,
																						"name": "taxRates",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1252,
																						"src": "4729:8:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_TaxRates_$1249_storage",
																							"typeString": "struct MemeCoin.TaxRates storage ref"
																						}
																					},
																					"id": 1600,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "4738:6:6",
																					"memberName": "sellLp",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1246,
																					"src": "4729:15:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint16",
																						"typeString": "uint16"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint16",
																						"typeString": "uint16"
																					}
																				],
																				"id": 1598,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "4721:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 1597,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "4721:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1601,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4721:24:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1602,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4746:3:6",
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 175,
																		"src": "4721:28:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1605,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4721:46:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "4701:66:6"
															},
															{
																"assignments": [
																	1608
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 1608,
																		"mutability": "mutable",
																		"name": "transferTax",
																		"nameLocation": "4789:11:6",
																		"nodeType": "VariableDeclaration",
																		"scope": 1625,
																		"src": "4781:19:6",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 1607,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "4781:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 1616,
																"initialValue": {
																	"arguments": [
																		{
																			"hexValue": "3130",
																			"id": 1614,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4841:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"id": 1611,
																					"name": "transferMultiplier",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1255,
																					"src": "4817:18:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 1609,
																					"name": "sellTotal",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1596,
																					"src": "4803:9:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1610,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4813:3:6",
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 205,
																				"src": "4803:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1612,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4803:33:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1613,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4837:3:6",
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 220,
																		"src": "4803:37:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1615,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4803:41:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "4781:63:6"
															},
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 1622,
																			"name": "BP_DIVISOR",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1240,
																			"src": "4893:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"id": 1619,
																					"name": "transferTax",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1608,
																					"src": "4876:11:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 1617,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1532,
																					"src": "4865:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1618,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4872:3:6",
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 205,
																				"src": "4865:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1620,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4865:23:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1621,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4889:3:6",
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 220,
																		"src": "4865:27:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1623,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4865:39:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"functionReturnParameters": 1536,
																"id": 1624,
																"nodeType": "Return",
																"src": "4858:46:6"
															}
														]
													},
													"id": 1626,
													"nodeType": "IfStatement",
													"src": "4563:352:6",
													"trueBody": {
														"id": 1594,
														"nodeType": "Block",
														"src": "4575:106:6",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 1591,
																			"name": "BP_DIVISOR",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1240,
																			"src": "4659:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"expression": {
																								"id": 1586,
																								"name": "taxRates",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1252,
																								"src": "4636:8:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_TaxRates_$1249_storage",
																									"typeString": "struct MemeCoin.TaxRates storage ref"
																								}
																							},
																							"id": 1587,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "4645:7:6",
																							"memberName": "sellEco",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1248,
																							"src": "4636:16:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint16",
																								"typeString": "uint16"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint16",
																								"typeString": "uint16"
																							}
																						],
																						"expression": {
																							"arguments": [
																								{
																									"expression": {
																										"id": 1582,
																										"name": "taxRates",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1252,
																										"src": "4615:8:6",
																										"typeDescriptions": {
																											"typeIdentifier": "t_struct$_TaxRates_$1249_storage",
																											"typeString": "struct MemeCoin.TaxRates storage ref"
																										}
																									},
																									"id": 1583,
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberLocation": "4624:6:6",
																									"memberName": "sellLp",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 1246,
																									"src": "4615:15:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint16",
																										"typeString": "uint16"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_uint16",
																										"typeString": "uint16"
																									}
																								],
																								"id": 1581,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "ElementaryTypeNameExpression",
																								"src": "4607:7:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_uint256_$",
																									"typeString": "type(uint256)"
																								},
																								"typeName": {
																									"id": 1580,
																									"name": "uint256",
																									"nodeType": "ElementaryTypeName",
																									"src": "4607:7:6",
																									"typeDescriptions": {}
																								}
																							},
																							"id": 1584,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "typeConversion",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "4607:24:6",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1585,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "4632:3:6",
																						"memberName": "add",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 175,
																						"src": "4607:28:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 1588,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "4607:46:6",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 1578,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1532,
																					"src": "4596:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1579,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4603:3:6",
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 205,
																				"src": "4596:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1589,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4596:58:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1590,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4655:3:6",
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 220,
																		"src": "4596:62:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1592,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4596:74:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"functionReturnParameters": 1536,
																"id": 1593,
																"nodeType": "Return",
																"src": "4589:81:6"
															}
														]
													}
												},
												"id": 1627,
												"nodeType": "IfStatement",
												"src": "4442:473:6",
												"trueBody": {
													"id": 1576,
													"nodeType": "Block",
													"src": "4453:104:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1573,
																		"name": "BP_DIVISOR",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1240,
																		"src": "4535:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"expression": {
																							"id": 1568,
																							"name": "taxRates",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1252,
																							"src": "4513:8:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_TaxRates_$1249_storage",
																								"typeString": "struct MemeCoin.TaxRates storage ref"
																							}
																						},
																						"id": 1569,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "4522:6:6",
																						"memberName": "buyEco",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1244,
																						"src": "4513:15:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint16",
																							"typeString": "uint16"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint16",
																							"typeString": "uint16"
																						}
																					],
																					"expression": {
																						"arguments": [
																							{
																								"expression": {
																									"id": 1564,
																									"name": "taxRates",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1252,
																									"src": "4493:8:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_TaxRates_$1249_storage",
																										"typeString": "struct MemeCoin.TaxRates storage ref"
																									}
																								},
																								"id": 1565,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "4502:5:6",
																								"memberName": "buyLp",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 1242,
																								"src": "4493:14:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint16",
																									"typeString": "uint16"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint16",
																									"typeString": "uint16"
																								}
																							],
																							"id": 1563,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "4485:7:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_uint256_$",
																								"typeString": "type(uint256)"
																							},
																							"typeName": {
																								"id": 1562,
																								"name": "uint256",
																								"nodeType": "ElementaryTypeName",
																								"src": "4485:7:6",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 1566,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "4485:23:6",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1567,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "4509:3:6",
																					"memberName": "add",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 175,
																					"src": "4485:27:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1570,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "4485:44:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1560,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1532,
																				"src": "4474:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1561,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4481:3:6",
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 205,
																			"src": "4474:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1571,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4474:56:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1572,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4531:3:6",
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 220,
																	"src": "4474:60:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1574,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4474:72:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1536,
															"id": 1575,
															"nodeType": "Return",
															"src": "4467:79:6"
														}
													]
												}
											}
										]
									},
									"id": 1629,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_calculateTax",
									"nameLocation": "4149:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1528,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4180:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1629,
												"src": "4172:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1527,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4172:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1530,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "4204:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1629,
												"src": "4196:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1529,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4196:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1532,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4231:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1629,
												"src": "4223:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1531,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4223:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4162:81:6"
									},
									"returnParameters": {
										"id": 1536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1535,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1629,
												"src": "4266:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1534,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4266:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4265:9:6"
									},
									"scope": 2391,
									"src": "4140:781:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1725,
										"nodeType": "Block",
										"src": "5004:650:6",
										"statements": [
											{
												"assignments": [
													1639
												],
												"declarations": [
													{
														"constant": false,
														"id": 1639,
														"mutability": "mutable",
														"name": "lpShare",
														"nameLocation": "5022:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1725,
														"src": "5014:15:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1638,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5014:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1640,
												"nodeType": "VariableDeclarationStatement",
												"src": "5014:15:6"
											},
											{
												"assignments": [
													1642
												],
												"declarations": [
													{
														"constant": false,
														"id": 1642,
														"mutability": "mutable",
														"name": "ecoShare",
														"nameLocation": "5047:8:6",
														"nodeType": "VariableDeclaration",
														"scope": 1725,
														"src": "5039:16:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1641,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5039:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1643,
												"nodeType": "VariableDeclarationStatement",
												"src": "5039:16:6"
											},
											{
												"condition": {
													"id": 1644,
													"name": "isBuy",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1633,
													"src": "5070:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 1661,
														"name": "isSell",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1635,
														"src": "5189:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 1703,
														"nodeType": "Block",
														"src": "5308:180:6",
														"statements": [
															{
																"assignments": [
																	1679
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 1679,
																		"mutability": "mutable",
																		"name": "sellTotal",
																		"nameLocation": "5330:9:6",
																		"nodeType": "VariableDeclaration",
																		"scope": 1703,
																		"src": "5322:17:6",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 1678,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "5322:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 1685,
																"initialValue": {
																	"commonType": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	},
																	"id": 1684,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1680,
																			"name": "taxRates",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1252,
																			"src": "5342:8:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TaxRates_$1249_storage",
																				"typeString": "struct MemeCoin.TaxRates storage ref"
																			}
																		},
																		"id": 1681,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5351:6:6",
																		"memberName": "sellLp",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1246,
																		"src": "5342:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint16",
																			"typeString": "uint16"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"expression": {
																			"id": 1682,
																			"name": "taxRates",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1252,
																			"src": "5360:8:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TaxRates_$1249_storage",
																				"typeString": "struct MemeCoin.TaxRates storage ref"
																			}
																		},
																		"id": 1683,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5369:7:6",
																		"memberName": "sellEco",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1248,
																		"src": "5360:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint16",
																			"typeString": "uint16"
																		}
																	},
																	"src": "5342:34:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "5322:54:6"
															},
															{
																"expression": {
																	"id": 1701,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 1686,
																		"name": "lpShare",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1639,
																		"src": "5390:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"arguments": [
																			{
																				"hexValue": "3130",
																				"id": 1699,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5474:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"id": 1696,
																						"name": "transferMultiplier",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1255,
																						"src": "5450:18:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"arguments": [
																							{
																								"id": 1693,
																								"name": "sellTotal",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1679,
																								"src": "5435:9:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"arguments": [
																									{
																										"expression": {
																											"id": 1689,
																											"name": "taxRates",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 1252,
																											"src": "5414:8:6",
																											"typeDescriptions": {
																												"typeIdentifier": "t_struct$_TaxRates_$1249_storage",
																												"typeString": "struct MemeCoin.TaxRates storage ref"
																											}
																										},
																										"id": 1690,
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberLocation": "5423:6:6",
																										"memberName": "sellLp",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 1246,
																										"src": "5414:15:6",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint16",
																											"typeString": "uint16"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_uint16",
																											"typeString": "uint16"
																										}
																									],
																									"expression": {
																										"id": 1687,
																										"name": "taxAmount",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1631,
																										"src": "5400:9:6",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"id": 1688,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberLocation": "5410:3:6",
																									"memberName": "mul",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 205,
																									"src": "5400:13:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																										"typeString": "function (uint256,uint256) pure returns (uint256)"
																									}
																								},
																								"id": 1691,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "5400:30:6",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 1692,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "5431:3:6",
																							"memberName": "div",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 220,
																							"src": "5400:34:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																								"typeString": "function (uint256,uint256) pure returns (uint256)"
																							}
																						},
																						"id": 1694,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "5400:45:6",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1695,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "5446:3:6",
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 205,
																					"src": "5400:49:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1697,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "5400:69:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1698,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5470:3:6",
																			"memberName": "div",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 220,
																			"src": "5400:73:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1700,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5400:77:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5390:87:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1702,
																"nodeType": "ExpressionStatement",
																"src": "5390:87:6"
															}
														]
													},
													"id": 1704,
													"nodeType": "IfStatement",
													"src": "5185:303:6",
													"trueBody": {
														"id": 1677,
														"nodeType": "Block",
														"src": "5197:105:6",
														"statements": [
															{
																"expression": {
																	"id": 1675,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 1662,
																		"name": "lpShare",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1639,
																		"src": "5211:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"arguments": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint16",
																					"typeString": "uint16"
																				},
																				"id": 1673,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"expression": {
																						"id": 1669,
																						"name": "taxRates",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1252,
																						"src": "5256:8:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_TaxRates_$1249_storage",
																							"typeString": "struct MemeCoin.TaxRates storage ref"
																						}
																					},
																					"id": 1670,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "5265:6:6",
																					"memberName": "sellLp",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1246,
																					"src": "5256:15:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint16",
																						"typeString": "uint16"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"expression": {
																						"id": 1671,
																						"name": "taxRates",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1252,
																						"src": "5274:8:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_TaxRates_$1249_storage",
																							"typeString": "struct MemeCoin.TaxRates storage ref"
																						}
																					},
																					"id": 1672,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "5283:7:6",
																					"memberName": "sellEco",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1248,
																					"src": "5274:16:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint16",
																						"typeString": "uint16"
																					}
																				},
																				"src": "5256:34:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint16",
																					"typeString": "uint16"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint16",
																					"typeString": "uint16"
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"expression": {
																							"id": 1665,
																							"name": "taxRates",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1252,
																							"src": "5235:8:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_TaxRates_$1249_storage",
																								"typeString": "struct MemeCoin.TaxRates storage ref"
																							}
																						},
																						"id": 1666,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "5244:6:6",
																						"memberName": "sellLp",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1246,
																						"src": "5235:15:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint16",
																							"typeString": "uint16"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint16",
																							"typeString": "uint16"
																						}
																					],
																					"expression": {
																						"id": 1663,
																						"name": "taxAmount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1631,
																						"src": "5221:9:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1664,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "5231:3:6",
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 205,
																					"src": "5221:13:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1667,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "5221:30:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1668,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5252:3:6",
																			"memberName": "div",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 220,
																			"src": "5221:34:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1674,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5221:70:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5211:80:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1676,
																"nodeType": "ExpressionStatement",
																"src": "5211:80:6"
															}
														]
													}
												},
												"id": 1705,
												"nodeType": "IfStatement",
												"src": "5066:422:6",
												"trueBody": {
													"id": 1660,
													"nodeType": "Block",
													"src": "5077:102:6",
													"statements": [
														{
															"expression": {
																"id": 1658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1645,
																	"name": "lpShare",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1639,
																	"src": "5091:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint16",
																				"typeString": "uint16"
																			},
																			"id": 1656,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 1652,
																					"name": "taxRates",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1252,
																					"src": "5135:8:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_TaxRates_$1249_storage",
																						"typeString": "struct MemeCoin.TaxRates storage ref"
																					}
																				},
																				"id": 1653,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5144:5:6",
																				"memberName": "buyLp",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1242,
																				"src": "5135:14:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint16",
																					"typeString": "uint16"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"expression": {
																					"id": 1654,
																					"name": "taxRates",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1252,
																					"src": "5152:8:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_TaxRates_$1249_storage",
																						"typeString": "struct MemeCoin.TaxRates storage ref"
																					}
																				},
																				"id": 1655,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5161:6:6",
																				"memberName": "buyEco",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1244,
																				"src": "5152:15:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint16",
																					"typeString": "uint16"
																				}
																			},
																			"src": "5135:32:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint16",
																				"typeString": "uint16"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint16",
																				"typeString": "uint16"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 1648,
																						"name": "taxRates",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1252,
																						"src": "5115:8:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_TaxRates_$1249_storage",
																							"typeString": "struct MemeCoin.TaxRates storage ref"
																						}
																					},
																					"id": 1649,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "5124:5:6",
																					"memberName": "buyLp",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1242,
																					"src": "5115:14:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint16",
																						"typeString": "uint16"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint16",
																						"typeString": "uint16"
																					}
																				],
																				"expression": {
																					"id": 1646,
																					"name": "taxAmount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1631,
																					"src": "5101:9:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1647,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5111:3:6",
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 205,
																				"src": "5101:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1650,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5101:29:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1651,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5131:3:6",
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 220,
																		"src": "5101:33:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1657,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5101:67:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5091:77:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1659,
															"nodeType": "ExpressionStatement",
															"src": "5091:77:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1710,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1706,
														"name": "ecoShare",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1642,
														"src": "5498:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1709,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1707,
															"name": "taxAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1631,
															"src": "5509:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 1708,
															"name": "lpShare",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1639,
															"src": "5521:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5509:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5498:30:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1711,
												"nodeType": "ExpressionStatement",
												"src": "5498:30:6"
											},
											{
												"expression": {
													"id": 1714,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1712,
														"name": "accumulatedLp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1262,
														"src": "5538:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1713,
														"name": "lpShare",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1639,
														"src": "5555:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5538:24:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1715,
												"nodeType": "ExpressionStatement",
												"src": "5538:24:6"
											},
											{
												"expression": {
													"id": 1718,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1716,
														"name": "accumulatedEco",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1264,
														"src": "5572:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1717,
														"name": "ecoShare",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1642,
														"src": "5590:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5572:26:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1719,
												"nodeType": "ExpressionStatement",
												"src": "5572:26:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1721,
															"name": "lpShare",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1639,
															"src": "5629:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1722,
															"name": "ecoShare",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1642,
															"src": "5638:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1720,
														"name": "TaxesCollected",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1313,
														"src": "5614:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1723,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5614:33:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1724,
												"nodeType": "EmitStatement",
												"src": "5609:38:6"
											}
										]
									},
									"id": 1726,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_distributeTax",
									"nameLocation": "4937:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1631,
												"mutability": "mutable",
												"name": "taxAmount",
												"nameLocation": "4960:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1726,
												"src": "4952:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1630,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4952:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1633,
												"mutability": "mutable",
												"name": "isBuy",
												"nameLocation": "4976:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1726,
												"src": "4971:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1632,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4971:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1635,
												"mutability": "mutable",
												"name": "isSell",
												"nameLocation": "4988:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1726,
												"src": "4983:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1634,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4983:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4951:44:6"
									},
									"returnParameters": {
										"id": 1637,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5004:0:6"
									},
									"scope": 2391,
									"src": "4928:726:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1813,
										"nodeType": "Block",
										"src": "5701:799:6",
										"statements": [
											{
												"assignments": [
													1730
												],
												"declarations": [
													{
														"constant": false,
														"id": 1730,
														"mutability": "mutable",
														"name": "currentPrice",
														"nameLocation": "5719:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 1813,
														"src": "5711:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1729,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5711:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1733,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1731,
														"name": "pairPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1967,
														"src": "5734:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 1732,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5734:11:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5711:34:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1734,
														"name": "currentPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1730,
														"src": "5760:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"id": 1735,
															"name": "diamondFloor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1292,
															"src": "5775:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_DiamondFloor_$1289_storage",
																"typeString": "struct MemeCoin.DiamondFloor storage ref"
															}
														},
														"id": 1736,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5788:8:6",
														"memberName": "athPrice",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1284,
														"src": "5775:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5760:36:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1756,
												"nodeType": "IfStatement",
												"src": "5756:231:6",
												"trueBody": {
													"id": 1755,
													"nodeType": "Block",
													"src": "5798:189:6",
													"statements": [
														{
															"expression": {
																"id": 1742,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1738,
																		"name": "diamondFloor",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1292,
																		"src": "5812:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_DiamondFloor_$1289_storage",
																			"typeString": "struct MemeCoin.DiamondFloor storage ref"
																		}
																	},
																	"id": 1740,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5825:8:6",
																	"memberName": "athPrice",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1284,
																	"src": "5812:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1741,
																	"name": "currentPrice",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1730,
																	"src": "5836:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5812:36:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1743,
															"nodeType": "ExpressionStatement",
															"src": "5812:36:6"
														},
														{
															"condition": {
																"expression": {
																	"id": 1744,
																	"name": "diamondFloor",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1292,
																	"src": "5866:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_DiamondFloor_$1289_storage",
																		"typeString": "struct MemeCoin.DiamondFloor storage ref"
																	}
																},
																"id": 1745,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5879:11:6",
																"memberName": "sellStopped",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1286,
																"src": "5866:24:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1753,
															"nodeType": "IfStatement",
															"src": "5862:95:6",
															"trueBody": {
																"id": 1752,
																"nodeType": "Block",
																"src": "5892:65:6",
																"statements": [
																	{
																		"expression": {
																			"id": 1750,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"id": 1746,
																					"name": "diamondFloor",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1292,
																					"src": "5910:12:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_DiamondFloor_$1289_storage",
																						"typeString": "struct MemeCoin.DiamondFloor storage ref"
																					}
																				},
																				"id": 1748,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberLocation": "5923:11:6",
																				"memberName": "sellStopped",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1286,
																				"src": "5910:24:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"hexValue": "66616c7365",
																				"id": 1749,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5937:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			},
																			"src": "5910:32:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1751,
																		"nodeType": "ExpressionStatement",
																		"src": "5910:32:6"
																	}
																]
															}
														},
														{
															"functionReturnParameters": 1728,
															"id": 1754,
															"nodeType": "Return",
															"src": "5970:7:6"
														}
													]
												}
											},
											{
												"assignments": [
													1758
												],
												"declarations": [
													{
														"constant": false,
														"id": 1758,
														"mutability": "mutable",
														"name": "thresholdPrice",
														"nameLocation": "6005:14:6",
														"nodeType": "VariableDeclaration",
														"scope": 1813,
														"src": "5997:22:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1757,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5997:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1770,
												"initialValue": {
													"arguments": [
														{
															"id": 1768,
															"name": "BP_DIVISOR",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1240,
															"src": "6123:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1765,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1762,
																		"name": "BP_DIVISOR",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1240,
																		"src": "6061:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"expression": {
																			"id": 1763,
																			"name": "diamondFloor",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1292,
																			"src": "6074:12:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_DiamondFloor_$1289_storage",
																				"typeString": "struct MemeCoin.DiamondFloor storage ref"
																			}
																		},
																		"id": 1764,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6087:17:6",
																		"memberName": "triggerPercentage",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1282,
																		"src": "6074:30:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint16",
																			"typeString": "uint16"
																		}
																	},
																	"src": "6061:43:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"expression": {
																		"id": 1759,
																		"name": "diamondFloor",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1292,
																		"src": "6022:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_DiamondFloor_$1289_storage",
																			"typeString": "struct MemeCoin.DiamondFloor storage ref"
																		}
																	},
																	"id": 1760,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6035:8:6",
																	"memberName": "athPrice",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1284,
																	"src": "6022:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1761,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6057:3:6",
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 205,
																"src": "6022:38:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1766,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6022:83:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1767,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6119:3:6",
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 220,
														"src": "6022:100:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1769,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6022:112:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5997:137:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1771,
														"name": "currentPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1730,
														"src": "6149:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1772,
														"name": "thresholdPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1758,
														"src": "6164:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6149:29:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1788,
												"nodeType": "IfStatement",
												"src": "6145:152:6",
												"trueBody": {
													"id": 1787,
													"nodeType": "Block",
													"src": "6180:117:6",
													"statements": [
														{
															"expression": {
																"id": 1778,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1774,
																		"name": "diamondFloor",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1292,
																		"src": "6194:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_DiamondFloor_$1289_storage",
																			"typeString": "struct MemeCoin.DiamondFloor storage ref"
																		}
																	},
																	"id": 1776,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "6207:11:6",
																	"memberName": "sellStopped",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1286,
																	"src": "6194:24:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 1777,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6221:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "6194:31:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1779,
															"nodeType": "ExpressionStatement",
															"src": "6194:31:6"
														},
														{
															"expression": {
																"id": 1785,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1780,
																		"name": "diamondFloor",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1292,
																		"src": "6239:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_DiamondFloor_$1289_storage",
																			"typeString": "struct MemeCoin.DiamondFloor storage ref"
																		}
																	},
																	"id": 1782,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "6252:10:6",
																	"memberName": "blockedAth",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1288,
																	"src": "6239:23:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 1783,
																		"name": "diamondFloor",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1292,
																		"src": "6265:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_DiamondFloor_$1289_storage",
																			"typeString": "struct MemeCoin.DiamondFloor storage ref"
																		}
																	},
																	"id": 1784,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6278:8:6",
																	"memberName": "athPrice",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1284,
																	"src": "6265:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6239:47:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1786,
															"nodeType": "ExpressionStatement",
															"src": "6239:47:6"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1789,
															"name": "diamondFloor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1292,
															"src": "6311:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_DiamondFloor_$1289_storage",
																"typeString": "struct MemeCoin.DiamondFloor storage ref"
															}
														},
														"id": 1790,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6324:11:6",
														"memberName": "sellStopped",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1286,
														"src": "6311:24:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1797,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1791,
															"name": "currentPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1730,
															"src": "6339:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "32",
																	"id": 1795,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6383:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	}
																],
																"expression": {
																	"expression": {
																		"id": 1792,
																		"name": "diamondFloor",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1292,
																		"src": "6355:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_DiamondFloor_$1289_storage",
																			"typeString": "struct MemeCoin.DiamondFloor storage ref"
																		}
																	},
																	"id": 1793,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6368:10:6",
																	"memberName": "blockedAth",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1288,
																	"src": "6355:23:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1794,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6379:3:6",
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 205,
																"src": "6355:27:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1796,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6355:30:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6339:46:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6311:74:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1812,
												"nodeType": "IfStatement",
												"src": "6307:187:6",
												"trueBody": {
													"id": 1811,
													"nodeType": "Block",
													"src": "6387:107:6",
													"statements": [
														{
															"expression": {
																"id": 1803,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1799,
																		"name": "diamondFloor",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1292,
																		"src": "6401:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_DiamondFloor_$1289_storage",
																			"typeString": "struct MemeCoin.DiamondFloor storage ref"
																		}
																	},
																	"id": 1801,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "6414:11:6",
																	"memberName": "sellStopped",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1286,
																	"src": "6401:24:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 1802,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6428:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "6401:32:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1804,
															"nodeType": "ExpressionStatement",
															"src": "6401:32:6"
														},
														{
															"expression": {
																"id": 1809,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1805,
																		"name": "diamondFloor",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1292,
																		"src": "6447:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_DiamondFloor_$1289_storage",
																			"typeString": "struct MemeCoin.DiamondFloor storage ref"
																		}
																	},
																	"id": 1807,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "6460:8:6",
																	"memberName": "athPrice",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1284,
																	"src": "6447:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1808,
																	"name": "currentPrice",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1730,
																	"src": "6471:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6447:36:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1810,
															"nodeType": "ExpressionStatement",
															"src": "6447:36:6"
														}
													]
												}
											}
										]
									},
									"id": 1814,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkPriceConditions",
									"nameLocation": "5669:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1727,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5690:2:6"
									},
									"returnParameters": {
										"id": 1728,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5701:0:6"
									},
									"scope": 2391,
									"src": "5660:840:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1910,
										"nodeType": "Block",
										"src": "6541:671:6",
										"statements": [
											{
												"assignments": [
													1818
												],
												"declarations": [
													{
														"constant": false,
														"id": 1818,
														"mutability": "mutable",
														"name": "totalTokens",
														"nameLocation": "6559:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 1910,
														"src": "6551:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1817,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6551:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1822,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1821,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1819,
														"name": "accumulatedLp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1262,
														"src": "6573:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1820,
														"name": "accumulatedEco",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1264,
														"src": "6589:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6573:30:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6551:52:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1825,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1823,
														"name": "totalTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1818,
														"src": "6617:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1824,
														"name": "swapThreshold",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1260,
														"src": "6631:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6617:27:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1827,
												"nodeType": "IfStatement",
												"src": "6613:40:6",
												"trueBody": {
													"functionReturnParameters": 1816,
													"id": 1826,
													"nodeType": "Return",
													"src": "6646:7:6"
												}
											},
											{
												"expression": {
													"id": 1830,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1828,
														"name": "swapping",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1266,
														"src": "6663:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1829,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6674:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "6663:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1831,
												"nodeType": "ExpressionStatement",
												"src": "6663:15:6"
											},
											{
												"assignments": [
													1833
												],
												"declarations": [
													{
														"constant": false,
														"id": 1833,
														"mutability": "mutable",
														"name": "initialBalance",
														"nameLocation": "6696:14:6",
														"nodeType": "VariableDeclaration",
														"scope": 1910,
														"src": "6688:22:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1832,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6688:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1839,
												"initialValue": {
													"expression": {
														"arguments": [
															{
																"id": 1836,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "6721:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_MemeCoin_$2391",
																	"typeString": "contract MemeCoin"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_MemeCoin_$2391",
																	"typeString": "contract MemeCoin"
																}
															],
															"id": 1835,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6713:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1834,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6713:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1837,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6713:13:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1838,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "6727:7:6",
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "6713:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6688:46:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1841,
															"name": "accumulatedEco",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1264,
															"src": "6763:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1840,
														"name": "_swapTokensForETH",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2310,
														"src": "6745:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1842,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6745:33:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1843,
												"nodeType": "ExpressionStatement",
												"src": "6745:33:6"
											},
											{
												"assignments": [
													1845
												],
												"declarations": [
													{
														"constant": false,
														"id": 1845,
														"mutability": "mutable",
														"name": "ecoETH",
														"nameLocation": "6796:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1910,
														"src": "6788:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1844,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6788:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1854,
												"initialValue": {
													"arguments": [
														{
															"id": 1852,
															"name": "initialBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1833,
															"src": "6831:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1848,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "6813:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_MemeCoin_$2391",
																			"typeString": "contract MemeCoin"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_MemeCoin_$2391",
																			"typeString": "contract MemeCoin"
																		}
																	],
																	"id": 1847,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6805:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1846,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6805:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1849,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6805:13:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1850,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6819:7:6",
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"src": "6805:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1851,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6827:3:6",
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 190,
														"src": "6805:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1853,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6805:41:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6788:58:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1861,
															"name": "ecoETH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1845,
															"src": "6882:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1857,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 352,
																		"src": "6864:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1858,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6864:7:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1856,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6856:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 1855,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6856:8:6",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 1859,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6856:16:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 1860,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6873:8:6",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "6856:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1862,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6856:33:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1863,
												"nodeType": "ExpressionStatement",
												"src": "6856:33:6"
											},
											{
												"assignments": [
													1865
												],
												"declarations": [
													{
														"constant": false,
														"id": 1865,
														"mutability": "mutable",
														"name": "lpTokens",
														"nameLocation": "6908:8:6",
														"nodeType": "VariableDeclaration",
														"scope": 1910,
														"src": "6900:16:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1864,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6900:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1867,
												"initialValue": {
													"id": 1866,
													"name": "accumulatedLp",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1262,
													"src": "6919:13:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6900:32:6"
											},
											{
												"assignments": [
													1869
												],
												"declarations": [
													{
														"constant": false,
														"id": 1869,
														"mutability": "mutable",
														"name": "half",
														"nameLocation": "6950:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 1910,
														"src": "6942:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1868,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6942:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1874,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "32",
															"id": 1872,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6970:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															}
														],
														"expression": {
															"id": 1870,
															"name": "lpTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1865,
															"src": "6957:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1871,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6966:3:6",
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 220,
														"src": "6957:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1873,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6957:15:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6942:30:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1876,
															"name": "half",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1869,
															"src": "7000:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1875,
														"name": "_swapTokensForETH",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2310,
														"src": "6982:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1877,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6982:23:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1878,
												"nodeType": "ExpressionStatement",
												"src": "6982:23:6"
											},
											{
												"assignments": [
													1880
												],
												"declarations": [
													{
														"constant": false,
														"id": 1880,
														"mutability": "mutable",
														"name": "lpETH",
														"nameLocation": "7032:5:6",
														"nodeType": "VariableDeclaration",
														"scope": 1910,
														"src": "7024:13:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1879,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7024:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1889,
												"initialValue": {
													"arguments": [
														{
															"id": 1887,
															"name": "ecoETH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1845,
															"src": "7066:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1883,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "7048:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_MemeCoin_$2391",
																			"typeString": "contract MemeCoin"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_MemeCoin_$2391",
																			"typeString": "contract MemeCoin"
																		}
																	],
																	"id": 1882,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7040:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1881,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7040:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1884,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7040:13:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1885,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7054:7:6",
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"src": "7040:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1886,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7062:3:6",
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 190,
														"src": "7040:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1888,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7040:33:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7024:49:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1893,
																	"name": "half",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1869,
																	"src": "7110:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1891,
																	"name": "lpTokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1865,
																	"src": "7097:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1892,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7106:3:6",
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 190,
																"src": "7097:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1894,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7097:18:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1895,
															"name": "lpETH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1880,
															"src": "7117:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1890,
														"name": "_addLiquidity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2351,
														"src": "7083:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1896,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7083:40:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1897,
												"nodeType": "ExpressionStatement",
												"src": "7083:40:6"
											},
											{
												"expression": {
													"id": 1900,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1898,
														"name": "accumulatedLp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1262,
														"src": "7134:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1899,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7150:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7134:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1901,
												"nodeType": "ExpressionStatement",
												"src": "7134:17:6"
											},
											{
												"expression": {
													"id": 1904,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1902,
														"name": "accumulatedEco",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1264,
														"src": "7161:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1903,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7178:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7161:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1905,
												"nodeType": "ExpressionStatement",
												"src": "7161:18:6"
											},
											{
												"expression": {
													"id": 1908,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1906,
														"name": "swapping",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1266,
														"src": "7189:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1907,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7200:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "7189:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1909,
												"nodeType": "ExpressionStatement",
												"src": "7189:16:6"
											}
										]
									},
									"id": 1911,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_swapAndLiquify",
									"nameLocation": "6515:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1815,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6530:2:6"
									},
									"returnParameters": {
										"id": 1816,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6541:0:6"
									},
									"scope": 2391,
									"src": "6506:706:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1966,
										"nodeType": "Block",
										"src": "7269:302:6",
										"statements": [
											{
												"assignments": [
													1917,
													1919,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1917,
														"mutability": "mutable",
														"name": "reserve0",
														"nameLocation": "7288:8:6",
														"nodeType": "VariableDeclaration",
														"scope": 1966,
														"src": "7280:16:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														},
														"typeName": {
															"id": 1916,
															"name": "uint112",
															"nodeType": "ElementaryTypeName",
															"src": "7280:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1919,
														"mutability": "mutable",
														"name": "reserve1",
														"nameLocation": "7306:8:6",
														"nodeType": "VariableDeclaration",
														"scope": 1966,
														"src": "7298:16:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														},
														"typeName": {
															"id": 1918,
															"name": "uint112",
															"nodeType": "ElementaryTypeName",
															"src": "7298:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1925,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 1921,
																	"name": "pairAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1296,
																	"src": "7334:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1920,
																"name": "IUniswapV2Pair",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1220,
																"src": "7319:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IUniswapV2Pair_$1220_$",
																	"typeString": "type(contract IUniswapV2Pair)"
																}
															},
															"id": 1922,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7319:27:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV2Pair_$1220",
																"typeString": "contract IUniswapV2Pair"
															}
														},
														"id": 1923,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7347:11:6",
														"memberName": "getReserves",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1209,
														"src": "7319:39:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint112_$_t_uint112_$_t_uint32_$",
															"typeString": "function () view external returns (uint112,uint112,uint32)"
														}
													},
													"id": 1924,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7319:41:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$_t_uint32_$",
														"typeString": "tuple(uint112,uint112,uint32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7279:81:6"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1935,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"arguments": [
																		{
																			"id": 1927,
																			"name": "pairAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1296,
																			"src": "7392:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1926,
																		"name": "IUniswapV2Pair",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1220,
																		"src": "7377:14:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IUniswapV2Pair_$1220_$",
																			"typeString": "type(contract IUniswapV2Pair)"
																		}
																	},
																	"id": 1928,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7377:27:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IUniswapV2Pair_$1220",
																		"typeString": "contract IUniswapV2Pair"
																	}
																},
																"id": 1929,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7405:6:6",
																"memberName": "token0",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1214,
																"src": "7377:34:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																	"typeString": "function () view external returns (address)"
																}
															},
															"id": 1930,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7377:36:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"id": 1933,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "7425:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_MemeCoin_$2391",
																		"typeString": "contract MemeCoin"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_MemeCoin_$2391",
																		"typeString": "contract MemeCoin"
																	}
																],
																"id": 1932,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7417:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1931,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7417:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1934,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7417:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "7377:53:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1961,
																		"name": "reserve1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1919,
																		"src": "7554:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint112",
																			"typeString": "uint112"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint112",
																			"typeString": "uint112"
																		}
																	],
																	"id": 1960,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7546:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1959,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "7546:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1962,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7546:17:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "31653138",
																				"id": 1955,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7535:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1000000000000000000_by_1",
																					"typeString": "int_const 1000000000000000000"
																				},
																				"value": "1e18"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_1000000000000000000_by_1",
																					"typeString": "int_const 1000000000000000000"
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"id": 1952,
																						"name": "reserve0",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1917,
																						"src": "7521:8:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint112",
																							"typeString": "uint112"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint112",
																							"typeString": "uint112"
																						}
																					],
																					"id": 1951,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "7513:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 1950,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "7513:7:6",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1953,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "7513:17:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1954,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "7531:3:6",
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 205,
																			"src": "7513:21:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1956,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7513:27:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1957,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "7512:29:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1958,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7542:3:6",
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 220,
															"src": "7512:33:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1963,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7512:52:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1964,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "7377:187:6",
													"trueExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1947,
																		"name": "reserve0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1917,
																		"src": "7487:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint112",
																			"typeString": "uint112"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint112",
																			"typeString": "uint112"
																		}
																	],
																	"id": 1946,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7479:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1945,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "7479:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1948,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7479:17:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "31653138",
																				"id": 1941,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7468:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1000000000000000000_by_1",
																					"typeString": "int_const 1000000000000000000"
																				},
																				"value": "1e18"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_1000000000000000000_by_1",
																					"typeString": "int_const 1000000000000000000"
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"id": 1938,
																						"name": "reserve1",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1919,
																						"src": "7454:8:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint112",
																							"typeString": "uint112"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint112",
																							"typeString": "uint112"
																						}
																					],
																					"id": 1937,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "7446:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 1936,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "7446:7:6",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1939,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "7446:17:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1940,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "7464:3:6",
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 205,
																			"src": "7446:21:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1942,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7446:27:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1943,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "7445:29:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1944,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7475:3:6",
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 220,
															"src": "7445:33:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1949,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7445:52:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1915,
												"id": 1965,
												"nodeType": "Return",
												"src": "7370:194:6"
											}
										]
									},
									"functionSelector": "9491f94d",
									"id": 1967,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "pairPrice",
									"nameLocation": "7227:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1912,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7236:2:6"
									},
									"returnParameters": {
										"id": 1915,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1914,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1967,
												"src": "7260:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1913,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7260:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7259:9:6"
									},
									"scope": 2391,
									"src": "7218:353:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2035,
										"nodeType": "Block",
										"src": "7750:363:6",
										"statements": [
											{
												"assignments": [
													1981
												],
												"declarations": [
													{
														"constant": false,
														"id": 1981,
														"mutability": "mutable",
														"name": "remaining",
														"nameLocation": "7768:9:6",
														"nodeType": "VariableDeclaration",
														"scope": 2035,
														"src": "7760:17:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1980,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7760:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1999,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1988,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"expression": {
																	"id": 1982,
																	"name": "cooldown",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1278,
																	"src": "7780:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_CooldownConfig_$1275_storage",
																		"typeString": "struct MemeCoin.CooldownConfig storage ref"
																	}
																},
																"id": 1983,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7789:9:6",
																"memberName": "cooldowns",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1274,
																"src": "7780:18:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1985,
															"indexExpression": {
																"id": 1984,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1969,
																"src": "7799:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7780:27:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"expression": {
																"id": 1986,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "7810:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1987,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7816:9:6",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "7810:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7780:45:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "30",
														"id": 1997,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7892:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"id": 1998,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "7780:113:6",
													"trueExpression": {
														"arguments": [
															{
																"expression": {
																	"id": 1994,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "7873:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1995,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7879:9:6",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "7873:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"expression": {
																		"id": 1989,
																		"name": "cooldown",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1278,
																		"src": "7841:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_CooldownConfig_$1275_storage",
																			"typeString": "struct MemeCoin.CooldownConfig storage ref"
																		}
																	},
																	"id": 1990,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7850:9:6",
																	"memberName": "cooldowns",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1274,
																	"src": "7841:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1992,
																"indexExpression": {
																	"id": 1991,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1969,
																	"src": "7860:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7841:27:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1993,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7869:3:6",
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 190,
															"src": "7841:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1996,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7841:48:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7760:133:6"
											},
											{
												"expression": {
													"id": 2005,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2000,
														"name": "days_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1972,
														"src": "7912:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "3836343030",
																"id": 2003,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7934:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_86400_by_1",
																	"typeString": "int_const 86400"
																},
																"value": "86400"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_86400_by_1",
																	"typeString": "int_const 86400"
																}
															],
															"expression": {
																"id": 2001,
																"name": "remaining",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1981,
																"src": "7920:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2002,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7930:3:6",
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 220,
															"src": "7920:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2004,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7920:20:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7912:28:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2006,
												"nodeType": "ExpressionStatement",
												"src": "7912:28:6"
											},
											{
												"expression": {
													"id": 2009,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2007,
														"name": "remaining",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1981,
														"src": "7950:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "%=",
													"rightHandSide": {
														"hexValue": "3836343030",
														"id": 2008,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7963:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_86400_by_1",
															"typeString": "int_const 86400"
														},
														"value": "86400"
													},
													"src": "7950:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2010,
												"nodeType": "ExpressionStatement",
												"src": "7950:18:6"
											},
											{
												"expression": {
													"id": 2016,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2011,
														"name": "hours_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1974,
														"src": "7978:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "33363030",
																"id": 2014,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8001:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_3600_by_1",
																	"typeString": "int_const 3600"
																},
																"value": "3600"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_3600_by_1",
																	"typeString": "int_const 3600"
																}
															],
															"expression": {
																"id": 2012,
																"name": "remaining",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1981,
																"src": "7987:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2013,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7997:3:6",
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 220,
															"src": "7987:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2015,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7987:19:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7978:28:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2017,
												"nodeType": "ExpressionStatement",
												"src": "7978:28:6"
											},
											{
												"expression": {
													"id": 2020,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2018,
														"name": "remaining",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1981,
														"src": "8016:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "%=",
													"rightHandSide": {
														"hexValue": "33363030",
														"id": 2019,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8029:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3600_by_1",
															"typeString": "int_const 3600"
														},
														"value": "3600"
													},
													"src": "8016:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2021,
												"nodeType": "ExpressionStatement",
												"src": "8016:17:6"
											},
											{
												"expression": {
													"id": 2027,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2022,
														"name": "minutes_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1976,
														"src": "8043:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "3630",
																"id": 2025,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8068:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_60_by_1",
																	"typeString": "int_const 60"
																},
																"value": "60"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_60_by_1",
																	"typeString": "int_const 60"
																}
															],
															"expression": {
																"id": 2023,
																"name": "remaining",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1981,
																"src": "8054:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2024,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8064:3:6",
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 220,
															"src": "8054:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2026,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8054:17:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8043:28:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2028,
												"nodeType": "ExpressionStatement",
												"src": "8043:28:6"
											},
											{
												"expression": {
													"id": 2033,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2029,
														"name": "seconds_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1978,
														"src": "8081:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2032,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2030,
															"name": "remaining",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1981,
															"src": "8092:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "3630",
															"id": 2031,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8104:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_60_by_1",
																"typeString": "int_const 60"
															},
															"value": "60"
														},
														"src": "8092:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8081:25:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2034,
												"nodeType": "ExpressionStatement",
												"src": "8081:25:6"
											}
										]
									},
									"functionSelector": "9d82190f",
									"id": 2036,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "cooldownRemaining",
									"nameLocation": "7586:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1970,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1969,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7612:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2036,
												"src": "7604:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1968,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7604:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7603:17:6"
									},
									"returnParameters": {
										"id": 1979,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1972,
												"mutability": "mutable",
												"name": "days_",
												"nameLocation": "7659:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 2036,
												"src": "7651:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1971,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7651:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1974,
												"mutability": "mutable",
												"name": "hours_",
												"nameLocation": "7683:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 2036,
												"src": "7675:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1973,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7675:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1976,
												"mutability": "mutable",
												"name": "minutes_",
												"nameLocation": "7708:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 2036,
												"src": "7700:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1975,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7700:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1978,
												"mutability": "mutable",
												"name": "seconds_",
												"nameLocation": "7735:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 2036,
												"src": "7727:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1977,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7727:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7641:108:6"
									},
									"scope": 2391,
									"src": "7577:536:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2090,
										"nodeType": "Block",
										"src": "8174:353:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2044,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2041,
															"name": "diamondFloor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1292,
															"src": "8188:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_DiamondFloor_$1289_storage",
																"typeString": "struct MemeCoin.DiamondFloor storage ref"
															}
														},
														"id": 2042,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8201:8:6",
														"memberName": "athPrice",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1284,
														"src": "8188:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2043,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8213:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8188:26:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2047,
												"nodeType": "IfStatement",
												"src": "8184:40:6",
												"trueBody": {
													"expression": {
														"hexValue": "30",
														"id": 2045,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8223:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 2040,
													"id": 2046,
													"nodeType": "Return",
													"src": "8216:8:6"
												}
											},
											{
												"assignments": [
													2049
												],
												"declarations": [
													{
														"constant": false,
														"id": 2049,
														"mutability": "mutable",
														"name": "currentPrice",
														"nameLocation": "8242:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 2090,
														"src": "8234:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2048,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8234:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2052,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2050,
														"name": "pairPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1967,
														"src": "8257:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 2051,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8257:11:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8234:34:6"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2056,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2053,
															"name": "currentPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2049,
															"src": "8285:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"expression": {
																"id": 2054,
																"name": "diamondFloor",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1292,
																"src": "8300:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_DiamondFloor_$1289_storage",
																	"typeString": "struct MemeCoin.DiamondFloor storage ref"
																}
															},
															"id": 2055,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8313:8:6",
															"memberName": "athPrice",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1284,
															"src": "8300:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "8285:36:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2087,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "-",
														"prefix": true,
														"src": "8435:85:6",
														"subExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"expression": {
																				"id": 2083,
																				"name": "diamondFloor",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1292,
																				"src": "8497:12:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_DiamondFloor_$1289_storage",
																					"typeString": "struct MemeCoin.DiamondFloor storage ref"
																				}
																			},
																			"id": 2084,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "8510:8:6",
																			"memberName": "athPrice",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1284,
																			"src": "8497:21:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"hexValue": "31653138",
																					"id": 2080,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8487:4:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1000000000000000000_by_1",
																						"typeString": "int_const 1000000000000000000"
																					},
																					"value": "1e18"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_1000000000000000000_by_1",
																						"typeString": "int_const 1000000000000000000"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"id": 2077,
																							"name": "currentPrice",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2049,
																							"src": "8469:12:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"expression": {
																								"id": 2074,
																								"name": "diamondFloor",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1292,
																								"src": "8443:12:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_DiamondFloor_$1289_storage",
																									"typeString": "struct MemeCoin.DiamondFloor storage ref"
																								}
																							},
																							"id": 2075,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "8456:8:6",
																							"memberName": "athPrice",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1284,
																							"src": "8443:21:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 2076,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "8465:3:6",
																						"memberName": "sub",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 190,
																						"src": "8443:25:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 2078,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "8443:39:6",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2079,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "8483:3:6",
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 205,
																				"src": "8443:43:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 2081,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8443:49:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2082,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "8493:3:6",
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 220,
																		"src": "8443:53:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2085,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8443:76:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2073,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8436:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_int256_$",
																	"typeString": "type(int256)"
																},
																"typeName": {
																	"id": 2072,
																	"name": "int256",
																	"nodeType": "ElementaryTypeName",
																	"src": "8436:6:6",
																	"typeDescriptions": {}
																}
															},
															"id": 2086,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8436:84:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2088,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8285:235:6",
													"trueExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"expression": {
																			"id": 2068,
																			"name": "diamondFloor",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1292,
																			"src": "8397:12:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_DiamondFloor_$1289_storage",
																				"typeString": "struct MemeCoin.DiamondFloor storage ref"
																			}
																		},
																		"id": 2069,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "8410:8:6",
																		"memberName": "athPrice",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1284,
																		"src": "8397:21:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"hexValue": "31653138",
																				"id": 2065,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8387:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1000000000000000000_by_1",
																					"typeString": "int_const 1000000000000000000"
																				},
																				"value": "1e18"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_1000000000000000000_by_1",
																					"typeString": "int_const 1000000000000000000"
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"expression": {
																							"id": 2061,
																							"name": "diamondFloor",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1292,
																							"src": "8360:12:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_DiamondFloor_$1289_storage",
																								"typeString": "struct MemeCoin.DiamondFloor storage ref"
																							}
																						},
																						"id": 2062,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "8373:8:6",
																						"memberName": "athPrice",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1284,
																						"src": "8360:21:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"id": 2059,
																						"name": "currentPrice",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2049,
																						"src": "8343:12:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 2060,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "8356:3:6",
																					"memberName": "sub",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 190,
																					"src": "8343:16:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 2063,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "8343:39:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 2064,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "8383:3:6",
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 205,
																			"src": "8343:43:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 2066,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8343:49:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2067,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8393:3:6",
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 220,
																	"src": "8343:53:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 2070,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8343:76:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 2058,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8336:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int256_$",
																"typeString": "type(int256)"
															},
															"typeName": {
																"id": 2057,
																"name": "int256",
																"nodeType": "ElementaryTypeName",
																"src": "8336:6:6",
																"typeDescriptions": {}
															}
														},
														"id": 2071,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8336:84:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2040,
												"id": 2089,
												"nodeType": "Return",
												"src": "8278:242:6"
											}
										]
									},
									"functionSelector": "7773168f",
									"id": 2091,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "priceDeviation",
									"nameLocation": "8128:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2037,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8142:2:6"
									},
									"returnParameters": {
										"id": 2040,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2039,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2091,
												"src": "8166:6:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2038,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "8166:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8165:8:6"
									},
									"scope": 2391,
									"src": "8119:408:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2109,
										"nodeType": "Block",
										"src": "8590:103:6",
										"statements": [
											{
												"expression": {
													"id": 2100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2098,
														"name": "routerAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1294,
														"src": "8600:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2099,
														"name": "newRouter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2093,
														"src": "8616:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8600:25:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2101,
												"nodeType": "ExpressionStatement",
												"src": "8600:25:6"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2102,
														"name": "_setupPair",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2250,
														"src": "8635:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8635:12:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2104,
												"nodeType": "ExpressionStatement",
												"src": "8635:12:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2106,
															"name": "newRouter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2093,
															"src": "8676:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2105,
														"name": "RouterUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1307,
														"src": "8662:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8662:24:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2108,
												"nodeType": "EmitStatement",
												"src": "8657:29:6"
											}
										]
									},
									"functionSelector": "c0d78655",
									"id": 2110,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2096,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2095,
												"name": "onlyOwner",
												"nameLocations": [
													"8580:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 343,
												"src": "8580:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "8580:9:6"
										}
									],
									"name": "setRouter",
									"nameLocation": "8542:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2094,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2093,
												"mutability": "mutable",
												"name": "newRouter",
												"nameLocation": "8560:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 2110,
												"src": "8552:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2092,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8552:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8551:19:6"
									},
									"returnParameters": {
										"id": 2097,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8590:0:6"
									},
									"scope": 2391,
									"src": "8533:160:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2150,
										"nodeType": "Block",
										"src": "8799:193:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															},
															"id": 2128,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																},
																"id": 2126,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2124,
																	"name": "buyLp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2112,
																	"src": "8817:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 2125,
																	"name": "buyEco",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2114,
																	"src": "8825:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"src": "8817:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "32353030",
																"id": 2127,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8835:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2500_by_1",
																	"typeString": "int_const 2500"
																},
																"value": "2500"
															},
															"src": "8817:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4275792074617820746f6f2068696768",
															"id": 2129,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8841:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8b651597bafb95b427a4f660d871a5de5d1e311b7ec5bcd461acf7a21699d335",
																"typeString": "literal_string \"Buy tax too high\""
															},
															"value": "Buy tax too high"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8b651597bafb95b427a4f660d871a5de5d1e311b7ec5bcd461acf7a21699d335",
																"typeString": "literal_string \"Buy tax too high\""
															}
														],
														"id": 2123,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8809:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8809:51:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2131,
												"nodeType": "ExpressionStatement",
												"src": "8809:51:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															},
															"id": 2137,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																},
																"id": 2135,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2133,
																	"name": "sellLp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2116,
																	"src": "8878:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 2134,
																	"name": "sellEco",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2118,
																	"src": "8887:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"src": "8878:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "32353030",
																"id": 2136,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8898:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2500_by_1",
																	"typeString": "int_const 2500"
																},
																"value": "2500"
															},
															"src": "8878:24:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53656c6c2074617820746f6f2068696768",
															"id": 2138,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8904:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_77f71f16cf7fea8071257338db8d15c2b0742cafda4fe118dd4d019676d62627",
																"typeString": "literal_string \"Sell tax too high\""
															},
															"value": "Sell tax too high"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_77f71f16cf7fea8071257338db8d15c2b0742cafda4fe118dd4d019676d62627",
																"typeString": "literal_string \"Sell tax too high\""
															}
														],
														"id": 2132,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8870:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8870:54:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2140,
												"nodeType": "ExpressionStatement",
												"src": "8870:54:6"
											},
											{
												"expression": {
													"id": 2148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2141,
														"name": "taxRates",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1252,
														"src": "8934:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TaxRates_$1249_storage",
															"typeString": "struct MemeCoin.TaxRates storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2143,
																"name": "buyLp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2112,
																"src": "8954:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															{
																"id": 2144,
																"name": "buyEco",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2114,
																"src": "8961:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															{
																"id": 2145,
																"name": "sellLp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2116,
																"src": "8969:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															{
																"id": 2146,
																"name": "sellEco",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2118,
																"src": "8977:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																},
																{
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																},
																{
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																},
																{
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															],
															"id": 2142,
															"name": "TaxRates",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1249,
															"src": "8945:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_TaxRates_$1249_storage_ptr_$",
																"typeString": "type(struct MemeCoin.TaxRates storage pointer)"
															}
														},
														"id": 2147,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8945:40:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TaxRates_$1249_memory_ptr",
															"typeString": "struct MemeCoin.TaxRates memory"
														}
													},
													"src": "8934:51:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TaxRates_$1249_storage",
														"typeString": "struct MemeCoin.TaxRates storage ref"
													}
												},
												"id": 2149,
												"nodeType": "ExpressionStatement",
												"src": "8934:51:6"
											}
										]
									},
									"functionSelector": "1569d181",
									"id": 2151,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2121,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2120,
												"name": "onlyOwner",
												"nameLocations": [
													"8789:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 343,
												"src": "8789:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "8789:9:6"
										}
									],
									"name": "setTaxRates",
									"nameLocation": "8708:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2112,
												"mutability": "mutable",
												"name": "buyLp",
												"nameLocation": "8727:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 2151,
												"src": "8720:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2111,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "8720:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2114,
												"mutability": "mutable",
												"name": "buyEco",
												"nameLocation": "8741:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 2151,
												"src": "8734:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2113,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "8734:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2116,
												"mutability": "mutable",
												"name": "sellLp",
												"nameLocation": "8756:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 2151,
												"src": "8749:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2115,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "8749:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2118,
												"mutability": "mutable",
												"name": "sellEco",
												"nameLocation": "8771:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2151,
												"src": "8764:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2117,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "8764:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8719:60:6"
									},
									"returnParameters": {
										"id": 2122,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8799:0:6"
									},
									"scope": 2391,
									"src": "8699:293:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2162,
										"nodeType": "Block",
										"src": "9058:42:6",
										"statements": [
											{
												"expression": {
													"id": 2160,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2158,
														"name": "swapThreshold",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1260,
														"src": "9068:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2159,
														"name": "threshold",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2153,
														"src": "9084:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9068:25:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2161,
												"nodeType": "ExpressionStatement",
												"src": "9068:25:6"
											}
										]
									},
									"functionSelector": "960bfe04",
									"id": 2163,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2156,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2155,
												"name": "onlyOwner",
												"nameLocations": [
													"9048:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 343,
												"src": "9048:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "9048:9:6"
										}
									],
									"name": "setThreshold",
									"nameLocation": "9007:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2153,
												"mutability": "mutable",
												"name": "threshold",
												"nameLocation": "9028:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 2163,
												"src": "9020:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2152,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9020:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9019:19:6"
									},
									"returnParameters": {
										"id": 2157,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9058:0:6"
									},
									"scope": 2391,
									"src": "8998:102:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2186,
										"nodeType": "Block",
										"src": "9183:93:6",
										"statements": [
											{
												"expression": {
													"id": 2176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2172,
															"name": "cooldown",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1278,
															"src": "9193:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_CooldownConfig_$1275_storage",
																"typeString": "struct MemeCoin.CooldownConfig storage ref"
															}
														},
														"id": 2174,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "9202:7:6",
														"memberName": "enabled",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1268,
														"src": "9193:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2175,
														"name": "enabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2165,
														"src": "9212:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9193:26:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2177,
												"nodeType": "ExpressionStatement",
												"src": "9193:26:6"
											},
											{
												"expression": {
													"id": 2184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2178,
															"name": "cooldown",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1278,
															"src": "9229:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_CooldownConfig_$1275_storage",
																"typeString": "struct MemeCoin.CooldownConfig storage ref"
															}
														},
														"id": 2180,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "9238:8:6",
														"memberName": "duration",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1270,
														"src": "9229:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"id": 2183,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2181,
															"name": "duration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2167,
															"src": "9249:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "31",
															"id": 2182,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9260:9:6",
															"subdenomination": "minutes",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_60_by_1",
																"typeString": "int_const 60"
															},
															"value": "1"
														},
														"src": "9249:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "9229:40:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 2185,
												"nodeType": "ExpressionStatement",
												"src": "9229:40:6"
											}
										]
									},
									"functionSelector": "fe6b751e",
									"id": 2187,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2170,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2169,
												"name": "onlyOwner",
												"nameLocations": [
													"9173:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 343,
												"src": "9173:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "9173:9:6"
										}
									],
									"name": "configureCooldown",
									"nameLocation": "9115:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2165,
												"mutability": "mutable",
												"name": "enabled",
												"nameLocation": "9138:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2187,
												"src": "9133:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2164,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9133:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2167,
												"mutability": "mutable",
												"name": "duration",
												"nameLocation": "9154:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 2187,
												"src": "9147:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 2166,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "9147:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9132:31:6"
									},
									"returnParameters": {
										"id": 2171,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9183:0:6"
									},
									"scope": 2391,
									"src": "9106:170:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2208,
										"nodeType": "Block",
										"src": "9369:104:6",
										"statements": [
											{
												"expression": {
													"id": 2200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2196,
															"name": "diamondFloor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1292,
															"src": "9379:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_DiamondFloor_$1289_storage",
																"typeString": "struct MemeCoin.DiamondFloor storage ref"
															}
														},
														"id": 2198,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "9392:7:6",
														"memberName": "enabled",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1280,
														"src": "9379:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2199,
														"name": "enabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2189,
														"src": "9402:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9379:30:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2201,
												"nodeType": "ExpressionStatement",
												"src": "9379:30:6"
											},
											{
												"expression": {
													"id": 2206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2202,
															"name": "diamondFloor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1292,
															"src": "9419:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_DiamondFloor_$1289_storage",
																"typeString": "struct MemeCoin.DiamondFloor storage ref"
															}
														},
														"id": 2204,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "9432:17:6",
														"memberName": "triggerPercentage",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1282,
														"src": "9419:30:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2205,
														"name": "triggerPercent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2191,
														"src": "9452:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"src": "9419:47:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"id": 2207,
												"nodeType": "ExpressionStatement",
												"src": "9419:47:6"
											}
										]
									},
									"functionSelector": "fe0bb982",
									"id": 2209,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2194,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2193,
												"name": "onlyOwner",
												"nameLocations": [
													"9359:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 343,
												"src": "9359:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "9359:9:6"
										}
									],
									"name": "configureDiamondFloor",
									"nameLocation": "9291:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2189,
												"mutability": "mutable",
												"name": "enabled",
												"nameLocation": "9318:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2209,
												"src": "9313:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2188,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9313:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2191,
												"mutability": "mutable",
												"name": "triggerPercent",
												"nameLocation": "9334:14:6",
												"nodeType": "VariableDeclaration",
												"scope": 2209,
												"src": "9327:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2190,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "9327:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9312:37:6"
									},
									"returnParameters": {
										"id": 2195,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9369:0:6"
									},
									"scope": 2391,
									"src": "9282:191:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2224,
										"nodeType": "Block",
										"src": "9547:43:6",
										"statements": [
											{
												"expression": {
													"id": 2222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2218,
															"name": "isExempt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1303,
															"src": "9557:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2220,
														"indexExpression": {
															"id": 2219,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2211,
															"src": "9566:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9557:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2221,
														"name": "exempt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2213,
														"src": "9577:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9557:26:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2223,
												"nodeType": "ExpressionStatement",
												"src": "9557:26:6"
											}
										]
									},
									"functionSelector": "9fde54f5",
									"id": 2225,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2216,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2215,
												"name": "onlyOwner",
												"nameLocations": [
													"9537:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 343,
												"src": "9537:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "9537:9:6"
										}
									],
									"name": "setExempt",
									"nameLocation": "9488:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2211,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "9506:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2225,
												"src": "9498:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2210,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9498:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2213,
												"mutability": "mutable",
												"name": "exempt",
												"nameLocation": "9520:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 2225,
												"src": "9515:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2212,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9515:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9497:30:6"
									},
									"returnParameters": {
										"id": 2217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9547:0:6"
									},
									"scope": 2391,
									"src": "9479:111:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2249,
										"nodeType": "Block",
										"src": "9626:170:6",
										"statements": [
											{
												"expression": {
													"id": 2247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2228,
														"name": "pairAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1296,
														"src": "9636:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 2239,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "9743:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_MemeCoin_$2391",
																			"typeString": "contract MemeCoin"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_MemeCoin_$2391",
																			"typeString": "contract MemeCoin"
																		}
																	],
																	"id": 2238,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9735:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2237,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9735:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 2240,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9735:13:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"arguments": [
																			{
																				"id": 2242,
																				"name": "routerAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1294,
																				"src": "9767:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 2241,
																			"name": "IUniswapV2Router",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1190,
																			"src": "9750:16:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IUniswapV2Router_$1190_$",
																				"typeString": "type(contract IUniswapV2Router)"
																			}
																		},
																		"id": 2243,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9750:31:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IUniswapV2Router_$1190",
																			"typeString": "contract IUniswapV2Router"
																		}
																	},
																	"id": 2244,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "9782:4:6",
																	"memberName": "WETH",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1151,
																	"src": "9750:36:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
																		"typeString": "function () pure external returns (address)"
																	}
																},
																"id": 2245,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9750:38:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"arguments": [
																					{
																						"id": 2231,
																						"name": "routerAddress",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1294,
																						"src": "9685:13:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 2230,
																					"name": "IUniswapV2Router",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1190,
																					"src": "9668:16:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_IUniswapV2Router_$1190_$",
																						"typeString": "type(contract IUniswapV2Router)"
																					}
																				},
																				"id": 2232,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "9668:31:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IUniswapV2Router_$1190",
																					"typeString": "contract IUniswapV2Router"
																				}
																			},
																			"id": 2233,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "9700:7:6",
																			"memberName": "factory",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1146,
																			"src": "9668:39:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
																				"typeString": "function () pure external returns (address)"
																			}
																		},
																		"id": 2234,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9668:41:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2229,
																	"name": "IUniswapV2Factory",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1200,
																	"src": "9650:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IUniswapV2Factory_$1200_$",
																		"typeString": "type(contract IUniswapV2Factory)"
																	}
																},
																"id": 2235,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9650:60:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IUniswapV2Factory_$1200",
																	"typeString": "contract IUniswapV2Factory"
																}
															},
															"id": 2236,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9724:10:6",
															"memberName": "createPair",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1199,
															"src": "9650:84:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$_t_address_$",
																"typeString": "function (address,address) external returns (address)"
															}
														},
														"id": 2246,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9650:139:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9636:153:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2248,
												"nodeType": "ExpressionStatement",
												"src": "9636:153:6"
											}
										]
									},
									"id": 2250,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setupPair",
									"nameLocation": "9605:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2226,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9615:2:6"
									},
									"returnParameters": {
										"id": 2227,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9626:0:6"
									},
									"scope": 2391,
									"src": "9596:200:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2309,
										"nodeType": "Block",
										"src": "9853:387:6",
										"statements": [
											{
												"assignments": [
													2259
												],
												"declarations": [
													{
														"constant": false,
														"id": 2259,
														"mutability": "mutable",
														"name": "path",
														"nameLocation": "9880:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 2309,
														"src": "9863:21:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 2257,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9863:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2258,
															"nodeType": "ArrayTypeName",
															"src": "9863:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2265,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "32",
															"id": 2263,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9901:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															}
														],
														"id": 2262,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "9887:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (address[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 2260,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9891:7:6",
																"stateMutability": "nonpayable",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2261,
															"nodeType": "ArrayTypeName",
															"src": "9891:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														}
													},
													"id": 2264,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9887:16:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9863:40:6"
											},
											{
												"expression": {
													"id": 2273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2266,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2259,
															"src": "9913:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 2268,
														"indexExpression": {
															"hexValue": "30",
															"id": 2267,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9918:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9913:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2271,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "9931:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_MemeCoin_$2391",
																	"typeString": "contract MemeCoin"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_MemeCoin_$2391",
																	"typeString": "contract MemeCoin"
																}
															],
															"id": 2270,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9923:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2269,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9923:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 2272,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9923:13:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9913:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2274,
												"nodeType": "ExpressionStatement",
												"src": "9913:23:6"
											},
											{
												"expression": {
													"id": 2283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2275,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2259,
															"src": "9946:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 2277,
														"indexExpression": {
															"hexValue": "31",
															"id": 2276,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9951:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9946:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"arguments": [
																	{
																		"id": 2279,
																		"name": "routerAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1294,
																		"src": "9973:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2278,
																	"name": "IUniswapV2Router",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1190,
																	"src": "9956:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IUniswapV2Router_$1190_$",
																		"typeString": "type(contract IUniswapV2Router)"
																	}
																},
																"id": 2280,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9956:31:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IUniswapV2Router_$1190",
																	"typeString": "contract IUniswapV2Router"
																}
															},
															"id": 2281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9988:4:6",
															"memberName": "WETH",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1151,
															"src": "9956:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
																"typeString": "function () pure external returns (address)"
															}
														},
														"id": 2282,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9956:38:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9946:48:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2284,
												"nodeType": "ExpressionStatement",
												"src": "9946:48:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2288,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "10022:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_MemeCoin_$2391",
																		"typeString": "contract MemeCoin"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_MemeCoin_$2391",
																		"typeString": "contract MemeCoin"
																	}
																],
																"id": 2287,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10014:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2286,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10014:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 2289,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10014:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2290,
															"name": "routerAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1294,
															"src": "10029:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2291,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2252,
															"src": "10044:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2285,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 945,
														"src": "10005:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10005:46:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2293,
												"nodeType": "ExpressionStatement",
												"src": "10005:46:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2298,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2252,
															"src": "10128:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 2299,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10148:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 2300,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2259,
															"src": "10163:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														{
															"arguments": [
																{
																	"id": 2303,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "10189:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_MemeCoin_$2391",
																		"typeString": "contract MemeCoin"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_MemeCoin_$2391",
																		"typeString": "contract MemeCoin"
																	}
																],
																"id": 2302,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10181:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2301,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10181:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 2304,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10181:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 2305,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "10208:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 2306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10214:9:6",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "10208:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2295,
																	"name": "routerAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1294,
																	"src": "10078:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2294,
																"name": "IUniswapV2Router",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1190,
																"src": "10061:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IUniswapV2Router_$1190_$",
																	"typeString": "type(contract IUniswapV2Router)"
																}
															},
															"id": 2296,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10061:31:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV2Router_$1190",
																"typeString": "contract IUniswapV2Router"
															}
														},
														"id": 2297,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10093:21:6",
														"memberName": "swapExactTokensForETH",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1189,
														"src": "10061:53:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256,uint256,address[] memory,address,uint256) external returns (uint256[] memory)"
														}
													},
													"id": 2307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10061:172:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"id": 2308,
												"nodeType": "ExpressionStatement",
												"src": "10061:172:6"
											}
										]
									},
									"id": 2310,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_swapTokensForETH",
									"nameLocation": "9811:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2252,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9837:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 2310,
												"src": "9829:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2251,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9829:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9828:16:6"
									},
									"returnParameters": {
										"id": 2254,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9853:0:6"
									},
									"scope": 2391,
									"src": "9802:438:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2350,
										"nodeType": "Block",
										"src": "10317:338:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2320,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "10344:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_MemeCoin_$2391",
																		"typeString": "contract MemeCoin"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_MemeCoin_$2391",
																		"typeString": "contract MemeCoin"
																	}
																],
																"id": 2319,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10336:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2318,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10336:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 2321,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10336:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2322,
															"name": "routerAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1294,
															"src": "10351:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2323,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2312,
															"src": "10366:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2317,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 945,
														"src": "10327:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10327:51:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2325,
												"nodeType": "ExpressionStatement",
												"src": "10327:51:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2334,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "10475:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_MemeCoin_$2391",
																		"typeString": "contract MemeCoin"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_MemeCoin_$2391",
																		"typeString": "contract MemeCoin"
																	}
																],
																"id": 2333,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10467:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2332,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10467:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 2335,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10467:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2336,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2312,
															"src": "10494:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 2337,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10519:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "30",
															"id": 2338,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10534:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2339,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 352,
																"src": "10549:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2340,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10549:7:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 2341,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "10570:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 2342,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10576:9:6",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "10570:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 2327,
																		"name": "routerAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1294,
																		"src": "10405:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2326,
																	"name": "IUniswapV2Router",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1190,
																	"src": "10388:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IUniswapV2Router_$1190_$",
																		"typeString": "type(contract IUniswapV2Router)"
																	}
																},
																"id": 2328,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10388:31:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IUniswapV2Router_$1190",
																	"typeString": "contract IUniswapV2Router"
																}
															},
															"id": 2329,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10420:15:6",
															"memberName": "addLiquidityETH",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1172,
															"src": "10388:47:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
																"typeString": "function (address,uint256,uint256,uint256,address,uint256) payable external returns (uint256,uint256,uint256)"
															}
														},
														"id": 2331,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 2330,
																"name": "ethAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2314,
																"src": "10443:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "10388:65:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$value",
															"typeString": "function (address,uint256,uint256,uint256,address,uint256) payable external returns (uint256,uint256,uint256)"
														}
													},
													"id": 2343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10388:207:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256)"
													}
												},
												"id": 2344,
												"nodeType": "ExpressionStatement",
												"src": "10388:207:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2346,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2312,
															"src": "10625:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2347,
															"name": "ethAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2314,
															"src": "10638:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2345,
														"name": "LiquidityAdded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1319,
														"src": "10610:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 2348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10610:38:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2349,
												"nodeType": "EmitStatement",
												"src": "10605:43:6"
											}
										]
									},
									"id": 2351,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_addLiquidity",
									"nameLocation": "10255:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2312,
												"mutability": "mutable",
												"name": "tokenAmount",
												"nameLocation": "10277:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 2351,
												"src": "10269:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2311,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10269:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2314,
												"mutability": "mutable",
												"name": "ethAmount",
												"nameLocation": "10298:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 2351,
												"src": "10290:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2313,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10290:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10268:40:6"
									},
									"returnParameters": {
										"id": 2316,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10317:0:6"
									},
									"scope": 2391,
									"src": "10246:409:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2364,
										"nodeType": "Block",
										"src": "10717:77:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2361,
															"name": "BP_DIVISOR",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1240,
															"src": "10776:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2358,
																	"name": "maxWalletPercentage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1237,
																	"src": "10751:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2356,
																	"name": "TOTAL_SUPPLY",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1234,
																	"src": "10734:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2357,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "10747:3:6",
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 205,
																"src": "10734:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2359,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10734:37:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2360,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10772:3:6",
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 220,
														"src": "10734:41:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10734:53:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2355,
												"id": 2363,
												"nodeType": "Return",
												"src": "10727:60:6"
											}
										]
									},
									"functionSelector": "8f9a55c0",
									"id": 2365,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_maxWalletSize",
									"nameLocation": "10670:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2352,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10684:2:6"
									},
									"returnParameters": {
										"id": 2355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2354,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2365,
												"src": "10708:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2353,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10708:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10707:9:6"
									},
									"scope": 2391,
									"src": "10661:133:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2385,
										"nodeType": "Block",
										"src": "10855:140:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 2378,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2371,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "10872:9:6",
															"subExpression": {
																"id": 2370,
																"name": "swapping",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1266,
																"src": "10873:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2377,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 2374,
																		"name": "accumulatedEco",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1264,
																		"src": "10915:14:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2372,
																		"name": "accumulatedLp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1262,
																		"src": "10897:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2373,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "10911:3:6",
																	"memberName": "add",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 175,
																	"src": "10897:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 2375,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10897:33:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 2376,
																"name": "swapThreshold",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1260,
																"src": "10934:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10897:50:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "10872:75:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 2382,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 2379,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "10963:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2380,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10967:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "10963:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 2381,
															"name": "pairAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1296,
															"src": "10977:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "10963:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "10872:116:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2369,
												"id": 2384,
												"nodeType": "Return",
												"src": "10865:123:6"
											}
										]
									},
									"id": 2386,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_shouldSwapBack",
									"nameLocation": "10809:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2366,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10824:2:6"
									},
									"returnParameters": {
										"id": 2369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2368,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2386,
												"src": "10849:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2367,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10849:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10848:6:6"
									},
									"scope": 2391,
									"src": "10800:195:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2389,
										"nodeType": "Block",
										"src": "11028:2:6",
										"statements": []
									},
									"id": 2390,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2387,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11008:2:6"
									},
									"returnParameters": {
										"id": 2388,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11028:0:6"
									},
									"scope": 2391,
									"src": "11001:29:6",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2392,
							"src": "1203:9829:6",
							"usedErrors": [],
							"usedEvents": [
								325,
								1023,
								1032,
								1307,
								1313,
								1319
							]
						}
					],
					"src": "32:11000:6"
				},
				"id": 6
			}
		}
	}
}