{
	"id": "e32ef61cec3264315e696a73c3b2c65b",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.4",
	"solcLongVersion": "0.8.4+commit.c7e474f2",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/reference.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\n/*\n\n  /$$$$$$            /$$           /$$$$$$$$ /$$ /$$ /$$          \n /$$__  $$          |__/          |_____ $$ |__/| $$| $$          \n| $$  \\__/  /$$$$$$  /$$ /$$$$$$$      /$$/  /$$| $$| $$  /$$$$$$ \n| $$ /$$$$ |____  $$| $$| $$__  $$    /$$/  | $$| $$| $$ |____  $$\n| $$|_  $$  /$$$$$$$| $$| $$  \\ $$   /$$/   | $$| $$| $$  /$$$$$$$\n| $$  \\ $$ /$$__  $$| $$| $$  | $$  /$$/    | $$| $$| $$ /$$__  $$\n|  $$$$$$/|  $$$$$$$| $$| $$  | $$ /$$$$$$$$| $$| $$| $$|  $$$$$$$\n \\______/  \\_______/|__/|__/  |__/|________/|__/|__/|__/ \\_______/\n                                                                    \nTG :- https://t.me/Gainzilla_Entry\n\n*/\n\npragma solidity ^0.8.4;\n\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n}\n\ninterface IERC20 {\n    function totalSupply() external view returns (uint256);\n    function balanceOf(address account) external view returns (uint256);\n    function transfer(address recipient, uint256 amount) external returns (bool);\n    function allowance(address owner, address spender) external view returns (uint256);\n    function approve(address spender, uint256 amount) external returns (bool);\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n    event Transfer(address indexed from, address indexed to, uint256 value);\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n\nlibrary SafeMath {\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n        return c;\n    }\n\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return sub(a, b, \"SafeMath: subtraction overflow\");\n    }\n\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b <= a, errorMessage);\n        uint256 c = a - b;\n        return c;\n    }\n\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n        return c;\n    }\n\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return div(a, b, \"SafeMath: division by zero\");\n    }\n\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        uint256 c = a / b;\n        return c;\n    }\n}\n\ncontract Ownable is Context {\n    address private _owner;\n    address private _previousOwner;\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    constructor() {\n        address msgSender = _msgSender();\n        _owner = msgSender;\n        emit OwnershipTransferred(address(0), msgSender);\n    }\n\n    function owner() public view returns (address) {\n        return _owner;\n    }\n\n    modifier onlyOwner() {\n        require(_owner == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n    \n    function renounceOwnership() public virtual onlyOwner() {\n        emit OwnershipTransferred(_owner, address(0));\n        _owner = address(0);\n    }\n}\n\ninterface IUniswapV2Pair {\n    event Approval(address indexed owner, address indexed spender, uint value);\n    event Transfer(address indexed from, address indexed to, uint value);\n\n    function name() external pure returns (string memory);\n    function symbol() external pure returns (string memory);\n    function decimals() external pure returns (uint8);\n    function totalSupply() external view returns (uint);\n    function balanceOf(address owner) external view returns (uint);\n    function allowance(address owner, address spender) external view returns (uint);\n\n    function approve(address spender, uint value) external returns (bool);\n    function transfer(address to, uint value) external returns (bool);\n    function transferFrom(address from, address to, uint value) external returns (bool);\n\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\n    function nonces(address owner) external view returns (uint);\n\n    function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external;\n\n    event Mint(address indexed sender, uint amount0, uint amount1);\n    event Burn(address indexed sender, uint amount0, uint amount1, address indexed to);\n    event Swap(\n        address indexed sender,\n        uint amount0In,\n        uint amount1In,\n        uint amount0Out,\n        uint amount1Out,\n        address indexed to\n    );\n    event Sync(uint112 reserve0, uint112 reserve1);\n\n    function MINIMUM_LIQUIDITY() external pure returns (uint);\n    function factory() external view returns (address);\n    function token0() external view returns (address);\n    function token1() external view returns (address);\n    function getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast);\n    function price0CumulativeLast() external view returns (uint);\n    function price1CumulativeLast() external view returns (uint);\n    function kLast() external view returns (uint);\n\n    function mint(address to) external returns (uint liquidity);\n    function burn(address to) external returns (uint amount0, uint amount1);\n    function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external;\n    function skim(address to) external;\n    function sync() external;\n\n    function initialize(address, address) external;\n}\n\ninterface IUniswapV2Factory {\n    function createPair(address tokenA, address tokenB) external returns (address pair);\n}\n\ninterface IUniswapV2Router02 {\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\n        uint256 amountIn,\n        uint256 amountOutMin,\n        address[] calldata path,\n        address to,\n        uint256 deadline\n    ) external;\n    function swapExactTokensForTokensSupportingFeeOnTransferTokens(\n        uint amountIn,\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external;\n    function factory() external pure returns (address);\n    function WETH() external pure returns (address);\n    function addLiquidityETH(\n        address token,\n        uint256 amountTokenDesired,\n        uint256 amountTokenMin,\n        uint256 amountETHMin,\n        address to,\n        uint256 deadline\n    ) external payable returns (uint256 amountToken, uint256 amountETH, uint256 liquidity);\n    function quote(uint amountA, uint reserveA, uint reserveB) external pure returns (uint amountB);\n    function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) external pure returns (uint amountOut);\n    function getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) external pure returns (uint amountIn);\n    function getAmountsOut(uint amountIn, address[] calldata path) external view returns (uint[] memory amounts);\n    function getAmountsIn(uint amountOut, address[] calldata path) external view returns (uint[] memory amounts);\n}\n\nabstract contract IERC20Extented is IERC20 {\n    function decimals() external view virtual returns (uint8);\n    function name() external view virtual returns (string memory);\n    function symbol() external view virtual returns (string memory);\n}\n\ncontract gainZilla is Context, IERC20, IERC20Extented, Ownable {\n    using SafeMath for uint256;\n    string private constant _name = \"GainZilla\";\n    string private constant _symbol = \"GILLA\";\n    uint8 private constant _decimals = 9;\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n    mapping(address => bool) private _isExcludedFromFee;\n    uint256 private constant _tTotal = 1000000000 * 10**9; // 1 Billion Supply\n    uint256 private _firstBlock;\n    uint256 private _botBlocks;\n    uint256 public _maxWalletAmount = 10000001 * 10**9;\n    uint256 public numTokensToSwap = 1000000 * 10**9; // 0.1% - 1 Million (Swap and Liquify)\n\n    // buy fees\n    uint256 public _buyLiquidityFee = 0; // divided by 1000\n    uint256 private _previousBuyLiquidityFee = _buyLiquidityFee;\n    uint256 public _buyEcosystemFee = 0; // divided by 1000\n    uint256 private _previousBuyEcosystemFee = _buyEcosystemFee;\n    uint256 public _buyMarketingFee = 0; // divided by 1000\n    uint256 private _previousBuyMarketingFee = _buyMarketingFee;\n    uint256 public _buyTeamFee = 0; // divided by 1000\n    uint256 private _previousBuyTeamFee = _buyTeamFee;\n\n    // sell fees\n    uint256 public _sellLiquidityFee = 0; // divided by 1000\n    uint256 private _previousSellLiquidityFee = _sellLiquidityFee;\n    uint256 public _sellEcosystemFee = 0; // divided by 1000\n    uint256 private _previousSellEcosystemFee = _sellEcosystemFee;\n    uint256 public _sellMarketingFee = 0; // divided by 1000\n    uint256 private _previousSellMarketingFee = _sellMarketingFee;\n    uint256 public _sellTeamFee = 0; // divided by 1000\n    uint256 private _previousSellTeamFee = _sellTeamFee;\n    uint256 public transferFeeIncreaseFactor = 0; // divided by 100\n\n    struct FeeBreakdown {\n        uint256 tLiquidity;\n        uint256 tMarketing;\n        uint256 tTeam;\n        uint256 tEcosystem;\n        uint256 tAmount;\n    }\n\n    struct StrongHandsConfig {\n        bool enabled;\n        uint32 duration;\n        mapping(address => uint256) walletList;\n    }\n    StrongHandsConfig public cooldown;\n\n    struct DiamondFloor {\n        bool enabled;\n        uint16 triggerPercentage;\n        uint256 athPrice;\n        bool sellStopped;\n        uint256 blockedAth;\n    }\n    DiamondFloor public diamondFloor;\n\n    mapping(address => bool) private bots;\n    address payable private _marketingAddress = payable(0x000000000000000000000000000000000000dEaD);\n    address payable private _teamAddress = payable(0x000000000000000000000000000000000000dEaD);\n    address payable private _ecosystemAddress = payable(0x000000000000000000000000000000000000dEaD);\n    address payable private _lpRecipient = payable(0x000000000000000000000000000000000000dEaD);\n    IUniswapV2Router02 private uniswapV2Router;\n    address public uniswapV2Pair;\n    uint256 private _maxTxAmount;\n\n    bool public tradingOpen = false;\n    bool private inSwap = false;\n    bool public canPause = true;\n    bool public canBlackList = true;\n    bool public canChangeTax = true;\n\n    event MaxTxAmountUpdated(uint256 _maxTxAmount);\n    event BuyFeesUpdated(uint256 _buyMarketingFee, uint256 _buyLiquidityFee, uint256 _buyTeamFee, uint256 _buyEcosystemFee);\n    event SellFeesUpdated(uint256 _sellMarketingFee, uint256 _sellLiquidityFee, uint256 _sellTeamFee, uint256 _sellEcosystemFee);\n\n    modifier lockTheSwap {\n        inSwap = true;\n        _;\n        inSwap = false;\n    }\n    constructor() {\n        IUniswapV2Router02 _uniswapV2Router = IUniswapV2Router02(0x10ED43C718714eb63d5aA57B78B54704E256024E);\n        uniswapV2Router = _uniswapV2Router;\n        _approve(address(this), address(uniswapV2Router), _tTotal);\n        uniswapV2Pair = IUniswapV2Factory(_uniswapV2Router.factory()).createPair(address(this), _uniswapV2Router.WETH());\n        IERC20(uniswapV2Pair).approve(address(uniswapV2Router),type(uint256).max);\n\n        _maxTxAmount = _tTotal; // start off transaction limit at 100% of total supply\n        _maxWalletAmount = _tTotal; // 100%\n\n        _balances[_msgSender()] = _tTotal;\n        _isExcludedFromFee[owner()] = true;\n        _isExcludedFromFee[address(this)] = true;\n        emit Transfer(address(0), _msgSender(), _tTotal);\n    }\n\n    function name() override external pure returns (string memory) {\n        return _name;\n    }\n\n    function symbol() override external pure returns (string memory) {\n        return _symbol;\n    }\n\n    function decimals() override external pure returns (uint8) {\n        return _decimals;\n    }\n\n    function totalSupply() external pure override returns (uint256) {\n        return _tTotal;\n    }\n\n    function balanceOf(address account) public view override returns (uint256) {\n        return _balances[account];\n    }\n\n    function isBot(address account) public view returns (bool) {\n        return bots[account];\n    }\n    \n    function transfer(address recipient, uint256 amount) external override returns (bool) {\n        _transfer(_msgSender(), recipient, amount);\n        return true;\n    }\n\n    function allowance(address owner, address spender) external view override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    function approve(address spender, uint256 amount) external override returns (bool) {\n        _approve(_msgSender(), spender, amount);\n        return true;\n    }\n\n    function transferFrom(address sender, address recipient, uint256 amount) external override returns (bool) {\n        _transfer(sender, recipient, amount);\n        _approve(sender,_msgSender(),_allowances[sender][_msgSender()].sub(amount,\"ERC20: transfer amount exceeds allowance\"));\n        return true;\n    }\n\n    function removeAllFee() private {\n        _previousBuyMarketingFee = _buyMarketingFee;\n        _previousBuyLiquidityFee = _buyLiquidityFee;\n        _previousBuyTeamFee = _buyTeamFee;\n        _previousBuyEcosystemFee = _buyEcosystemFee;\n        \n        _buyMarketingFee = 0;\n        _buyLiquidityFee = 0;\n        _buyTeamFee = 0;\n        _buyEcosystemFee = 0;\n\n        _previousSellMarketingFee = _sellMarketingFee;\n        _previousSellLiquidityFee = _sellLiquidityFee;\n        _previousSellTeamFee = _sellTeamFee;\n        _previousSellEcosystemFee = _sellEcosystemFee;\n        \n        _sellMarketingFee = 0;\n        _sellLiquidityFee = 0;\n        _sellTeamFee = 0;\n        _sellEcosystemFee = 0;\n    }\n    \n    function restoreAllFee() private {\n        _buyMarketingFee = _previousBuyMarketingFee;\n        _buyLiquidityFee = _previousBuyLiquidityFee;\n        _buyTeamFee = _previousBuyTeamFee;\n        _buyEcosystemFee = _previousBuyEcosystemFee;\n\n        _sellMarketingFee = _previousSellMarketingFee;\n        _sellLiquidityFee = _previousSellLiquidityFee;\n        _sellTeamFee = _previousSellTeamFee;\n        _sellEcosystemFee = _previousSellEcosystemFee;\n    }\n\n    function _approve(address owner, address spender, uint256 amount) private {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n    \n    function _transfer(address from, address to, uint256 amount) private {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n        require(amount > 0, \"Transfer amount must be greater than zero\");\n\n        bool takeFee = true;\n\n        if (from != owner() && to != owner() && from != address(this) && to != address(this)) {\n            require(tradingOpen, \"Trading is not active\");\n            if (from == uniswapV2Pair && to != address(uniswapV2Router)) {//buys\n\n                if (block.timestamp <= _firstBlock.add(_botBlocks)) {\n                    bots[to] = true;\n                }\n                require(balanceOf(to).add(amount) <= _maxWalletAmount, \"wallet balance after transfer must be less than max wallet amount\");\n            }\n            \n            if (!inSwap && from != uniswapV2Pair && to == uniswapV2Pair) { //sells\n                require(!bots[from] && !bots[to]);\n\n                // Added cooldown check here\n                if (cooldown.enabled) {\n                    require(block.timestamp >= cooldown.walletList[from], \"Strong Hands Protocol active\");\n                    cooldown.walletList[from] = block.timestamp + cooldown.duration;\n                }\n\n                // Diamond Floor check\n                if (diamondFloor.enabled) {\n                    require(!diamondFloor.sellStopped, \"Sells stopped by Diamond Floor\");\n                    _checkPriceConditions();\n                }\n                \n                uint256 contractTokenBalance = balanceOf(address(this));\n\n                if (contractTokenBalance >= numTokensToSwap) {\n                    if (contractTokenBalance > 0) {\n                        if (_sellMarketingFee.add(_sellTeamFee).add(_sellEcosystemFee).add(_sellLiquidityFee) > 0) {\n                            uint256 autoLPamount = _sellLiquidityFee.mul(contractTokenBalance).div(_sellMarketingFee.add(_sellTeamFee).add(_sellEcosystemFee).add(_sellLiquidityFee));\n                            uint256 minusLP = 0;\n                            if (contractTokenBalance >= autoLPamount) {\n                                minusLP = contractTokenBalance.sub(autoLPamount);\n                            }\n                            swapAndLiquify(autoLPamount, minusLP);\n                        }\n                    }\n                    uint256 contractETHBalance = address(this).balance;\n                    if (contractETHBalance > 0) {\n                        sendETHToFee(address(this).balance);\n                    }\n                }\n                    \n            }\n\n            if(from != uniswapV2Pair && to != uniswapV2Pair) { //transfers\n                \n                require(balanceOf(to).add(amount) <= _maxWalletAmount, \"wallet balance after transfer must be less than max wallet amount\");\n\n            }\n        }\n\n        if (_isExcludedFromFee[from] || _isExcludedFromFee[to]) {\n            takeFee = false;\n        }\n        \n        _tokenTransfer(from, to, amount, takeFee);\n    }   \n\n    function swapTokensForEth(uint256 tokenAmount) private lockTheSwap {\n        address[] memory path = new address[](2);\n        path[0] = address(this);\n        path[1] = uniswapV2Router.WETH();\n        _approve(address(this), address(uniswapV2Router), tokenAmount);\n        uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount, 0, path, address(this), block.timestamp);\n    }\n\n    function _checkPriceConditions() private {\n        uint256 currentPrice = pairPrice();\n        if (currentPrice == 0) return;\n\n        if (currentPrice > diamondFloor.athPrice) {\n            diamondFloor.athPrice = currentPrice;\n            diamondFloor.sellStopped = false;\n            return;\n        }\n\n        uint256 thresholdPrice = diamondFloor.athPrice\n            .mul(1000).sub(diamondFloor.triggerPercentage)\n            .div(1000);\n\n        if (currentPrice < thresholdPrice) {\n            diamondFloor.sellStopped = true;\n            diamondFloor.blockedAth = diamondFloor.athPrice;\n        }\n\n        if (diamondFloor.sellStopped && currentPrice >= diamondFloor.blockedAth.mul(2)) {\n            diamondFloor.sellStopped = false;\n            diamondFloor.athPrice = currentPrice;\n        }\n    }\n\n    function pairPrice() public view returns (uint256) {\n        (uint112 reserve0, uint112 reserve1,) = IUniswapV2Pair(uniswapV2Pair).getReserves();\n        if (reserve0 == 0 || reserve1 == 0) return 0;\n        \n        return IUniswapV2Pair(uniswapV2Pair).token0() == address(this) ?\n            uint256(reserve1).mul(1e18).div(uint256(reserve0)) :\n            uint256(reserve0).mul(1e18).div(uint256(reserve1));\n    }\n    \n    function addLiquidity(uint256 tokenAmount, uint256 ethAmount) private {\n        _approve(address(this), address(uniswapV2Router), tokenAmount);\n\n        // add the liquidity\n        uniswapV2Router.addLiquidityETH{value: ethAmount}(\n              address(this),\n              tokenAmount,\n              0, // slippage is unavoidable\n              0, // slippage is unavoidable\n              _lpRecipient,\n              block.timestamp\n          );\n    }\n  \n    function swapAndLiquify(uint256 lpAmount, uint256 contractTokenBalance) private lockTheSwap {\n        uint256 half = lpAmount.div(2);\n        uint256 otherHalf = lpAmount.sub(half);\n        uint256 initialBalance = address(this).balance;\n        swapTokensForEth(contractTokenBalance.add(half));\n        uint256 newBalance = address(this).balance.sub(initialBalance);\n        if (otherHalf > 0) {\n            addLiquidity(otherHalf, newBalance.mul(half).div(contractTokenBalance.add(half)));\n        }\n    }\n\n    function sendETHToFee(uint256 amount) private {\n        uint256 totalFees = _sellMarketingFee.add(_sellEcosystemFee).add(_sellTeamFee);\n        if (totalFees != 0) {\n            uint256 marketingPortion = amount.mul(_sellMarketingFee).div(totalFees);\n            uint256 teamPortion = amount.mul(_sellTeamFee).div(totalFees);\n            uint256 ecoPortion = amount.sub(marketingPortion).sub(teamPortion);\n            if (marketingPortion > 0) {\n                _marketingAddress.transfer(marketingPortion);\n            }\n            if (teamPortion > 0) {\n                _teamAddress.transfer(teamPortion);\n            }\n            if (ecoPortion > 0) {\n                _ecosystemAddress.transfer(ecoPortion);\n            }\n        }\n    }\n\n    function openTrading(uint256 botBlocks) external onlyOwner() {\n        _firstBlock = block.timestamp;\n        _botBlocks = botBlocks;\n        tradingOpen = true;\n    }\n\n    function enableToken() external onlyOwner() {\n        tradingOpen = true;\n    }\n\n    function disableToken() external onlyOwner() {\n        require(canPause, \"this contract cannot be paused\");\n        tradingOpen = false;\n    }\n\n    function disablePauseAbility() onlyOwner() external {\n        canPause = false;\n    }\n\n    function manualswap() external onlyOwner() {\n        uint256 contractBalance = balanceOf(address(this));\n        if (contractBalance > 0) {\n            swapTokensForEth(contractBalance);\n        }\n    }\n\n    function manualsend() external onlyOwner() {\n        uint256 contractETHBalance = address(this).balance;\n        if (contractETHBalance > 0) {\n            payable(address(owner())).transfer(contractETHBalance);\n        }\n    }\n\n    function manualSendToken(address token) external onlyOwner() {\n        uint256 amount = IERC20(token).balanceOf(address(this));\n        IERC20(token).transfer(owner(), amount);\n    }\n\n    function _tokenTransfer(address sender, address recipient, uint256 amount, bool takeFee) private {\n        if (!takeFee) { \n                removeAllFee();\n        }\n        _transferStandard(sender, recipient, amount);\n        restoreAllFee();\n    }\n\n    function _transferStandard(address sender, address recipient, uint256 amount) private {\n        FeeBreakdown memory fees;\n        if (sender == uniswapV2Pair && recipient != address(uniswapV2Router)) {//buys\n            fees.tMarketing = amount.mul(_buyMarketingFee).div(1000);\n            fees.tLiquidity = amount.mul(_buyLiquidityFee).div(1000);\n            fees.tTeam = amount.mul(_buyTeamFee).div(1000);\n            fees.tEcosystem = amount.mul(_buyEcosystemFee).div(1000);\n        }\n        if (sender != uniswapV2Pair && recipient == uniswapV2Pair) {//sells\n            fees.tMarketing = amount.mul(_sellMarketingFee).div(1000);\n            fees.tLiquidity = amount.mul(_sellLiquidityFee).div(1000);\n            fees.tTeam = amount.mul(_sellTeamFee).div(1000);\n            fees.tEcosystem = amount.mul(_sellEcosystemFee).div(1000);\n        }\n        if (sender != uniswapV2Pair && recipient != uniswapV2Pair) {//transfer\n            fees.tMarketing = (amount.mul(_sellMarketingFee).div(1000)).mul(transferFeeIncreaseFactor).div(100);\n            fees.tLiquidity = (amount.mul(_sellLiquidityFee).div(1000)).mul(transferFeeIncreaseFactor).div(100);\n            fees.tTeam = (amount.mul(_sellTeamFee).div(1000)).mul(transferFeeIncreaseFactor).div(100);\n            fees.tEcosystem = (amount.mul(_sellEcosystemFee).div(1000)).mul(transferFeeIncreaseFactor).div(100);\n        }\n        \n        fees.tAmount = amount.sub(fees.tMarketing).sub(fees.tLiquidity).sub(fees.tTeam).sub(fees.tEcosystem);\n        \n        _balances[sender] = _balances[sender].sub(amount);\n        _balances[recipient] = _balances[recipient].add(fees.tAmount);\n        _balances[address(this)] = _balances[address(this)].add(fees.tMarketing.add(fees.tLiquidity).add(fees.tTeam).add(fees.tEcosystem));\n        \n        emit Transfer(sender, recipient, fees.tAmount);\n    }\n    \n    receive() external payable {}\n\n    function excludeFromFee(address account) public onlyOwner() {\n        _isExcludedFromFee[account] = true;\n    }\n\n    function includeInFee(address account) external onlyOwner() {\n        _isExcludedFromFee[account] = false;\n    }\n    \n    function removeBot(address account) external onlyOwner() {\n        bots[account] = false;\n    }\n\n    function addBot(address account) external onlyOwner() {\n        require(canBlackList, \"this contract cannot blacklist addresses\");\n        bots[account] = true;\n    }\n\n    function disableBlackListing() onlyOwner() external {\n        canBlackList = false;\n    }\n    \n    function setTransferTransactionMultiplier(uint256 _multiplier) external onlyOwner() {\n        transferFeeIncreaseFactor = _multiplier;\n    }\n\n    function setMaxWalletAmount(uint256 maxWalletAmount) external onlyOwner() {\n        require(maxWalletAmount >= _tTotal.div(1000), \"Amount must be greater than 0.1% of supply\");\n        require(maxWalletAmount <= _tTotal, \"Amount must be less than or equal to totalSupply\");\n        _maxWalletAmount = maxWalletAmount;\n    }\n\n    function setBuyTaxes(uint256 marketingFee, uint256 liquidityFee, uint256 teamFee, uint256 ecosystemFee) external onlyOwner() {\n        uint256 totalFee = marketingFee.add(liquidityFee).add(teamFee).add(ecosystemFee);\n        require(totalFee <= 250, \"Sum of buy fees must be less than or equal to 25%\");\n        require(canChangeTax, \"This function is diabled\");\n\n        _buyMarketingFee = marketingFee;\n        _buyLiquidityFee = liquidityFee;\n        _buyTeamFee = teamFee;\n        _buyEcosystemFee = ecosystemFee;\n        \n        _previousBuyMarketingFee = _buyMarketingFee;\n        _previousBuyLiquidityFee = _buyLiquidityFee;\n        _previousBuyTeamFee = _buyTeamFee;\n        _previousBuyEcosystemFee = _buyEcosystemFee;\n        \n        emit BuyFeesUpdated(marketingFee, liquidityFee, teamFee, ecosystemFee);\n    }\n\n    function setSellTaxes(uint256 marketingFee, uint256 liquidityFee, uint256 teamFee, uint256 ecosystemFee) external onlyOwner() {\n        uint256 totalFee = marketingFee.add(liquidityFee).add(teamFee).add(ecosystemFee);\n        require(totalFee <= 250, \"Sum of sell fees must be less than or equal to 25%\");\n        require(canChangeTax, \"This function is diabled\");\n\n        _sellMarketingFee = marketingFee;\n        _sellLiquidityFee = liquidityFee;\n        _sellTeamFee = teamFee;\n        _sellEcosystemFee = ecosystemFee;\n        \n        _previousSellMarketingFee = _sellMarketingFee;\n        _previousSellLiquidityFee = _sellLiquidityFee;\n        _previousSellTeamFee = _sellTeamFee;\n        _previousSellEcosystemFee = _sellEcosystemFee;\n        \n        emit SellFeesUpdated(marketingFee, liquidityFee, teamFee, ecosystemFee);\n    }\n\n    function disableTaxChange() onlyOwner() external {\n        canChangeTax = false;\n    }\n\n    function updateEcosystemAddress(address payable ecosystemAddress) external onlyOwner() {\n        _ecosystemAddress = ecosystemAddress;\n    }\n    \n    function updateMarketingAddress(address payable marketingAddress) external onlyOwner() {\n        _marketingAddress = marketingAddress;\n    }\n    \n    function updateTeamAddress(address payable teamAddress) external onlyOwner() {\n        _teamAddress = teamAddress;\n    } \n\n    function updateLpRecipient(address payable lpRecipient) external onlyOwner() {\n        _lpRecipient = lpRecipient;\n    }\n\n    function updateNumTokensToSwap(uint256 numTokens) external onlyOwner() {\n        numTokensToSwap = numTokens;\n    }\n\n    function configureStrongHands(bool enabled, uint32 duration) external onlyOwner {\n        cooldown.enabled = enabled;\n        cooldown.duration = duration * 1 minutes;\n    }\n\n    function cooldownRemaining(address account) public view returns (\n        uint256 days_, \n        uint256 hours_, \n        uint256 minutes_, \n        uint256 seconds_\n    ) {\n        uint256 remaining = cooldown.walletList[account] > block.timestamp ? \n            cooldown.walletList[account].sub(block.timestamp) : 0;\n        \n        days_ = remaining.div(86400);\n        remaining %= 86400;\n        hours_ = remaining.div(3600);\n        remaining %= 3600;\n        minutes_ = remaining.div(60);\n        seconds_ = remaining % 60;\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/reference.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/reference.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/reference.sol\":{\"keccak256\":\"0x95615f79915ca5daa2e116c5604720125a710ae75d77e980be056b03df3154ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d33e5b82c7d961caab180b01316340ca188290ae04b9b75cffa08c74065f6b41\",\"dweb:/ipfs/QmUtqSQjf9mAWCrR4qsmPomLhBeXVAgpshYiWGgkXAbNua\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/reference.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/reference.sol\":{\"keccak256\":\"0x95615f79915ca5daa2e116c5604720125a710ae75d77e980be056b03df3154ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d33e5b82c7d961caab180b01316340ca188290ae04b9b75cffa08c74065f6b41\",\"dweb:/ipfs/QmUtqSQjf9mAWCrR4qsmPomLhBeXVAgpshYiWGgkXAbNua\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Extented": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/reference.sol\":\"IERC20Extented\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/reference.sol\":{\"keccak256\":\"0x95615f79915ca5daa2e116c5604720125a710ae75d77e980be056b03df3154ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d33e5b82c7d961caab180b01316340ca188290ae04b9b75cffa08c74065f6b41\",\"dweb:/ipfs/QmUtqSQjf9mAWCrR4qsmPomLhBeXVAgpshYiWGgkXAbNua\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IUniswapV2Factory": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								}
							],
							"name": "createPair",
							"outputs": [
								{
									"internalType": "address",
									"name": "pair",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"createPair(address,address)": "c9c65396"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"createPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/reference.sol\":\"IUniswapV2Factory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/reference.sol\":{\"keccak256\":\"0x95615f79915ca5daa2e116c5604720125a710ae75d77e980be056b03df3154ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d33e5b82c7d961caab180b01316340ca188290ae04b9b75cffa08c74065f6b41\",\"dweb:/ipfs/QmUtqSQjf9mAWCrR4qsmPomLhBeXVAgpshYiWGgkXAbNua\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IUniswapV2Pair": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0In",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1In",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0Out",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1Out",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "Swap",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint112",
									"name": "reserve0",
									"type": "uint112"
								},
								{
									"indexed": false,
									"internalType": "uint112",
									"name": "reserve1",
									"type": "uint112"
								}
							],
							"name": "Sync",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MINIMUM_LIQUIDITY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PERMIT_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getReserves",
							"outputs": [
								{
									"internalType": "uint112",
									"name": "reserve0",
									"type": "uint112"
								},
								{
									"internalType": "uint112",
									"name": "reserve1",
									"type": "uint112"
								},
								{
									"internalType": "uint32",
									"name": "blockTimestampLast",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "kLast",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "price0CumulativeLast",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "price1CumulativeLast",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "skim",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount0Out",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1Out",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "swap",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "sync",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"MINIMUM_LIQUIDITY()": "ba9a7a56",
							"PERMIT_TYPEHASH()": "30adf81f",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(address)": "89afcb44",
							"decimals()": "313ce567",
							"factory()": "c45a0155",
							"getReserves()": "0902f1ac",
							"initialize(address,address)": "485cc955",
							"kLast()": "7464fc3d",
							"mint(address)": "6a627842",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"price0CumulativeLast()": "5909c0d5",
							"price1CumulativeLast()": "5a3d5493",
							"skim(address)": "bc25cf77",
							"swap(uint256,uint256,address,bytes)": "022c0d9f",
							"symbol()": "95d89b41",
							"sync()": "fff6cae9",
							"token0()": "0dfe1681",
							"token1()": "d21220a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0In\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1In\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint112\",\"name\":\"reserve0\",\"type\":\"uint112\"},{\"indexed\":false,\"internalType\":\"uint112\",\"name\":\"reserve1\",\"type\":\"uint112\"}],\"name\":\"Sync\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINIMUM_LIQUIDITY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReserves\",\"outputs\":[{\"internalType\":\"uint112\",\"name\":\"reserve0\",\"type\":\"uint112\"},{\"internalType\":\"uint112\",\"name\":\"reserve1\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"blockTimestampLast\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"kLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price0CumulativeLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price1CumulativeLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"skim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sync\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/reference.sol\":\"IUniswapV2Pair\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/reference.sol\":{\"keccak256\":\"0x95615f79915ca5daa2e116c5604720125a710ae75d77e980be056b03df3154ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d33e5b82c7d961caab180b01316340ca188290ae04b9b75cffa08c74065f6b41\",\"dweb:/ipfs/QmUtqSQjf9mAWCrR4qsmPomLhBeXVAgpshYiWGgkXAbNua\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IUniswapV2Router02": {
					"abi": [
						{
							"inputs": [],
							"name": "WETH",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountIn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountOut",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsIn",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsOut",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveB",
									"type": "uint256"
								}
							],
							"name": "quote",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForETHSupportingFeeOnTransferTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForTokensSupportingFeeOnTransferTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"WETH()": "ad5c4648",
							"addLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "f305d719",
							"factory()": "c45a0155",
							"getAmountIn(uint256,uint256,uint256)": "85f8c259",
							"getAmountOut(uint256,uint256,uint256)": "054d50d4",
							"getAmountsIn(uint256,address[])": "1f00ca74",
							"getAmountsOut(uint256,address[])": "d06ca61f",
							"quote(uint256,uint256,uint256)": "ad615dec",
							"swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)": "791ac947",
							"swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)": "5c11d795"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsOut\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveB\",\"type\":\"uint256\"}],\"name\":\"quote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETHSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokensSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/reference.sol\":\"IUniswapV2Router02\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/reference.sol\":{\"keccak256\":\"0x95615f79915ca5daa2e116c5604720125a710ae75d77e980be056b03df3154ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d33e5b82c7d961caab180b01316340ca188290ae04b9b75cffa08c74065f6b41\",\"dweb:/ipfs/QmUtqSQjf9mAWCrR4qsmPomLhBeXVAgpshYiWGgkXAbNua\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/reference.sol\":2611:4000  contract Ownable is Context {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/reference.sol\":2799:2948  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/reference.sol\":2823:2840  address msgSender */\n  0x00\n    /* \"contracts/reference.sol\":2865:2883  _owner = msgSender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"contracts/reference.sol\":818:828  msg.sender */\n  caller\n    /* \"contracts/reference.sol\":2865:2883  _owner = msgSender */\n  swap1\n  dup2\n  or\n  dup3\n  sstore\n    /* \"contracts/reference.sol\":2898:2941  OwnershipTransferred(address(0), msgSender) */\n  mload(0x40)\n    /* \"contracts/reference.sol\":818:828  msg.sender */\n  swap1\n  swap2\n  dup3\n  swap2\n    /* \"contracts/reference.sol\":2898:2941  OwnershipTransferred(address(0), msgSender) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"contracts/reference.sol\":2823:2840  address msgSender */\n  dup3\n  swap1\n    /* \"contracts/reference.sol\":2898:2941  OwnershipTransferred(address(0), msgSender) */\n  log3\n    /* \"contracts/reference.sol\":2799:2948  constructor() {... */\n  pop\n    /* \"contracts/reference.sol\":2611:4000  contract Ownable is Context {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/reference.sol\":2611:4000  contract Ownable is Context {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/reference.sol\":3851:3998  function renounceOwnership() public virtual onlyOwner() {... */\n    tag_3:\n      tag_6\n      tag_7\n      jump\t// in\n    tag_6:\n      stop\n        /* \"contracts/reference.sol\":2954:3031  function owner() public view returns (address) {... */\n    tag_4:\n        /* \"contracts/reference.sol\":2992:2999  address */\n      0x00\n        /* \"contracts/reference.sol\":3018:3024  _owner */\n      sload\n        /* \"contracts/reference.sol\":2954:3031  function owner() public view returns (address) {... */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/reference.sol\":3018:3024  _owner */\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":471:522   */\n      dup3\n      mstore\n        /* \"contracts/reference.sol\":2954:3031  function owner() public view returns (address) {... */\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n        /* \"#utility.yul\":459:461   */\n      0x20\n        /* \"contracts/reference.sol\":2954:3031  function owner() public view returns (address) {... */\n      add\n      swap1\n      return\n        /* \"contracts/reference.sol\":3302:3500  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_5:\n      tag_6\n      tag_13\n      calldatasize\n      0x04\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n        /* \"contracts/reference.sol\":3851:3998  function renounceOwnership() public virtual onlyOwner() {... */\n    tag_7:\n        /* \"contracts/reference.sol\":3076:3082  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/reference.sol\":818:828  msg.sender */\n      caller\n        /* \"contracts/reference.sol\":3076:3098  _owner == _msgSender() */\n      eq\n        /* \"contracts/reference.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_19\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1142:1144   */\n      0x20\n        /* \"contracts/reference.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1124:1145   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":1161:1179   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1154:1184   */\n      mstore\n        /* \"#utility.yul\":1220:1254   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":1200:1218   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1193:1255   */\n      mstore\n        /* \"#utility.yul\":1272:1290   */\n      0x64\n      add\n        /* \"contracts/reference.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_19:\n        /* \"contracts/reference.sol\":3959:3960  0 */\n      0x00\n        /* \"contracts/reference.sol\":3943:3949  _owner */\n      dup1\n      sload\n        /* \"contracts/reference.sol\":3922:3962  OwnershipTransferred(_owner, address(0)) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/reference.sol\":3943:3949  _owner */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/reference.sol\":3922:3962  OwnershipTransferred(_owner, address(0)) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"contracts/reference.sol\":3959:3960  0 */\n      dup4\n      swap1\n        /* \"contracts/reference.sol\":3922:3962  OwnershipTransferred(_owner, address(0)) */\n      log3\n        /* \"contracts/reference.sol\":3989:3990  0 */\n      0x00\n        /* \"contracts/reference.sol\":3972:3991  _owner = address(0) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      sstore\n        /* \"contracts/reference.sol\":3851:3998  function renounceOwnership() public virtual onlyOwner() {... */\n      jump\t// out\n        /* \"contracts/reference.sol\":3302:3500  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_15:\n        /* \"contracts/reference.sol\":3076:3082  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/reference.sol\":818:828  msg.sender */\n      caller\n        /* \"contracts/reference.sol\":3076:3098  _owner == _msgSender() */\n      eq\n        /* \"contracts/reference.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_26\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1142:1144   */\n      0x20\n        /* \"contracts/reference.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1124:1145   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":1161:1179   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1154:1184   */\n      mstore\n        /* \"#utility.yul\":1220:1254   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":1200:1218   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1193:1255   */\n      mstore\n        /* \"#utility.yul\":1272:1290   */\n      0x64\n      add\n        /* \"contracts/reference.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_20\n        /* \"#utility.yul\":1114:1296   */\n      jump\n        /* \"contracts/reference.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n    tag_26:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/reference.sol\":3390:3412  newOwner != address(0) */\n      dup2\n      and\n        /* \"contracts/reference.sol\":3382:3455  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_29\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":735:737   */\n      0x20\n        /* \"contracts/reference.sol\":3382:3455  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":717:738   */\n      mstore\n        /* \"#utility.yul\":774:776   */\n      0x26\n        /* \"#utility.yul\":754:772   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":747:777   */\n      mstore\n        /* \"#utility.yul\":813:847   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":793:811   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":786:848   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":864:882   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":857:893   */\n      mstore\n        /* \"#utility.yul\":910:929   */\n      0x84\n      add\n        /* \"contracts/reference.sol\":3382:3455  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_20\n        /* \"#utility.yul\":707:935   */\n      jump\n        /* \"contracts/reference.sol\":3382:3455  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_29:\n        /* \"contracts/reference.sol\":3465:3493  _transferOwnership(newOwner) */\n      tag_32\n        /* \"contracts/reference.sol\":3484:3492  newOwner */\n      dup2\n        /* \"contracts/reference.sol\":3465:3483  _transferOwnership */\n      tag_33\n        /* \"contracts/reference.sol\":3465:3493  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_32:\n        /* \"contracts/reference.sol\":3302:3500  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/reference.sol\":3654:3841  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_33:\n        /* \"contracts/reference.sol\":3727:3743  address oldOwner */\n      0x00\n        /* \"contracts/reference.sol\":3746:3752  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/reference.sol\":3762:3779  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"contracts/reference.sol\":3794:3834  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"contracts/reference.sol\":3746:3752  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"contracts/reference.sol\":3794:3834  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"contracts/reference.sol\":3727:3743  address oldOwner */\n      swap1\n        /* \"contracts/reference.sol\":3794:3834  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"contracts/reference.sol\":3654:3841  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:320   */\n    tag_14:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:96   */\n      iszero\n      tag_38\n      jumpi\n        /* \"#utility.yul\":147:153   */\n      dup1\n        /* \"#utility.yul\":139:145   */\n      dup2\n        /* \"#utility.yul\":132:154   */\n      revert\n        /* \"#utility.yul\":94:96   */\n    tag_38:\n        /* \"#utility.yul\":178:201   */\n      dup2\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":230:261   */\n      dup2\n      and\n        /* \"#utility.yul\":220:262   */\n      dup2\n      eq\n        /* \"#utility.yul\":210:212   */\n      tag_39\n      jumpi\n        /* \"#utility.yul\":281:287   */\n      dup2\n        /* \"#utility.yul\":273:279   */\n      dup3\n        /* \"#utility.yul\":266:288   */\n      revert\n        /* \"#utility.yul\":210:212   */\n    tag_39:\n        /* \"#utility.yul\":309:314   */\n      swap4\n        /* \"#utility.yul\":84:320   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122047f22ea1c6a74f6bcc6e05fd069fb0b56340e2364566f73ef350c46724eaacd664736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3506102aa806100616000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063715018a6146100465780638da5cb5b14610050578063f2fde38b1461006f575b600080fd5b61004e610082565b005b600054604080516001600160a01b039092168252519081900360200190f35b61004e61007d366004610246565b61012b565b6000546001600160a01b031633146100e15760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146101855760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016100d8565b6001600160a01b0381166101ea5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016100d8565b6101f3816101f6565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600060208284031215610257578081fd5b81356001600160a01b038116811461026d578182fd5b939250505056fea264697066735822122047f22ea1c6a74f6bcc6e05fd069fb0b56340e2364566f73ef350c46724eaacd664736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP1 SWAP2 DUP3 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP3 SWAP1 LOG3 POP PUSH2 0x2AA DUP1 PUSH2 0x61 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x82 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x4E PUSH2 0x7D CALLDATASIZE PUSH1 0x4 PUSH2 0x246 JUMP JUMPDEST PUSH2 0x12B JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xE1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x185 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xD8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xD8 JUMP JUMPDEST PUSH2 0x1F3 DUP2 PUSH2 0x1F6 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x257 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x26D JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFBALANCE CALLCODE 0x2E LOG1 0xC6 0xA7 0x4F PUSH12 0xCC6E05FD069FB0B56340E236 GASLIMIT PUSH7 0xF73EF350C46724 0xEA 0xAC 0xD6 PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ",
							"sourceMap": "2611:1389:0:-:0;;;2799:149;;;;;;;;;-1:-1:-1;2823:17:0;2865:18;;-1:-1:-1;;;;;;2865:18:0;818:10;2865:18;;;;;2898:43;;818:10;;;;2898:43;;2823:17;;2898:43;2799:149;2611:1389;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1298:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "84:236:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "130:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "139:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "147:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "132:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "132:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "126:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "97:32:1"
															},
															"nodeType": "YulIf",
															"src": "94:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "165:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "191:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "178:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "178:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "169:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "264:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "273:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "281:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "266:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "266:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "266:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "223:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "234:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "249:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "254:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "245:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "245:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "258:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "241:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "241:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "230:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "230:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "220:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "220:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "213:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "213:50:1"
															},
															"nodeType": "YulIf",
															"src": "210:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "299:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "309:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "299:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "50:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "61:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "73:6:1",
														"type": ""
													}
												],
												"src": "14:306:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "426:102:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "436:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "448:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "459:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "444:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "444:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "436:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "478:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "493:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "509:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "514:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "505:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "505:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "518:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "501:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "501:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "489:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "489:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "471:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "471:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "471:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "395:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "406:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "417:4:1",
														"type": ""
													}
												],
												"src": "325:203:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "707:228:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "724:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "735:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "717:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "717:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "717:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "758:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "769:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "754:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "754:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "774:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "747:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "747:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "747:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "797:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "808:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "793:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "793:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "813:34:1",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "786:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "786:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "786:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "868:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "879:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "864:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "864:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "884:8:1",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "857:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "857:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "857:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "902:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "914:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "925:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "910:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "910:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "902:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "684:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "698:4:1",
														"type": ""
													}
												],
												"src": "533:402:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1114:182:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1131:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1142:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1124:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1124:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1124:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1165:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1176:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1161:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1161:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1181:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1154:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1154:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1204:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1215:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1200:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1200:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1220:34:1",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1193:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1193:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1193:62:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1264:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1276:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1287:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1272:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1264:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1091:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1105:4:1",
														"type": ""
													}
												],
												"src": "940:356:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c8063715018a6146100465780638da5cb5b14610050578063f2fde38b1461006f575b600080fd5b61004e610082565b005b600054604080516001600160a01b039092168252519081900360200190f35b61004e61007d366004610246565b61012b565b6000546001600160a01b031633146100e15760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146101855760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016100d8565b6001600160a01b0381166101ea5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016100d8565b6101f3816101f6565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600060208284031215610257578081fd5b81356001600160a01b038116811461026d578182fd5b939250505056fea264697066735822122047f22ea1c6a74f6bcc6e05fd069fb0b56340e2364566f73ef350c46724eaacd664736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x82 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x4E PUSH2 0x7D CALLDATASIZE PUSH1 0x4 PUSH2 0x246 JUMP JUMPDEST PUSH2 0x12B JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xE1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x185 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xD8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xD8 JUMP JUMPDEST PUSH2 0x1F3 DUP2 PUSH2 0x1F6 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x257 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x26D JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFBALANCE CALLCODE 0x2E LOG1 0xC6 0xA7 0x4F PUSH12 0xCC6E05FD069FB0B56340E236 GASLIMIT PUSH7 0xF73EF350C46724 0xEA 0xAC 0xD6 PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ",
							"sourceMap": "2611:1389:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3851:147;;;:::i;:::-;;2954:77;2992:7;3018:6;2954:77;;;-1:-1:-1;;;;;3018:6:0;;;471:51:1;;2954:77:0;;;;;459:2:1;2954:77:0;;;3302:198;;;;;;:::i;:::-;;:::i;3851:147::-;3076:6;;-1:-1:-1;;;;;3076:6:0;818:10;3076:22;3068:67;;;;-1:-1:-1;;;3068:67:0;;1142:2:1;3068:67:0;;;1124:21:1;;;1161:18;;;1154:30;1220:34;1200:18;;;1193:62;1272:18;;3068:67:0;;;;;;;;;3959:1:::1;3943:6:::0;;3922:40:::1;::::0;-1:-1:-1;;;;;3943:6:0;;::::1;::::0;3922:40:::1;::::0;3959:1;;3922:40:::1;3989:1;3972:19:::0;;-1:-1:-1;;;;;;3972:19:0::1;::::0;;3851:147::o;3302:198::-;3076:6;;-1:-1:-1;;;;;3076:6:0;818:10;3076:22;3068:67;;;;-1:-1:-1;;;3068:67:0;;1142:2:1;3068:67:0;;;1124:21:1;;;1161:18;;;1154:30;1220:34;1200:18;;;1193:62;1272:18;;3068:67:0;1114:182:1;3068:67:0;-1:-1:-1;;;;;3390:22:0;::::1;3382:73;;;::::0;-1:-1:-1;;;3382:73:0;;735:2:1;3382:73:0::1;::::0;::::1;717:21:1::0;774:2;754:18;;;747:30;813:34;793:18;;;786:62;-1:-1:-1;;;864:18:1;;;857:36;910:19;;3382:73:0::1;707:228:1::0;3382:73:0::1;3465:28;3484:8;3465:18;:28::i;:::-;3302:198:::0;:::o;3654:187::-;3727:16;3746:6;;-1:-1:-1;;;;;3762:17:0;;;-1:-1:-1;;;;;;3762:17:0;;;;;;3794:40;;3746:6;;;;;;;3794:40;;3727:16;3794:40;3654:187;;:::o;14:306:1:-;73:6;126:2;114:9;105:7;101:23;97:32;94:2;;;147:6;139;132:22;94:2;178:23;;-1:-1:-1;;;;;230:31:1;;220:42;;210:2;;281:6;273;266:22;210:2;309:5;84:236;-1:-1:-1;;;84:236:1:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "136400",
								"executionCost": "22556",
								"totalCost": "158956"
							},
							"external": {
								"owner()": "992",
								"renounceOwnership()": "24143",
								"transferOwnership(address)": "23596"
							},
							"internal": {
								"_transferOwnership(address)": "22421"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 2611,
									"end": 4000,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 2611,
									"end": 4000,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2611,
									"end": 4000,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2799,
									"end": 2948,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 2799,
									"end": 2948,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2799,
									"end": 2948,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 2799,
									"end": 2948,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 2799,
									"end": 2948,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 2799,
									"end": 2948,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2799,
									"end": 2948,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2799,
									"end": 2948,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 2799,
									"end": 2948,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 2799,
									"end": 2948,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2823,
									"end": 2840,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2865,
									"end": 2883,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2865,
									"end": 2883,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2865,
									"end": 2883,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 818,
									"end": 828,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 2865,
									"end": 2883,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2865,
									"end": 2883,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2865,
									"end": 2883,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2865,
									"end": 2883,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2865,
									"end": 2883,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2898,
									"end": 2941,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2898,
									"end": 2941,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 818,
									"end": 828,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 818,
									"end": 828,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 818,
									"end": 828,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 818,
									"end": 828,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2898,
									"end": 2941,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2898,
									"end": 2941,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2823,
									"end": 2840,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2823,
									"end": 2840,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2898,
									"end": 2941,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2799,
									"end": 2948,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2611,
									"end": 4000,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2611,
									"end": 4000,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2611,
									"end": 4000,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2611,
									"end": 4000,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2611,
									"end": 4000,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 2611,
									"end": 4000,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2611,
									"end": 4000,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122047f22ea1c6a74f6bcc6e05fd069fb0b56340e2364566f73ef350c46724eaacd664736f6c63430008040033",
									".code": [
										{
											"begin": 2611,
											"end": 4000,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2611,
											"end": 4000,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2611,
											"end": 4000,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2611,
											"end": 4000,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2611,
											"end": 4000,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2611,
											"end": 4000,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2611,
											"end": 4000,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2611,
											"end": 4000,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2611,
											"end": 4000,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2611,
											"end": 4000,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2611,
											"end": 4000,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2611,
											"end": 4000,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2611,
											"end": 4000,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2611,
											"end": 4000,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2611,
											"end": 4000,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2611,
											"end": 4000,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2611,
											"end": 4000,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2611,
											"end": 4000,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2611,
											"end": 4000,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2611,
											"end": 4000,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2611,
											"end": 4000,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 2611,
											"end": 4000,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 2611,
											"end": 4000,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 2611,
											"end": 4000,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2611,
											"end": 4000,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 2611,
											"end": 4000,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2611,
											"end": 4000,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2611,
											"end": 4000,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2611,
											"end": 4000,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2611,
											"end": 4000,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 2611,
											"end": 4000,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2611,
											"end": 4000,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2611,
											"end": 4000,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2611,
											"end": 4000,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2611,
											"end": 4000,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 2611,
											"end": 4000,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2611,
											"end": 4000,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2611,
											"end": 4000,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2611,
											"end": 4000,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2611,
											"end": 4000,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2611,
											"end": 4000,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2611,
											"end": 4000,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2611,
											"end": 4000,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3851,
											"end": 3998,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3851,
											"end": 3998,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3851,
											"end": 3998,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3851,
											"end": 3998,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3851,
											"end": 3998,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3851,
											"end": 3998,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3851,
											"end": 3998,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3851,
											"end": 3998,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 3031,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2954,
											"end": 3031,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2992,
											"end": 2999,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3018,
											"end": 3024,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 3031,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2954,
											"end": 3031,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 3031,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3018,
											"end": 3024,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3024,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3024,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 471,
											"end": 522,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 471,
											"end": 522,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 3031,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 3031,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 3031,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 3031,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 3031,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 459,
											"end": 461,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 3031,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 3031,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 3031,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3302,
											"end": 3500,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3302,
											"end": 3500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3302,
											"end": 3500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3302,
											"end": 3500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 3302,
											"end": 3500,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3302,
											"end": 3500,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3302,
											"end": 3500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 3302,
											"end": 3500,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3302,
											"end": 3500,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 3302,
											"end": 3500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3302,
											"end": 3500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 3302,
											"end": 3500,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3851,
											"end": 3998,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3851,
											"end": 3998,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 818,
											"end": 828,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3098,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1142,
											"end": 1144,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1124,
											"end": 1145,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1124,
											"end": 1145,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1124,
											"end": 1145,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1161,
											"end": 1179,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1161,
											"end": 1179,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1161,
											"end": 1179,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1154,
											"end": 1184,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1220,
											"end": 1254,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1200,
											"end": 1218,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1200,
											"end": 1218,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1200,
											"end": 1218,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1193,
											"end": 1255,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1272,
											"end": 1290,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1272,
											"end": 1290,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3959,
											"end": 3960,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3943,
											"end": 3949,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3943,
											"end": 3949,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3922,
											"end": 3962,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3922,
											"end": 3962,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3943,
											"end": 3949,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3943,
											"end": 3949,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3943,
											"end": 3949,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3943,
											"end": 3949,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3922,
											"end": 3962,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3922,
											"end": 3962,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3959,
											"end": 3960,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3959,
											"end": 3960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3922,
											"end": 3962,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 3989,
											"end": 3990,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3972,
											"end": 3991,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3972,
											"end": 3991,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3972,
											"end": 3991,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3972,
											"end": 3991,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3972,
											"end": 3991,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3851,
											"end": 3998,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3302,
											"end": 3500,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 3302,
											"end": 3500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 818,
											"end": 828,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3098,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1142,
											"end": 1144,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1124,
											"end": 1145,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1124,
											"end": 1145,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1124,
											"end": 1145,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1161,
											"end": 1179,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1161,
											"end": 1179,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1161,
											"end": 1179,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1154,
											"end": 1184,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1220,
											"end": 1254,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1200,
											"end": 1218,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1200,
											"end": 1218,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1200,
											"end": 1218,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1193,
											"end": 1255,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1272,
											"end": 1290,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1272,
											"end": 1290,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1114,
											"end": 1296,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3390,
											"end": 3412,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3390,
											"end": 3412,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 3382,
											"end": 3455,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3455,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3382,
											"end": 3455,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3382,
											"end": 3455,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3455,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 735,
											"end": 737,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3382,
											"end": 3455,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3382,
											"end": 3455,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3455,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 717,
											"end": 738,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 774,
											"end": 776,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 754,
											"end": 772,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 754,
											"end": 772,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 754,
											"end": 772,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 747,
											"end": 777,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 813,
											"end": 847,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 793,
											"end": 811,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 793,
											"end": 811,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 793,
											"end": 811,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 786,
											"end": 848,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 864,
											"end": 882,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 864,
											"end": 882,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 864,
											"end": 882,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 857,
											"end": 893,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 910,
											"end": 929,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 910,
											"end": 929,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3382,
											"end": 3455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 707,
											"end": 935,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3382,
											"end": 3455,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 3382,
											"end": 3455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3465,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 3484,
											"end": 3492,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3465,
											"end": 3483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 3465,
											"end": 3493,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3465,
											"end": 3493,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 3465,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3302,
											"end": 3500,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3302,
											"end": 3500,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3654,
											"end": 3841,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 3654,
											"end": 3841,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3727,
											"end": 3743,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3746,
											"end": 3752,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3746,
											"end": 3752,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3762,
											"end": 3779,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3779,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3779,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3762,
											"end": 3779,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3779,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3779,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3779,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3779,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3779,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3794,
											"end": 3834,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3794,
											"end": 3834,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3746,
											"end": 3752,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3746,
											"end": 3752,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3746,
											"end": 3752,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3746,
											"end": 3752,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3746,
											"end": 3752,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3746,
											"end": 3752,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3746,
											"end": 3752,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3794,
											"end": 3834,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3794,
											"end": 3834,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3727,
											"end": 3743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3794,
											"end": 3834,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 3654,
											"end": 3841,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3654,
											"end": 3841,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3654,
											"end": 3841,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 320,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 14,
											"end": 320,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 94,
											"end": 96,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 94,
											"end": 96,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 94,
											"end": 96,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 147,
											"end": 153,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 139,
											"end": 145,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 132,
											"end": 154,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 94,
											"end": 96,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 94,
											"end": 96,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 178,
											"end": 201,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 178,
											"end": 201,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 230,
											"end": 261,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 230,
											"end": 261,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 220,
											"end": 262,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 220,
											"end": 262,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 210,
											"end": 212,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 210,
											"end": 212,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 281,
											"end": 287,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 273,
											"end": 279,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 266,
											"end": 288,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 210,
											"end": 212,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 210,
											"end": 212,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 309,
											"end": 314,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 84,
											"end": 320,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 84,
											"end": 320,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/reference.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/reference.sol\":{\"keccak256\":\"0x95615f79915ca5daa2e116c5604720125a710ae75d77e980be056b03df3154ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d33e5b82c7d961caab180b01316340ca188290ae04b9b75cffa08c74065f6b41\",\"dweb:/ipfs/QmUtqSQjf9mAWCrR4qsmPomLhBeXVAgpshYiWGgkXAbNua\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 228,
								"contract": "contracts/reference.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 230,
								"contract": "contracts/reference.sol:Ownable",
								"label": "_previousOwner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/reference.sol\":1505:2609  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/reference.sol\":1505:2609  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220d3f631af9b4fca892fc068aa7fc43969ba5f3d4417f03042aa87e7202020fc6f64736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d3f631af9b4fca892fc068aa7fc43969ba5f3d4417f03042aa87e7202020fc6f64736f6c63430008040033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD3 0xF6 BALANCE 0xAF SWAP12 0x4F 0xCA DUP10 0x2F 0xC0 PUSH9 0xAA7FC43969BA5F3D44 OR CREATE ADDRESS TIMESTAMP 0xAA DUP8 0xE7 KECCAK256 KECCAK256 KECCAK256 0xFC PUSH16 0x64736F6C634300080400330000000000 ",
							"sourceMap": "1505:1104:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1505:1104:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d3f631af9b4fca892fc068aa7fc43969ba5f3d4417f03042aa87e7202020fc6f64736f6c63430008040033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD3 0xF6 BALANCE 0xAF SWAP12 0x4F 0xCA DUP10 0x2F 0xC0 PUSH9 0xAA7FC43969BA5F3D44 OR CREATE ADDRESS TIMESTAMP 0xAA DUP8 0xE7 KECCAK256 KECCAK256 KECCAK256 0xFC PUSH16 0x64736F6C634300080400330000000000 ",
							"sourceMap": "1505:1104:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1505,
									"end": 2609,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1505,
									"end": 2609,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1505,
									"end": 2609,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 1505,
									"end": 2609,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1505,
									"end": 2609,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1505,
									"end": 2609,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1505,
									"end": 2609,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1505,
									"end": 2609,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1505,
									"end": 2609,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1505,
									"end": 2609,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1505,
									"end": 2609,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 1505,
									"end": 2609,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 1505,
									"end": 2609,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 1505,
									"end": 2609,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1505,
									"end": 2609,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1505,
									"end": 2609,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1505,
									"end": 2609,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1505,
									"end": 2609,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1505,
									"end": 2609,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1505,
									"end": 2609,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1505,
									"end": 2609,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 1505,
									"end": 2609,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1505,
									"end": 2609,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1505,
									"end": 2609,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1505,
									"end": 2609,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1505,
									"end": 2609,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 1505,
									"end": 2609,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1505,
									"end": 2609,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1505,
									"end": 2609,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 1505,
									"end": 2609,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1505,
									"end": 2609,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 1505,
									"end": 2609,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1505,
									"end": 2609,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1505,
									"end": 2609,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d3f631af9b4fca892fc068aa7fc43969ba5f3d4417f03042aa87e7202020fc6f64736f6c63430008040033",
									".code": [
										{
											"begin": 1505,
											"end": 2609,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 1505,
											"end": 2609,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 1505,
											"end": 2609,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1505,
											"end": 2609,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1505,
											"end": 2609,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1505,
											"end": 2609,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1505,
											"end": 2609,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1505,
											"end": 2609,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1505,
											"end": 2609,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/reference.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/reference.sol\":{\"keccak256\":\"0x95615f79915ca5daa2e116c5604720125a710ae75d77e980be056b03df3154ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d33e5b82c7d961caab180b01316340ca188290ae04b9b75cffa08c74065f6b41\",\"dweb:/ipfs/QmUtqSQjf9mAWCrR4qsmPomLhBeXVAgpshYiWGgkXAbNua\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"gainZilla": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_buyMarketingFee",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_buyLiquidityFee",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_buyTeamFee",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_buyEcosystemFee",
									"type": "uint256"
								}
							],
							"name": "BuyFeesUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_maxTxAmount",
									"type": "uint256"
								}
							],
							"name": "MaxTxAmountUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_sellMarketingFee",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_sellLiquidityFee",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_sellTeamFee",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_sellEcosystemFee",
									"type": "uint256"
								}
							],
							"name": "SellFeesUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "_buyEcosystemFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_buyLiquidityFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_buyMarketingFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_buyTeamFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_maxWalletAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_sellEcosystemFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_sellLiquidityFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_sellMarketingFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_sellTeamFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "addBot",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "canBlackList",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "canChangeTax",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "canPause",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "enabled",
									"type": "bool"
								},
								{
									"internalType": "uint32",
									"name": "duration",
									"type": "uint32"
								}
							],
							"name": "configureStrongHands",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "cooldown",
							"outputs": [
								{
									"internalType": "bool",
									"name": "enabled",
									"type": "bool"
								},
								{
									"internalType": "uint32",
									"name": "duration",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "cooldownRemaining",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "days_",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "hours_",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "minutes_",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "seconds_",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "diamondFloor",
							"outputs": [
								{
									"internalType": "bool",
									"name": "enabled",
									"type": "bool"
								},
								{
									"internalType": "uint16",
									"name": "triggerPercentage",
									"type": "uint16"
								},
								{
									"internalType": "uint256",
									"name": "athPrice",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "sellStopped",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "blockedAth",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "disableBlackListing",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "disablePauseAbility",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "disableTaxChange",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "disableToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "enableToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "excludeFromFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "includeInFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "isBot",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "manualSendToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "manualsend",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "manualswap",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "numTokensToSwap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "botBlocks",
									"type": "uint256"
								}
							],
							"name": "openTrading",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pairPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "removeBot",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "marketingFee",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidityFee",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "teamFee",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "ecosystemFee",
									"type": "uint256"
								}
							],
							"name": "setBuyTaxes",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "maxWalletAmount",
									"type": "uint256"
								}
							],
							"name": "setMaxWalletAmount",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "marketingFee",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidityFee",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "teamFee",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "ecosystemFee",
									"type": "uint256"
								}
							],
							"name": "setSellTaxes",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_multiplier",
									"type": "uint256"
								}
							],
							"name": "setTransferTransactionMultiplier",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tradingOpen",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "transferFeeIncreaseFactor",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "uniswapV2Pair",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "ecosystemAddress",
									"type": "address"
								}
							],
							"name": "updateEcosystemAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "lpRecipient",
									"type": "address"
								}
							],
							"name": "updateLpRecipient",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "marketingAddress",
									"type": "address"
								}
							],
							"name": "updateMarketingAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "numTokens",
									"type": "uint256"
								}
							],
							"name": "updateNumTokensToSwap",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "teamAddress",
									"type": "address"
								}
							],
							"name": "updateTeamAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/reference.sol\":8181:29342  contract gainZilla is Context, IERC20, IERC20Extented, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/reference.sol\":8780:8796  10000001 * 10**9 */\n  0x2386f2ab5bca00\n    /* \"contracts/reference.sol\":8746:8796  uint256 public _maxWalletAmount = 10000001 * 10**9 */\n  0x07\n  sstore\n    /* \"contracts/reference.sol\":8835:8850  1000000 * 10**9 */\n  0x038d7ea4c68000\n    /* \"contracts/reference.sol\":8802:8850  uint256 public numTokensToSwap = 1000000 * 10**9 */\n  0x08\n  sstore\n  0x00\n    /* \"contracts/reference.sol\":8912:8947  uint256 public _buyLiquidityFee = 0 */\n  0x09\n  dup2\n  swap1\n  sstore\n    /* \"contracts/reference.sol\":8972:9031  uint256 private _previousBuyLiquidityFee = _buyLiquidityFee */\n  0x0a\n  dup2\n  swap1\n  sstore\n    /* \"contracts/reference.sol\":9037:9072  uint256 public _buyEcosystemFee = 0 */\n  0x0b\n  dup2\n  swap1\n  sstore\n    /* \"contracts/reference.sol\":9097:9156  uint256 private _previousBuyEcosystemFee = _buyEcosystemFee */\n  0x0c\n  dup2\n  swap1\n  sstore\n    /* \"contracts/reference.sol\":9162:9197  uint256 public _buyMarketingFee = 0 */\n  0x0d\n  dup2\n  swap1\n  sstore\n    /* \"contracts/reference.sol\":9222:9281  uint256 private _previousBuyMarketingFee = _buyMarketingFee */\n  0x0e\n  dup2\n  swap1\n  sstore\n    /* \"contracts/reference.sol\":9287:9317  uint256 public _buyTeamFee = 0 */\n  0x0f\n  dup2\n  swap1\n  sstore\n    /* \"contracts/reference.sol\":9342:9391  uint256 private _previousBuyTeamFee = _buyTeamFee */\n  0x10\n  dup2\n  swap1\n  sstore\n    /* \"contracts/reference.sol\":9415:9451  uint256 public _sellLiquidityFee = 0 */\n  0x11\n  dup2\n  swap1\n  sstore\n    /* \"contracts/reference.sol\":9476:9537  uint256 private _previousSellLiquidityFee = _sellLiquidityFee */\n  0x12\n  dup2\n  swap1\n  sstore\n    /* \"contracts/reference.sol\":9543:9579  uint256 public _sellEcosystemFee = 0 */\n  0x13\n  dup2\n  swap1\n  sstore\n    /* \"contracts/reference.sol\":9604:9665  uint256 private _previousSellEcosystemFee = _sellEcosystemFee */\n  0x14\n  dup2\n  swap1\n  sstore\n    /* \"contracts/reference.sol\":9671:9707  uint256 public _sellMarketingFee = 0 */\n  0x15\n  dup2\n  swap1\n  sstore\n    /* \"contracts/reference.sol\":9732:9793  uint256 private _previousSellMarketingFee = _sellMarketingFee */\n  0x16\n  dup2\n  swap1\n  sstore\n    /* \"contracts/reference.sol\":9799:9830  uint256 public _sellTeamFee = 0 */\n  0x17\n  dup2\n  swap1\n  sstore\n    /* \"contracts/reference.sol\":9855:9906  uint256 private _previousSellTeamFee = _sellTeamFee */\n  0x18\n  dup2\n  swap1\n  sstore\n    /* \"contracts/reference.sol\":9912:9956  uint256 public transferFeeIncreaseFactor = 0 */\n  0x19\n  sstore\n    /* \"contracts/reference.sol\":10568:10663  address payable private _marketingAddress = payable(0x000000000000000000000000000000000000dEaD) */\n  0x21\n  dup1\n  sload\n    /* \"contracts/reference.sol\":10620:10662  0x000000000000000000000000000000000000dEaD */\n  0xdead\n  not(sub(shl(0xa0, 0x01), 0x01))\n    /* \"contracts/reference.sol\":10568:10663  address payable private _marketingAddress = payable(0x000000000000000000000000000000000000dEaD) */\n  swap2\n  dup3\n  and\n  dup2\n  or\n  swap1\n  swap3\n  sstore\n    /* \"contracts/reference.sol\":10669:10759  address payable private _teamAddress = payable(0x000000000000000000000000000000000000dEaD) */\n  0x22\n  dup1\n  sload\n  dup3\n  and\n  dup4\n  or\n  swap1\n  sstore\n    /* \"contracts/reference.sol\":10765:10860  address payable private _ecosystemAddress = payable(0x000000000000000000000000000000000000dEaD) */\n  0x23\n  dup1\n  sload\n  dup3\n  and\n  dup4\n  or\n  swap1\n  sstore\n    /* \"contracts/reference.sol\":10866:10956  address payable private _lpRecipient = payable(0x000000000000000000000000000000000000dEaD) */\n  0x24\n  dup1\n  sload\n  swap1\n  swap2\n  and\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"contracts/reference.sol\":11079:11110  bool public tradingOpen = false */\n  0x28\n  dup1\n  sload\n  not(0xffffffffff)\n    /* \"contracts/reference.sol\":11219:11250  bool public canChangeTax = true */\n  and\n  0x0101010000\n  or\n  swap1\n  sstore\n    /* \"contracts/reference.sol\":11656:12432  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/reference.sol\":2823:2840  address msgSender */\n  0x00\n    /* \"contracts/reference.sol\":2865:2883  _owner = msgSender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"contracts/reference.sol\":818:828  msg.sender */\n  caller\n    /* \"contracts/reference.sol\":2865:2883  _owner = msgSender */\n  swap1\n  dup2\n  or\n  dup3\n  sstore\n    /* \"contracts/reference.sol\":2898:2941  OwnershipTransferred(address(0), msgSender) */\n  mload(0x40)\n    /* \"contracts/reference.sol\":818:828  msg.sender */\n  swap1\n  swap2\n  dup3\n  swap2\n    /* \"contracts/reference.sol\":2898:2941  OwnershipTransferred(address(0), msgSender) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"contracts/reference.sol\":2823:2840  address msgSender */\n  dup3\n  swap1\n    /* \"contracts/reference.sol\":2898:2941  OwnershipTransferred(address(0), msgSender) */\n  log3\n  pop\n    /* \"contracts/reference.sol\":11790:11805  uniswapV2Router */\n  0x25\n    /* \"contracts/reference.sol\":11790:11824  uniswapV2Router = _uniswapV2Router */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"contracts/reference.sol\":11737:11779  0x10ED43C718714eb63d5aA57B78B54704E256024E */\n  0x10ed43c718714eb63d5aa57b78b54704e256024e\n    /* \"contracts/reference.sol\":11790:11824  uniswapV2Router = _uniswapV2Router */\n  swap1\n  dup2\n  or\n  swap1\n  swap2\n  sstore\n    /* \"contracts/reference.sol\":11834:11892  _approve(address(this), address(uniswapV2Router), _tTotal) */\n  tag_8\n    /* \"contracts/reference.sol\":11851:11855  this */\n  address\n    /* \"contracts/reference.sol\":11737:11779  0x10ED43C718714eb63d5aA57B78B54704E256024E */\n  dup3\n    /* \"contracts/reference.sol\":8637:8655  1000000000 * 10**9 */\n  0x0de0b6b3a7640000\n    /* \"contracts/reference.sol\":11834:11842  _approve */\n  tag_9\n    /* \"contracts/reference.sol\":11834:11892  _approve(address(this), address(uniswapV2Router), _tTotal) */\n  jump\t// in\ntag_8:\n    /* \"contracts/reference.sol\":11936:11952  _uniswapV2Router */\n  dup1\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/reference.sol\":11936:11960  _uniswapV2Router.factory */\n  and\n  0xc45a0155\n    /* \"contracts/reference.sol\":11936:11962  _uniswapV2Router.factory() */\n  mload(0x40)\n  dup2\n  0xffffffff\n  and\n  0xe0\n  shl\n  dup2\n  mstore\n  0x04\n  add\n  0x20\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  dup7\n  dup1\n  extcodesize\n  iszero\n  dup1\n  iszero\n  tag_10\n  jumpi\n  0x00\n  dup1\n  revert\ntag_10:\n  pop\n  gas\n  staticcall\n  iszero\n  dup1\n  iszero\n  tag_12\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_12:\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  returndatasize\n  not(0x1f)\n  0x1f\n  dup3\n  add\n  and\n  dup3\n  add\n  dup1\n  0x40\n  mstore\n  pop\n  dup2\n  add\n  swap1\n  tag_13\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/reference.sol\":11918:11974  IUniswapV2Factory(_uniswapV2Router.factory()).createPair */\n  and\n  0xc9c65396\n    /* \"contracts/reference.sol\":11983:11987  this */\n  address\n    /* \"contracts/reference.sol\":11990:12006  _uniswapV2Router */\n  dup4\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/reference.sol\":11990:12011  _uniswapV2Router.WETH */\n  and\n  0xad5c4648\n    /* \"contracts/reference.sol\":11990:12013  _uniswapV2Router.WETH() */\n  mload(0x40)\n  dup2\n  0xffffffff\n  and\n  0xe0\n  shl\n  dup2\n  mstore\n  0x04\n  add\n  0x20\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  dup7\n  dup1\n  extcodesize\n  iszero\n  dup1\n  iszero\n  tag_15\n  jumpi\n  0x00\n  dup1\n  revert\ntag_15:\n  pop\n  gas\n  staticcall\n  iszero\n  dup1\n  iszero\n  tag_17\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_17:\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  returndatasize\n  not(0x1f)\n  0x1f\n  dup3\n  add\n  and\n  dup3\n  add\n  dup1\n  0x40\n  mstore\n  pop\n  dup2\n  add\n  swap1\n  tag_18\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_18:\n    /* \"contracts/reference.sol\":11918:12014  IUniswapV2Factory(_uniswapV2Router.factory()).createPair(address(this), _uniswapV2Router.WETH()) */\n  mload(0x40)\n  not(sub(shl(0xe0, 0x01), 0x01))\n  0xe0\n  dup6\n  swap1\n  shl\n  and\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":861:876   */\n  swap3\n  dup4\n  and\n    /* \"contracts/reference.sol\":11918:12014  IUniswapV2Factory(_uniswapV2Router.factory()).createPair(address(this), _uniswapV2Router.WETH()) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":843:877   */\n  mstore\n    /* \"#utility.yul\":913:928   */\n  swap2\n  and\n    /* \"#utility.yul\":893:911   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":886:929   */\n  mstore\n    /* \"#utility.yul\":778:796   */\n  0x44\n  add\n    /* \"contracts/reference.sol\":11918:12014  IUniswapV2Factory(_uniswapV2Router.factory()).createPair(address(this), _uniswapV2Router.WETH()) */\n  0x20\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  0x00\n  dup8\n  dup1\n  extcodesize\n  iszero\n  dup1\n  iszero\n  tag_21\n  jumpi\n  0x00\n  dup1\n  revert\ntag_21:\n  pop\n  gas\n  call\n  iszero\n  dup1\n  iszero\n  tag_23\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_23:\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  returndatasize\n  not(0x1f)\n  0x1f\n  dup3\n  add\n  and\n  dup3\n  add\n  dup1\n  0x40\n  mstore\n  pop\n  dup2\n  add\n  swap1\n  tag_24\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_24:\n    /* \"contracts/reference.sol\":11902:11915  uniswapV2Pair */\n  0x26\n    /* \"contracts/reference.sol\":11902:12014  uniswapV2Pair = IUniswapV2Factory(_uniswapV2Router.factory()).createPair(address(this), _uniswapV2Router.WETH()) */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap3\n  dup4\n  and\n  swap1\n  dup2\n  or\n  swap1\n  swap2\n  sstore\n    /* \"contracts/reference.sol\":12062:12077  uniswapV2Router */\n  sload(0x25)\n    /* \"contracts/reference.sol\":12024:12097  IERC20(uniswapV2Pair).approve(address(uniswapV2Router),type(uint256).max) */\n  mload(0x40)\n  shl(0xe0, 0x095ea7b3)\n  dup2\n  mstore\n    /* \"contracts/reference.sol\":12062:12077  uniswapV2Router */\n  swap3\n  and\n    /* \"contracts/reference.sol\":12024:12097  IERC20(uniswapV2Pair).approve(address(uniswapV2Router),type(uint256).max) */\n  0x04\n  dup4\n  add\n    /* \"#utility.yul\":1114:1165   */\n  mstore\n  not(0x00)\n    /* \"#utility.yul\":1181:1199   */\n  0x24\n  dup4\n  add\n    /* \"#utility.yul\":1174:1208   */\n  mstore\n    /* \"contracts/reference.sol\":11902:12014  uniswapV2Pair = IUniswapV2Factory(_uniswapV2Router.factory()).createPair(address(this), _uniswapV2Router.WETH()) */\n  swap1\n    /* \"contracts/reference.sol\":12024:12053  IERC20(uniswapV2Pair).approve */\n  0x095ea7b3\n  swap1\n    /* \"#utility.yul\":1087:1105   */\n  0x44\n  add\n    /* \"contracts/reference.sol\":12024:12097  IERC20(uniswapV2Pair).approve(address(uniswapV2Router),type(uint256).max) */\n  0x20\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  0x00\n  dup8\n  dup1\n  extcodesize\n  iszero\n  dup1\n  iszero\n  tag_27\n  jumpi\n  0x00\n  dup1\n  revert\ntag_27:\n  pop\n  gas\n  call\n  iszero\n  dup1\n  iszero\n  tag_29\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_29:\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  returndatasize\n  not(0x1f)\n  0x1f\n  dup3\n  add\n  and\n  dup3\n  add\n  dup1\n  0x40\n  mstore\n  pop\n  dup2\n  add\n  swap1\n  tag_30\n  swap2\n  swap1\n  tag_31\n  jump\t// in\ntag_30:\n  pop\n    /* \"contracts/reference.sol\":8637:8655  1000000000 * 10**9 */\n  0x0de0b6b3a7640000\n    /* \"contracts/reference.sol\":12108:12120  _maxTxAmount */\n  0x27\n    /* \"contracts/reference.sol\":12108:12130  _maxTxAmount = _tTotal */\n  dup2\n  swap1\n  sstore\n    /* \"contracts/reference.sol\":12195:12211  _maxWalletAmount */\n  0x07\n    /* \"contracts/reference.sol\":12195:12221  _maxWalletAmount = _tTotal */\n  dup2\n  swap1\n  sstore\n    /* \"contracts/reference.sol\":818:828  msg.sender */\n  caller\n  0x00\n    /* \"contracts/reference.sol\":12240:12263  _balances[_msgSender()] */\n  dup2\n  dup2\n  mstore\n    /* \"contracts/reference.sol\":12240:12249  _balances */\n  0x02\n  0x20\n    /* \"contracts/reference.sol\":12240:12263  _balances[_msgSender()] */\n  swap1\n  dup2\n  mstore\n  0x40\n  dup1\n  dup4\n  keccak256\n    /* \"contracts/reference.sol\":12240:12273  _balances[_msgSender()] = _tTotal */\n  dup6\n  swap1\n  sstore\n    /* \"contracts/reference.sol\":3018:3024  _owner */\n  dup3\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n  and\n    /* \"contracts/reference.sol\":12283:12310  _isExcludedFromFee[owner()] */\n  dup4\n  mstore\n    /* \"contracts/reference.sol\":12283:12301  _isExcludedFromFee */\n  0x04\n    /* \"contracts/reference.sol\":12283:12310  _isExcludedFromFee[owner()] */\n  dup3\n  mstore\n  dup1\n  dup4\n  keccak256\n    /* \"contracts/reference.sol\":12283:12317  _isExcludedFromFee[owner()] = true */\n  dup1\n  sload\n    /* \"contracts/reference.sol\":12313:12317  true */\n  0x01\n  not(0xff)\n    /* \"contracts/reference.sol\":12283:12317  _isExcludedFromFee[owner()] = true */\n  swap2\n  dup3\n  and\n  dup2\n  or\n  swap1\n  swap3\n  sstore\n    /* \"contracts/reference.sol\":12354:12358  this */\n  address\n    /* \"contracts/reference.sol\":12327:12360  _isExcludedFromFee[address(this)] */\n  dup6\n  mstore\n  dup3\n  dup6\n  keccak256\n    /* \"contracts/reference.sol\":12327:12367  _isExcludedFromFee[address(this)] = true */\n  dup1\n  sload\n  swap1\n  swap2\n  and\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"contracts/reference.sol\":12382:12425  Transfer(address(0), _msgSender(), _tTotal) */\n  mload\n    /* \"#utility.yul\":2173:2198   */\n  swap4\n  dup5\n  mstore\n    /* \"contracts/reference.sol\":818:828  msg.sender */\n  swap2\n  swap3\n  swap1\n  swap2\n    /* \"contracts/reference.sol\":12382:12425  Transfer(address(0), _msgSender(), _tTotal) */\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n  swap2\n    /* \"#utility.yul\":2146:2164   */\n  add\n    /* \"contracts/reference.sol\":12382:12425  Transfer(address(0), _msgSender(), _tTotal) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/reference.sol\":11656:12432  constructor() {... */\n  pop\n    /* \"contracts/reference.sol\":8181:29342  contract gainZilla is Context, IERC20, IERC20Extented, Ownable {... */\n  jump(tag_49)\n    /* \"contracts/reference.sol\":15040:15370  function _approve(address owner, address spender, uint256 amount) private {... */\ntag_9:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/reference.sol\":15132:15151  owner != address(0) */\n  dup4\n  and\n    /* \"contracts/reference.sol\":15124:15192  require(owner != address(0), \"ERC20: approve from the zero address\") */\n  tag_41\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":1824:1826   */\n  0x20\n    /* \"contracts/reference.sol\":15124:15192  require(owner != address(0), \"ERC20: approve from the zero address\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":1806:1827   */\n  mstore\n    /* \"#utility.yul\":1863:1865   */\n  0x24\n    /* \"#utility.yul\":1843:1861   */\n  dup1\n  dup3\n  add\n    /* \"#utility.yul\":1836:1866   */\n  mstore\n    /* \"#utility.yul\":1902:1936   */\n  0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n    /* \"#utility.yul\":1882:1900   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":1875:1937   */\n  mstore\n  shl(0xe0, 0x72657373)\n    /* \"#utility.yul\":1953:1971   */\n  0x64\n  dup3\n  add\n    /* \"#utility.yul\":1946:1980   */\n  mstore\n    /* \"#utility.yul\":1997:2016   */\n  0x84\n  add\n    /* \"contracts/reference.sol\":15124:15192  require(owner != address(0), \"ERC20: approve from the zero address\") */\ntag_42:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_41:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/reference.sol\":15210:15231  spender != address(0) */\n  dup3\n  and\n    /* \"contracts/reference.sol\":15202:15270  require(spender != address(0), \"ERC20: approve to the zero address\") */\n  tag_44\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":1421:1423   */\n  0x20\n    /* \"contracts/reference.sol\":15202:15270  require(spender != address(0), \"ERC20: approve to the zero address\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":1403:1424   */\n  mstore\n    /* \"#utility.yul\":1460:1462   */\n  0x22\n    /* \"#utility.yul\":1440:1458   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":1433:1463   */\n  mstore\n    /* \"#utility.yul\":1499:1533   */\n  0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n    /* \"#utility.yul\":1479:1497   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":1472:1534   */\n  mstore\n  shl(0xf0, 0x7373)\n    /* \"#utility.yul\":1550:1568   */\n  0x64\n  dup3\n  add\n    /* \"#utility.yul\":1543:1575   */\n  mstore\n    /* \"#utility.yul\":1592:1611   */\n  0x84\n  add\n    /* \"contracts/reference.sol\":15202:15270  require(spender != address(0), \"ERC20: approve to the zero address\") */\n  tag_42\n    /* \"#utility.yul\":1393:1617   */\n  jump\n    /* \"contracts/reference.sol\":15202:15270  require(spender != address(0), \"ERC20: approve to the zero address\") */\ntag_44:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/reference.sol\":15280:15298  _allowances[owner] */\n  dup4\n  dup2\n  and\n  0x00\n  dup2\n  dup2\n  mstore\n    /* \"contracts/reference.sol\":15280:15291  _allowances */\n  0x03\n    /* \"contracts/reference.sol\":15280:15298  _allowances[owner] */\n  0x20\n  swap1\n  dup2\n  mstore\n  0x40\n  dup1\n  dup4\n  keccak256\n    /* \"contracts/reference.sol\":15280:15307  _allowances[owner][spender] */\n  swap5\n  dup8\n  and\n  dup1\n  dup5\n  mstore\n  swap5\n  dup3\n  mstore\n  swap2\n  dup3\n  swap1\n  keccak256\n    /* \"contracts/reference.sol\":15280:15316  _allowances[owner][spender] = amount */\n  dup6\n  swap1\n  sstore\n    /* \"contracts/reference.sol\":15331:15363  Approval(owner, spender, amount) */\n  swap1\n  mload\n    /* \"#utility.yul\":2173:2198   */\n  dup5\n  dup2\n  mstore\n    /* \"contracts/reference.sol\":15331:15363  Approval(owner, spender, amount) */\n  0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n  swap2\n    /* \"#utility.yul\":2146:2164   */\n  add\n    /* \"contracts/reference.sol\":15331:15363  Approval(owner, spender, amount) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/reference.sol\":15040:15370  function _approve(address owner, address spender, uint256 amount) private {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:324   */\ntag_14:\n    /* \"#utility.yul\":84:90   */\n  0x00\n    /* \"#utility.yul\":137:139   */\n  0x20\n    /* \"#utility.yul\":125:134   */\n  dup3\n    /* \"#utility.yul\":116:123   */\n  dup5\n    /* \"#utility.yul\":112:135   */\n  sub\n    /* \"#utility.yul\":108:140   */\n  slt\n    /* \"#utility.yul\":105:107   */\n  iszero\n  tag_51\n  jumpi\n    /* \"#utility.yul\":158:164   */\n  dup1\n    /* \"#utility.yul\":150:156   */\n  dup2\n    /* \"#utility.yul\":143:165   */\n  revert\n    /* \"#utility.yul\":105:107   */\ntag_51:\n    /* \"#utility.yul\":189:205   */\n  dup2\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":234:265   */\n  dup2\n  and\n    /* \"#utility.yul\":224:266   */\n  dup2\n  eq\n    /* \"#utility.yul\":214:216   */\n  tag_52\n  jumpi\n    /* \"#utility.yul\":285:291   */\n  dup2\n    /* \"#utility.yul\":277:283   */\n  dup3\n    /* \"#utility.yul\":270:292   */\n  revert\n    /* \"#utility.yul\":214:216   */\ntag_52:\n    /* \"#utility.yul\":313:318   */\n  swap4\n    /* \"#utility.yul\":95:324   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":329:626   */\ntag_31:\n    /* \"#utility.yul\":396:402   */\n  0x00\n    /* \"#utility.yul\":449:451   */\n  0x20\n    /* \"#utility.yul\":437:446   */\n  dup3\n    /* \"#utility.yul\":428:435   */\n  dup5\n    /* \"#utility.yul\":424:447   */\n  sub\n    /* \"#utility.yul\":420:452   */\n  slt\n    /* \"#utility.yul\":417:419   */\n  iszero\n  tag_54\n  jumpi\n    /* \"#utility.yul\":470:476   */\n  dup1\n    /* \"#utility.yul\":462:468   */\n  dup2\n    /* \"#utility.yul\":455:477   */\n  revert\n    /* \"#utility.yul\":417:419   */\ntag_54:\n    /* \"#utility.yul\":507:516   */\n  dup2\n    /* \"#utility.yul\":501:517   */\n  mload\n    /* \"#utility.yul\":560:565   */\n  dup1\n    /* \"#utility.yul\":553:566   */\n  iszero\n    /* \"#utility.yul\":546:567   */\n  iszero\n    /* \"#utility.yul\":539:544   */\n  dup2\n    /* \"#utility.yul\":536:568   */\n  eq\n    /* \"#utility.yul\":526:528   */\n  tag_52\n  jumpi\n    /* \"#utility.yul\":587:593   */\n  dup2\n    /* \"#utility.yul\":579:585   */\n  dup3\n    /* \"#utility.yul\":572:594   */\n  revert\n    /* \"#utility.yul\":2128:2204   */\ntag_49:\n    /* \"contracts/reference.sol\":8181:29342  contract gainZilla is Context, IERC20, IERC20Extented, Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/reference.sol\":8181:29342  contract gainZilla is Context, IERC20, IERC20Extented, Ownable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x88790a68\n      gt\n      tag_59\n      jumpi\n      dup1\n      0xcab03471\n      gt\n      tag_60\n      jumpi\n      dup1\n      0xe315a6da\n      gt\n      tag_61\n      jumpi\n      dup1\n      0xf2fde38b\n      gt\n      tag_62\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_55\n      jumpi\n      dup1\n      0xf480fec2\n      eq\n      tag_56\n      jumpi\n      dup1\n      0xffb54a99\n      eq\n      tag_57\n      jumpi\n      dup1\n      0xffecf516\n      eq\n      tag_58\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_62:\n      dup1\n      0xe315a6da\n      eq\n      tag_52\n      jumpi\n      dup1\n      0xe4bf1bed\n      eq\n      tag_53\n      jumpi\n      dup1\n      0xea2f0b37\n      eq\n      tag_54\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_61:\n      dup1\n      0xd55cb78a\n      gt\n      tag_63\n      jumpi\n      dup1\n      0xd55cb78a\n      eq\n      tag_48\n      jumpi\n      dup1\n      0xdb0045ec\n      eq\n      tag_49\n      jumpi\n      dup1\n      0xdc44b6a0\n      eq\n      tag_50\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_51\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_63:\n      dup1\n      0xcab03471\n      eq\n      tag_45\n      jumpi\n      dup1\n      0xcdb3858f\n      eq\n      tag_46\n      jumpi\n      dup1\n      0xd1633649\n      eq\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_60:\n      dup1\n      0xa850673d\n      gt\n      tag_64\n      jumpi\n      dup1\n      0xc469b6dd\n      gt\n      tag_65\n      jumpi\n      dup1\n      0xc469b6dd\n      eq\n      tag_41\n      jumpi\n      dup1\n      0xc5d24189\n      eq\n      tag_42\n      jumpi\n      dup1\n      0xc8607952\n      eq\n      tag_43\n      jumpi\n      dup1\n      0xc95457ff\n      eq\n      tag_44\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_65:\n      dup1\n      0xa850673d\n      eq\n      tag_38\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_39\n      jumpi\n      dup1\n      0xc3c8cd80\n      eq\n      tag_40\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_64:\n      dup1\n      0x9491f94d\n      gt\n      tag_66\n      jumpi\n      dup1\n      0x9491f94d\n      eq\n      tag_34\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_35\n      jumpi\n      dup1\n      0x99a7b9bc\n      eq\n      tag_36\n      jumpi\n      dup1\n      0x9d82190f\n      eq\n      tag_37\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_66:\n      dup1\n      0x88790a68\n      eq\n      tag_31\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_32\n      jumpi\n      dup1\n      0x8e360253\n      eq\n      tag_33\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_59:\n      dup1\n      0x39a53c4e\n      gt\n      tag_67\n      jumpi\n      dup1\n      0x6c0a24eb\n      gt\n      tag_68\n      jumpi\n      dup1\n      0x715018a6\n      gt\n      tag_69\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_27\n      jumpi\n      dup1\n      0x729cb3f2\n      eq\n      tag_28\n      jumpi\n      dup1\n      0x72b2aecc\n      eq\n      tag_29\n      jumpi\n      dup1\n      0x787a08a6\n      eq\n      tag_30\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_69:\n      dup1\n      0x6c0a24eb\n      eq\n      tag_24\n      jumpi\n      dup1\n      0x6fc3eaec\n      eq\n      tag_25\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_68:\n      dup1\n      0x437823ec\n      gt\n      tag_70\n      jumpi\n      dup1\n      0x437823ec\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x49bd5a5e\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x5fecd926\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x6aabff3f\n      eq\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_70:\n      dup1\n      0x39a53c4e\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x3bbac579\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x3e0f966d\n      eq\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_67:\n      dup1\n      0x248dd232\n      gt\n      tag_71\n      jumpi\n      dup1\n      0x29409395\n      gt\n      tag_72\n      jumpi\n      dup1\n      0x29409395\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x301ad558\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x323be1c5\n      eq\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_72:\n      dup1\n      0x248dd232\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x27a14fc2\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x2843631d\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_71:\n      dup1\n      0x14eb76ac\n      gt\n      tag_73\n      jumpi\n      dup1\n      0x14eb76ac\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x2369bf83\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_73:\n      dup1\n      0x01a6c43b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/reference.sol\":8802:8850  uint256 public numTokensToSwap = 1000000 * 10**9 */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_76\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_76:\n      pop\n      tag_77\n      sload(0x08)\n      dup2\n      jump\n    tag_77:\n      mload(0x40)\n        /* \"#utility.yul\":15123:15148   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":15111:15113   */\n      0x20\n        /* \"#utility.yul\":15096:15114   */\n      add\n        /* \"contracts/reference.sol\":8802:8850  uint256 public numTokensToSwap = 1000000 * 10**9 */\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/reference.sol\":12438:12530  function name() override external pure returns (string memory) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_81\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_81:\n      pop\n        /* \"contracts/reference.sol\":12518:12523  _name */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      0x09\n      dup2\n      mstore\n      shl(0xb8, 0x4761696e5a696c6c61)\n      0x20\n      dup3\n      add\n      mstore\n        /* \"contracts/reference.sol\":12438:12530  function name() override external pure returns (string memory) {... */\n    tag_82:\n      mload(0x40)\n      tag_79\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n        /* \"contracts/reference.sol\":13387:13547  function approve(address spender, uint256 amount) external override returns (bool) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_86\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_86:\n      pop\n      tag_87\n      tag_88\n      calldatasize\n      0x04\n      tag_89\n      jump\t// in\n    tag_88:\n      tag_90\n      jump\t// in\n    tag_87:\n      mload(0x40)\n        /* \"#utility.yul\":5685:5699   */\n      swap1\n      iszero\n        /* \"#utility.yul\":5678:5700   */\n      iszero\n        /* \"#utility.yul\":5660:5701   */\n      dup2\n      mstore\n        /* \"#utility.yul\":5648:5650   */\n      0x20\n        /* \"#utility.yul\":5633:5651   */\n      add\n        /* \"contracts/reference.sol\":13387:13547  function approve(address spender, uint256 amount) external override returns (bool) {... */\n      tag_79\n        /* \"#utility.yul\":5615:5707   */\n      jump\n        /* \"contracts/reference.sol\":28249:28369  function updateTeamAddress(address payable teamAddress) external onlyOwner() {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_93\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_93:\n      pop\n      tag_94\n      tag_95\n      calldatasize\n      0x04\n      tag_128\n      jump\t// in\n    tag_95:\n      tag_97\n      jump\t// in\n    tag_94:\n      stop\n        /* \"contracts/reference.sol\":12736:12831  function totalSupply() external pure override returns (uint256) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_98\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_98:\n      pop\n        /* \"contracts/reference.sol\":8637:8655  1000000000 * 10**9 */\n      0x0de0b6b3a7640000\n        /* \"contracts/reference.sol\":12736:12831  function totalSupply() external pure override returns (uint256) {... */\n      jump(tag_77)\n        /* \"contracts/reference.sol\":28099:28239  function updateMarketingAddress(address payable marketingAddress) external onlyOwner() {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_102\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_102:\n      pop\n      tag_94\n      tag_104\n      calldatasize\n      0x04\n      tag_128\n      jump\t// in\n    tag_104:\n      tag_105\n      jump\t// in\n        /* \"contracts/reference.sol\":13553:13861  function transferFrom(address sender, address recipient, uint256 amount) external override returns (bool) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_106\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_106:\n      pop\n      tag_87\n      tag_108\n      calldatasize\n      0x04\n      tag_109\n      jump\t// in\n    tag_108:\n      tag_110\n      jump\t// in\n        /* \"contracts/reference.sol\":9543:9579  uint256 public _sellEcosystemFee = 0 */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_112\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_112:\n      pop\n      tag_77\n      sload(0x13)\n      dup2\n      jump\n        /* \"contracts/reference.sol\":25855:26178  function setMaxWalletAmount(uint256 maxWalletAmount) external onlyOwner() {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_116\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_116:\n      pop\n      tag_94\n      tag_118\n      calldatasize\n      0x04\n      tag_119\n      jump\t// in\n    tag_118:\n      tag_120\n      jump\t// in\n        /* \"contracts/reference.sol\":9037:9072  uint256 public _buyEcosystemFee = 0 */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_121\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_121:\n      pop\n      tag_77\n      sload(0x0b)\n      dup2\n      jump\n        /* \"contracts/reference.sol\":22762:22944  function manualSendToken(address token) external onlyOwner() {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_125\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_125:\n      pop\n      tag_94\n      tag_127\n      calldatasize\n      0x04\n      tag_128\n      jump\t// in\n    tag_127:\n      tag_129\n      jump\t// in\n        /* \"contracts/reference.sol\":11182:11213  bool public canBlackList = true */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_130\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_130:\n      pop\n      sload(0x28)\n      tag_87\n      swap1\n      0x01000000\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\n        /* \"contracts/reference.sol\":12638:12730  function decimals() override external pure returns (uint8) {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_134\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_134:\n      pop\n      mload(0x40)\n        /* \"contracts/reference.sol\":8413:8414  9 */\n      0x09\n        /* \"#utility.yul\":16685:16721   */\n      dup2\n      mstore\n        /* \"#utility.yul\":16673:16675   */\n      0x20\n        /* \"#utility.yul\":16658:16676   */\n      add\n        /* \"contracts/reference.sol\":12638:12730  function decimals() override external pure returns (uint8) {... */\n      tag_79\n        /* \"#utility.yul\":16640:16727   */\n      jump\n        /* \"contracts/reference.sol\":11149:11176  bool public canPause = true */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_139\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_139:\n      pop\n      sload(0x28)\n      tag_87\n      swap1\n      0x010000\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\n        /* \"contracts/reference.sol\":11219:11250  bool public canChangeTax = true */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_143\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_143:\n      pop\n      sload(0x28)\n      tag_87\n      swap1\n      0x0100000000\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\n        /* \"contracts/reference.sol\":12960:13056  function isBot(address account) public view returns (bool) {... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_147\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_147:\n      pop\n      tag_87\n      tag_149\n      calldatasize\n      0x04\n      tag_128\n      jump\t// in\n    tag_149:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/reference.sol\":13036:13049  bots[account] */\n      and\n        /* \"contracts/reference.sol\":13013:13017  bool */\n      0x00\n        /* \"contracts/reference.sol\":13036:13049  bots[account] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/reference.sol\":13036:13040  bots */\n      0x20\n        /* \"contracts/reference.sol\":13036:13049  bots[account] */\n      dup1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"contracts/reference.sol\":12960:13056  function isBot(address account) public view returns (bool) {... */\n      jump\n        /* \"contracts/reference.sol\":22083:22225  function disableToken() external onlyOwner() {... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_152\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_152:\n      pop\n      tag_94\n      tag_154\n      jump\t// in\n        /* \"contracts/reference.sol\":25098:25209  function excludeFromFee(address account) public onlyOwner() {... */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_155\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_155:\n      pop\n      tag_94\n      tag_157\n      calldatasize\n      0x04\n      tag_128\n      jump\t// in\n    tag_157:\n      tag_158\n      jump\t// in\n        /* \"contracts/reference.sol\":11010:11038  address public uniswapV2Pair */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_159\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_159:\n      pop\n      sload(0x26)\n      tag_160\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_160:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4577:4609   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":4559:4610   */\n      dup2\n      mstore\n        /* \"#utility.yul\":4547:4549   */\n      0x20\n        /* \"#utility.yul\":4532:4550   */\n      add\n        /* \"contracts/reference.sol\":11010:11038  address public uniswapV2Pair */\n      tag_79\n        /* \"#utility.yul\":4514:4616   */\n      jump\n        /* \"contracts/reference.sol\":25337:25432  function removeBot(address account) external onlyOwner() {... */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_164\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_164:\n      pop\n      tag_94\n      tag_166\n      calldatasize\n      0x04\n      tag_128\n      jump\t// in\n    tag_166:\n      tag_167\n      jump\t// in\n        /* \"contracts/reference.sol\":22231:22316  function disablePauseAbility() onlyOwner() external {... */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_168\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_168:\n      pop\n      tag_94\n      tag_170\n      jump\t// in\n        /* \"contracts/reference.sol\":8746:8796  uint256 public _maxWalletAmount = 10000001 * 10**9 */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_171\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_171:\n      pop\n      tag_77\n      sload(0x07)\n      dup2\n      jump\n        /* \"contracts/reference.sol\":22530:22756  function manualsend() external onlyOwner() {... */\n    tag_25:\n      callvalue\n      dup1\n      iszero\n      tag_175\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_175:\n      pop\n      tag_94\n      tag_177\n      jump\t// in\n        /* \"contracts/reference.sol\":12837:12954  function balanceOf(address account) public view override returns (uint256) {... */\n    tag_26:\n      callvalue\n      dup1\n      iszero\n      tag_178\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_178:\n      pop\n      tag_77\n      tag_180\n      calldatasize\n      0x04\n      tag_128\n      jump\t// in\n    tag_180:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/reference.sol\":12929:12947  _balances[account] */\n      and\n        /* \"contracts/reference.sol\":12903:12910  uint256 */\n      0x00\n        /* \"contracts/reference.sol\":12929:12947  _balances[account] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/reference.sol\":12929:12938  _balances */\n      0x02\n        /* \"contracts/reference.sol\":12929:12947  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"contracts/reference.sol\":12837:12954  function balanceOf(address account) public view override returns (uint256) {... */\n      jump\n        /* \"contracts/reference.sol\":3851:3998  function renounceOwnership() public virtual onlyOwner() {... */\n    tag_27:\n      callvalue\n      dup1\n      iszero\n      tag_183\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_183:\n      pop\n      tag_94\n      tag_185\n      jump\t// in\n        /* \"contracts/reference.sol\":28623:28796  function configureStrongHands(bool enabled, uint32 duration) external onlyOwner {... */\n    tag_28:\n      callvalue\n      dup1\n      iszero\n      tag_186\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_186:\n      pop\n      tag_94\n      tag_188\n      calldatasize\n      0x04\n      tag_189\n      jump\t// in\n    tag_188:\n      tag_190\n      jump\t// in\n        /* \"contracts/reference.sol\":9912:9956  uint256 public transferFeeIncreaseFactor = 0 */\n    tag_29:\n      callvalue\n      dup1\n      iszero\n      tag_191\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_191:\n      pop\n      tag_77\n      sload(0x19)\n      dup2\n      jump\n        /* \"contracts/reference.sol\":10278:10311  StrongHandsConfig public cooldown */\n    tag_30:\n      callvalue\n      dup1\n      iszero\n      tag_195\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_195:\n      pop\n      sload(0x1a)\n      tag_196\n      swap1\n      0xff\n      dup2\n      and\n      swap1\n      0x0100\n      swap1\n      div\n      0xffffffff\n      and\n      dup3\n      jump\n    tag_196:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":6402:6416   */\n      swap3\n      iszero\n        /* \"#utility.yul\":6395:6417   */\n      iszero\n        /* \"#utility.yul\":6377:6418   */\n      dup4\n      mstore\n        /* \"#utility.yul\":6466:6476   */\n      0xffffffff\n        /* \"#utility.yul\":6454:6477   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":6449:6451   */\n      0x20\n        /* \"#utility.yul\":6434:6452   */\n      dup4\n      add\n        /* \"#utility.yul\":6427:6478   */\n      mstore\n        /* \"#utility.yul\":6350:6368   */\n      add\n        /* \"contracts/reference.sol\":10278:10311  StrongHandsConfig public cooldown */\n      tag_79\n        /* \"#utility.yul\":6332:6484   */\n      jump\n        /* \"contracts/reference.sol\":9415:9451  uint256 public _sellLiquidityFee = 0 */\n    tag_31:\n      callvalue\n      dup1\n      iszero\n      tag_200\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_200:\n      pop\n      tag_77\n      sload(0x11)\n      dup2\n      jump\n        /* \"contracts/reference.sol\":2954:3031  function owner() public view returns (address) {... */\n    tag_32:\n      callvalue\n      dup1\n      iszero\n      tag_204\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_204:\n      pop\n        /* \"contracts/reference.sol\":2992:2999  address */\n      0x00\n        /* \"contracts/reference.sol\":3018:3024  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/reference.sol\":2954:3031  function owner() public view returns (address) {... */\n      jump(tag_160)\n        /* \"contracts/reference.sol\":21998:22077  function enableToken() external onlyOwner() {... */\n    tag_33:\n      callvalue\n      dup1\n      iszero\n      tag_208\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_208:\n      pop\n      tag_94\n      tag_210\n      jump\t// in\n        /* \"contracts/reference.sol\":19677:20093  function pairPrice() public view returns (uint256) {... */\n    tag_34:\n      callvalue\n      dup1\n      iszero\n      tag_211\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_211:\n      pop\n      tag_77\n      tag_213\n      jump\t// in\n        /* \"contracts/reference.sol\":12536:12632  function symbol() override external pure returns (string memory) {... */\n    tag_35:\n      callvalue\n      dup1\n      iszero\n      tag_215\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_215:\n      pop\n        /* \"contracts/reference.sol\":12618:12625  _symbol */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      0x05\n      dup2\n      mstore\n      shl(0xd8, 0x47494c4c41)\n      0x20\n      dup3\n      add\n      mstore\n        /* \"contracts/reference.sol\":12536:12632  function symbol() override external pure returns (string memory) {... */\n      jump(tag_82)\n        /* \"contracts/reference.sol\":27857:27943  function disableTaxChange() onlyOwner() external {... */\n    tag_36:\n      callvalue\n      dup1\n      iszero\n      tag_219\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_219:\n      pop\n      tag_94\n      tag_221\n      jump\t// in\n        /* \"contracts/reference.sol\":28802:29340  function cooldownRemaining(address account) public view returns (... */\n    tag_37:\n      callvalue\n      dup1\n      iszero\n      tag_222\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_222:\n      pop\n      tag_223\n      tag_224\n      calldatasize\n      0x04\n      tag_128\n      jump\t// in\n    tag_224:\n      tag_225\n      jump\t// in\n    tag_223:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":16378:16403   */\n      swap5\n      dup6\n      mstore\n        /* \"#utility.yul\":16434:16436   */\n      0x20\n        /* \"#utility.yul\":16419:16437   */\n      dup6\n      add\n        /* \"#utility.yul\":16412:16446   */\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"#utility.yul\":16462:16480   */\n      swap2\n      dup4\n      add\n        /* \"#utility.yul\":16455:16489   */\n      mstore\n        /* \"#utility.yul\":16520:16522   */\n      0x60\n        /* \"#utility.yul\":16505:16523   */\n      dup3\n      add\n        /* \"#utility.yul\":16498:16532   */\n      mstore\n        /* \"#utility.yul\":16365:16368   */\n      0x80\n        /* \"#utility.yul\":16350:16369   */\n      add\n        /* \"contracts/reference.sol\":28802:29340  function cooldownRemaining(address account) public view returns (... */\n      tag_79\n        /* \"#utility.yul\":16332:16538   */\n      jump\n        /* \"contracts/reference.sol\":25709:25849  function setTransferTransactionMultiplier(uint256 _multiplier) external onlyOwner() {... */\n    tag_38:\n      callvalue\n      dup1\n      iszero\n      tag_228\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_228:\n      pop\n      tag_94\n      tag_230\n      calldatasize\n      0x04\n      tag_119\n      jump\t// in\n    tag_230:\n      tag_231\n      jump\t// in\n        /* \"contracts/reference.sol\":13066:13232  function transfer(address recipient, uint256 amount) external override returns (bool) {... */\n    tag_39:\n      callvalue\n      dup1\n      iszero\n      tag_232\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_232:\n      pop\n      tag_87\n      tag_234\n      calldatasize\n      0x04\n      tag_89\n      jump\t// in\n    tag_234:\n      tag_235\n      jump\t// in\n        /* \"contracts/reference.sol\":22322:22524  function manualswap() external onlyOwner() {... */\n    tag_40:\n      callvalue\n      dup1\n      iszero\n      tag_237\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_237:\n      pop\n      tag_94\n      tag_239\n      jump\t// in\n        /* \"contracts/reference.sol\":9287:9317  uint256 public _buyTeamFee = 0 */\n    tag_41:\n      callvalue\n      dup1\n      iszero\n      tag_240\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_240:\n      pop\n      tag_77\n      sload(0x0f)\n      dup2\n      jump\n        /* \"contracts/reference.sol\":9162:9197  uint256 public _buyMarketingFee = 0 */\n    tag_42:\n      callvalue\n      dup1\n      iszero\n      tag_244\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_244:\n      pop\n      tag_77\n      sload(0x0d)\n      dup2\n      jump\n        /* \"contracts/reference.sol\":9671:9707  uint256 public _sellMarketingFee = 0 */\n    tag_43:\n      callvalue\n      dup1\n      iszero\n      tag_248\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_248:\n      pop\n      tag_77\n      sload(0x15)\n      dup2\n      jump\n        /* \"contracts/reference.sol\":10486:10518  DiamondFloor public diamondFloor */\n    tag_44:\n      callvalue\n      dup1\n      iszero\n      tag_252\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_252:\n      pop\n      sload(0x1c)\n      sload(0x1d)\n      sload(0x1e)\n      sload(0x1f)\n      tag_253\n      swap4\n      0xff\n      dup1\n      dup3\n      and\n      swap5\n      0x0100\n      swap1\n      swap3\n      div\n      0xffff\n      and\n      swap4\n      swap2\n      swap3\n      swap2\n      and\n      swap1\n      dup6\n      jump\n    tag_253:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":5982:5996   */\n      swap6\n      iszero\n        /* \"#utility.yul\":5975:5997   */\n      iszero\n        /* \"#utility.yul\":5957:5998   */\n      dup7\n      mstore\n        /* \"#utility.yul\":6046:6052   */\n      0xffff\n        /* \"#utility.yul\":6034:6053   */\n      swap1\n      swap5\n      and\n        /* \"#utility.yul\":6029:6031   */\n      0x20\n        /* \"#utility.yul\":6014:6032   */\n      dup7\n      add\n        /* \"#utility.yul\":6007:6054   */\n      mstore\n        /* \"#utility.yul\":6070:6088   */\n      swap3\n      dup5\n      add\n        /* \"#utility.yul\":6063:6097   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":6140:6154   */\n      iszero\n        /* \"#utility.yul\":6133:6155   */\n      iszero\n        /* \"#utility.yul\":6128:6130   */\n      0x60\n        /* \"#utility.yul\":6113:6131   */\n      dup4\n      add\n        /* \"#utility.yul\":6106:6156   */\n      mstore\n        /* \"#utility.yul\":6187:6190   */\n      0x80\n        /* \"#utility.yul\":6172:6191   */\n      dup3\n      add\n        /* \"#utility.yul\":6165:6200   */\n      mstore\n        /* \"#utility.yul\":5944:5947   */\n      0xa0\n        /* \"#utility.yul\":5929:5948   */\n      add\n        /* \"contracts/reference.sol\":10486:10518  DiamondFloor public diamondFloor */\n      tag_79\n        /* \"#utility.yul\":5911:6206   */\n      jump\n        /* \"contracts/reference.sol\":9799:9830  uint256 public _sellTeamFee = 0 */\n    tag_45:\n      callvalue\n      dup1\n      iszero\n      tag_257\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_257:\n      pop\n      tag_77\n      sload(0x17)\n      dup2\n      jump\n        /* \"contracts/reference.sol\":28376:28496  function updateLpRecipient(address payable lpRecipient) external onlyOwner() {... */\n    tag_46:\n      callvalue\n      dup1\n      iszero\n      tag_261\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_261:\n      pop\n      tag_94\n      tag_263\n      calldatasize\n      0x04\n      tag_128\n      jump\t// in\n    tag_263:\n      tag_264\n      jump\t// in\n        /* \"contracts/reference.sol\":21825:21992  function openTrading(uint256 botBlocks) external onlyOwner() {... */\n    tag_47:\n      callvalue\n      dup1\n      iszero\n      tag_265\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_265:\n      pop\n      tag_94\n      tag_267\n      calldatasize\n      0x04\n      tag_119\n      jump\t// in\n    tag_267:\n      tag_268\n      jump\t// in\n        /* \"contracts/reference.sol\":25610:25699  function disableBlackListing() onlyOwner() external {... */\n    tag_48:\n      callvalue\n      dup1\n      iszero\n      tag_269\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_269:\n      pop\n      tag_94\n      tag_271\n      jump\t// in\n        /* \"contracts/reference.sol\":27949:28089  function updateEcosystemAddress(address payable ecosystemAddress) external onlyOwner() {... */\n    tag_49:\n      callvalue\n      dup1\n      iszero\n      tag_272\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_272:\n      pop\n      tag_94\n      tag_274\n      calldatasize\n      0x04\n      tag_128\n      jump\t// in\n    tag_274:\n      tag_275\n      jump\t// in\n        /* \"contracts/reference.sol\":8912:8947  uint256 public _buyLiquidityFee = 0 */\n    tag_50:\n      callvalue\n      dup1\n      iszero\n      tag_276\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_276:\n      pop\n      tag_77\n      sload(0x09)\n      dup2\n      jump\n        /* \"contracts/reference.sol\":13238:13381  function allowance(address owner, address spender) external view override returns (uint256) {... */\n    tag_51:\n      callvalue\n      dup1\n      iszero\n      tag_280\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_280:\n      pop\n      tag_77\n      tag_282\n      calldatasize\n      0x04\n      tag_283\n      jump\t// in\n    tag_282:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/reference.sol\":13347:13365  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"contracts/reference.sol\":13321:13328  uint256 */\n      0x00\n        /* \"contracts/reference.sol\":13347:13365  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/reference.sol\":13347:13358  _allowances */\n      0x03\n        /* \"contracts/reference.sol\":13347:13365  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/reference.sol\":13347:13374  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"contracts/reference.sol\":13238:13381  function allowance(address owner, address spender) external view override returns (uint256) {... */\n      jump\n        /* \"contracts/reference.sol\":28502:28617  function updateNumTokensToSwap(uint256 numTokens) external onlyOwner() {... */\n    tag_52:\n      callvalue\n      dup1\n      iszero\n      tag_286\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_286:\n      pop\n      tag_94\n      tag_288\n      calldatasize\n      0x04\n      tag_119\n      jump\t// in\n    tag_288:\n      tag_289\n      jump\t// in\n        /* \"contracts/reference.sol\":26184:27007  function setBuyTaxes(uint256 marketingFee, uint256 liquidityFee, uint256 teamFee, uint256 ecosystemFee) external onlyOwner() {... */\n    tag_53:\n      callvalue\n      dup1\n      iszero\n      tag_290\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_290:\n      pop\n      tag_94\n      tag_292\n      calldatasize\n      0x04\n      tag_293\n      jump\t// in\n    tag_292:\n      tag_294\n      jump\t// in\n        /* \"contracts/reference.sol\":25215:25327  function includeInFee(address account) external onlyOwner() {... */\n    tag_54:\n      callvalue\n      dup1\n      iszero\n      tag_295\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_295:\n      pop\n      tag_94\n      tag_297\n      calldatasize\n      0x04\n      tag_128\n      jump\t// in\n    tag_297:\n      tag_298\n      jump\t// in\n        /* \"contracts/reference.sol\":3302:3500  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_55:\n      callvalue\n      dup1\n      iszero\n      tag_299\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_299:\n      pop\n      tag_94\n      tag_301\n      calldatasize\n      0x04\n      tag_128\n      jump\t// in\n    tag_301:\n      tag_302\n      jump\t// in\n        /* \"contracts/reference.sol\":27013:27851  function setSellTaxes(uint256 marketingFee, uint256 liquidityFee, uint256 teamFee, uint256 ecosystemFee) external onlyOwner() {... */\n    tag_56:\n      callvalue\n      dup1\n      iszero\n      tag_303\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_303:\n      pop\n      tag_94\n      tag_305\n      calldatasize\n      0x04\n      tag_293\n      jump\t// in\n    tag_305:\n      tag_306\n      jump\t// in\n        /* \"contracts/reference.sol\":11079:11110  bool public tradingOpen = false */\n    tag_57:\n      callvalue\n      dup1\n      iszero\n      tag_307\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_307:\n      pop\n      sload(0x28)\n      tag_87\n      swap1\n      0xff\n      and\n      dup2\n      jump\n        /* \"contracts/reference.sol\":25438:25604  function addBot(address account) external onlyOwner() {... */\n    tag_58:\n      callvalue\n      dup1\n      iszero\n      tag_311\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_311:\n      pop\n      tag_94\n      tag_313\n      calldatasize\n      0x04\n      tag_128\n      jump\t// in\n    tag_313:\n      tag_314\n      jump\t// in\n        /* \"contracts/reference.sol\":13387:13547  function approve(address spender, uint256 amount) external override returns (bool) {... */\n    tag_90:\n        /* \"contracts/reference.sol\":13464:13468  bool */\n      0x00\n        /* \"contracts/reference.sol\":13480:13519  _approve(_msgSender(), spender, amount) */\n      tag_317\n        /* \"contracts/reference.sol\":818:828  msg.sender */\n      caller\n        /* \"contracts/reference.sol\":13503:13510  spender */\n      dup5\n        /* \"contracts/reference.sol\":13512:13518  amount */\n      dup5\n        /* \"contracts/reference.sol\":13480:13488  _approve */\n      tag_320\n        /* \"contracts/reference.sol\":13480:13519  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_317:\n      pop\n        /* \"contracts/reference.sol\":13536:13540  true */\n      0x01\n        /* \"contracts/reference.sol\":13387:13547  function approve(address spender, uint256 amount) external override returns (bool) {... */\n    tag_316:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/reference.sol\":28249:28369  function updateTeamAddress(address payable teamAddress) external onlyOwner() {... */\n    tag_97:\n        /* \"contracts/reference.sol\":3076:3082  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/reference.sol\":818:828  msg.sender */\n      caller\n        /* \"contracts/reference.sol\":3076:3098  _owner == _msgSender() */\n      eq\n        /* \"contracts/reference.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_323\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_324\n      swap1\n      tag_325\n      jump\t// in\n    tag_324:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_323:\n        /* \"contracts/reference.sol\":28336:28348  _teamAddress */\n      0x22\n        /* \"contracts/reference.sol\":28336:28362  _teamAddress = teamAddress */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/reference.sol\":28249:28369  function updateTeamAddress(address payable teamAddress) external onlyOwner() {... */\n      jump\t// out\n        /* \"contracts/reference.sol\":28099:28239  function updateMarketingAddress(address payable marketingAddress) external onlyOwner() {... */\n    tag_105:\n        /* \"contracts/reference.sol\":3076:3082  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/reference.sol\":818:828  msg.sender */\n      caller\n        /* \"contracts/reference.sol\":3076:3098  _owner == _msgSender() */\n      eq\n        /* \"contracts/reference.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_330\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_324\n      swap1\n      tag_325\n      jump\t// in\n    tag_330:\n        /* \"contracts/reference.sol\":28196:28213  _marketingAddress */\n      0x21\n        /* \"contracts/reference.sol\":28196:28232  _marketingAddress = marketingAddress */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/reference.sol\":28099:28239  function updateMarketingAddress(address payable marketingAddress) external onlyOwner() {... */\n      jump\t// out\n        /* \"contracts/reference.sol\":13553:13861  function transferFrom(address sender, address recipient, uint256 amount) external override returns (bool) {... */\n    tag_110:\n        /* \"contracts/reference.sol\":13653:13657  bool */\n      0x00\n        /* \"contracts/reference.sol\":13669:13705  _transfer(sender, recipient, amount) */\n      tag_334\n        /* \"contracts/reference.sol\":13679:13685  sender */\n      dup5\n        /* \"contracts/reference.sol\":13687:13696  recipient */\n      dup5\n        /* \"contracts/reference.sol\":13698:13704  amount */\n      dup5\n        /* \"contracts/reference.sol\":13669:13678  _transfer */\n      tag_335\n        /* \"contracts/reference.sol\":13669:13705  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_334:\n        /* \"contracts/reference.sol\":13715:13833  _approve(sender,_msgSender(),_allowances[sender][_msgSender()].sub(amount,\"ERC20: transfer amount exceeds allowance\")) */\n      tag_336\n        /* \"contracts/reference.sol\":13724:13730  sender */\n      dup5\n        /* \"contracts/reference.sol\":818:828  msg.sender */\n      caller\n        /* \"contracts/reference.sol\":13744:13832  _allowances[sender][_msgSender()].sub(amount,\"ERC20: transfer amount exceeds allowance\") */\n      tag_338\n        /* \"contracts/reference.sol\":13782:13788  amount */\n      dup6\n        /* \"contracts/reference.sol\":13744:13832  _allowances[sender][_msgSender()].sub(amount,\"ERC20: transfer amount exceeds allowance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330\n      0x28\n      swap2\n      codecopy\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/reference.sol\":13744:13763  _allowances[sender] */\n      dup11\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/reference.sol\":13744:13755  _allowances */\n      0x03\n        /* \"contracts/reference.sol\":13744:13763  _allowances[sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/reference.sol\":818:828  msg.sender */\n      caller\n        /* \"contracts/reference.sol\":13744:13777  _allowances[sender][_msgSender()] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      swap2\n      swap1\n        /* \"contracts/reference.sol\":13744:13781  _allowances[sender][_msgSender()].sub */\n      tag_340\n        /* \"contracts/reference.sol\":13744:13832  _allowances[sender][_msgSender()].sub(amount,\"ERC20: transfer amount exceeds allowance\") */\n      jump\t// in\n    tag_338:\n        /* \"contracts/reference.sol\":13715:13723  _approve */\n      tag_320\n        /* \"contracts/reference.sol\":13715:13833  _approve(sender,_msgSender(),_allowances[sender][_msgSender()].sub(amount,\"ERC20: transfer amount exceeds allowance\")) */\n      jump\t// in\n    tag_336:\n      pop\n        /* \"contracts/reference.sol\":13850:13854  true */\n      0x01\n        /* \"contracts/reference.sol\":13553:13861  function transferFrom(address sender, address recipient, uint256 amount) external override returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/reference.sol\":25855:26178  function setMaxWalletAmount(uint256 maxWalletAmount) external onlyOwner() {... */\n    tag_120:\n        /* \"contracts/reference.sol\":3076:3082  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/reference.sol\":818:828  msg.sender */\n      caller\n        /* \"contracts/reference.sol\":3076:3098  _owner == _msgSender() */\n      eq\n        /* \"contracts/reference.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_343\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_324\n      swap1\n      tag_325\n      jump\t// in\n    tag_343:\n        /* \"contracts/reference.sol\":25966:25983  _tTotal.div(1000) */\n      tag_346\n        /* \"contracts/reference.sol\":8637:8655  1000000000 * 10**9 */\n      0x0de0b6b3a7640000\n        /* \"contracts/reference.sol\":25978:25982  1000 */\n      0x03e8\n        /* \"contracts/reference.sol\":25966:25977  _tTotal.div */\n      tag_347\n        /* \"contracts/reference.sol\":25966:25983  _tTotal.div(1000) */\n      jump\t// in\n    tag_346:\n        /* \"contracts/reference.sol\":25947:25962  maxWalletAmount */\n      dup2\n        /* \"contracts/reference.sol\":25947:25983  maxWalletAmount >= _tTotal.div(1000) */\n      lt\n      iszero\n        /* \"contracts/reference.sol\":25939:26030  require(maxWalletAmount >= _tTotal.div(1000), \"Amount must be greater than 0.1% of supply\") */\n      tag_348\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11131:11133   */\n      0x20\n        /* \"contracts/reference.sol\":25939:26030  require(maxWalletAmount >= _tTotal.div(1000), \"Amount must be greater than 0.1% of supply\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11113:11134   */\n      mstore\n        /* \"#utility.yul\":11170:11172   */\n      0x2a\n        /* \"#utility.yul\":11150:11168   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11143:11173   */\n      mstore\n        /* \"#utility.yul\":11209:11243   */\n      0x416d6f756e74206d7573742062652067726561746572207468616e20302e3125\n        /* \"#utility.yul\":11189:11207   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11182:11244   */\n      mstore\n      shl(0xb0, 0x206f6620737570706c79)\n        /* \"#utility.yul\":11260:11278   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":11253:11293   */\n      mstore\n        /* \"#utility.yul\":11310:11329   */\n      0x84\n      add\n        /* \"contracts/reference.sol\":25939:26030  require(maxWalletAmount >= _tTotal.div(1000), \"Amount must be greater than 0.1% of supply\") */\n      tag_324\n        /* \"#utility.yul\":11103:11335   */\n      jump\n        /* \"contracts/reference.sol\":25939:26030  require(maxWalletAmount >= _tTotal.div(1000), \"Amount must be greater than 0.1% of supply\") */\n    tag_348:\n        /* \"contracts/reference.sol\":8637:8655  1000000000 * 10**9 */\n      0x0de0b6b3a7640000\n        /* \"contracts/reference.sol\":26048:26063  maxWalletAmount */\n      dup2\n        /* \"contracts/reference.sol\":26048:26074  maxWalletAmount <= _tTotal */\n      gt\n      iszero\n        /* \"contracts/reference.sol\":26040:26127  require(maxWalletAmount <= _tTotal, \"Amount must be less than or equal to totalSupply\") */\n      tag_351\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13189:13191   */\n      0x20\n        /* \"contracts/reference.sol\":26040:26127  require(maxWalletAmount <= _tTotal, \"Amount must be less than or equal to totalSupply\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13171:13192   */\n      mstore\n        /* \"#utility.yul\":13228:13230   */\n      0x30\n        /* \"#utility.yul\":13208:13226   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13201:13231   */\n      mstore\n        /* \"#utility.yul\":13267:13301   */\n      0x416d6f756e74206d757374206265206c657373207468616e206f722065717561\n        /* \"#utility.yul\":13247:13265   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13240:13302   */\n      mstore\n      shl(0x80, 0x6c20746f20746f74616c537570706c79)\n        /* \"#utility.yul\":13318:13336   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":13311:13357   */\n      mstore\n        /* \"#utility.yul\":13374:13393   */\n      0x84\n      add\n        /* \"contracts/reference.sol\":26040:26127  require(maxWalletAmount <= _tTotal, \"Amount must be less than or equal to totalSupply\") */\n      tag_324\n        /* \"#utility.yul\":13161:13399   */\n      jump\n        /* \"contracts/reference.sol\":26040:26127  require(maxWalletAmount <= _tTotal, \"Amount must be less than or equal to totalSupply\") */\n    tag_351:\n        /* \"contracts/reference.sol\":26137:26153  _maxWalletAmount */\n      0x07\n        /* \"contracts/reference.sol\":26137:26171  _maxWalletAmount = maxWalletAmount */\n      sstore\n        /* \"contracts/reference.sol\":25855:26178  function setMaxWalletAmount(uint256 maxWalletAmount) external onlyOwner() {... */\n      jump\t// out\n        /* \"contracts/reference.sol\":22762:22944  function manualSendToken(address token) external onlyOwner() {... */\n    tag_129:\n        /* \"contracts/reference.sol\":3076:3082  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/reference.sol\":818:828  msg.sender */\n      caller\n        /* \"contracts/reference.sol\":3076:3098  _owner == _msgSender() */\n      eq\n        /* \"contracts/reference.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_356\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_324\n      swap1\n      tag_325\n      jump\t// in\n    tag_356:\n        /* \"contracts/reference.sol\":22850:22888  IERC20(token).balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/reference.sol\":22882:22886  this */\n      address\n        /* \"contracts/reference.sol\":22850:22888  IERC20(token).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4559:4610   */\n      mstore\n        /* \"contracts/reference.sol\":22833:22847  uint256 amount */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/reference.sol\":22850:22873  IERC20(token).balanceOf */\n      dup4\n      and\n      swap1\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":4532:4550   */\n      0x24\n      add\n        /* \"contracts/reference.sol\":22850:22888  IERC20(token).balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_360\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_360:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_362\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_362:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_363\n      swap2\n      swap1\n      tag_364\n      jump\t// in\n    tag_363:\n        /* \"contracts/reference.sol\":22833:22888  uint256 amount = IERC20(token).balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/reference.sol\":22905:22910  token */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/reference.sol\":22898:22920  IERC20(token).transfer */\n      and\n      0xa9059cbb\n        /* \"contracts/reference.sol\":22921:22928  owner() */\n      tag_365\n        /* \"contracts/reference.sol\":2992:2999  address */\n      0x00\n        /* \"contracts/reference.sol\":3018:3024  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"contracts/reference.sol\":2954:3031  function owner() public view returns (address) {... */\n      jump\n        /* \"contracts/reference.sol\":22921:22928  owner() */\n    tag_365:\n        /* \"contracts/reference.sol\":22898:22937  IERC20(token).transfer(owner(), amount) */\n      mload(0x40)\n      not(sub(shl(0xe0, 0x01), 0x01))\n      0xe0\n      dup5\n      swap1\n      shl\n      and\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4813:4845   */\n      swap1\n      swap2\n      and\n        /* \"contracts/reference.sol\":22898:22937  IERC20(token).transfer(owner(), amount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4795:4846   */\n      mstore\n        /* \"#utility.yul\":4862:4880   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":4855:4889   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":4768:4786   */\n      0x44\n      add\n        /* \"contracts/reference.sol\":22898:22937  IERC20(token).transfer(owner(), amount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_368\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_368:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_370\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_370:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_371\n      swap2\n      swap1\n      tag_372\n      jump\t// in\n    tag_371:\n      pop\n        /* \"contracts/reference.sol\":3145:3146  _ */\n      pop\n        /* \"contracts/reference.sol\":22762:22944  function manualSendToken(address token) external onlyOwner() {... */\n      pop\n      jump\t// out\n        /* \"contracts/reference.sol\":22083:22225  function disableToken() external onlyOwner() {... */\n    tag_154:\n        /* \"contracts/reference.sol\":3076:3082  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/reference.sol\":818:828  msg.sender */\n      caller\n        /* \"contracts/reference.sol\":3076:3098  _owner == _msgSender() */\n      eq\n        /* \"contracts/reference.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_377\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_324\n      swap1\n      tag_325\n      jump\t// in\n    tag_377:\n        /* \"contracts/reference.sol\":22146:22154  canPause */\n      sload(0x28)\n      0x010000\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/reference.sol\":22138:22189  require(canPause, \"this contract cannot be paused\") */\n      tag_380\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7299:7301   */\n      0x20\n        /* \"contracts/reference.sol\":22138:22189  require(canPause, \"this contract cannot be paused\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7281:7302   */\n      mstore\n        /* \"#utility.yul\":7338:7340   */\n      0x1e\n        /* \"#utility.yul\":7318:7336   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7311:7341   */\n      mstore\n        /* \"#utility.yul\":7377:7409   */\n      0x7468697320636f6e74726163742063616e6e6f74206265207061757365640000\n        /* \"#utility.yul\":7357:7375   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7350:7410   */\n      mstore\n        /* \"#utility.yul\":7427:7445   */\n      0x64\n      add\n        /* \"contracts/reference.sol\":22138:22189  require(canPause, \"this contract cannot be paused\") */\n      tag_324\n        /* \"#utility.yul\":7271:7451   */\n      jump\n        /* \"contracts/reference.sol\":22138:22189  require(canPause, \"this contract cannot be paused\") */\n    tag_380:\n        /* \"contracts/reference.sol\":22199:22210  tradingOpen */\n      0x28\n        /* \"contracts/reference.sol\":22199:22218  tradingOpen = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"contracts/reference.sol\":22083:22225  function disableToken() external onlyOwner() {... */\n      jump\t// out\n        /* \"contracts/reference.sol\":25098:25209  function excludeFromFee(address account) public onlyOwner() {... */\n    tag_158:\n        /* \"contracts/reference.sol\":3076:3082  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/reference.sol\":818:828  msg.sender */\n      caller\n        /* \"contracts/reference.sol\":3076:3098  _owner == _msgSender() */\n      eq\n        /* \"contracts/reference.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_385\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_324\n      swap1\n      tag_325\n      jump\t// in\n    tag_385:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/reference.sol\":25168:25195  _isExcludedFromFee[account] */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/reference.sol\":25168:25186  _isExcludedFromFee */\n      0x04\n        /* \"contracts/reference.sol\":25168:25195  _isExcludedFromFee[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/reference.sol\":25168:25202  _isExcludedFromFee[account] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"contracts/reference.sol\":25198:25202  true */\n      0x01\n        /* \"contracts/reference.sol\":25168:25202  _isExcludedFromFee[account] = true */\n      or\n      swap1\n      sstore\n        /* \"contracts/reference.sol\":25098:25209  function excludeFromFee(address account) public onlyOwner() {... */\n      jump\t// out\n        /* \"contracts/reference.sol\":25337:25432  function removeBot(address account) external onlyOwner() {... */\n    tag_167:\n        /* \"contracts/reference.sol\":3076:3082  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/reference.sol\":818:828  msg.sender */\n      caller\n        /* \"contracts/reference.sol\":3076:3098  _owner == _msgSender() */\n      eq\n        /* \"contracts/reference.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_390\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_324\n      swap1\n      tag_325\n      jump\t// in\n    tag_390:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/reference.sol\":25404:25417  bots[account] */\n      and\n        /* \"contracts/reference.sol\":25420:25425  false */\n      0x00\n        /* \"contracts/reference.sol\":25404:25417  bots[account] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/reference.sol\":25404:25408  bots */\n      0x20\n        /* \"contracts/reference.sol\":25404:25417  bots[account] */\n      dup1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/reference.sol\":25404:25425  bots[account] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"contracts/reference.sol\":25337:25432  function removeBot(address account) external onlyOwner() {... */\n      jump\t// out\n        /* \"contracts/reference.sol\":22231:22316  function disablePauseAbility() onlyOwner() external {... */\n    tag_170:\n        /* \"contracts/reference.sol\":3076:3082  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/reference.sol\":818:828  msg.sender */\n      caller\n        /* \"contracts/reference.sol\":3076:3098  _owner == _msgSender() */\n      eq\n        /* \"contracts/reference.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_395\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_324\n      swap1\n      tag_325\n      jump\t// in\n    tag_395:\n        /* \"contracts/reference.sol\":22293:22301  canPause */\n      0x28\n        /* \"contracts/reference.sol\":22293:22309  canPause = false */\n      dup1\n      sload\n      not(0xff0000)\n      and\n      swap1\n      sstore\n        /* \"contracts/reference.sol\":22231:22316  function disablePauseAbility() onlyOwner() external {... */\n      jump\t// out\n        /* \"contracts/reference.sol\":22530:22756  function manualsend() external onlyOwner() {... */\n    tag_177:\n        /* \"contracts/reference.sol\":3076:3082  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/reference.sol\":818:828  msg.sender */\n      caller\n        /* \"contracts/reference.sol\":3076:3098  _owner == _msgSender() */\n      eq\n        /* \"contracts/reference.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_400\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_324\n      swap1\n      tag_325\n      jump\t// in\n    tag_400:\n        /* \"contracts/reference.sol\":22612:22633  address(this).balance */\n      selfbalance\n        /* \"contracts/reference.sol\":22647:22669  contractETHBalance > 0 */\n      dup1\n      iszero\n        /* \"contracts/reference.sol\":22643:22750  if (contractETHBalance > 0) {... */\n      tag_403\n      jumpi\n        /* \"contracts/reference.sol\":2992:2999  address */\n      0x00\n        /* \"contracts/reference.sol\":3018:3024  _owner */\n      dup1\n      sload\n        /* \"contracts/reference.sol\":22685:22739  payable(address(owner())).transfer(contractETHBalance) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/reference.sol\":3018:3024  _owner */\n      swap1\n      swap2\n      and\n      swap2\n        /* \"contracts/reference.sol\":22685:22739  payable(address(owner())).transfer(contractETHBalance) */\n      dup4\n      iszero\n      0x08fc\n      mul\n      swap2\n        /* \"contracts/reference.sol\":22720:22738  contractETHBalance */\n      dup5\n      swap2\n        /* \"contracts/reference.sol\":22685:22739  payable(address(owner())).transfer(contractETHBalance) */\n      dup2\n        /* \"contracts/reference.sol\":2992:2999  address */\n      dup2\n        /* \"contracts/reference.sol\":22685:22739  payable(address(owner())).transfer(contractETHBalance) */\n      dup2\n        /* \"contracts/reference.sol\":22720:22738  contractETHBalance */\n      dup6\n        /* \"contracts/reference.sol\":3018:3024  _owner */\n      dup9\n        /* \"contracts/reference.sol\":22685:22739  payable(address(owner())).transfer(contractETHBalance) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_406\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_406:\n      pop\n        /* \"contracts/reference.sol\":22643:22750  if (contractETHBalance > 0) {... */\n    tag_403:\n        /* \"contracts/reference.sol\":3145:3146  _ */\n      pop\n        /* \"contracts/reference.sol\":22530:22756  function manualsend() external onlyOwner() {... */\n      jump\t// out\n        /* \"contracts/reference.sol\":3851:3998  function renounceOwnership() public virtual onlyOwner() {... */\n    tag_185:\n        /* \"contracts/reference.sol\":3076:3082  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/reference.sol\":818:828  msg.sender */\n      caller\n        /* \"contracts/reference.sol\":3076:3098  _owner == _msgSender() */\n      eq\n        /* \"contracts/reference.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_410\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_324\n      swap1\n      tag_325\n      jump\t// in\n    tag_410:\n        /* \"contracts/reference.sol\":3959:3960  0 */\n      0x00\n        /* \"contracts/reference.sol\":3943:3949  _owner */\n      dup1\n      sload\n        /* \"contracts/reference.sol\":3922:3962  OwnershipTransferred(_owner, address(0)) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/reference.sol\":3943:3949  _owner */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/reference.sol\":3922:3962  OwnershipTransferred(_owner, address(0)) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"contracts/reference.sol\":3959:3960  0 */\n      dup4\n      swap1\n        /* \"contracts/reference.sol\":3922:3962  OwnershipTransferred(_owner, address(0)) */\n      log3\n        /* \"contracts/reference.sol\":3989:3990  0 */\n      0x00\n        /* \"contracts/reference.sol\":3972:3991  _owner = address(0) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      sstore\n        /* \"contracts/reference.sol\":3851:3998  function renounceOwnership() public virtual onlyOwner() {... */\n      jump\t// out\n        /* \"contracts/reference.sol\":28623:28796  function configureStrongHands(bool enabled, uint32 duration) external onlyOwner {... */\n    tag_190:\n        /* \"contracts/reference.sol\":3076:3082  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/reference.sol\":818:828  msg.sender */\n      caller\n        /* \"contracts/reference.sol\":3076:3098  _owner == _msgSender() */\n      eq\n        /* \"contracts/reference.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_415\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_324\n      swap1\n      tag_325\n      jump\t// in\n    tag_415:\n        /* \"contracts/reference.sol\":28713:28721  cooldown */\n      0x1a\n        /* \"contracts/reference.sol\":28713:28739  cooldown.enabled = enabled */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup4\n      iszero\n      iszero\n      or\n      swap1\n      sstore\n        /* \"contracts/reference.sol\":28769:28789  duration * 1 minutes */\n      tag_418\n        /* \"contracts/reference.sol\":28769:28777  duration */\n      dup2\n        /* \"contracts/reference.sol\":28780:28789  1 minutes */\n      0x3c\n        /* \"contracts/reference.sol\":28769:28789  duration * 1 minutes */\n      tag_419\n      jump\t// in\n    tag_418:\n        /* \"contracts/reference.sol\":28749:28757  cooldown */\n      0x1a\n        /* \"contracts/reference.sol\":28749:28789  cooldown.duration = duration * 1 minutes */\n      dup1\n      sload\n      0xffffffff\n      swap3\n      swap1\n      swap3\n      and\n      0x0100\n      mul\n      not(0xffffffff00)\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n      pop\n      pop\n        /* \"contracts/reference.sol\":28623:28796  function configureStrongHands(bool enabled, uint32 duration) external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/reference.sol\":21998:22077  function enableToken() external onlyOwner() {... */\n    tag_210:\n        /* \"contracts/reference.sol\":3076:3082  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/reference.sol\":818:828  msg.sender */\n      caller\n        /* \"contracts/reference.sol\":3076:3098  _owner == _msgSender() */\n      eq\n        /* \"contracts/reference.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_423\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_324\n      swap1\n      tag_325\n      jump\t// in\n    tag_423:\n        /* \"contracts/reference.sol\":22052:22063  tradingOpen */\n      0x28\n        /* \"contracts/reference.sol\":22052:22070  tradingOpen = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"contracts/reference.sol\":22066:22070  true */\n      0x01\n        /* \"contracts/reference.sol\":22052:22070  tradingOpen = true */\n      or\n      swap1\n      sstore\n        /* \"contracts/reference.sol\":21998:22077  function enableToken() external onlyOwner() {... */\n      jump\t// out\n        /* \"contracts/reference.sol\":19677:20093  function pairPrice() public view returns (uint256) {... */\n    tag_213:\n        /* \"contracts/reference.sol\":19719:19726  uint256 */\n      0x00\n        /* \"contracts/reference.sol\":19739:19755  uint112 reserve0 */\n      dup1\n        /* \"contracts/reference.sol\":19757:19773  uint112 reserve1 */\n      0x00\n        /* \"contracts/reference.sol\":19793:19806  uniswapV2Pair */\n      0x26\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/reference.sol\":19778:19819  IUniswapV2Pair(uniswapV2Pair).getReserves */\n      and\n      0x0902f1ac\n        /* \"contracts/reference.sol\":19778:19821  IUniswapV2Pair(uniswapV2Pair).getReserves() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x60\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_427\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_427:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_429\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_429:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_430\n      swap2\n      swap1\n      tag_431\n      jump\t// in\n    tag_430:\n        /* \"contracts/reference.sol\":19738:19821  (uint112 reserve0, uint112 reserve1,) = IUniswapV2Pair(uniswapV2Pair).getReserves() */\n      pop\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/reference.sol\":19835:19843  reserve0 */\n      dup2\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"contracts/reference.sol\":19835:19848  reserve0 == 0 */\n      and\n        /* \"contracts/reference.sol\":19847:19848  0 */\n      0x00\n        /* \"contracts/reference.sol\":19835:19848  reserve0 == 0 */\n      eq\n        /* \"contracts/reference.sol\":19835:19865  reserve0 == 0 || reserve1 == 0 */\n      dup1\n      tag_432\n      jumpi\n      pop\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"contracts/reference.sol\":19852:19865  reserve1 == 0 */\n      dup2\n      and\n      iszero\n        /* \"contracts/reference.sol\":19835:19865  reserve0 == 0 || reserve1 == 0 */\n    tag_432:\n        /* \"contracts/reference.sol\":19831:19875  if (reserve0 == 0 || reserve1 == 0) return 0 */\n      iszero\n      tag_433\n      jumpi\n        /* \"contracts/reference.sol\":19874:19875  0 */\n      0x00\n        /* \"contracts/reference.sol\":19867:19875  return 0 */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/reference.sol\":19677:20093  function pairPrice() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/reference.sol\":19831:19875  if (reserve0 == 0 || reserve1 == 0) return 0 */\n    tag_433:\n        /* \"contracts/reference.sol\":19916:19929  uniswapV2Pair */\n      sload(0x26)\n        /* \"contracts/reference.sol\":19901:19939  IUniswapV2Pair(uniswapV2Pair).token0() */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x0dfe1681)\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"contracts/reference.sol\":19951:19955  this */\n      address\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/reference.sol\":19916:19929  uniswapV2Pair */\n      and\n      swap2\n        /* \"contracts/reference.sol\":19901:19937  IUniswapV2Pair(uniswapV2Pair).token0 */\n      0x0dfe1681\n      swap2\n        /* \"contracts/reference.sol\":19901:19939  IUniswapV2Pair(uniswapV2Pair).token0() */\n      0x04\n      dup1\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"contracts/reference.sol\":19916:19929  uniswapV2Pair */\n      dup7\n        /* \"contracts/reference.sol\":19901:19939  IUniswapV2Pair(uniswapV2Pair).token0() */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_434\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_434:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_436\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_436:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_437\n      swap2\n      swap1\n      tag_438\n      jump\t// in\n    tag_437:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/reference.sol\":19901:19956  IUniswapV2Pair(uniswapV2Pair).token0() == address(this) */\n      and\n      eq\n        /* \"contracts/reference.sol\":19901:20086  IUniswapV2Pair(uniswapV2Pair).token0() == address(this) ?... */\n      tag_439\n      jumpi\n        /* \"contracts/reference.sol\":20036:20086  uint256(reserve0).mul(1e18).div(uint256(reserve1)) */\n      tag_440\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"contracts/reference.sol\":20068:20085  uint256(reserve1) */\n      dup1\n      dup4\n      and\n      swap1\n        /* \"contracts/reference.sol\":20036:20063  uint256(reserve0).mul(1e18) */\n      tag_441\n      swap1\n        /* \"contracts/reference.sol\":20036:20053  uint256(reserve0) */\n      dup6\n      and\n        /* \"contracts/reference.sol\":20058:20062  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/reference.sol\":20036:20057  uint256(reserve0).mul */\n      tag_442\n        /* \"contracts/reference.sol\":20036:20063  uint256(reserve0).mul(1e18) */\n      jump\t// in\n    tag_441:\n        /* \"contracts/reference.sol\":20036:20067  uint256(reserve0).mul(1e18).div */\n      swap1\n      tag_347\n        /* \"contracts/reference.sol\":20036:20086  uint256(reserve0).mul(1e18).div(uint256(reserve1)) */\n      jump\t// in\n    tag_440:\n        /* \"contracts/reference.sol\":19901:20086  IUniswapV2Pair(uniswapV2Pair).token0() == address(this) ?... */\n      jump(tag_444)\n    tag_439:\n        /* \"contracts/reference.sol\":19971:20021  uint256(reserve1).mul(1e18).div(uint256(reserve0)) */\n      tag_444\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"contracts/reference.sol\":20003:20020  uint256(reserve0) */\n      dup1\n      dup5\n      and\n      swap1\n        /* \"contracts/reference.sol\":19971:19998  uint256(reserve1).mul(1e18) */\n      tag_441\n      swap1\n        /* \"contracts/reference.sol\":19971:19988  uint256(reserve1) */\n      dup5\n      and\n        /* \"contracts/reference.sol\":19993:19997  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/reference.sol\":19971:19992  uint256(reserve1).mul */\n      tag_442\n        /* \"contracts/reference.sol\":19971:19998  uint256(reserve1).mul(1e18) */\n      jump\t// in\n        /* \"contracts/reference.sol\":19971:20021  uint256(reserve1).mul(1e18).div(uint256(reserve0)) */\n    tag_444:\n        /* \"contracts/reference.sol\":19894:20086  return IUniswapV2Pair(uniswapV2Pair).token0() == address(this) ?... */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/reference.sol\":19677:20093  function pairPrice() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/reference.sol\":27857:27943  function disableTaxChange() onlyOwner() external {... */\n    tag_221:\n        /* \"contracts/reference.sol\":3076:3082  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/reference.sol\":818:828  msg.sender */\n      caller\n        /* \"contracts/reference.sol\":3076:3098  _owner == _msgSender() */\n      eq\n        /* \"contracts/reference.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_449\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_324\n      swap1\n      tag_325\n      jump\t// in\n    tag_449:\n        /* \"contracts/reference.sol\":27916:27928  canChangeTax */\n      0x28\n        /* \"contracts/reference.sol\":27916:27936  canChangeTax = false */\n      dup1\n      sload\n      not(0xff00000000)\n      and\n      swap1\n      sstore\n        /* \"contracts/reference.sol\":27857:27943  function disableTaxChange() onlyOwner() external {... */\n      jump\t// out\n        /* \"contracts/reference.sol\":28802:29340  function cooldownRemaining(address account) public view returns (... */\n    tag_225:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/reference.sol\":29005:29033  cooldown.walletList[account] */\n      dup2\n      and\n        /* \"contracts/reference.sol\":28876:28889  uint256 days_ */\n      0x00\n        /* \"contracts/reference.sol\":29005:29033  cooldown.walletList[account] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/reference.sol\":29005:29024  cooldown.walletList */\n      0x1b\n        /* \"contracts/reference.sol\":29005:29033  cooldown.walletList[account] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"contracts/reference.sol\":28876:28889  uint256 days_ */\n      dup2\n      swap1\n      dup2\n      swap1\n      dup2\n      swap1\n      dup2\n      swap1\n        /* \"contracts/reference.sol\":29036:29051  block.timestamp */\n      timestamp\n      lt\n        /* \"contracts/reference.sol\":29005:29120  cooldown.walletList[account] > block.timestamp ? ... */\n      tag_453\n      jumpi\n        /* \"contracts/reference.sol\":29119:29120  0 */\n      0x00\n        /* \"contracts/reference.sol\":29005:29120  cooldown.walletList[account] > block.timestamp ? ... */\n      jump(tag_455)\n    tag_453:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/reference.sol\":29067:29095  cooldown.walletList[account] */\n      dup7\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/reference.sol\":29067:29086  cooldown.walletList */\n      0x1b\n        /* \"contracts/reference.sol\":29067:29095  cooldown.walletList[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/reference.sol\":29067:29116  cooldown.walletList[account].sub(block.timestamp) */\n      tag_455\n      swap1\n        /* \"contracts/reference.sol\":29100:29115  block.timestamp */\n      timestamp\n        /* \"contracts/reference.sol\":29067:29099  cooldown.walletList[account].sub */\n      tag_456\n        /* \"contracts/reference.sol\":29067:29116  cooldown.walletList[account].sub(block.timestamp) */\n      jump\t// in\n    tag_455:\n        /* \"contracts/reference.sol\":28985:29120  uint256 remaining = cooldown.walletList[account] > block.timestamp ? ... */\n      swap1\n      pop\n        /* \"contracts/reference.sol\":29147:29167  remaining.div(86400) */\n      tag_457\n        /* \"contracts/reference.sol\":28985:29120  uint256 remaining = cooldown.walletList[account] > block.timestamp ? ... */\n      dup2\n        /* \"contracts/reference.sol\":29161:29166  86400 */\n      0x015180\n        /* \"contracts/reference.sol\":29147:29160  remaining.div */\n      tag_347\n        /* \"contracts/reference.sol\":29147:29167  remaining.div(86400) */\n      jump\t// in\n    tag_457:\n        /* \"contracts/reference.sol\":29139:29167  days_ = remaining.div(86400) */\n      swap5\n      pop\n        /* \"contracts/reference.sol\":29177:29195  remaining %= 86400 */\n      tag_458\n        /* \"contracts/reference.sol\":29190:29195  86400 */\n      0x015180\n        /* \"contracts/reference.sol\":29177:29195  remaining %= 86400 */\n      dup3\n      tag_459\n      jump\t// in\n    tag_458:\n      swap1\n      pop\n        /* \"contracts/reference.sol\":29214:29233  remaining.div(3600) */\n      tag_460\n        /* \"contracts/reference.sol\":29177:29195  remaining %= 86400 */\n      dup2\n        /* \"contracts/reference.sol\":29228:29232  3600 */\n      0x0e10\n        /* \"contracts/reference.sol\":29214:29227  remaining.div */\n      tag_347\n        /* \"contracts/reference.sol\":29214:29233  remaining.div(3600) */\n      jump\t// in\n    tag_460:\n        /* \"contracts/reference.sol\":29205:29233  hours_ = remaining.div(3600) */\n      swap4\n      pop\n        /* \"contracts/reference.sol\":29243:29260  remaining %= 3600 */\n      tag_461\n        /* \"contracts/reference.sol\":29256:29260  3600 */\n      0x0e10\n        /* \"contracts/reference.sol\":29243:29260  remaining %= 3600 */\n      dup3\n      tag_459\n      jump\t// in\n    tag_461:\n      swap1\n      pop\n        /* \"contracts/reference.sol\":29281:29298  remaining.div(60) */\n      tag_462\n        /* \"contracts/reference.sol\":29243:29260  remaining %= 3600 */\n      dup2\n        /* \"contracts/reference.sol\":29295:29297  60 */\n      0x3c\n        /* \"contracts/reference.sol\":29281:29294  remaining.div */\n      tag_347\n        /* \"contracts/reference.sol\":29281:29298  remaining.div(60) */\n      jump\t// in\n    tag_462:\n        /* \"contracts/reference.sol\":29270:29298  minutes_ = remaining.div(60) */\n      swap3\n      pop\n        /* \"contracts/reference.sol\":29319:29333  remaining % 60 */\n      tag_463\n        /* \"contracts/reference.sol\":29331:29333  60 */\n      0x3c\n        /* \"contracts/reference.sol\":29319:29328  remaining */\n      dup3\n        /* \"contracts/reference.sol\":29319:29333  remaining % 60 */\n      tag_459\n      jump\t// in\n    tag_463:\n        /* \"contracts/reference.sol\":29308:29333  seconds_ = remaining % 60 */\n      swap2\n      pop\n        /* \"contracts/reference.sol\":28802:29340  function cooldownRemaining(address account) public view returns (... */\n      pop\n      swap2\n      swap4\n      pop\n      swap2\n      swap4\n      jump\t// out\n        /* \"contracts/reference.sol\":25709:25849  function setTransferTransactionMultiplier(uint256 _multiplier) external onlyOwner() {... */\n    tag_231:\n        /* \"contracts/reference.sol\":3076:3082  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/reference.sol\":818:828  msg.sender */\n      caller\n        /* \"contracts/reference.sol\":3076:3098  _owner == _msgSender() */\n      eq\n        /* \"contracts/reference.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_466\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_324\n      swap1\n      tag_325\n      jump\t// in\n    tag_466:\n        /* \"contracts/reference.sol\":25803:25828  transferFeeIncreaseFactor */\n      0x19\n        /* \"contracts/reference.sol\":25803:25842  transferFeeIncreaseFactor = _multiplier */\n      sstore\n        /* \"contracts/reference.sol\":25709:25849  function setTransferTransactionMultiplier(uint256 _multiplier) external onlyOwner() {... */\n      jump\t// out\n        /* \"contracts/reference.sol\":13066:13232  function transfer(address recipient, uint256 amount) external override returns (bool) {... */\n    tag_235:\n        /* \"contracts/reference.sol\":13146:13150  bool */\n      0x00\n        /* \"contracts/reference.sol\":13162:13204  _transfer(_msgSender(), recipient, amount) */\n      tag_317\n        /* \"contracts/reference.sol\":818:828  msg.sender */\n      caller\n        /* \"contracts/reference.sol\":13186:13195  recipient */\n      dup5\n        /* \"contracts/reference.sol\":13197:13203  amount */\n      dup5\n        /* \"contracts/reference.sol\":13162:13171  _transfer */\n      tag_335\n        /* \"contracts/reference.sol\":13162:13204  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n        /* \"contracts/reference.sol\":22322:22524  function manualswap() external onlyOwner() {... */\n    tag_239:\n        /* \"contracts/reference.sol\":3076:3082  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/reference.sol\":818:828  msg.sender */\n      caller\n        /* \"contracts/reference.sol\":3076:3098  _owner == _msgSender() */\n      eq\n        /* \"contracts/reference.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_474\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_324\n      swap1\n      tag_325\n      jump\t// in\n    tag_474:\n        /* \"contracts/reference.sol\":22419:22423  this */\n      address\n        /* \"contracts/reference.sol\":22375:22398  uint256 contractBalance */\n      0x00\n        /* \"contracts/reference.sol\":12929:12947  _balances[account] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/reference.sol\":12929:12938  _balances */\n      0x02\n        /* \"contracts/reference.sol\":12929:12947  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/reference.sol\":22439:22458  contractBalance > 0 */\n      dup1\n      iszero\n        /* \"contracts/reference.sol\":22435:22518  if (contractBalance > 0) {... */\n      tag_403\n      jumpi\n        /* \"contracts/reference.sol\":22474:22507  swapTokensForEth(contractBalance) */\n      tag_403\n        /* \"contracts/reference.sol\":22491:22506  contractBalance */\n      dup2\n        /* \"contracts/reference.sol\":22474:22490  swapTokensForEth */\n      tag_480\n        /* \"contracts/reference.sol\":22474:22507  swapTokensForEth(contractBalance) */\n      jump\t// in\n        /* \"contracts/reference.sol\":28376:28496  function updateLpRecipient(address payable lpRecipient) external onlyOwner() {... */\n    tag_264:\n        /* \"contracts/reference.sol\":3076:3082  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/reference.sol\":818:828  msg.sender */\n      caller\n        /* \"contracts/reference.sol\":3076:3098  _owner == _msgSender() */\n      eq\n        /* \"contracts/reference.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_483\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_324\n      swap1\n      tag_325\n      jump\t// in\n    tag_483:\n        /* \"contracts/reference.sol\":28463:28475  _lpRecipient */\n      0x24\n        /* \"contracts/reference.sol\":28463:28489  _lpRecipient = lpRecipient */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/reference.sol\":28376:28496  function updateLpRecipient(address payable lpRecipient) external onlyOwner() {... */\n      jump\t// out\n        /* \"contracts/reference.sol\":21825:21992  function openTrading(uint256 botBlocks) external onlyOwner() {... */\n    tag_268:\n        /* \"contracts/reference.sol\":3076:3082  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/reference.sol\":818:828  msg.sender */\n      caller\n        /* \"contracts/reference.sol\":3076:3098  _owner == _msgSender() */\n      eq\n        /* \"contracts/reference.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_488\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_324\n      swap1\n      tag_325\n      jump\t// in\n    tag_488:\n        /* \"contracts/reference.sol\":21910:21925  block.timestamp */\n      timestamp\n        /* \"contracts/reference.sol\":21896:21907  _firstBlock */\n      0x05\n        /* \"contracts/reference.sol\":21896:21925  _firstBlock = block.timestamp */\n      sstore\n        /* \"contracts/reference.sol\":21935:21945  _botBlocks */\n      0x06\n        /* \"contracts/reference.sol\":21935:21957  _botBlocks = botBlocks */\n      sstore\n        /* \"contracts/reference.sol\":21967:21978  tradingOpen */\n      0x28\n        /* \"contracts/reference.sol\":21967:21985  tradingOpen = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"contracts/reference.sol\":21981:21985  true */\n      0x01\n        /* \"contracts/reference.sol\":21967:21985  tradingOpen = true */\n      or\n      swap1\n      sstore\n        /* \"contracts/reference.sol\":21825:21992  function openTrading(uint256 botBlocks) external onlyOwner() {... */\n      jump\t// out\n        /* \"contracts/reference.sol\":25610:25699  function disableBlackListing() onlyOwner() external {... */\n    tag_271:\n        /* \"contracts/reference.sol\":3076:3082  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/reference.sol\":818:828  msg.sender */\n      caller\n        /* \"contracts/reference.sol\":3076:3098  _owner == _msgSender() */\n      eq\n        /* \"contracts/reference.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_493\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_324\n      swap1\n      tag_325\n      jump\t// in\n    tag_493:\n        /* \"contracts/reference.sol\":25672:25684  canBlackList */\n      0x28\n        /* \"contracts/reference.sol\":25672:25692  canBlackList = false */\n      dup1\n      sload\n      not(0xff000000)\n      and\n      swap1\n      sstore\n        /* \"contracts/reference.sol\":25610:25699  function disableBlackListing() onlyOwner() external {... */\n      jump\t// out\n        /* \"contracts/reference.sol\":27949:28089  function updateEcosystemAddress(address payable ecosystemAddress) external onlyOwner() {... */\n    tag_275:\n        /* \"contracts/reference.sol\":3076:3082  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/reference.sol\":818:828  msg.sender */\n      caller\n        /* \"contracts/reference.sol\":3076:3098  _owner == _msgSender() */\n      eq\n        /* \"contracts/reference.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_498\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_324\n      swap1\n      tag_325\n      jump\t// in\n    tag_498:\n        /* \"contracts/reference.sol\":28046:28063  _ecosystemAddress */\n      0x23\n        /* \"contracts/reference.sol\":28046:28082  _ecosystemAddress = ecosystemAddress */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/reference.sol\":27949:28089  function updateEcosystemAddress(address payable ecosystemAddress) external onlyOwner() {... */\n      jump\t// out\n        /* \"contracts/reference.sol\":28502:28617  function updateNumTokensToSwap(uint256 numTokens) external onlyOwner() {... */\n    tag_289:\n        /* \"contracts/reference.sol\":3076:3082  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/reference.sol\":818:828  msg.sender */\n      caller\n        /* \"contracts/reference.sol\":3076:3098  _owner == _msgSender() */\n      eq\n        /* \"contracts/reference.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_504\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_324\n      swap1\n      tag_325\n      jump\t// in\n    tag_504:\n        /* \"contracts/reference.sol\":28583:28598  numTokensToSwap */\n      0x08\n        /* \"contracts/reference.sol\":28583:28610  numTokensToSwap = numTokens */\n      sstore\n        /* \"contracts/reference.sol\":28502:28617  function updateNumTokensToSwap(uint256 numTokens) external onlyOwner() {... */\n      jump\t// out\n        /* \"contracts/reference.sol\":26184:27007  function setBuyTaxes(uint256 marketingFee, uint256 liquidityFee, uint256 teamFee, uint256 ecosystemFee) external onlyOwner() {... */\n    tag_294:\n        /* \"contracts/reference.sol\":3076:3082  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/reference.sol\":818:828  msg.sender */\n      caller\n        /* \"contracts/reference.sol\":3076:3098  _owner == _msgSender() */\n      eq\n        /* \"contracts/reference.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_509\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_324\n      swap1\n      tag_325\n      jump\t// in\n    tag_509:\n        /* \"contracts/reference.sol\":26319:26335  uint256 totalFee */\n      0x00\n        /* \"contracts/reference.sol\":26338:26399  marketingFee.add(liquidityFee).add(teamFee).add(ecosystemFee) */\n      tag_512\n        /* \"contracts/reference.sol\":26386:26398  ecosystemFee */\n      dup3\n        /* \"contracts/reference.sol\":26338:26381  marketingFee.add(liquidityFee).add(teamFee) */\n      tag_514\n        /* \"contracts/reference.sol\":26373:26380  teamFee */\n      dup6\n        /* \"contracts/reference.sol\":26338:26381  marketingFee.add(liquidityFee).add(teamFee) */\n      dup2\n        /* \"contracts/reference.sol\":26338:26350  marketingFee */\n      dup10\n        /* \"contracts/reference.sol\":26355:26367  liquidityFee */\n      dup10\n        /* \"contracts/reference.sol\":26338:26354  marketingFee.add */\n      tag_515\n        /* \"contracts/reference.sol\":26338:26368  marketingFee.add(liquidityFee) */\n      jump\t// in\n    tag_514:\n        /* \"contracts/reference.sol\":26338:26372  marketingFee.add(liquidityFee).add */\n      swap1\n      tag_515\n        /* \"contracts/reference.sol\":26338:26381  marketingFee.add(liquidityFee).add(teamFee) */\n      jump\t// in\n        /* \"contracts/reference.sol\":26338:26399  marketingFee.add(liquidityFee).add(teamFee).add(ecosystemFee) */\n    tag_512:\n        /* \"contracts/reference.sol\":26319:26399  uint256 totalFee = marketingFee.add(liquidityFee).add(teamFee).add(ecosystemFee) */\n      swap1\n      pop\n        /* \"contracts/reference.sol\":26429:26432  250 */\n      0xfa\n        /* \"contracts/reference.sol\":26417:26425  totalFee */\n      dup2\n        /* \"contracts/reference.sol\":26417:26432  totalFee <= 250 */\n      gt\n      iszero\n        /* \"contracts/reference.sol\":26409:26486  require(totalFee <= 250, \"Sum of buy fees must be less than or equal to 25%\") */\n      tag_516\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8062:8064   */\n      0x20\n        /* \"contracts/reference.sol\":26409:26486  require(totalFee <= 250, \"Sum of buy fees must be less than or equal to 25%\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8044:8065   */\n      mstore\n        /* \"#utility.yul\":8101:8103   */\n      0x31\n        /* \"#utility.yul\":8081:8099   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8074:8104   */\n      mstore\n        /* \"#utility.yul\":8140:8174   */\n      0x53756d206f66206275792066656573206d757374206265206c65737320746861\n        /* \"#utility.yul\":8120:8138   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8113:8175   */\n      mstore\n      shl(0x78, 0x6e206f7220657175616c20746f20323525)\n        /* \"#utility.yul\":8191:8209   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8184:8231   */\n      mstore\n        /* \"#utility.yul\":8248:8267   */\n      0x84\n      add\n        /* \"contracts/reference.sol\":26409:26486  require(totalFee <= 250, \"Sum of buy fees must be less than or equal to 25%\") */\n      tag_324\n        /* \"#utility.yul\":8034:8273   */\n      jump\n        /* \"contracts/reference.sol\":26409:26486  require(totalFee <= 250, \"Sum of buy fees must be less than or equal to 25%\") */\n    tag_516:\n        /* \"contracts/reference.sol\":26504:26516  canChangeTax */\n      sload(0x28)\n      0x0100000000\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/reference.sol\":26496:26545  require(canChangeTax, \"This function is diabled\") */\n      tag_519\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14421:14423   */\n      0x20\n        /* \"contracts/reference.sol\":26496:26545  require(canChangeTax, \"This function is diabled\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14403:14424   */\n      mstore\n        /* \"#utility.yul\":14460:14462   */\n      0x18\n        /* \"#utility.yul\":14440:14458   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14433:14463   */\n      mstore\n      shl(0x42, 0x151a1a5cc8199d5b98dd1a5bdb881a5cc8191a58589b1959)\n        /* \"#utility.yul\":14479:14497   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14472:14526   */\n      mstore\n        /* \"#utility.yul\":14543:14561   */\n      0x64\n      add\n        /* \"contracts/reference.sol\":26496:26545  require(canChangeTax, \"This function is diabled\") */\n      tag_324\n        /* \"#utility.yul\":14393:14567   */\n      jump\n        /* \"contracts/reference.sol\":26496:26545  require(canChangeTax, \"This function is diabled\") */\n    tag_519:\n        /* \"contracts/reference.sol\":26556:26572  _buyMarketingFee */\n      0x0d\n        /* \"contracts/reference.sol\":26556:26587  _buyMarketingFee = marketingFee */\n      dup6\n      swap1\n      sstore\n        /* \"contracts/reference.sol\":26597:26613  _buyLiquidityFee */\n      0x09\n        /* \"contracts/reference.sol\":26597:26628  _buyLiquidityFee = liquidityFee */\n      dup5\n      swap1\n      sstore\n        /* \"contracts/reference.sol\":26638:26649  _buyTeamFee */\n      0x0f\n        /* \"contracts/reference.sol\":26638:26659  _buyTeamFee = teamFee */\n      dup4\n      swap1\n      sstore\n        /* \"contracts/reference.sol\":26669:26685  _buyEcosystemFee */\n      0x0b\n        /* \"contracts/reference.sol\":26669:26700  _buyEcosystemFee = ecosystemFee */\n      dup3\n      swap1\n      sstore\n        /* \"contracts/reference.sol\":26719:26743  _previousBuyMarketingFee */\n      0x0e\n        /* \"contracts/reference.sol\":26719:26762  _previousBuyMarketingFee = _buyMarketingFee */\n      dup6\n      swap1\n      sstore\n        /* \"contracts/reference.sol\":26772:26796  _previousBuyLiquidityFee */\n      0x0a\n        /* \"contracts/reference.sol\":26772:26815  _previousBuyLiquidityFee = _buyLiquidityFee */\n      dup5\n      swap1\n      sstore\n        /* \"contracts/reference.sol\":26825:26844  _previousBuyTeamFee */\n      0x10\n        /* \"contracts/reference.sol\":26825:26858  _previousBuyTeamFee = _buyTeamFee */\n      dup4\n      swap1\n      sstore\n        /* \"contracts/reference.sol\":26868:26892  _previousBuyEcosystemFee */\n      0x0c\n        /* \"contracts/reference.sol\":26868:26911  _previousBuyEcosystemFee = _buyEcosystemFee */\n      dup3\n      swap1\n      sstore\n        /* \"contracts/reference.sol\":26935:27000  BuyFeesUpdated(marketingFee, liquidityFee, teamFee, ecosystemFee) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":16378:16403   */\n      dup7\n      dup2\n      mstore\n        /* \"#utility.yul\":16434:16436   */\n      0x20\n        /* \"#utility.yul\":16419:16437   */\n      dup2\n      add\n        /* \"#utility.yul\":16412:16446   */\n      dup7\n      swap1\n      mstore\n        /* \"#utility.yul\":16462:16480   */\n      swap1\n      dup2\n      add\n        /* \"#utility.yul\":16455:16489   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":16520:16522   */\n      0x60\n        /* \"#utility.yul\":16505:16523   */\n      dup2\n      add\n        /* \"#utility.yul\":16498:16532   */\n      dup4\n      swap1\n      mstore\n        /* \"contracts/reference.sol\":26935:27000  BuyFeesUpdated(marketingFee, liquidityFee, teamFee, ecosystemFee) */\n      0x892b2caa2d791bf7b8d9a49c4db7a4513ff1ae2e0e068ed217f9d5ab4c1a28f0\n      swap1\n        /* \"#utility.yul\":16365:16368   */\n      0x80\n        /* \"#utility.yul\":16350:16369   */\n      add\n        /* \"contracts/reference.sol\":26935:27000  BuyFeesUpdated(marketingFee, liquidityFee, teamFee, ecosystemFee) */\n    tag_522:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/reference.sol\":3145:3146  _ */\n      pop\n        /* \"contracts/reference.sol\":26184:27007  function setBuyTaxes(uint256 marketingFee, uint256 liquidityFee, uint256 teamFee, uint256 ecosystemFee) external onlyOwner() {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/reference.sol\":25215:25327  function includeInFee(address account) external onlyOwner() {... */\n    tag_298:\n        /* \"contracts/reference.sol\":3076:3082  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/reference.sol\":818:828  msg.sender */\n      caller\n        /* \"contracts/reference.sol\":3076:3098  _owner == _msgSender() */\n      eq\n        /* \"contracts/reference.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_525\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_324\n      swap1\n      tag_325\n      jump\t// in\n    tag_525:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/reference.sol\":25285:25312  _isExcludedFromFee[account] */\n      and\n        /* \"contracts/reference.sol\":25315:25320  false */\n      0x00\n        /* \"contracts/reference.sol\":25285:25312  _isExcludedFromFee[account] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/reference.sol\":25285:25303  _isExcludedFromFee */\n      0x04\n        /* \"contracts/reference.sol\":25285:25312  _isExcludedFromFee[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/reference.sol\":25285:25320  _isExcludedFromFee[account] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"contracts/reference.sol\":25215:25327  function includeInFee(address account) external onlyOwner() {... */\n      jump\t// out\n        /* \"contracts/reference.sol\":3302:3500  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_302:\n        /* \"contracts/reference.sol\":3076:3082  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/reference.sol\":818:828  msg.sender */\n      caller\n        /* \"contracts/reference.sol\":3076:3098  _owner == _msgSender() */\n      eq\n        /* \"contracts/reference.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_530\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_324\n      swap1\n      tag_325\n      jump\t// in\n    tag_530:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/reference.sol\":3390:3412  newOwner != address(0) */\n      dup2\n      and\n        /* \"contracts/reference.sol\":3382:3455  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_533\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8830:8832   */\n      0x20\n        /* \"contracts/reference.sol\":3382:3455  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8812:8833   */\n      mstore\n        /* \"#utility.yul\":8869:8871   */\n      0x26\n        /* \"#utility.yul\":8849:8867   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8842:8872   */\n      mstore\n        /* \"#utility.yul\":8908:8942   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":8888:8906   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8881:8943   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":8959:8977   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8952:8988   */\n      mstore\n        /* \"#utility.yul\":9005:9024   */\n      0x84\n      add\n        /* \"contracts/reference.sol\":3382:3455  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_324\n        /* \"#utility.yul\":8802:9030   */\n      jump\n        /* \"contracts/reference.sol\":3382:3455  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_533:\n        /* \"contracts/reference.sol\":3465:3493  _transferOwnership(newOwner) */\n      tag_403\n        /* \"contracts/reference.sol\":3484:3492  newOwner */\n      dup2\n        /* \"contracts/reference.sol\":3465:3483  _transferOwnership */\n      tag_537\n        /* \"contracts/reference.sol\":3465:3493  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"contracts/reference.sol\":27013:27851  function setSellTaxes(uint256 marketingFee, uint256 liquidityFee, uint256 teamFee, uint256 ecosystemFee) external onlyOwner() {... */\n    tag_306:\n        /* \"contracts/reference.sol\":3076:3082  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/reference.sol\":818:828  msg.sender */\n      caller\n        /* \"contracts/reference.sol\":3076:3098  _owner == _msgSender() */\n      eq\n        /* \"contracts/reference.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_540\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_324\n      swap1\n      tag_325\n      jump\t// in\n    tag_540:\n        /* \"contracts/reference.sol\":27149:27165  uint256 totalFee */\n      0x00\n        /* \"contracts/reference.sol\":27168:27229  marketingFee.add(liquidityFee).add(teamFee).add(ecosystemFee) */\n      tag_543\n        /* \"contracts/reference.sol\":27216:27228  ecosystemFee */\n      dup3\n        /* \"contracts/reference.sol\":27168:27211  marketingFee.add(liquidityFee).add(teamFee) */\n      tag_514\n        /* \"contracts/reference.sol\":27203:27210  teamFee */\n      dup6\n        /* \"contracts/reference.sol\":27168:27211  marketingFee.add(liquidityFee).add(teamFee) */\n      dup2\n        /* \"contracts/reference.sol\":27168:27180  marketingFee */\n      dup10\n        /* \"contracts/reference.sol\":27185:27197  liquidityFee */\n      dup10\n        /* \"contracts/reference.sol\":27168:27184  marketingFee.add */\n      tag_515\n        /* \"contracts/reference.sol\":27168:27198  marketingFee.add(liquidityFee) */\n      jump\t// in\n        /* \"contracts/reference.sol\":27168:27229  marketingFee.add(liquidityFee).add(teamFee).add(ecosystemFee) */\n    tag_543:\n        /* \"contracts/reference.sol\":27149:27229  uint256 totalFee = marketingFee.add(liquidityFee).add(teamFee).add(ecosystemFee) */\n      swap1\n      pop\n        /* \"contracts/reference.sol\":27259:27262  250 */\n      0xfa\n        /* \"contracts/reference.sol\":27247:27255  totalFee */\n      dup2\n        /* \"contracts/reference.sol\":27247:27262  totalFee <= 250 */\n      gt\n      iszero\n        /* \"contracts/reference.sol\":27239:27317  require(totalFee <= 250, \"Sum of sell fees must be less than or equal to 25%\") */\n      tag_546\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10712:10714   */\n      0x20\n        /* \"contracts/reference.sol\":27239:27317  require(totalFee <= 250, \"Sum of sell fees must be less than or equal to 25%\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10694:10715   */\n      mstore\n        /* \"#utility.yul\":10751:10753   */\n      0x32\n        /* \"#utility.yul\":10731:10749   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10724:10754   */\n      mstore\n        /* \"#utility.yul\":10790:10824   */\n      0x53756d206f662073656c6c2066656573206d757374206265206c657373207468\n        /* \"#utility.yul\":10770:10788   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10763:10825   */\n      mstore\n      shl(0x70, 0x616e206f7220657175616c20746f20323525)\n        /* \"#utility.yul\":10841:10859   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10834:10882   */\n      mstore\n        /* \"#utility.yul\":10899:10918   */\n      0x84\n      add\n        /* \"contracts/reference.sol\":27239:27317  require(totalFee <= 250, \"Sum of sell fees must be less than or equal to 25%\") */\n      tag_324\n        /* \"#utility.yul\":10684:10924   */\n      jump\n        /* \"contracts/reference.sol\":27239:27317  require(totalFee <= 250, \"Sum of sell fees must be less than or equal to 25%\") */\n    tag_546:\n        /* \"contracts/reference.sol\":27335:27347  canChangeTax */\n      sload(0x28)\n      0x0100000000\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/reference.sol\":27327:27376  require(canChangeTax, \"This function is diabled\") */\n      tag_549\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14421:14423   */\n      0x20\n        /* \"contracts/reference.sol\":27327:27376  require(canChangeTax, \"This function is diabled\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14403:14424   */\n      mstore\n        /* \"#utility.yul\":14460:14462   */\n      0x18\n        /* \"#utility.yul\":14440:14458   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14433:14463   */\n      mstore\n      shl(0x42, 0x151a1a5cc8199d5b98dd1a5bdb881a5cc8191a58589b1959)\n        /* \"#utility.yul\":14479:14497   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14472:14526   */\n      mstore\n        /* \"#utility.yul\":14543:14561   */\n      0x64\n      add\n        /* \"contracts/reference.sol\":27327:27376  require(canChangeTax, \"This function is diabled\") */\n      tag_324\n        /* \"#utility.yul\":14393:14567   */\n      jump\n        /* \"contracts/reference.sol\":27327:27376  require(canChangeTax, \"This function is diabled\") */\n    tag_549:\n        /* \"contracts/reference.sol\":27387:27404  _sellMarketingFee */\n      0x15\n        /* \"contracts/reference.sol\":27387:27419  _sellMarketingFee = marketingFee */\n      dup6\n      swap1\n      sstore\n        /* \"contracts/reference.sol\":27429:27446  _sellLiquidityFee */\n      0x11\n        /* \"contracts/reference.sol\":27429:27461  _sellLiquidityFee = liquidityFee */\n      dup5\n      swap1\n      sstore\n        /* \"contracts/reference.sol\":27471:27483  _sellTeamFee */\n      0x17\n        /* \"contracts/reference.sol\":27471:27493  _sellTeamFee = teamFee */\n      dup4\n      swap1\n      sstore\n        /* \"contracts/reference.sol\":27503:27520  _sellEcosystemFee */\n      0x13\n        /* \"contracts/reference.sol\":27503:27535  _sellEcosystemFee = ecosystemFee */\n      dup3\n      swap1\n      sstore\n        /* \"contracts/reference.sol\":27554:27579  _previousSellMarketingFee */\n      0x16\n        /* \"contracts/reference.sol\":27554:27599  _previousSellMarketingFee = _sellMarketingFee */\n      dup6\n      swap1\n      sstore\n        /* \"contracts/reference.sol\":27609:27634  _previousSellLiquidityFee */\n      0x12\n        /* \"contracts/reference.sol\":27609:27654  _previousSellLiquidityFee = _sellLiquidityFee */\n      dup5\n      swap1\n      sstore\n        /* \"contracts/reference.sol\":27664:27684  _previousSellTeamFee */\n      0x18\n        /* \"contracts/reference.sol\":27664:27699  _previousSellTeamFee = _sellTeamFee */\n      dup4\n      swap1\n      sstore\n        /* \"contracts/reference.sol\":27709:27734  _previousSellEcosystemFee */\n      0x14\n        /* \"contracts/reference.sol\":27709:27754  _previousSellEcosystemFee = _sellEcosystemFee */\n      dup3\n      swap1\n      sstore\n        /* \"contracts/reference.sol\":27778:27844  SellFeesUpdated(marketingFee, liquidityFee, teamFee, ecosystemFee) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":16378:16403   */\n      dup7\n      dup2\n      mstore\n        /* \"#utility.yul\":16434:16436   */\n      0x20\n        /* \"#utility.yul\":16419:16437   */\n      dup2\n      add\n        /* \"#utility.yul\":16412:16446   */\n      dup7\n      swap1\n      mstore\n        /* \"#utility.yul\":16462:16480   */\n      swap1\n      dup2\n      add\n        /* \"#utility.yul\":16455:16489   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":16520:16522   */\n      0x60\n        /* \"#utility.yul\":16505:16523   */\n      dup2\n      add\n        /* \"#utility.yul\":16498:16532   */\n      dup4\n      swap1\n      mstore\n        /* \"contracts/reference.sol\":27778:27844  SellFeesUpdated(marketingFee, liquidityFee, teamFee, ecosystemFee) */\n      0x439932620c72dddea29980c098bca1a482729646d1216b226d723c6d278a30d1\n      swap1\n        /* \"#utility.yul\":16365:16368   */\n      0x80\n        /* \"#utility.yul\":16350:16369   */\n      add\n        /* \"contracts/reference.sol\":27778:27844  SellFeesUpdated(marketingFee, liquidityFee, teamFee, ecosystemFee) */\n      tag_522\n        /* \"#utility.yul\":16332:16538   */\n      jump\n        /* \"contracts/reference.sol\":25438:25604  function addBot(address account) external onlyOwner() {... */\n    tag_314:\n        /* \"contracts/reference.sol\":3076:3082  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/reference.sol\":818:828  msg.sender */\n      caller\n        /* \"contracts/reference.sol\":3076:3098  _owner == _msgSender() */\n      eq\n        /* \"contracts/reference.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_554\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_324\n      swap1\n      tag_325\n      jump\t// in\n    tag_554:\n        /* \"contracts/reference.sol\":25510:25522  canBlackList */\n      sload(0x28)\n      0x01000000\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/reference.sol\":25502:25567  require(canBlackList, \"this contract cannot blacklist addresses\") */\n      tag_557\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13606:13608   */\n      0x20\n        /* \"contracts/reference.sol\":25502:25567  require(canBlackList, \"this contract cannot blacklist addresses\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13588:13609   */\n      mstore\n        /* \"#utility.yul\":13645:13647   */\n      0x28\n        /* \"#utility.yul\":13625:13643   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13618:13648   */\n      mstore\n        /* \"#utility.yul\":13684:13718   */\n      0x7468697320636f6e74726163742063616e6e6f7420626c61636b6c6973742061\n        /* \"#utility.yul\":13664:13682   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13657:13719   */\n      mstore\n      shl(0xc0, 0x6464726573736573)\n        /* \"#utility.yul\":13735:13753   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":13728:13766   */\n      mstore\n        /* \"#utility.yul\":13783:13802   */\n      0x84\n      add\n        /* \"contracts/reference.sol\":25502:25567  require(canBlackList, \"this contract cannot blacklist addresses\") */\n      tag_324\n        /* \"#utility.yul\":13578:13808   */\n      jump\n        /* \"contracts/reference.sol\":25502:25567  require(canBlackList, \"this contract cannot blacklist addresses\") */\n    tag_557:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/reference.sol\":25577:25590  bots[account] */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/reference.sol\":25577:25581  bots */\n      0x20\n        /* \"contracts/reference.sol\":25577:25590  bots[account] */\n      dup1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/reference.sol\":25577:25597  bots[account] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"contracts/reference.sol\":25593:25597  true */\n      0x01\n        /* \"contracts/reference.sol\":25577:25597  bots[account] = true */\n      or\n      swap1\n      sstore\n        /* \"contracts/reference.sol\":25438:25604  function addBot(address account) external onlyOwner() {... */\n      jump\t// out\n        /* \"contracts/reference.sol\":15040:15370  function _approve(address owner, address spender, uint256 amount) private {... */\n    tag_320:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/reference.sol\":15132:15151  owner != address(0) */\n      dup4\n      and\n        /* \"contracts/reference.sol\":15124:15192  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_562\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14774:14776   */\n      0x20\n        /* \"contracts/reference.sol\":15124:15192  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14756:14777   */\n      mstore\n        /* \"#utility.yul\":14813:14815   */\n      0x24\n        /* \"#utility.yul\":14793:14811   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":14786:14816   */\n      mstore\n        /* \"#utility.yul\":14852:14886   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":14832:14850   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14825:14887   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":14903:14921   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":14896:14930   */\n      mstore\n        /* \"#utility.yul\":14947:14966   */\n      0x84\n      add\n        /* \"contracts/reference.sol\":15124:15192  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_324\n        /* \"#utility.yul\":14746:14972   */\n      jump\n        /* \"contracts/reference.sol\":15124:15192  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_562:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/reference.sol\":15210:15231  spender != address(0) */\n      dup3\n      and\n        /* \"contracts/reference.sol\":15202:15270  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_565\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9237:9239   */\n      0x20\n        /* \"contracts/reference.sol\":15202:15270  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9219:9240   */\n      mstore\n        /* \"#utility.yul\":9276:9278   */\n      0x22\n        /* \"#utility.yul\":9256:9274   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9249:9279   */\n      mstore\n        /* \"#utility.yul\":9315:9349   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":9295:9313   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9288:9350   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":9366:9384   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9359:9391   */\n      mstore\n        /* \"#utility.yul\":9408:9427   */\n      0x84\n      add\n        /* \"contracts/reference.sol\":15202:15270  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_324\n        /* \"#utility.yul\":9209:9433   */\n      jump\n        /* \"contracts/reference.sol\":15202:15270  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_565:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/reference.sol\":15280:15298  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/reference.sol\":15280:15291  _allowances */\n      0x03\n        /* \"contracts/reference.sol\":15280:15298  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/reference.sol\":15280:15307  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/reference.sol\":15280:15316  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"contracts/reference.sol\":15331:15363  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":15123:15148   */\n      dup5\n      dup2\n      mstore\n        /* \"contracts/reference.sol\":15331:15363  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":15096:15114   */\n      add\n        /* \"contracts/reference.sol\":15331:15363  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/reference.sol\":15040:15370  function _approve(address owner, address spender, uint256 amount) private {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/reference.sol\":15380:18447  function _transfer(address from, address to, uint256 amount) private {... */\n    tag_335:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/reference.sol\":15467:15485  from != address(0) */\n      dup4\n      and\n        /* \"contracts/reference.sol\":15459:15527  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_570\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14015:14017   */\n      0x20\n        /* \"contracts/reference.sol\":15459:15527  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13997:14018   */\n      mstore\n        /* \"#utility.yul\":14054:14056   */\n      0x25\n        /* \"#utility.yul\":14034:14052   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14027:14057   */\n      mstore\n        /* \"#utility.yul\":14093:14127   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":14073:14091   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14066:14128   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":14144:14162   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":14137:14172   */\n      mstore\n        /* \"#utility.yul\":14189:14208   */\n      0x84\n      add\n        /* \"contracts/reference.sol\":15459:15527  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_324\n        /* \"#utility.yul\":13987:14214   */\n      jump\n        /* \"contracts/reference.sol\":15459:15527  require(from != address(0), \"ERC20: transfer from the zero address\") */\n    tag_570:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/reference.sol\":15545:15561  to != address(0) */\n      dup3\n      and\n        /* \"contracts/reference.sol\":15537:15601  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_573\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7658:7660   */\n      0x20\n        /* \"contracts/reference.sol\":15537:15601  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7640:7661   */\n      mstore\n        /* \"#utility.yul\":7697:7699   */\n      0x23\n        /* \"#utility.yul\":7677:7695   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7670:7700   */\n      mstore\n        /* \"#utility.yul\":7736:7770   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":7716:7734   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7709:7771   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":7787:7805   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7780:7813   */\n      mstore\n        /* \"#utility.yul\":7830:7849   */\n      0x84\n      add\n        /* \"contracts/reference.sol\":15537:15601  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_324\n        /* \"#utility.yul\":7630:7855   */\n      jump\n        /* \"contracts/reference.sol\":15537:15601  require(to != address(0), \"ERC20: transfer to the zero address\") */\n    tag_573:\n        /* \"contracts/reference.sol\":15628:15629  0 */\n      0x00\n        /* \"contracts/reference.sol\":15619:15625  amount */\n      dup2\n        /* \"contracts/reference.sol\":15619:15629  amount > 0 */\n      gt\n        /* \"contracts/reference.sol\":15611:15675  require(amount > 0, \"Transfer amount must be greater than zero\") */\n      tag_576\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12779:12781   */\n      0x20\n        /* \"contracts/reference.sol\":15611:15675  require(amount > 0, \"Transfer amount must be greater than zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12761:12782   */\n      mstore\n        /* \"#utility.yul\":12818:12820   */\n      0x29\n        /* \"#utility.yul\":12798:12816   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12791:12821   */\n      mstore\n        /* \"#utility.yul\":12857:12891   */\n      0x5472616e7366657220616d6f756e74206d757374206265206772656174657220\n        /* \"#utility.yul\":12837:12855   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12830:12892   */\n      mstore\n      shl(0xb8, 0x7468616e207a65726f)\n        /* \"#utility.yul\":12908:12926   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":12901:12940   */\n      mstore\n        /* \"#utility.yul\":12957:12976   */\n      0x84\n      add\n        /* \"contracts/reference.sol\":15611:15675  require(amount > 0, \"Transfer amount must be greater than zero\") */\n      tag_324\n        /* \"#utility.yul\":12751:12982   */\n      jump\n        /* \"contracts/reference.sol\":15611:15675  require(amount > 0, \"Transfer amount must be greater than zero\") */\n    tag_576:\n        /* \"contracts/reference.sol\":15701:15705  true */\n      0x01\n        /* \"contracts/reference.sol\":15728:15735  owner() */\n      tag_579\n        /* \"contracts/reference.sol\":2992:2999  address */\n      0x00\n        /* \"contracts/reference.sol\":3018:3024  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"contracts/reference.sol\":2954:3031  function owner() public view returns (address) {... */\n      jump\n        /* \"contracts/reference.sol\":15728:15735  owner() */\n    tag_579:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/reference.sol\":15720:15735  from != owner() */\n      and\n        /* \"contracts/reference.sol\":15720:15724  from */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/reference.sol\":15720:15735  from != owner() */\n      and\n      eq\n      iszero\n        /* \"contracts/reference.sol\":15720:15752  from != owner() && to != owner() */\n      dup1\n      iszero\n      tag_580\n      jumpi\n      pop\n        /* \"contracts/reference.sol\":2992:2999  address */\n      0x00\n        /* \"contracts/reference.sol\":3018:3024  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/reference.sol\":15739:15752  to != owner() */\n      dup5\n      dup2\n      and\n        /* \"contracts/reference.sol\":3018:3024  _owner */\n      swap2\n      and\n        /* \"contracts/reference.sol\":15739:15752  to != owner() */\n      eq\n      iszero\n        /* \"contracts/reference.sol\":15720:15752  from != owner() && to != owner() */\n    tag_580:\n        /* \"contracts/reference.sol\":15720:15777  from != owner() && to != owner() && from != address(this) */\n      dup1\n      iszero\n      tag_582\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/reference.sol\":15756:15777  from != address(this) */\n      dup5\n      and\n        /* \"contracts/reference.sol\":15772:15776  this */\n      address\n        /* \"contracts/reference.sol\":15756:15777  from != address(this) */\n      eq\n      iszero\n        /* \"contracts/reference.sol\":15720:15777  from != owner() && to != owner() && from != address(this) */\n    tag_582:\n        /* \"contracts/reference.sol\":15720:15800  from != owner() && to != owner() && from != address(this) && to != address(this) */\n      dup1\n      iszero\n      tag_583\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/reference.sol\":15781:15800  to != address(this) */\n      dup4\n      and\n        /* \"contracts/reference.sol\":15795:15799  this */\n      address\n        /* \"contracts/reference.sol\":15781:15800  to != address(this) */\n      eq\n      iszero\n        /* \"contracts/reference.sol\":15720:15800  from != owner() && to != owner() && from != address(this) && to != address(this) */\n    tag_583:\n        /* \"contracts/reference.sol\":15716:18275  if (from != owner() && to != owner() && from != address(this) && to != address(this)) {... */\n      iszero\n      tag_637\n      jumpi\n        /* \"contracts/reference.sol\":15824:15835  tradingOpen */\n      and(0xff, sload(0x28))\n        /* \"contracts/reference.sol\":15816:15861  require(tradingOpen, \"Trading is not active\") */\n      tag_585\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8480:8482   */\n      0x20\n        /* \"contracts/reference.sol\":15816:15861  require(tradingOpen, \"Trading is not active\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8462:8483   */\n      mstore\n        /* \"#utility.yul\":8519:8521   */\n      0x15\n        /* \"#utility.yul\":8499:8517   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8492:8522   */\n      mstore\n      shl(0x58, 0x54726164696e67206973206e6f7420616374697665)\n        /* \"#utility.yul\":8538:8556   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8531:8582   */\n      mstore\n        /* \"#utility.yul\":8599:8617   */\n      0x64\n      add\n        /* \"contracts/reference.sol\":15816:15861  require(tradingOpen, \"Trading is not active\") */\n      tag_324\n        /* \"#utility.yul\":8452:8623   */\n      jump\n        /* \"contracts/reference.sol\":15816:15861  require(tradingOpen, \"Trading is not active\") */\n    tag_585:\n        /* \"contracts/reference.sol\":15887:15900  uniswapV2Pair */\n      sload(0x26)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/reference.sol\":15879:15900  from == uniswapV2Pair */\n      dup6\n      dup2\n      and\n        /* \"contracts/reference.sol\":15887:15900  uniswapV2Pair */\n      swap2\n      and\n        /* \"contracts/reference.sol\":15879:15900  from == uniswapV2Pair */\n      eq\n        /* \"contracts/reference.sol\":15879:15934  from == uniswapV2Pair && to != address(uniswapV2Router) */\n      dup1\n      iszero\n      tag_588\n      jumpi\n      pop\n        /* \"contracts/reference.sol\":15918:15933  uniswapV2Router */\n      sload(0x25)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/reference.sol\":15904:15934  to != address(uniswapV2Router) */\n      dup5\n      dup2\n      and\n        /* \"contracts/reference.sol\":15918:15933  uniswapV2Router */\n      swap2\n      and\n        /* \"contracts/reference.sol\":15904:15934  to != address(uniswapV2Router) */\n      eq\n      iszero\n        /* \"contracts/reference.sol\":15879:15934  from == uniswapV2Pair && to != address(uniswapV2Router) */\n    tag_588:\n        /* \"contracts/reference.sol\":15875:16224  if (from == uniswapV2Pair && to != address(uniswapV2Router)) {//buys... */\n      iszero\n      tag_594\n      jumpi\n        /* \"contracts/reference.sol\":16000:16010  _botBlocks */\n      sload(0x06)\n        /* \"contracts/reference.sol\":15984:15995  _firstBlock */\n      sload(0x05)\n        /* \"contracts/reference.sol\":15984:16011  _firstBlock.add(_botBlocks) */\n      tag_590\n      swap2\n        /* \"contracts/reference.sol\":15984:15999  _firstBlock.add */\n      tag_515\n        /* \"contracts/reference.sol\":15984:16011  _firstBlock.add(_botBlocks) */\n      jump\t// in\n    tag_590:\n        /* \"contracts/reference.sol\":15965:15980  block.timestamp */\n      timestamp\n        /* \"contracts/reference.sol\":15965:16011  block.timestamp <= _firstBlock.add(_botBlocks) */\n      gt\n        /* \"contracts/reference.sol\":15961:16069  if (block.timestamp <= _firstBlock.add(_botBlocks)) {... */\n      tag_591\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/reference.sol\":16035:16043  bots[to] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/reference.sol\":16035:16039  bots */\n      0x20\n        /* \"contracts/reference.sol\":16035:16043  bots[to] */\n      dup1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/reference.sol\":16035:16050  bots[to] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"contracts/reference.sol\":16046:16050  true */\n      0x01\n        /* \"contracts/reference.sol\":16035:16050  bots[to] = true */\n      or\n      swap1\n      sstore\n        /* \"contracts/reference.sol\":15961:16069  if (block.timestamp <= _firstBlock.add(_botBlocks)) {... */\n    tag_591:\n        /* \"contracts/reference.sol\":16123:16139  _maxWalletAmount */\n      sload(0x07)\n        /* \"contracts/reference.sol\":16094:16119  balanceOf(to).add(amount) */\n      tag_592\n        /* \"contracts/reference.sol\":16112:16118  amount */\n      dup4\n        /* \"contracts/reference.sol\":16094:16107  balanceOf(to) */\n      tag_514\n        /* \"contracts/reference.sol\":16104:16106  to */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/reference.sol\":12929:12947  _balances[account] */\n      and\n        /* \"contracts/reference.sol\":12903:12910  uint256 */\n      0x00\n        /* \"contracts/reference.sol\":12929:12947  _balances[account] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/reference.sol\":12929:12938  _balances */\n      0x02\n        /* \"contracts/reference.sol\":12929:12947  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"contracts/reference.sol\":12837:12954  function balanceOf(address account) public view override returns (uint256) {... */\n      jump\n        /* \"contracts/reference.sol\":16094:16119  balanceOf(to).add(amount) */\n    tag_592:\n        /* \"contracts/reference.sol\":16094:16139  balanceOf(to).add(amount) <= _maxWalletAmount */\n      gt\n      iszero\n        /* \"contracts/reference.sol\":16086:16209  require(balanceOf(to).add(amount) <= _maxWalletAmount, \"wallet balance after transfer must be less than max wallet amount\") */\n      tag_594\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_324\n      swap1\n      tag_596\n      jump\t// in\n    tag_594:\n        /* \"contracts/reference.sol\":16255:16261  inSwap */\n      sload(0x28)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/reference.sol\":16254:16261  !inSwap */\n      iszero\n        /* \"contracts/reference.sol\":16254:16286  !inSwap && from != uniswapV2Pair */\n      dup1\n      iszero\n      tag_597\n      jumpi\n      pop\n        /* \"contracts/reference.sol\":16273:16286  uniswapV2Pair */\n      sload(0x26)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/reference.sol\":16265:16286  from != uniswapV2Pair */\n      dup6\n      dup2\n      and\n        /* \"contracts/reference.sol\":16273:16286  uniswapV2Pair */\n      swap2\n      and\n        /* \"contracts/reference.sol\":16265:16286  from != uniswapV2Pair */\n      eq\n      iszero\n        /* \"contracts/reference.sol\":16254:16286  !inSwap && from != uniswapV2Pair */\n    tag_597:\n        /* \"contracts/reference.sol\":16254:16309  !inSwap && from != uniswapV2Pair && to == uniswapV2Pair */\n      dup1\n      iszero\n      tag_598\n      jumpi\n      pop\n        /* \"contracts/reference.sol\":16296:16309  uniswapV2Pair */\n      sload(0x26)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/reference.sol\":16290:16309  to == uniswapV2Pair */\n      dup5\n      dup2\n      and\n        /* \"contracts/reference.sol\":16296:16309  uniswapV2Pair */\n      swap2\n      and\n        /* \"contracts/reference.sol\":16290:16309  to == uniswapV2Pair */\n      eq\n        /* \"contracts/reference.sol\":16254:16309  !inSwap && from != uniswapV2Pair && to == uniswapV2Pair */\n    tag_598:\n        /* \"contracts/reference.sol\":16250:18016  if (!inSwap && from != uniswapV2Pair && to == uniswapV2Pair) { //sells... */\n      iszero\n      tag_599\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/reference.sol\":16346:16356  bots[from] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/reference.sol\":16346:16350  bots */\n      0x20\n        /* \"contracts/reference.sol\":16346:16356  bots[from] */\n      dup1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/reference.sol\":16345:16356  !bots[from] */\n      iszero\n        /* \"contracts/reference.sol\":16345:16369  !bots[from] && !bots[to] */\n      dup1\n      iszero\n      tag_600\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/reference.sol\":16361:16369  bots[to] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/reference.sol\":16361:16365  bots */\n      0x20\n        /* \"contracts/reference.sol\":16361:16369  bots[to] */\n      dup1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/reference.sol\":16360:16369  !bots[to] */\n      iszero\n        /* \"contracts/reference.sol\":16345:16369  !bots[from] && !bots[to] */\n    tag_600:\n        /* \"contracts/reference.sol\":16337:16370  require(!bots[from] && !bots[to]) */\n      tag_601\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_601:\n        /* \"contracts/reference.sol\":16438:16446  cooldown */\n      0x1a\n        /* \"contracts/reference.sol\":16438:16454  cooldown.enabled */\n      sload\n      0xff\n      and\n        /* \"contracts/reference.sol\":16434:16667  if (cooldown.enabled) {... */\n      iszero\n      tag_602\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/reference.sol\":16505:16530  cooldown.walletList[from] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/reference.sol\":16505:16524  cooldown.walletList */\n      0x1b\n        /* \"contracts/reference.sol\":16505:16530  cooldown.walletList[from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/reference.sol\":16486:16501  block.timestamp */\n      timestamp\n        /* \"contracts/reference.sol\":16486:16530  block.timestamp >= cooldown.walletList[from] */\n      lt\n      iszero\n        /* \"contracts/reference.sol\":16478:16563  require(block.timestamp >= cooldown.walletList[from], \"Strong Hands Protocol active\") */\n      tag_603\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9640:9642   */\n      0x20\n        /* \"contracts/reference.sol\":16478:16563  require(block.timestamp >= cooldown.walletList[from], \"Strong Hands Protocol active\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9622:9643   */\n      mstore\n        /* \"#utility.yul\":9679:9681   */\n      0x1c\n        /* \"#utility.yul\":9659:9677   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9652:9682   */\n      mstore\n        /* \"#utility.yul\":9718:9748   */\n      0x5374726f6e672048616e64732050726f746f636f6c2061637469766500000000\n        /* \"#utility.yul\":9698:9716   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9691:9749   */\n      mstore\n        /* \"#utility.yul\":9766:9784   */\n      0x64\n      add\n        /* \"contracts/reference.sol\":16478:16563  require(block.timestamp >= cooldown.walletList[from], \"Strong Hands Protocol active\") */\n      tag_324\n        /* \"#utility.yul\":9612:9790   */\n      jump\n        /* \"contracts/reference.sol\":16478:16563  require(block.timestamp >= cooldown.walletList[from], \"Strong Hands Protocol active\") */\n    tag_603:\n        /* \"contracts/reference.sol\":16631:16639  cooldown */\n      0x1a\n        /* \"contracts/reference.sol\":16631:16648  cooldown.duration */\n      sload\n        /* \"contracts/reference.sol\":16613:16648  block.timestamp + cooldown.duration */\n      tag_606\n      swap1\n        /* \"contracts/reference.sol\":16631:16648  cooldown.duration */\n      0x0100\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"contracts/reference.sol\":16613:16628  block.timestamp */\n      timestamp\n        /* \"contracts/reference.sol\":16613:16648  block.timestamp + cooldown.duration */\n      tag_607\n      jump\t// in\n    tag_606:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/reference.sol\":16585:16610  cooldown.walletList[from] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/reference.sol\":16585:16604  cooldown.walletList */\n      0x1b\n        /* \"contracts/reference.sol\":16585:16610  cooldown.walletList[from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/reference.sol\":16585:16648  cooldown.walletList[from] = block.timestamp + cooldown.duration */\n      sstore\n        /* \"contracts/reference.sol\":16434:16667  if (cooldown.enabled) {... */\n    tag_602:\n        /* \"contracts/reference.sol\":16728:16740  diamondFloor */\n      0x1c\n        /* \"contracts/reference.sol\":16728:16748  diamondFloor.enabled */\n      sload\n      0xff\n      and\n        /* \"contracts/reference.sol\":16724:16904  if (diamondFloor.enabled) {... */\n      iszero\n      tag_612\n      jumpi\n        /* \"contracts/reference.sol\":16781:16805  diamondFloor.sellStopped */\n      and(0xff, sload(0x1e))\n        /* \"contracts/reference.sol\":16780:16805  !diamondFloor.sellStopped */\n      iszero\n        /* \"contracts/reference.sol\":16772:16840  require(!diamondFloor.sellStopped, \"Sells stopped by Diamond Floor\") */\n      tag_609\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10353:10355   */\n      0x20\n        /* \"contracts/reference.sol\":16772:16840  require(!diamondFloor.sellStopped, \"Sells stopped by Diamond Floor\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10335:10356   */\n      mstore\n        /* \"#utility.yul\":10392:10394   */\n      0x1e\n        /* \"#utility.yul\":10372:10390   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10365:10395   */\n      mstore\n        /* \"#utility.yul\":10431:10463   */\n      0x53656c6c732073746f70706564206279204469616d6f6e6420466c6f6f720000\n        /* \"#utility.yul\":10411:10429   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10404:10464   */\n      mstore\n        /* \"#utility.yul\":10481:10499   */\n      0x64\n      add\n        /* \"contracts/reference.sol\":16772:16840  require(!diamondFloor.sellStopped, \"Sells stopped by Diamond Floor\") */\n      tag_324\n        /* \"#utility.yul\":10325:10505   */\n      jump\n        /* \"contracts/reference.sol\":16772:16840  require(!diamondFloor.sellStopped, \"Sells stopped by Diamond Floor\") */\n    tag_609:\n        /* \"contracts/reference.sol\":16862:16885  _checkPriceConditions() */\n      tag_612\n        /* \"contracts/reference.sol\":16862:16883  _checkPriceConditions */\n      tag_613\n        /* \"contracts/reference.sol\":16862:16885  _checkPriceConditions() */\n      jump\t// in\n    tag_612:\n        /* \"contracts/reference.sol\":16987:16991  this */\n      address\n        /* \"contracts/reference.sol\":16938:16966  uint256 contractTokenBalance */\n      0x00\n        /* \"contracts/reference.sol\":12929:12947  _balances[account] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/reference.sol\":12929:12938  _balances */\n      0x02\n        /* \"contracts/reference.sol\":12929:12947  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/reference.sol\":17040:17055  numTokensToSwap */\n      sload(0x08)\n        /* \"contracts/reference.sol\":17016:17055  contractTokenBalance >= numTokensToSwap */\n      dup2\n      lt\n        /* \"contracts/reference.sol\":17012:17981  if (contractTokenBalance >= numTokensToSwap) {... */\n      tag_615\n      jumpi\n        /* \"contracts/reference.sol\":17083:17107  contractTokenBalance > 0 */\n      dup1\n      iszero\n        /* \"contracts/reference.sol\":17079:17758  if (contractTokenBalance > 0) {... */\n      tag_620\n      jumpi\n        /* \"contracts/reference.sol\":17223:17224  0 */\n      0x00\n        /* \"contracts/reference.sol\":17139:17220  _sellMarketingFee.add(_sellTeamFee).add(_sellEcosystemFee).add(_sellLiquidityFee) */\n      tag_617\n        /* \"contracts/reference.sol\":17202:17219  _sellLiquidityFee */\n      sload(0x11)\n        /* \"contracts/reference.sol\":17139:17197  _sellMarketingFee.add(_sellTeamFee).add(_sellEcosystemFee) */\n      tag_514\n        /* \"contracts/reference.sol\":17179:17196  _sellEcosystemFee */\n      sload(0x13)\n        /* \"contracts/reference.sol\":17139:17174  _sellMarketingFee.add(_sellTeamFee) */\n      tag_514\n        /* \"contracts/reference.sol\":17161:17173  _sellTeamFee */\n      sload(0x17)\n        /* \"contracts/reference.sol\":17139:17156  _sellMarketingFee */\n      sload(0x15)\n        /* \"contracts/reference.sol\":17139:17160  _sellMarketingFee.add */\n      tag_515\n      swap1\n        /* \"contracts/reference.sol\":17139:17174  _sellMarketingFee.add(_sellTeamFee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"contracts/reference.sol\":17139:17220  _sellMarketingFee.add(_sellTeamFee).add(_sellEcosystemFee).add(_sellLiquidityFee) */\n    tag_617:\n        /* \"contracts/reference.sol\":17139:17224  _sellMarketingFee.add(_sellTeamFee).add(_sellEcosystemFee).add(_sellLiquidityFee) > 0 */\n      gt\n        /* \"contracts/reference.sol\":17135:17736  if (_sellMarketingFee.add(_sellTeamFee).add(_sellEcosystemFee).add(_sellLiquidityFee) > 0) {... */\n      iszero\n      tag_620\n      jumpi\n        /* \"contracts/reference.sol\":17256:17276  uint256 autoLPamount */\n      0x00\n        /* \"contracts/reference.sol\":17279:17409  _sellLiquidityFee.mul(contractTokenBalance).div(_sellMarketingFee.add(_sellTeamFee).add(_sellEcosystemFee).add(_sellLiquidityFee)) */\n      tag_621\n        /* \"contracts/reference.sol\":17327:17408  _sellMarketingFee.add(_sellTeamFee).add(_sellEcosystemFee).add(_sellLiquidityFee) */\n      tag_622\n        /* \"contracts/reference.sol\":17390:17407  _sellLiquidityFee */\n      sload(0x11)\n        /* \"contracts/reference.sol\":17327:17385  _sellMarketingFee.add(_sellTeamFee).add(_sellEcosystemFee) */\n      tag_514\n        /* \"contracts/reference.sol\":17367:17384  _sellEcosystemFee */\n      sload(0x13)\n        /* \"contracts/reference.sol\":17327:17362  _sellMarketingFee.add(_sellTeamFee) */\n      tag_514\n        /* \"contracts/reference.sol\":17349:17361  _sellTeamFee */\n      sload(0x17)\n        /* \"contracts/reference.sol\":17327:17344  _sellMarketingFee */\n      sload(0x15)\n        /* \"contracts/reference.sol\":17327:17348  _sellMarketingFee.add */\n      tag_515\n      swap1\n        /* \"contracts/reference.sol\":17327:17362  _sellMarketingFee.add(_sellTeamFee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"contracts/reference.sol\":17327:17408  _sellMarketingFee.add(_sellTeamFee).add(_sellEcosystemFee).add(_sellLiquidityFee) */\n    tag_622:\n        /* \"contracts/reference.sol\":17279:17296  _sellLiquidityFee */\n      sload(0x11)\n        /* \"contracts/reference.sol\":17279:17322  _sellLiquidityFee.mul(contractTokenBalance) */\n      tag_441\n      swap1\n        /* \"contracts/reference.sol\":17301:17321  contractTokenBalance */\n      dup6\n        /* \"contracts/reference.sol\":17279:17300  _sellLiquidityFee.mul */\n      tag_442\n        /* \"contracts/reference.sol\":17279:17322  _sellLiquidityFee.mul(contractTokenBalance) */\n      jump\t// in\n        /* \"contracts/reference.sol\":17279:17409  _sellLiquidityFee.mul(contractTokenBalance).div(_sellMarketingFee.add(_sellTeamFee).add(_sellEcosystemFee).add(_sellLiquidityFee)) */\n    tag_621:\n        /* \"contracts/reference.sol\":17256:17409  uint256 autoLPamount = _sellLiquidityFee.mul(contractTokenBalance).div(_sellMarketingFee.add(_sellTeamFee).add(_sellEcosystemFee).add(_sellLiquidityFee)) */\n      swap1\n      pop\n        /* \"contracts/reference.sol\":17439:17454  uint256 minusLP */\n      0x00\n        /* \"contracts/reference.sol\":17516:17528  autoLPamount */\n      dup2\n        /* \"contracts/reference.sol\":17492:17512  contractTokenBalance */\n      dup4\n        /* \"contracts/reference.sol\":17492:17528  contractTokenBalance >= autoLPamount */\n      lt\n        /* \"contracts/reference.sol\":17488:17643  if (contractTokenBalance >= autoLPamount) {... */\n      tag_626\n      jumpi\n        /* \"contracts/reference.sol\":17574:17612  contractTokenBalance.sub(autoLPamount) */\n      tag_627\n        /* \"contracts/reference.sol\":17574:17594  contractTokenBalance */\n      dup4\n        /* \"contracts/reference.sol\":17599:17611  autoLPamount */\n      dup4\n        /* \"contracts/reference.sol\":17574:17598  contractTokenBalance.sub */\n      tag_456\n        /* \"contracts/reference.sol\":17574:17612  contractTokenBalance.sub(autoLPamount) */\n      jump\t// in\n    tag_627:\n        /* \"contracts/reference.sol\":17564:17612  minusLP = contractTokenBalance.sub(autoLPamount) */\n      swap1\n      pop\n        /* \"contracts/reference.sol\":17488:17643  if (contractTokenBalance >= autoLPamount) {... */\n    tag_626:\n        /* \"contracts/reference.sol\":17672:17709  swapAndLiquify(autoLPamount, minusLP) */\n      tag_628\n        /* \"contracts/reference.sol\":17687:17699  autoLPamount */\n      dup3\n        /* \"contracts/reference.sol\":17701:17708  minusLP */\n      dup3\n        /* \"contracts/reference.sol\":17672:17686  swapAndLiquify */\n      tag_629\n        /* \"contracts/reference.sol\":17672:17709  swapAndLiquify(autoLPamount, minusLP) */\n      jump\t// in\n    tag_628:\n        /* \"contracts/reference.sol\":17135:17736  if (_sellMarketingFee.add(_sellTeamFee).add(_sellEcosystemFee).add(_sellLiquidityFee) > 0) {... */\n      pop\n      pop\n    tag_620:\n        /* \"contracts/reference.sol\":17808:17829  address(this).balance */\n      selfbalance\n        /* \"contracts/reference.sol\":17855:17877  contractETHBalance > 0 */\n      dup1\n      iszero\n        /* \"contracts/reference.sol\":17851:17963  if (contractETHBalance > 0) {... */\n      tag_631\n      jumpi\n        /* \"contracts/reference.sol\":17905:17940  sendETHToFee(address(this).balance) */\n      tag_631\n        /* \"contracts/reference.sol\":17918:17939  address(this).balance */\n      selfbalance\n        /* \"contracts/reference.sol\":17905:17917  sendETHToFee */\n      tag_632\n        /* \"contracts/reference.sol\":17905:17940  sendETHToFee(address(this).balance) */\n      jump\t// in\n    tag_631:\n        /* \"contracts/reference.sol\":17012:17981  if (contractTokenBalance >= numTokensToSwap) {... */\n      pop\n    tag_615:\n        /* \"contracts/reference.sol\":16250:18016  if (!inSwap && from != uniswapV2Pair && to == uniswapV2Pair) { //sells... */\n      pop\n    tag_599:\n        /* \"contracts/reference.sol\":18041:18054  uniswapV2Pair */\n      sload(0x26)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/reference.sol\":18033:18054  from != uniswapV2Pair */\n      dup6\n      dup2\n      and\n        /* \"contracts/reference.sol\":18041:18054  uniswapV2Pair */\n      swap2\n      and\n        /* \"contracts/reference.sol\":18033:18054  from != uniswapV2Pair */\n      eq\n      dup1\n      iszero\n      swap1\n        /* \"contracts/reference.sol\":18033:18077  from != uniswapV2Pair && to != uniswapV2Pair */\n      tag_633\n      jumpi\n      pop\n        /* \"contracts/reference.sol\":18064:18077  uniswapV2Pair */\n      sload(0x26)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/reference.sol\":18058:18077  to != uniswapV2Pair */\n      dup5\n      dup2\n      and\n        /* \"contracts/reference.sol\":18064:18077  uniswapV2Pair */\n      swap2\n      and\n        /* \"contracts/reference.sol\":18058:18077  to != uniswapV2Pair */\n      eq\n      iszero\n        /* \"contracts/reference.sol\":18033:18077  from != uniswapV2Pair && to != uniswapV2Pair */\n    tag_633:\n        /* \"contracts/reference.sol\":18030:18265  if(from != uniswapV2Pair && to != uniswapV2Pair) { //transfers... */\n      iszero\n      tag_637\n      jumpi\n        /* \"contracts/reference.sol\":18163:18179  _maxWalletAmount */\n      sload(0x07)\n        /* \"contracts/reference.sol\":18134:18159  balanceOf(to).add(amount) */\n      tag_635\n        /* \"contracts/reference.sol\":18152:18158  amount */\n      dup4\n        /* \"contracts/reference.sol\":18134:18147  balanceOf(to) */\n      tag_514\n        /* \"contracts/reference.sol\":18144:18146  to */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/reference.sol\":12929:12947  _balances[account] */\n      and\n        /* \"contracts/reference.sol\":12903:12910  uint256 */\n      0x00\n        /* \"contracts/reference.sol\":12929:12947  _balances[account] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/reference.sol\":12929:12938  _balances */\n      0x02\n        /* \"contracts/reference.sol\":12929:12947  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"contracts/reference.sol\":12837:12954  function balanceOf(address account) public view override returns (uint256) {... */\n      jump\n        /* \"contracts/reference.sol\":18134:18159  balanceOf(to).add(amount) */\n    tag_635:\n        /* \"contracts/reference.sol\":18134:18179  balanceOf(to).add(amount) <= _maxWalletAmount */\n      gt\n      iszero\n        /* \"contracts/reference.sol\":18126:18249  require(balanceOf(to).add(amount) <= _maxWalletAmount, \"wallet balance after transfer must be less than max wallet amount\") */\n      tag_637\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_324\n      swap1\n      tag_596\n      jump\t// in\n    tag_637:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/reference.sol\":18289:18313  _isExcludedFromFee[from] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/reference.sol\":18289:18307  _isExcludedFromFee */\n      0x04\n        /* \"contracts/reference.sol\":18289:18313  _isExcludedFromFee[from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup1\n        /* \"contracts/reference.sol\":18289:18339  _isExcludedFromFee[from] || _isExcludedFromFee[to] */\n      tag_639\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/reference.sol\":18317:18339  _isExcludedFromFee[to] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/reference.sol\":18317:18335  _isExcludedFromFee */\n      0x04\n        /* \"contracts/reference.sol\":18317:18339  _isExcludedFromFee[to] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/reference.sol\":18289:18339  _isExcludedFromFee[from] || _isExcludedFromFee[to] */\n    tag_639:\n        /* \"contracts/reference.sol\":18285:18381  if (_isExcludedFromFee[from] || _isExcludedFromFee[to]) {... */\n      iszero\n      tag_640\n      jumpi\n      pop\n        /* \"contracts/reference.sol\":18365:18370  false */\n      0x00\n        /* \"contracts/reference.sol\":18285:18381  if (_isExcludedFromFee[from] || _isExcludedFromFee[to]) {... */\n    tag_640:\n        /* \"contracts/reference.sol\":18399:18440  _tokenTransfer(from, to, amount, takeFee) */\n      tag_641\n        /* \"contracts/reference.sol\":18414:18418  from */\n      dup5\n        /* \"contracts/reference.sol\":18420:18422  to */\n      dup5\n        /* \"contracts/reference.sol\":18424:18430  amount */\n      dup5\n        /* \"contracts/reference.sol\":18432:18439  takeFee */\n      dup5\n        /* \"contracts/reference.sol\":18399:18413  _tokenTransfer */\n      tag_642\n        /* \"contracts/reference.sol\":18399:18440  _tokenTransfer(from, to, amount, takeFee) */\n      jump\t// in\n    tag_641:\n        /* \"contracts/reference.sol\":15380:18447  function _transfer(address from, address to, uint256 amount) private {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/reference.sol\":1849:2035  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_340:\n        /* \"contracts/reference.sol\":1935:1942  uint256 */\n      0x00\n        /* \"contracts/reference.sol\":1970:1982  errorMessage */\n      dup2\n        /* \"contracts/reference.sol\":1962:1968  b <= a */\n      dup5\n      dup5\n      gt\n      iszero\n        /* \"contracts/reference.sol\":1954:1983  require(b <= a, errorMessage) */\n      tag_644\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_324\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_644:\n      pop\n        /* \"contracts/reference.sol\":1993:2002  uint256 c */\n      0x00\n        /* \"contracts/reference.sol\":2005:2010  a - b */\n      tag_646\n        /* \"contracts/reference.sol\":2009:2010  b */\n      dup5\n        /* \"contracts/reference.sol\":2005:2006  a */\n      dup7\n        /* \"contracts/reference.sol\":2005:2010  a - b */\n      tag_647\n      jump\t// in\n    tag_646:\n        /* \"contracts/reference.sol\":1993:2010  uint256 c = a - b */\n      swap6\n        /* \"contracts/reference.sol\":1849:2035  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/reference.sol\":2286:2416  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_347:\n        /* \"contracts/reference.sol\":2344:2351  uint256 */\n      0x00\n        /* \"contracts/reference.sol\":2370:2409  div(a, b, \"SafeMath: division by zero\") */\n      tag_649\n        /* \"contracts/reference.sol\":2374:2375  a */\n      dup4\n        /* \"contracts/reference.sol\":2377:2378  b */\n      dup4\n        /* \"contracts/reference.sol\":2370:2409  div(a, b, \"SafeMath: division by zero\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1a\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a206469766973696f6e206279207a65726f000000000000\n      dup2\n      mstore\n      pop\n        /* \"contracts/reference.sol\":2370:2373  div */\n      tag_650\n        /* \"contracts/reference.sol\":2370:2409  div(a, b, \"SafeMath: division by zero\") */\n      jump\t// in\n    tag_649:\n        /* \"contracts/reference.sol\":2363:2409  return div(a, b, \"SafeMath: division by zero\") */\n      swap4\n        /* \"contracts/reference.sol\":2286:2416  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/reference.sol\":2041:2280  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_442:\n        /* \"contracts/reference.sol\":2099:2106  uint256 */\n      0x00\n        /* \"contracts/reference.sol\":2122:2128  a == 0 */\n      dup3\n        /* \"contracts/reference.sol\":2118:2163  if (a == 0) {... */\n      tag_652\n      jumpi\n      pop\n        /* \"contracts/reference.sol\":2151:2152  0 */\n      0x00\n        /* \"contracts/reference.sol\":2144:2152  return 0 */\n      jump(tag_316)\n        /* \"contracts/reference.sol\":2118:2163  if (a == 0) {... */\n    tag_652:\n        /* \"contracts/reference.sol\":2172:2181  uint256 c */\n      0x00\n        /* \"contracts/reference.sol\":2184:2189  a * b */\n      tag_653\n        /* \"contracts/reference.sol\":2188:2189  b */\n      dup4\n        /* \"contracts/reference.sol\":2184:2185  a */\n      dup6\n        /* \"contracts/reference.sol\":2184:2189  a * b */\n      tag_654\n      jump\t// in\n    tag_653:\n        /* \"contracts/reference.sol\":2172:2189  uint256 c = a * b */\n      swap1\n      pop\n        /* \"contracts/reference.sol\":2216:2217  b */\n      dup3\n        /* \"contracts/reference.sol\":2207:2212  c / a */\n      tag_655\n        /* \"contracts/reference.sol\":2211:2212  a */\n      dup6\n        /* \"contracts/reference.sol\":2172:2189  uint256 c = a * b */\n      dup4\n        /* \"contracts/reference.sol\":2207:2212  c / a */\n      tag_656\n      jump\t// in\n    tag_655:\n        /* \"contracts/reference.sol\":2207:2217  c / a == b */\n      eq\n        /* \"contracts/reference.sol\":2199:2255  require(c / a == b, \"SafeMath: multiplication overflow\") */\n      tag_649\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12016:12018   */\n      0x20\n        /* \"contracts/reference.sol\":2199:2255  require(c / a == b, \"SafeMath: multiplication overflow\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11998:12019   */\n      mstore\n        /* \"#utility.yul\":12055:12057   */\n      0x21\n        /* \"#utility.yul\":12035:12053   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12028:12058   */\n      mstore\n        /* \"#utility.yul\":12094:12128   */\n      0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f\n        /* \"#utility.yul\":12074:12092   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12067:12129   */\n      mstore\n      shl(0xf8, 0x77)\n        /* \"#utility.yul\":12145:12163   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":12138:12169   */\n      mstore\n        /* \"#utility.yul\":12186:12205   */\n      0x84\n      add\n        /* \"contracts/reference.sol\":2199:2255  require(c / a == b, \"SafeMath: multiplication overflow\") */\n      tag_324\n        /* \"#utility.yul\":11988:12211   */\n      jump\n        /* \"contracts/reference.sol\":1709:1843  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_456:\n        /* \"contracts/reference.sol\":1767:1774  uint256 */\n      0x00\n        /* \"contracts/reference.sol\":1793:1836  sub(a, b, \"SafeMath: subtraction overflow\") */\n      tag_649\n        /* \"contracts/reference.sol\":1797:1798  a */\n      dup4\n        /* \"contracts/reference.sol\":1800:1801  b */\n      dup4\n        /* \"contracts/reference.sol\":1793:1836  sub(a, b, \"SafeMath: subtraction overflow\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup2\n      mstore\n      pop\n        /* \"contracts/reference.sol\":1793:1796  sub */\n      tag_340\n        /* \"contracts/reference.sol\":1793:1836  sub(a, b, \"SafeMath: subtraction overflow\") */\n      jump\t// in\n        /* \"contracts/reference.sol\":18456:18857  function swapTokensForEth(uint256 tokenAmount) private lockTheSwap {... */\n    tag_480:\n        /* \"contracts/reference.sol\":11596:11602  inSwap */\n      0x28\n        /* \"contracts/reference.sol\":11596:11609  inSwap = true */\n      dup1\n      sload\n      not(0xff00)\n      and\n      0x0100\n      or\n      swap1\n      sstore\n        /* \"contracts/reference.sol\":18557:18573  new address[](2) */\n      0x40\n      dup1\n      mload\n        /* \"contracts/reference.sol\":18571:18572  2 */\n      0x02\n        /* \"contracts/reference.sol\":18557:18573  new address[](2) */\n      dup1\n      dup3\n      mstore\n      0x60\n      dup3\n      add\n      dup4\n      mstore\n      0x00\n      swap3\n      0x20\n      dup4\n      add\n      swap1\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n      pop\n        /* \"contracts/reference.sol\":18533:18573  address[] memory path = new address[](2) */\n      swap1\n      pop\n        /* \"contracts/reference.sol\":18601:18605  this */\n      address\n        /* \"contracts/reference.sol\":18583:18587  path */\n      dup2\n        /* \"contracts/reference.sol\":18588:18589  0 */\n      0x00\n        /* \"contracts/reference.sol\":18583:18590  path[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_666\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_666:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/reference.sol\":18583:18606  path[0] = address(this) */\n      swap3\n      dup4\n      and\n        /* \"contracts/reference.sol\":18583:18590  path[0] */\n      0x20\n      swap2\n      dup3\n      mul\n      swap3\n      swap1\n      swap3\n      add\n      dup2\n      add\n        /* \"contracts/reference.sol\":18583:18606  path[0] = address(this) */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"contracts/reference.sol\":18626:18641  uniswapV2Router */\n      sload(0x25)\n        /* \"contracts/reference.sol\":18626:18648  uniswapV2Router.WETH() */\n      0x40\n      dup1\n      mload\n      shl(0xe3, 0x15ab88c9)\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"contracts/reference.sol\":18626:18641  uniswapV2Router */\n      swap2\n      swap1\n      swap4\n      and\n      swap3\n        /* \"contracts/reference.sol\":18626:18646  uniswapV2Router.WETH */\n      0xad5c4648\n      swap3\n        /* \"contracts/reference.sol\":18626:18648  uniswapV2Router.WETH() */\n      0x04\n      dup1\n      dup4\n      add\n      swap4\n        /* \"contracts/reference.sol\":18583:18590  path[0] */\n      swap2\n      swap3\n        /* \"contracts/reference.sol\":18626:18648  uniswapV2Router.WETH() */\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"contracts/reference.sol\":18626:18641  uniswapV2Router */\n      dup7\n        /* \"contracts/reference.sol\":18626:18648  uniswapV2Router.WETH() */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_667\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_667:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_669\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_669:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_670\n      swap2\n      swap1\n      tag_438\n      jump\t// in\n    tag_670:\n        /* \"contracts/reference.sol\":18616:18620  path */\n      dup2\n        /* \"contracts/reference.sol\":18621:18622  1 */\n      0x01\n        /* \"contracts/reference.sol\":18616:18623  path[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_671\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_671:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/reference.sol\":18616:18648  path[1] = uniswapV2Router.WETH() */\n      swap3\n      dup4\n      and\n        /* \"contracts/reference.sol\":18616:18623  path[1] */\n      0x20\n      swap2\n      dup3\n      mul\n      swap3\n      swap1\n      swap3\n      add\n      add\n        /* \"contracts/reference.sol\":18616:18648  path[1] = uniswapV2Router.WETH() */\n      mstore\n        /* \"contracts/reference.sol\":18690:18705  uniswapV2Router */\n      sload(0x25)\n        /* \"contracts/reference.sol\":18658:18720  _approve(address(this), address(uniswapV2Router), tokenAmount) */\n      tag_672\n      swap2\n        /* \"contracts/reference.sol\":18675:18679  this */\n      address\n      swap2\n        /* \"contracts/reference.sol\":18690:18705  uniswapV2Router */\n      and\n        /* \"contracts/reference.sol\":18708:18719  tokenAmount */\n      dup5\n        /* \"contracts/reference.sol\":18658:18666  _approve */\n      tag_320\n        /* \"contracts/reference.sol\":18658:18720  _approve(address(this), address(uniswapV2Router), tokenAmount) */\n      jump\t// in\n    tag_672:\n        /* \"contracts/reference.sol\":18730:18745  uniswapV2Router */\n      sload(0x25)\n        /* \"contracts/reference.sol\":18730:18850  uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount, 0, path, address(this), block.timestamp) */\n      mload(0x40)\n      shl(0xe0, 0x791ac947)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/reference.sol\":18730:18745  uniswapV2Router */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/reference.sol\":18730:18796  uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens */\n      0x791ac947\n      swap1\n        /* \"contracts/reference.sol\":18730:18850  uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount, 0, path, address(this), block.timestamp) */\n      tag_673\n      swap1\n        /* \"contracts/reference.sol\":18797:18808  tokenAmount */\n      dup6\n      swap1\n        /* \"contracts/reference.sol\":18730:18745  uniswapV2Router */\n      0x00\n      swap1\n        /* \"contracts/reference.sol\":18813:18817  path */\n      dup7\n      swap1\n        /* \"contracts/reference.sol\":18827:18831  this */\n      address\n      swap1\n        /* \"contracts/reference.sol\":18834:18849  block.timestamp */\n      timestamp\n      swap1\n        /* \"contracts/reference.sol\":18730:18850  uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount, 0, path, address(this), block.timestamp) */\n      0x04\n      add\n      tag_674\n      jump\t// in\n    tag_673:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_675\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_675:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_677\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_677:\n      pop\n      pop\n        /* \"contracts/reference.sol\":11630:11636  inSwap */\n      0x28\n        /* \"contracts/reference.sol\":11630:11644  inSwap = false */\n      dup1\n      sload\n      not(0xff00)\n      and\n      swap1\n      sstore\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/reference.sol\":18456:18857  function swapTokensForEth(uint256 tokenAmount) private lockTheSwap {... */\n      jump\t// out\n        /* \"contracts/reference.sol\":1528:1703  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_515:\n        /* \"contracts/reference.sol\":1586:1593  uint256 */\n      0x00\n      dup1\n        /* \"contracts/reference.sol\":1617:1622  a + b */\n      tag_679\n        /* \"contracts/reference.sol\":1621:1622  b */\n      dup4\n        /* \"contracts/reference.sol\":1617:1618  a */\n      dup6\n        /* \"contracts/reference.sol\":1617:1622  a + b */\n      tag_607\n      jump\t// in\n    tag_679:\n        /* \"contracts/reference.sol\":1605:1622  uint256 c = a + b */\n      swap1\n      pop\n        /* \"contracts/reference.sol\":1645:1646  a */\n      dup4\n        /* \"contracts/reference.sol\":1640:1641  c */\n      dup2\n        /* \"contracts/reference.sol\":1640:1646  c >= a */\n      lt\n      iszero\n        /* \"contracts/reference.sol\":1632:1678  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_649\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9997:9999   */\n      0x20\n        /* \"contracts/reference.sol\":1632:1678  require(c >= a, \"SafeMath: addition overflow\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9979:10000   */\n      mstore\n        /* \"#utility.yul\":10036:10038   */\n      0x1b\n        /* \"#utility.yul\":10016:10034   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10009:10039   */\n      mstore\n        /* \"#utility.yul\":10075:10104   */\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n        /* \"#utility.yul\":10055:10073   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10048:10105   */\n      mstore\n        /* \"#utility.yul\":10122:10140   */\n      0x64\n      add\n        /* \"contracts/reference.sol\":1632:1678  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_324\n        /* \"#utility.yul\":9969:10146   */\n      jump\n        /* \"contracts/reference.sol\":3654:3841  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_537:\n        /* \"contracts/reference.sol\":3727:3743  address oldOwner */\n      0x00\n        /* \"contracts/reference.sol\":3746:3752  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/reference.sol\":3762:3779  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"contracts/reference.sol\":3794:3834  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"contracts/reference.sol\":3746:3752  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"contracts/reference.sol\":3794:3834  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"contracts/reference.sol\":3727:3743  address oldOwner */\n      swap1\n        /* \"contracts/reference.sol\":3794:3834  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"contracts/reference.sol\":3654:3841  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/reference.sol\":18863:19671  function _checkPriceConditions() private {... */\n    tag_613:\n        /* \"contracts/reference.sol\":18914:18934  uint256 currentPrice */\n      0x00\n        /* \"contracts/reference.sol\":18937:18948  pairPrice() */\n      tag_685\n        /* \"contracts/reference.sol\":18937:18946  pairPrice */\n      tag_213\n        /* \"contracts/reference.sol\":18937:18948  pairPrice() */\n      jump\t// in\n    tag_685:\n        /* \"contracts/reference.sol\":18914:18948  uint256 currentPrice = pairPrice() */\n      swap1\n      pop\n        /* \"contracts/reference.sol\":18962:18979  currentPrice == 0 */\n      dup1\n        /* \"contracts/reference.sol\":18958:18988  if (currentPrice == 0) return; */\n      tag_686\n      jumpi\n        /* \"contracts/reference.sol\":18981:18988  return; */\n      pop\n        /* \"contracts/reference.sol\":18863:19671  function _checkPriceConditions() private {... */\n      jump\t// out\n        /* \"contracts/reference.sol\":18958:18988  if (currentPrice == 0) return; */\n    tag_686:\n        /* \"contracts/reference.sol\":19017:19038  diamondFloor.athPrice */\n      sload(0x1d)\n        /* \"contracts/reference.sol\":19002:19038  currentPrice > diamondFloor.athPrice */\n      dup2\n      gt\n        /* \"contracts/reference.sol\":18998:19167  if (currentPrice > diamondFloor.athPrice) {... */\n      iszero\n      tag_687\n      jumpi\n        /* \"contracts/reference.sol\":19054:19075  diamondFloor.athPrice */\n      0x1d\n        /* \"contracts/reference.sol\":19054:19090  diamondFloor.athPrice = currentPrice */\n      sstore\n        /* \"contracts/reference.sol\":19104:19128  diamondFloor.sellStopped */\n      0x1e\n        /* \"contracts/reference.sol\":19104:19136  diamondFloor.sellStopped = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"contracts/reference.sol\":18863:19671  function _checkPriceConditions() private {... */\n      jump\t// out\n        /* \"contracts/reference.sol\":18998:19167  if (currentPrice > diamondFloor.athPrice) {... */\n    tag_687:\n        /* \"contracts/reference.sol\":19251:19263  diamondFloor */\n      0x1c\n        /* \"contracts/reference.sol\":19251:19281  diamondFloor.triggerPercentage */\n      sload\n        /* \"contracts/reference.sol\":19202:19223  diamondFloor.athPrice */\n      sload(0x1d)\n        /* \"contracts/reference.sol\":19177:19199  uint256 thresholdPrice */\n      0x00\n      swap2\n        /* \"contracts/reference.sol\":19202:19305  diamondFloor.athPrice... */\n      tag_688\n      swap2\n        /* \"contracts/reference.sol\":19300:19304  1000 */\n      0x03e8\n      swap2\n        /* \"contracts/reference.sol\":19202:19282  diamondFloor.athPrice... */\n      tag_441\n      swap2\n        /* \"contracts/reference.sol\":19251:19281  diamondFloor.triggerPercentage */\n      0x0100\n      swap1\n      swap2\n      div\n      0xffff\n      and\n      swap1\n        /* \"contracts/reference.sol\":19202:19246  diamondFloor.athPrice... */\n      tag_690\n      swap1\n        /* \"contracts/reference.sol\":19300:19304  1000 */\n      dup5\n        /* \"contracts/reference.sol\":19202:19240  diamondFloor.athPrice... */\n      tag_442\n        /* \"contracts/reference.sol\":19202:19246  diamondFloor.athPrice... */\n      jump\t// in\n    tag_690:\n        /* \"contracts/reference.sol\":19202:19250  diamondFloor.athPrice... */\n      swap1\n      tag_456\n        /* \"contracts/reference.sol\":19202:19282  diamondFloor.athPrice... */\n      jump\t// in\n        /* \"contracts/reference.sol\":19202:19305  diamondFloor.athPrice... */\n    tag_688:\n        /* \"contracts/reference.sol\":19177:19305  uint256 thresholdPrice = diamondFloor.athPrice... */\n      swap1\n      pop\n        /* \"contracts/reference.sol\":19335:19349  thresholdPrice */\n      dup1\n        /* \"contracts/reference.sol\":19320:19332  currentPrice */\n      dup3\n        /* \"contracts/reference.sol\":19320:19349  currentPrice < thresholdPrice */\n      lt\n        /* \"contracts/reference.sol\":19316:19468  if (currentPrice < thresholdPrice) {... */\n      iszero\n      tag_691\n      jumpi\n        /* \"contracts/reference.sol\":19365:19389  diamondFloor.sellStopped */\n      0x1e\n        /* \"contracts/reference.sol\":19365:19396  diamondFloor.sellStopped = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"contracts/reference.sol\":19392:19396  true */\n      0x01\n        /* \"contracts/reference.sol\":19365:19396  diamondFloor.sellStopped = true */\n      or\n      swap1\n      sstore\n        /* \"contracts/reference.sol\":19436:19457  diamondFloor.athPrice */\n      sload(0x1d)\n        /* \"contracts/reference.sol\":19410:19433  diamondFloor.blockedAth */\n      0x1f\n        /* \"contracts/reference.sol\":19410:19457  diamondFloor.blockedAth = diamondFloor.athPrice */\n      sstore\n        /* \"contracts/reference.sol\":19316:19468  if (currentPrice < thresholdPrice) {... */\n    tag_691:\n        /* \"contracts/reference.sol\":19482:19506  diamondFloor.sellStopped */\n      and(0xff, sload(0x1e))\n        /* \"contracts/reference.sol\":19482:19556  diamondFloor.sellStopped && currentPrice >= diamondFloor.blockedAth.mul(2) */\n      dup1\n      iszero\n      tag_692\n      jumpi\n      pop\n        /* \"contracts/reference.sol\":19526:19549  diamondFloor.blockedAth */\n      sload(0x1f)\n        /* \"contracts/reference.sol\":19526:19556  diamondFloor.blockedAth.mul(2) */\n      tag_693\n      swap1\n        /* \"contracts/reference.sol\":19554:19555  2 */\n      0x02\n        /* \"contracts/reference.sol\":19526:19553  diamondFloor.blockedAth.mul */\n      tag_442\n        /* \"contracts/reference.sol\":19526:19556  diamondFloor.blockedAth.mul(2) */\n      jump\t// in\n    tag_693:\n        /* \"contracts/reference.sol\":19510:19522  currentPrice */\n      dup3\n        /* \"contracts/reference.sol\":19510:19556  currentPrice >= diamondFloor.blockedAth.mul(2) */\n      lt\n      iszero\n        /* \"contracts/reference.sol\":19482:19556  diamondFloor.sellStopped && currentPrice >= diamondFloor.blockedAth.mul(2) */\n    tag_692:\n        /* \"contracts/reference.sol\":19478:19665  if (diamondFloor.sellStopped && currentPrice >= diamondFloor.blockedAth.mul(2)) {... */\n      iszero\n      tag_406\n      jumpi\n      pop\n        /* \"contracts/reference.sol\":19572:19596  diamondFloor.sellStopped */\n      0x1e\n        /* \"contracts/reference.sol\":19572:19604  diamondFloor.sellStopped = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"contracts/reference.sol\":19618:19639  diamondFloor.athPrice */\n      0x1d\n        /* \"contracts/reference.sol\":19618:19654  diamondFloor.athPrice = currentPrice */\n      sstore\n        /* \"contracts/reference.sol\":18863:19671  function _checkPriceConditions() private {... */\n      jump\t// out\n        /* \"contracts/reference.sol\":20564:21071  function swapAndLiquify(uint256 lpAmount, uint256 contractTokenBalance) private lockTheSwap {... */\n    tag_629:\n        /* \"contracts/reference.sol\":11596:11602  inSwap */\n      0x28\n        /* \"contracts/reference.sol\":11596:11609  inSwap = true */\n      dup1\n      sload\n      not(0xff00)\n      and\n      0x0100\n      or\n      swap1\n      sstore\n      0x00\n        /* \"contracts/reference.sol\":20681:20696  lpAmount.div(2) */\n      tag_697\n        /* \"contracts/reference.sol\":20681:20689  lpAmount */\n      dup4\n        /* \"contracts/reference.sol\":20694:20695  2 */\n      0x02\n        /* \"contracts/reference.sol\":20681:20693  lpAmount.div */\n      tag_347\n        /* \"contracts/reference.sol\":20681:20696  lpAmount.div(2) */\n      jump\t// in\n    tag_697:\n        /* \"contracts/reference.sol\":20666:20696  uint256 half = lpAmount.div(2) */\n      swap1\n      pop\n        /* \"contracts/reference.sol\":20706:20723  uint256 otherHalf */\n      0x00\n        /* \"contracts/reference.sol\":20726:20744  lpAmount.sub(half) */\n      tag_698\n        /* \"contracts/reference.sol\":20726:20734  lpAmount */\n      dup5\n        /* \"contracts/reference.sol\":20666:20696  uint256 half = lpAmount.div(2) */\n      dup4\n        /* \"contracts/reference.sol\":20726:20738  lpAmount.sub */\n      tag_456\n        /* \"contracts/reference.sol\":20726:20744  lpAmount.sub(half) */\n      jump\t// in\n    tag_698:\n        /* \"contracts/reference.sol\":20706:20744  uint256 otherHalf = lpAmount.sub(half) */\n      swap1\n      pop\n        /* \"contracts/reference.sol\":20779:20800  address(this).balance */\n      selfbalance\n        /* \"contracts/reference.sol\":20810:20858  swapTokensForEth(contractTokenBalance.add(half)) */\n      tag_699\n        /* \"contracts/reference.sol\":20827:20857  contractTokenBalance.add(half) */\n      tag_700\n        /* \"contracts/reference.sol\":20827:20847  contractTokenBalance */\n      dup6\n        /* \"contracts/reference.sol\":20852:20856  half */\n      dup6\n        /* \"contracts/reference.sol\":20827:20851  contractTokenBalance.add */\n      tag_515\n        /* \"contracts/reference.sol\":20827:20857  contractTokenBalance.add(half) */\n      jump\t// in\n    tag_700:\n        /* \"contracts/reference.sol\":20810:20826  swapTokensForEth */\n      tag_480\n        /* \"contracts/reference.sol\":20810:20858  swapTokensForEth(contractTokenBalance.add(half)) */\n      jump\t// in\n    tag_699:\n        /* \"contracts/reference.sol\":20868:20886  uint256 newBalance */\n      0x00\n        /* \"contracts/reference.sol\":20889:20930  address(this).balance.sub(initialBalance) */\n      tag_701\n        /* \"contracts/reference.sol\":20889:20910  address(this).balance */\n      selfbalance\n        /* \"contracts/reference.sol\":20915:20929  initialBalance */\n      dup4\n        /* \"contracts/reference.sol\":20889:20914  address(this).balance.sub */\n      tag_456\n        /* \"contracts/reference.sol\":20889:20930  address(this).balance.sub(initialBalance) */\n      jump\t// in\n    tag_701:\n        /* \"contracts/reference.sol\":20868:20930  uint256 newBalance = address(this).balance.sub(initialBalance) */\n      swap1\n      pop\n        /* \"contracts/reference.sol\":20944:20957  otherHalf > 0 */\n      dup3\n      iszero\n        /* \"contracts/reference.sol\":20940:21065  if (otherHalf > 0) {... */\n      tag_677\n      jumpi\n        /* \"contracts/reference.sol\":20973:21054  addLiquidity(otherHalf, newBalance.mul(half).div(contractTokenBalance.add(half))) */\n      tag_677\n        /* \"contracts/reference.sol\":20986:20995  otherHalf */\n      dup4\n        /* \"contracts/reference.sol\":20997:21053  newBalance.mul(half).div(contractTokenBalance.add(half)) */\n      tag_704\n        /* \"contracts/reference.sol\":21022:21052  contractTokenBalance.add(half) */\n      tag_705\n        /* \"contracts/reference.sol\":21022:21042  contractTokenBalance */\n      dup9\n        /* \"contracts/reference.sol\":21047:21051  half */\n      dup9\n        /* \"contracts/reference.sol\":21022:21046  contractTokenBalance.add */\n      tag_515\n        /* \"contracts/reference.sol\":21022:21052  contractTokenBalance.add(half) */\n      jump\t// in\n    tag_705:\n        /* \"contracts/reference.sol\":20997:21017  newBalance.mul(half) */\n      tag_441\n        /* \"contracts/reference.sol\":20997:21007  newBalance */\n      dup6\n        /* \"contracts/reference.sol\":21012:21016  half */\n      dup10\n        /* \"contracts/reference.sol\":20997:21011  newBalance.mul */\n      tag_442\n        /* \"contracts/reference.sol\":20997:21017  newBalance.mul(half) */\n      jump\t// in\n        /* \"contracts/reference.sol\":20997:21053  newBalance.mul(half).div(contractTokenBalance.add(half)) */\n    tag_704:\n        /* \"contracts/reference.sol\":20973:20985  addLiquidity */\n      tag_707\n        /* \"contracts/reference.sol\":20973:21054  addLiquidity(otherHalf, newBalance.mul(half).div(contractTokenBalance.add(half))) */\n      jump\t// in\n        /* \"contracts/reference.sol\":21077:21819  function sendETHToFee(uint256 amount) private {... */\n    tag_632:\n        /* \"contracts/reference.sol\":21133:21150  uint256 totalFees */\n      0x00\n        /* \"contracts/reference.sol\":21153:21211  _sellMarketingFee.add(_sellEcosystemFee).add(_sellTeamFee) */\n      tag_709\n        /* \"contracts/reference.sol\":21198:21210  _sellTeamFee */\n      sload(0x17)\n        /* \"contracts/reference.sol\":21153:21193  _sellMarketingFee.add(_sellEcosystemFee) */\n      tag_514\n        /* \"contracts/reference.sol\":21175:21192  _sellEcosystemFee */\n      sload(0x13)\n        /* \"contracts/reference.sol\":21153:21170  _sellMarketingFee */\n      sload(0x15)\n        /* \"contracts/reference.sol\":21153:21174  _sellMarketingFee.add */\n      tag_515\n      swap1\n        /* \"contracts/reference.sol\":21153:21193  _sellMarketingFee.add(_sellEcosystemFee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"contracts/reference.sol\":21153:21211  _sellMarketingFee.add(_sellEcosystemFee).add(_sellTeamFee) */\n    tag_709:\n        /* \"contracts/reference.sol\":21133:21211  uint256 totalFees = _sellMarketingFee.add(_sellEcosystemFee).add(_sellTeamFee) */\n      swap1\n      pop\n        /* \"contracts/reference.sol\":21225:21239  totalFees != 0 */\n      dup1\n      iszero\n        /* \"contracts/reference.sol\":21221:21813  if (totalFees != 0) {... */\n      tag_406\n      jumpi\n        /* \"contracts/reference.sol\":21255:21279  uint256 marketingPortion */\n      0x00\n        /* \"contracts/reference.sol\":21282:21326  amount.mul(_sellMarketingFee).div(totalFees) */\n      tag_712\n        /* \"contracts/reference.sol\":21316:21325  totalFees */\n      dup3\n        /* \"contracts/reference.sol\":21282:21311  amount.mul(_sellMarketingFee) */\n      tag_441\n        /* \"contracts/reference.sol\":21293:21310  _sellMarketingFee */\n      sload(0x15)\n        /* \"contracts/reference.sol\":21282:21288  amount */\n      dup7\n        /* \"contracts/reference.sol\":21282:21292  amount.mul */\n      tag_442\n      swap1\n        /* \"contracts/reference.sol\":21282:21311  amount.mul(_sellMarketingFee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"contracts/reference.sol\":21282:21326  amount.mul(_sellMarketingFee).div(totalFees) */\n    tag_712:\n        /* \"contracts/reference.sol\":21255:21326  uint256 marketingPortion = amount.mul(_sellMarketingFee).div(totalFees) */\n      swap1\n      pop\n        /* \"contracts/reference.sol\":21340:21359  uint256 teamPortion */\n      0x00\n        /* \"contracts/reference.sol\":21362:21401  amount.mul(_sellTeamFee).div(totalFees) */\n      tag_714\n        /* \"contracts/reference.sol\":21391:21400  totalFees */\n      dup4\n        /* \"contracts/reference.sol\":21362:21386  amount.mul(_sellTeamFee) */\n      tag_441\n        /* \"contracts/reference.sol\":21373:21385  _sellTeamFee */\n      sload(0x17)\n        /* \"contracts/reference.sol\":21362:21368  amount */\n      dup8\n        /* \"contracts/reference.sol\":21362:21372  amount.mul */\n      tag_442\n      swap1\n        /* \"contracts/reference.sol\":21362:21386  amount.mul(_sellTeamFee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"contracts/reference.sol\":21362:21401  amount.mul(_sellTeamFee).div(totalFees) */\n    tag_714:\n        /* \"contracts/reference.sol\":21340:21401  uint256 teamPortion = amount.mul(_sellTeamFee).div(totalFees) */\n      swap1\n      pop\n        /* \"contracts/reference.sol\":21415:21433  uint256 ecoPortion */\n      0x00\n        /* \"contracts/reference.sol\":21436:21481  amount.sub(marketingPortion).sub(teamPortion) */\n      tag_716\n        /* \"contracts/reference.sol\":21340:21401  uint256 teamPortion = amount.mul(_sellTeamFee).div(totalFees) */\n      dup3\n        /* \"contracts/reference.sol\":21436:21464  amount.sub(marketingPortion) */\n      tag_690\n        /* \"contracts/reference.sol\":21436:21442  amount */\n      dup8\n        /* \"contracts/reference.sol\":21447:21463  marketingPortion */\n      dup7\n        /* \"contracts/reference.sol\":21436:21446  amount.sub */\n      tag_456\n        /* \"contracts/reference.sol\":21436:21464  amount.sub(marketingPortion) */\n      jump\t// in\n        /* \"contracts/reference.sol\":21436:21481  amount.sub(marketingPortion).sub(teamPortion) */\n    tag_716:\n        /* \"contracts/reference.sol\":21415:21481  uint256 ecoPortion = amount.sub(marketingPortion).sub(teamPortion) */\n      swap1\n      pop\n        /* \"contracts/reference.sol\":21499:21519  marketingPortion > 0 */\n      dup3\n      iszero\n        /* \"contracts/reference.sol\":21495:21598  if (marketingPortion > 0) {... */\n      tag_718\n      jumpi\n        /* \"contracts/reference.sol\":21539:21556  _marketingAddress */\n      sload(0x21)\n        /* \"contracts/reference.sol\":21539:21583  _marketingAddress.transfer(marketingPortion) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/reference.sol\":21539:21556  _marketingAddress */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/reference.sol\":21539:21583  _marketingAddress.transfer(marketingPortion) */\n      dup5\n      iszero\n      0x08fc\n      mul\n      swap1\n        /* \"contracts/reference.sol\":21566:21582  marketingPortion */\n      dup6\n      swap1\n        /* \"contracts/reference.sol\":21539:21556  _marketingAddress */\n      0x00\n        /* \"contracts/reference.sol\":21539:21583  _marketingAddress.transfer(marketingPortion) */\n      dup2\n        /* \"contracts/reference.sol\":21539:21556  _marketingAddress */\n      dup2\n        /* \"contracts/reference.sol\":21539:21583  _marketingAddress.transfer(marketingPortion) */\n      dup2\n        /* \"contracts/reference.sol\":21566:21582  marketingPortion */\n      dup6\n        /* \"contracts/reference.sol\":21539:21556  _marketingAddress */\n      dup9\n        /* \"contracts/reference.sol\":21539:21583  _marketingAddress.transfer(marketingPortion) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_720\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_720:\n      pop\n        /* \"contracts/reference.sol\":21495:21598  if (marketingPortion > 0) {... */\n    tag_718:\n        /* \"contracts/reference.sol\":21615:21630  teamPortion > 0 */\n      dup2\n      iszero\n        /* \"contracts/reference.sol\":21611:21699  if (teamPortion > 0) {... */\n      tag_721\n      jumpi\n        /* \"contracts/reference.sol\":21650:21662  _teamAddress */\n      sload(0x22)\n        /* \"contracts/reference.sol\":21650:21684  _teamAddress.transfer(teamPortion) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/reference.sol\":21650:21662  _teamAddress */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/reference.sol\":21650:21684  _teamAddress.transfer(teamPortion) */\n      dup4\n      iszero\n      0x08fc\n      mul\n      swap1\n        /* \"contracts/reference.sol\":21672:21683  teamPortion */\n      dup5\n      swap1\n        /* \"contracts/reference.sol\":21650:21662  _teamAddress */\n      0x00\n        /* \"contracts/reference.sol\":21650:21684  _teamAddress.transfer(teamPortion) */\n      dup2\n        /* \"contracts/reference.sol\":21650:21662  _teamAddress */\n      dup2\n        /* \"contracts/reference.sol\":21650:21684  _teamAddress.transfer(teamPortion) */\n      dup2\n        /* \"contracts/reference.sol\":21672:21683  teamPortion */\n      dup6\n        /* \"contracts/reference.sol\":21650:21662  _teamAddress */\n      dup9\n        /* \"contracts/reference.sol\":21650:21684  _teamAddress.transfer(teamPortion) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_723\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_723:\n      pop\n        /* \"contracts/reference.sol\":21611:21699  if (teamPortion > 0) {... */\n    tag_721:\n        /* \"contracts/reference.sol\":21716:21730  ecoPortion > 0 */\n      dup1\n      iszero\n        /* \"contracts/reference.sol\":21712:21803  if (ecoPortion > 0) {... */\n      tag_724\n      jumpi\n        /* \"contracts/reference.sol\":21750:21767  _ecosystemAddress */\n      sload(0x23)\n        /* \"contracts/reference.sol\":21750:21788  _ecosystemAddress.transfer(ecoPortion) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/reference.sol\":21750:21767  _ecosystemAddress */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/reference.sol\":21750:21788  _ecosystemAddress.transfer(ecoPortion) */\n      dup3\n      iszero\n      0x08fc\n      mul\n      swap1\n        /* \"contracts/reference.sol\":21777:21787  ecoPortion */\n      dup4\n      swap1\n        /* \"contracts/reference.sol\":21750:21767  _ecosystemAddress */\n      0x00\n        /* \"contracts/reference.sol\":21750:21788  _ecosystemAddress.transfer(ecoPortion) */\n      dup2\n        /* \"contracts/reference.sol\":21750:21767  _ecosystemAddress */\n      dup2\n        /* \"contracts/reference.sol\":21750:21788  _ecosystemAddress.transfer(ecoPortion) */\n      dup2\n        /* \"contracts/reference.sol\":21777:21787  ecoPortion */\n      dup6\n        /* \"contracts/reference.sol\":21750:21767  _ecosystemAddress */\n      dup9\n        /* \"contracts/reference.sol\":21750:21788  _ecosystemAddress.transfer(ecoPortion) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_726\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_726:\n      pop\n        /* \"contracts/reference.sol\":21712:21803  if (ecoPortion > 0) {... */\n    tag_724:\n        /* \"contracts/reference.sol\":21221:21813  if (totalFees != 0) {... */\n      pop\n      pop\n      pop\n        /* \"contracts/reference.sol\":21077:21819  function sendETHToFee(uint256 amount) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/reference.sol\":22950:23200  function _tokenTransfer(address sender, address recipient, uint256 amount, bool takeFee) private {... */\n    tag_642:\n        /* \"contracts/reference.sol\":23062:23069  takeFee */\n      dup1\n        /* \"contracts/reference.sol\":23057:23115  if (!takeFee) { ... */\n      tag_729\n      jumpi\n        /* \"contracts/reference.sol\":23090:23104  removeAllFee() */\n      tag_729\n        /* \"contracts/reference.sol\":13936:13952  _buyMarketingFee */\n      0x0d\n      dup1\n      sload\n        /* \"contracts/reference.sol\":13909:13933  _previousBuyMarketingFee */\n      0x0e\n        /* \"contracts/reference.sol\":13909:13952  _previousBuyMarketingFee = _buyMarketingFee */\n      sstore\n        /* \"contracts/reference.sol\":13989:14005  _buyLiquidityFee */\n      0x09\n      dup1\n      sload\n        /* \"contracts/reference.sol\":13962:13986  _previousBuyLiquidityFee */\n      0x0a\n        /* \"contracts/reference.sol\":13962:14005  _previousBuyLiquidityFee = _buyLiquidityFee */\n      sstore\n        /* \"contracts/reference.sol\":14037:14048  _buyTeamFee */\n      0x0f\n      dup1\n      sload\n        /* \"contracts/reference.sol\":14015:14034  _previousBuyTeamFee */\n      0x10\n        /* \"contracts/reference.sol\":14015:14048  _previousBuyTeamFee = _buyTeamFee */\n      sstore\n        /* \"contracts/reference.sol\":14085:14101  _buyEcosystemFee */\n      0x0b\n      dup1\n      sload\n        /* \"contracts/reference.sol\":14058:14082  _previousBuyEcosystemFee */\n      0x0c\n        /* \"contracts/reference.sol\":14058:14101  _previousBuyEcosystemFee = _buyEcosystemFee */\n      sstore\n      0x00\n        /* \"contracts/reference.sol\":14120:14140  _buyMarketingFee = 0 */\n      swap4\n      dup5\n      swap1\n      sstore\n        /* \"contracts/reference.sol\":14150:14170  _buyLiquidityFee = 0 */\n      swap2\n      dup4\n      swap1\n      sstore\n        /* \"contracts/reference.sol\":14180:14195  _buyTeamFee = 0 */\n      dup3\n      swap1\n      sstore\n        /* \"contracts/reference.sol\":14205:14225  _buyEcosystemFee = 0 */\n      dup2\n      swap1\n      sstore\n        /* \"contracts/reference.sol\":14264:14281  _sellMarketingFee */\n      0x15\n      dup1\n      sload\n        /* \"contracts/reference.sol\":14236:14261  _previousSellMarketingFee */\n      0x16\n        /* \"contracts/reference.sol\":14236:14281  _previousSellMarketingFee = _sellMarketingFee */\n      sstore\n        /* \"contracts/reference.sol\":14319:14336  _sellLiquidityFee */\n      0x11\n      dup1\n      sload\n        /* \"contracts/reference.sol\":14291:14316  _previousSellLiquidityFee */\n      0x12\n        /* \"contracts/reference.sol\":14291:14336  _previousSellLiquidityFee = _sellLiquidityFee */\n      sstore\n        /* \"contracts/reference.sol\":14369:14381  _sellTeamFee */\n      0x17\n      dup1\n      sload\n        /* \"contracts/reference.sol\":14346:14366  _previousSellTeamFee */\n      0x18\n        /* \"contracts/reference.sol\":14346:14381  _previousSellTeamFee = _sellTeamFee */\n      sstore\n        /* \"contracts/reference.sol\":14419:14436  _sellEcosystemFee */\n      0x13\n      dup1\n      sload\n        /* \"contracts/reference.sol\":14391:14416  _previousSellEcosystemFee */\n      0x14\n        /* \"contracts/reference.sol\":14391:14436  _previousSellEcosystemFee = _sellEcosystemFee */\n      sstore\n        /* \"contracts/reference.sol\":14455:14476  _sellMarketingFee = 0 */\n      swap3\n      dup5\n      swap1\n      sstore\n        /* \"contracts/reference.sol\":14486:14507  _sellLiquidityFee = 0 */\n      swap1\n      dup4\n      swap1\n      sstore\n        /* \"contracts/reference.sol\":14517:14533  _sellTeamFee = 0 */\n      dup3\n      swap1\n      sstore\n        /* \"contracts/reference.sol\":14543:14564  _sellEcosystemFee = 0 */\n      sstore\n        /* \"contracts/reference.sol\":13867:14571  function removeAllFee() private {... */\n      jump\n        /* \"contracts/reference.sol\":23090:23104  removeAllFee() */\n    tag_729:\n        /* \"contracts/reference.sol\":23124:23168  _transferStandard(sender, recipient, amount) */\n      tag_731\n        /* \"contracts/reference.sol\":23142:23148  sender */\n      dup5\n        /* \"contracts/reference.sol\":23150:23159  recipient */\n      dup5\n        /* \"contracts/reference.sol\":23161:23167  amount */\n      dup5\n        /* \"contracts/reference.sol\":23124:23141  _transferStandard */\n      tag_732\n        /* \"contracts/reference.sol\":23124:23168  _transferStandard(sender, recipient, amount) */\n      jump\t// in\n    tag_731:\n        /* \"contracts/reference.sol\":23178:23193  restoreAllFee() */\n      tag_641\n        /* \"contracts/reference.sol\":14643:14667  _previousBuyMarketingFee */\n      sload(0x0e)\n        /* \"contracts/reference.sol\":14624:14640  _buyMarketingFee */\n      0x0d\n        /* \"contracts/reference.sol\":14624:14667  _buyMarketingFee = _previousBuyMarketingFee */\n      sstore\n        /* \"contracts/reference.sol\":14696:14720  _previousBuyLiquidityFee */\n      sload(0x0a)\n        /* \"contracts/reference.sol\":14677:14693  _buyLiquidityFee */\n      0x09\n        /* \"contracts/reference.sol\":14677:14720  _buyLiquidityFee = _previousBuyLiquidityFee */\n      sstore\n        /* \"contracts/reference.sol\":14744:14763  _previousBuyTeamFee */\n      sload(0x10)\n        /* \"contracts/reference.sol\":14730:14741  _buyTeamFee */\n      0x0f\n        /* \"contracts/reference.sol\":14730:14763  _buyTeamFee = _previousBuyTeamFee */\n      sstore\n        /* \"contracts/reference.sol\":14792:14816  _previousBuyEcosystemFee */\n      sload(0x0c)\n        /* \"contracts/reference.sol\":14773:14789  _buyEcosystemFee */\n      0x0b\n        /* \"contracts/reference.sol\":14773:14816  _buyEcosystemFee = _previousBuyEcosystemFee */\n      sstore\n        /* \"contracts/reference.sol\":14847:14872  _previousSellMarketingFee */\n      sload(0x16)\n        /* \"contracts/reference.sol\":14827:14844  _sellMarketingFee */\n      0x15\n        /* \"contracts/reference.sol\":14827:14872  _sellMarketingFee = _previousSellMarketingFee */\n      sstore\n        /* \"contracts/reference.sol\":14902:14927  _previousSellLiquidityFee */\n      sload(0x12)\n        /* \"contracts/reference.sol\":14882:14899  _sellLiquidityFee */\n      0x11\n        /* \"contracts/reference.sol\":14882:14927  _sellLiquidityFee = _previousSellLiquidityFee */\n      sstore\n        /* \"contracts/reference.sol\":14952:14972  _previousSellTeamFee */\n      sload(0x18)\n        /* \"contracts/reference.sol\":14937:14949  _sellTeamFee */\n      0x17\n        /* \"contracts/reference.sol\":14937:14972  _sellTeamFee = _previousSellTeamFee */\n      sstore\n        /* \"contracts/reference.sol\":15002:15027  _previousSellEcosystemFee */\n      sload(0x14)\n        /* \"contracts/reference.sol\":14982:14999  _sellEcosystemFee */\n      0x13\n        /* \"contracts/reference.sol\":14982:15027  _sellEcosystemFee = _previousSellEcosystemFee */\n      sstore\n        /* \"contracts/reference.sol\":14581:15034  function restoreAllFee() private {... */\n      jump\n        /* \"contracts/reference.sol\":2422:2607  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_650:\n        /* \"contracts/reference.sol\":2508:2515  uint256 */\n      0x00\n        /* \"contracts/reference.sol\":2542:2554  errorMessage */\n      dup2\n        /* \"contracts/reference.sol\":2535:2540  b > 0 */\n      dup4\n        /* \"contracts/reference.sol\":2527:2555  require(b > 0, errorMessage) */\n      tag_736\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_324\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_736:\n      pop\n        /* \"contracts/reference.sol\":2565:2574  uint256 c */\n      0x00\n        /* \"contracts/reference.sol\":2577:2582  a / b */\n      tag_646\n        /* \"contracts/reference.sol\":2581:2582  b */\n      dup5\n        /* \"contracts/reference.sol\":2577:2578  a */\n      dup7\n        /* \"contracts/reference.sol\":2577:2582  a / b */\n      tag_656\n      jump\t// in\n        /* \"contracts/reference.sol\":20103:20556  function addLiquidity(uint256 tokenAmount, uint256 ethAmount) private {... */\n    tag_707:\n        /* \"contracts/reference.sol\":20215:20230  uniswapV2Router */\n      sload(0x25)\n        /* \"contracts/reference.sol\":20183:20245  _approve(address(this), address(uniswapV2Router), tokenAmount) */\n      tag_740\n      swap1\n        /* \"contracts/reference.sol\":20200:20204  this */\n      address\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/reference.sol\":20215:20230  uniswapV2Router */\n      and\n        /* \"contracts/reference.sol\":20233:20244  tokenAmount */\n      dup5\n        /* \"contracts/reference.sol\":20183:20191  _approve */\n      tag_320\n        /* \"contracts/reference.sol\":20183:20245  _approve(address(this), address(uniswapV2Router), tokenAmount) */\n      jump\t// in\n    tag_740:\n        /* \"contracts/reference.sol\":20285:20300  uniswapV2Router */\n      sload(0x25)\n        /* \"contracts/reference.sol\":20494:20506  _lpRecipient */\n      0x24\n      dup1\n      sload\n        /* \"contracts/reference.sol\":20285:20549  uniswapV2Router.addLiquidityETH{value: ethAmount}(... */\n      mload(0x40)\n      shl(0xe0, 0xf305d719)\n      dup2\n      mstore\n        /* \"contracts/reference.sol\":20358:20362  this */\n      address\n        /* \"contracts/reference.sol\":20285:20549  uniswapV2Router.addLiquidityETH{value: ethAmount}(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5249:5283   */\n      mstore\n        /* \"#utility.yul\":5299:5317   */\n      swap2\n      dup3\n      add\n        /* \"#utility.yul\":5292:5326   */\n      dup6\n      swap1\n      mstore\n        /* \"contracts/reference.sol\":20285:20300  uniswapV2Router */\n      0x00\n        /* \"#utility.yul\":5342:5360   */\n      0x44\n      dup4\n      add\n        /* \"#utility.yul\":5335:5369   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":5385:5403   */\n      0x64\n      dup4\n      add\n        /* \"#utility.yul\":5378:5412   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/reference.sol\":20494:20506  _lpRecipient */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":5428:5447   */\n      0x84\n      dup4\n      add\n        /* \"#utility.yul\":5421:5465   */\n      mstore\n        /* \"contracts/reference.sol\":20522:20537  block.timestamp */\n      timestamp\n        /* \"#utility.yul\":5481:5500   */\n      0xa4\n      dup4\n      add\n        /* \"#utility.yul\":5474:5509   */\n      mstore\n        /* \"contracts/reference.sol\":20285:20300  uniswapV2Router */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/reference.sol\":20285:20316  uniswapV2Router.addLiquidityETH */\n      0xf305d719\n      swap1\n        /* \"contracts/reference.sol\":20324:20333  ethAmount */\n      dup4\n      swap1\n        /* \"#utility.yul\":5183:5202   */\n      0xc4\n      add\n        /* \"contracts/reference.sol\":20285:20549  uniswapV2Router.addLiquidityETH{value: ethAmount}(... */\n      0x60\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_743\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_743:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_745\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_745:\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_724\n      swap2\n      swap1\n      tag_747\n      jump\t// in\n        /* \"contracts/reference.sol\":23206:25053  function _transferStandard(address sender, address recipient, uint256 amount) private {... */\n    tag_732:\n        /* \"contracts/reference.sol\":23302:23326  FeeBreakdown memory fees */\n      tag_750\n      mload(0x40)\n      dup1\n      0xa0\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      jump\n    tag_750:\n        /* \"contracts/reference.sol\":23350:23363  uniswapV2Pair */\n      sload(0x26)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/reference.sol\":23340:23363  sender == uniswapV2Pair */\n      dup6\n      dup2\n      and\n        /* \"contracts/reference.sol\":23350:23363  uniswapV2Pair */\n      swap2\n      and\n        /* \"contracts/reference.sol\":23340:23363  sender == uniswapV2Pair */\n      eq\n        /* \"contracts/reference.sol\":23340:23404  sender == uniswapV2Pair && recipient != address(uniswapV2Router) */\n      dup1\n      iszero\n      tag_752\n      jumpi\n      pop\n        /* \"contracts/reference.sol\":23388:23403  uniswapV2Router */\n      sload(0x25)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/reference.sol\":23367:23404  recipient != address(uniswapV2Router) */\n      dup5\n      dup2\n      and\n        /* \"contracts/reference.sol\":23388:23403  uniswapV2Router */\n      swap2\n      and\n        /* \"contracts/reference.sol\":23367:23404  recipient != address(uniswapV2Router) */\n      eq\n      iszero\n        /* \"contracts/reference.sol\":23340:23404  sender == uniswapV2Pair && recipient != address(uniswapV2Router) */\n    tag_752:\n        /* \"contracts/reference.sol\":23336:23693  if (sender == uniswapV2Pair && recipient != address(uniswapV2Router)) {//buys... */\n      iszero\n      tag_753\n      jumpi\n        /* \"contracts/reference.sol\":23444:23482  amount.mul(_buyMarketingFee).div(1000) */\n      tag_754\n        /* \"contracts/reference.sol\":23477:23481  1000 */\n      0x03e8\n        /* \"contracts/reference.sol\":23444:23472  amount.mul(_buyMarketingFee) */\n      tag_441\n        /* \"contracts/reference.sol\":23455:23471  _buyMarketingFee */\n      sload(0x0d)\n        /* \"contracts/reference.sol\":23444:23450  amount */\n      dup6\n        /* \"contracts/reference.sol\":23444:23454  amount.mul */\n      tag_442\n      swap1\n        /* \"contracts/reference.sol\":23444:23472  amount.mul(_buyMarketingFee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"contracts/reference.sol\":23444:23482  amount.mul(_buyMarketingFee).div(1000) */\n    tag_754:\n        /* \"contracts/reference.sol\":23426:23441  fees.tMarketing */\n      0x20\n      dup3\n      add\n        /* \"contracts/reference.sol\":23426:23482  fees.tMarketing = amount.mul(_buyMarketingFee).div(1000) */\n      mstore\n        /* \"contracts/reference.sol\":23525:23541  _buyLiquidityFee */\n      sload(0x09)\n        /* \"contracts/reference.sol\":23514:23552  amount.mul(_buyLiquidityFee).div(1000) */\n      tag_756\n      swap1\n        /* \"contracts/reference.sol\":23547:23551  1000 */\n      0x03e8\n      swap1\n        /* \"contracts/reference.sol\":23514:23542  amount.mul(_buyLiquidityFee) */\n      tag_441\n      swap1\n        /* \"contracts/reference.sol\":23514:23520  amount */\n      dup6\n      swap1\n        /* \"contracts/reference.sol\":23514:23524  amount.mul */\n      tag_442\n        /* \"contracts/reference.sol\":23514:23542  amount.mul(_buyLiquidityFee) */\n      jump\t// in\n        /* \"contracts/reference.sol\":23514:23552  amount.mul(_buyLiquidityFee).div(1000) */\n    tag_756:\n        /* \"contracts/reference.sol\":23496:23552  fees.tLiquidity = amount.mul(_buyLiquidityFee).div(1000) */\n      dup2\n      mstore\n        /* \"contracts/reference.sol\":23590:23601  _buyTeamFee */\n      sload(0x0f)\n        /* \"contracts/reference.sol\":23579:23612  amount.mul(_buyTeamFee).div(1000) */\n      tag_758\n      swap1\n        /* \"contracts/reference.sol\":23607:23611  1000 */\n      0x03e8\n      swap1\n        /* \"contracts/reference.sol\":23579:23602  amount.mul(_buyTeamFee) */\n      tag_441\n      swap1\n        /* \"contracts/reference.sol\":23579:23585  amount */\n      dup6\n      swap1\n        /* \"contracts/reference.sol\":23579:23589  amount.mul */\n      tag_442\n        /* \"contracts/reference.sol\":23579:23602  amount.mul(_buyTeamFee) */\n      jump\t// in\n        /* \"contracts/reference.sol\":23579:23612  amount.mul(_buyTeamFee).div(1000) */\n    tag_758:\n        /* \"contracts/reference.sol\":23566:23576  fees.tTeam */\n      0x40\n      dup3\n      add\n        /* \"contracts/reference.sol\":23566:23612  fees.tTeam = amount.mul(_buyTeamFee).div(1000) */\n      mstore\n        /* \"contracts/reference.sol\":23655:23671  _buyEcosystemFee */\n      sload(0x0b)\n        /* \"contracts/reference.sol\":23644:23682  amount.mul(_buyEcosystemFee).div(1000) */\n      tag_760\n      swap1\n        /* \"contracts/reference.sol\":23677:23681  1000 */\n      0x03e8\n      swap1\n        /* \"contracts/reference.sol\":23644:23672  amount.mul(_buyEcosystemFee) */\n      tag_441\n      swap1\n        /* \"contracts/reference.sol\":23644:23650  amount */\n      dup6\n      swap1\n        /* \"contracts/reference.sol\":23644:23654  amount.mul */\n      tag_442\n        /* \"contracts/reference.sol\":23644:23672  amount.mul(_buyEcosystemFee) */\n      jump\t// in\n        /* \"contracts/reference.sol\":23644:23682  amount.mul(_buyEcosystemFee).div(1000) */\n    tag_760:\n        /* \"contracts/reference.sol\":23626:23641  fees.tEcosystem */\n      0x60\n      dup3\n      add\n        /* \"contracts/reference.sol\":23626:23682  fees.tEcosystem = amount.mul(_buyEcosystemFee).div(1000) */\n      mstore\n        /* \"contracts/reference.sol\":23336:23693  if (sender == uniswapV2Pair && recipient != address(uniswapV2Router)) {//buys... */\n    tag_753:\n        /* \"contracts/reference.sol\":23716:23729  uniswapV2Pair */\n      sload(0x26)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/reference.sol\":23706:23729  sender != uniswapV2Pair */\n      dup6\n      dup2\n      and\n        /* \"contracts/reference.sol\":23716:23729  uniswapV2Pair */\n      swap2\n      and\n        /* \"contracts/reference.sol\":23706:23729  sender != uniswapV2Pair */\n      eq\n      dup1\n      iszero\n      swap1\n        /* \"contracts/reference.sol\":23706:23759  sender != uniswapV2Pair && recipient == uniswapV2Pair */\n      tag_762\n      jumpi\n      pop\n        /* \"contracts/reference.sol\":23746:23759  uniswapV2Pair */\n      sload(0x26)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/reference.sol\":23733:23759  recipient == uniswapV2Pair */\n      dup5\n      dup2\n      and\n        /* \"contracts/reference.sol\":23746:23759  uniswapV2Pair */\n      swap2\n      and\n        /* \"contracts/reference.sol\":23733:23759  recipient == uniswapV2Pair */\n      eq\n        /* \"contracts/reference.sol\":23706:23759  sender != uniswapV2Pair && recipient == uniswapV2Pair */\n    tag_762:\n        /* \"contracts/reference.sol\":23702:24053  if (sender != uniswapV2Pair && recipient == uniswapV2Pair) {//sells... */\n      iszero\n      tag_763\n      jumpi\n        /* \"contracts/reference.sol\":23800:23839  amount.mul(_sellMarketingFee).div(1000) */\n      tag_764\n        /* \"contracts/reference.sol\":23834:23838  1000 */\n      0x03e8\n        /* \"contracts/reference.sol\":23800:23829  amount.mul(_sellMarketingFee) */\n      tag_441\n        /* \"contracts/reference.sol\":23811:23828  _sellMarketingFee */\n      sload(0x15)\n        /* \"contracts/reference.sol\":23800:23806  amount */\n      dup6\n        /* \"contracts/reference.sol\":23800:23810  amount.mul */\n      tag_442\n      swap1\n        /* \"contracts/reference.sol\":23800:23829  amount.mul(_sellMarketingFee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"contracts/reference.sol\":23800:23839  amount.mul(_sellMarketingFee).div(1000) */\n    tag_764:\n        /* \"contracts/reference.sol\":23782:23797  fees.tMarketing */\n      0x20\n      dup3\n      add\n        /* \"contracts/reference.sol\":23782:23839  fees.tMarketing = amount.mul(_sellMarketingFee).div(1000) */\n      mstore\n        /* \"contracts/reference.sol\":23882:23899  _sellLiquidityFee */\n      sload(0x11)\n        /* \"contracts/reference.sol\":23871:23910  amount.mul(_sellLiquidityFee).div(1000) */\n      tag_766\n      swap1\n        /* \"contracts/reference.sol\":23905:23909  1000 */\n      0x03e8\n      swap1\n        /* \"contracts/reference.sol\":23871:23900  amount.mul(_sellLiquidityFee) */\n      tag_441\n      swap1\n        /* \"contracts/reference.sol\":23871:23877  amount */\n      dup6\n      swap1\n        /* \"contracts/reference.sol\":23871:23881  amount.mul */\n      tag_442\n        /* \"contracts/reference.sol\":23871:23900  amount.mul(_sellLiquidityFee) */\n      jump\t// in\n        /* \"contracts/reference.sol\":23871:23910  amount.mul(_sellLiquidityFee).div(1000) */\n    tag_766:\n        /* \"contracts/reference.sol\":23853:23910  fees.tLiquidity = amount.mul(_sellLiquidityFee).div(1000) */\n      dup2\n      mstore\n        /* \"contracts/reference.sol\":23948:23960  _sellTeamFee */\n      sload(0x17)\n        /* \"contracts/reference.sol\":23937:23971  amount.mul(_sellTeamFee).div(1000) */\n      tag_768\n      swap1\n        /* \"contracts/reference.sol\":23966:23970  1000 */\n      0x03e8\n      swap1\n        /* \"contracts/reference.sol\":23937:23961  amount.mul(_sellTeamFee) */\n      tag_441\n      swap1\n        /* \"contracts/reference.sol\":23937:23943  amount */\n      dup6\n      swap1\n        /* \"contracts/reference.sol\":23937:23947  amount.mul */\n      tag_442\n        /* \"contracts/reference.sol\":23937:23961  amount.mul(_sellTeamFee) */\n      jump\t// in\n        /* \"contracts/reference.sol\":23937:23971  amount.mul(_sellTeamFee).div(1000) */\n    tag_768:\n        /* \"contracts/reference.sol\":23924:23934  fees.tTeam */\n      0x40\n      dup3\n      add\n        /* \"contracts/reference.sol\":23924:23971  fees.tTeam = amount.mul(_sellTeamFee).div(1000) */\n      mstore\n        /* \"contracts/reference.sol\":24014:24031  _sellEcosystemFee */\n      sload(0x13)\n        /* \"contracts/reference.sol\":24003:24042  amount.mul(_sellEcosystemFee).div(1000) */\n      tag_770\n      swap1\n        /* \"contracts/reference.sol\":24037:24041  1000 */\n      0x03e8\n      swap1\n        /* \"contracts/reference.sol\":24003:24032  amount.mul(_sellEcosystemFee) */\n      tag_441\n      swap1\n        /* \"contracts/reference.sol\":24003:24009  amount */\n      dup6\n      swap1\n        /* \"contracts/reference.sol\":24003:24013  amount.mul */\n      tag_442\n        /* \"contracts/reference.sol\":24003:24032  amount.mul(_sellEcosystemFee) */\n      jump\t// in\n        /* \"contracts/reference.sol\":24003:24042  amount.mul(_sellEcosystemFee).div(1000) */\n    tag_770:\n        /* \"contracts/reference.sol\":23985:24000  fees.tEcosystem */\n      0x60\n      dup3\n      add\n        /* \"contracts/reference.sol\":23985:24042  fees.tEcosystem = amount.mul(_sellEcosystemFee).div(1000) */\n      mstore\n        /* \"contracts/reference.sol\":23702:24053  if (sender != uniswapV2Pair && recipient == uniswapV2Pair) {//sells... */\n    tag_763:\n        /* \"contracts/reference.sol\":24076:24089  uniswapV2Pair */\n      sload(0x26)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/reference.sol\":24066:24089  sender != uniswapV2Pair */\n      dup6\n      dup2\n      and\n        /* \"contracts/reference.sol\":24076:24089  uniswapV2Pair */\n      swap2\n      and\n        /* \"contracts/reference.sol\":24066:24089  sender != uniswapV2Pair */\n      eq\n      dup1\n      iszero\n      swap1\n        /* \"contracts/reference.sol\":24066:24119  sender != uniswapV2Pair && recipient != uniswapV2Pair */\n      tag_772\n      jumpi\n      pop\n        /* \"contracts/reference.sol\":24106:24119  uniswapV2Pair */\n      sload(0x26)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/reference.sol\":24093:24119  recipient != uniswapV2Pair */\n      dup5\n      dup2\n      and\n        /* \"contracts/reference.sol\":24106:24119  uniswapV2Pair */\n      swap2\n      and\n        /* \"contracts/reference.sol\":24093:24119  recipient != uniswapV2Pair */\n      eq\n      iszero\n        /* \"contracts/reference.sol\":24066:24119  sender != uniswapV2Pair && recipient != uniswapV2Pair */\n    tag_772:\n        /* \"contracts/reference.sol\":24062:24584  if (sender != uniswapV2Pair && recipient != uniswapV2Pair) {//transfer... */\n      iszero\n      tag_773\n      jumpi\n        /* \"contracts/reference.sol\":24163:24244  (amount.mul(_sellMarketingFee).div(1000)).mul(transferFeeIncreaseFactor).div(100) */\n      tag_774\n        /* \"contracts/reference.sol\":24240:24243  100 */\n      0x64\n        /* \"contracts/reference.sol\":24163:24235  (amount.mul(_sellMarketingFee).div(1000)).mul(transferFeeIncreaseFactor) */\n      tag_441\n        /* \"contracts/reference.sol\":24209:24234  transferFeeIncreaseFactor */\n      sload(0x19)\n        /* \"contracts/reference.sol\":24164:24203  amount.mul(_sellMarketingFee).div(1000) */\n      tag_776\n        /* \"contracts/reference.sol\":24198:24202  1000 */\n      0x03e8\n        /* \"contracts/reference.sol\":24164:24193  amount.mul(_sellMarketingFee) */\n      tag_441\n        /* \"contracts/reference.sol\":24175:24192  _sellMarketingFee */\n      sload(0x15)\n        /* \"contracts/reference.sol\":24164:24170  amount */\n      dup10\n        /* \"contracts/reference.sol\":24164:24174  amount.mul */\n      tag_442\n      swap1\n        /* \"contracts/reference.sol\":24164:24193  amount.mul(_sellMarketingFee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"contracts/reference.sol\":24164:24203  amount.mul(_sellMarketingFee).div(1000) */\n    tag_776:\n        /* \"contracts/reference.sol\":24163:24208  (amount.mul(_sellMarketingFee).div(1000)).mul */\n      swap1\n      tag_442\n        /* \"contracts/reference.sol\":24163:24235  (amount.mul(_sellMarketingFee).div(1000)).mul(transferFeeIncreaseFactor) */\n      jump\t// in\n        /* \"contracts/reference.sol\":24163:24244  (amount.mul(_sellMarketingFee).div(1000)).mul(transferFeeIncreaseFactor).div(100) */\n    tag_774:\n        /* \"contracts/reference.sol\":24145:24149  fees */\n      dup2\n        /* \"contracts/reference.sol\":24145:24160  fees.tMarketing */\n      0x20\n      add\n        /* \"contracts/reference.sol\":24145:24244  fees.tMarketing = (amount.mul(_sellMarketingFee).div(1000)).mul(transferFeeIncreaseFactor).div(100) */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/reference.sol\":24276:24357  (amount.mul(_sellLiquidityFee).div(1000)).mul(transferFeeIncreaseFactor).div(100) */\n      tag_778\n        /* \"contracts/reference.sol\":24353:24356  100 */\n      0x64\n        /* \"contracts/reference.sol\":24276:24348  (amount.mul(_sellLiquidityFee).div(1000)).mul(transferFeeIncreaseFactor) */\n      tag_441\n        /* \"contracts/reference.sol\":24322:24347  transferFeeIncreaseFactor */\n      sload(0x19)\n        /* \"contracts/reference.sol\":24277:24316  amount.mul(_sellLiquidityFee).div(1000) */\n      tag_776\n        /* \"contracts/reference.sol\":24311:24315  1000 */\n      0x03e8\n        /* \"contracts/reference.sol\":24277:24306  amount.mul(_sellLiquidityFee) */\n      tag_441\n        /* \"contracts/reference.sol\":24288:24305  _sellLiquidityFee */\n      sload(0x11)\n        /* \"contracts/reference.sol\":24277:24283  amount */\n      dup10\n        /* \"contracts/reference.sol\":24277:24287  amount.mul */\n      tag_442\n      swap1\n        /* \"contracts/reference.sol\":24277:24306  amount.mul(_sellLiquidityFee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"contracts/reference.sol\":24276:24357  (amount.mul(_sellLiquidityFee).div(1000)).mul(transferFeeIncreaseFactor).div(100) */\n    tag_778:\n        /* \"contracts/reference.sol\":24258:24357  fees.tLiquidity = (amount.mul(_sellLiquidityFee).div(1000)).mul(transferFeeIncreaseFactor).div(100) */\n      dup2\n      mstore\n        /* \"contracts/reference.sol\":24425:24450  transferFeeIncreaseFactor */\n      sload(0x19)\n        /* \"contracts/reference.sol\":24396:24408  _sellTeamFee */\n      sload(0x17)\n        /* \"contracts/reference.sol\":24384:24460  (amount.mul(_sellTeamFee).div(1000)).mul(transferFeeIncreaseFactor).div(100) */\n      tag_782\n      swap2\n        /* \"contracts/reference.sol\":24456:24459  100 */\n      0x64\n      swap2\n        /* \"contracts/reference.sol\":24384:24451  (amount.mul(_sellTeamFee).div(1000)).mul(transferFeeIncreaseFactor) */\n      tag_441\n      swap2\n        /* \"contracts/reference.sol\":24425:24450  transferFeeIncreaseFactor */\n      swap1\n        /* \"contracts/reference.sol\":24385:24419  amount.mul(_sellTeamFee).div(1000) */\n      tag_776\n      swap1\n        /* \"contracts/reference.sol\":24414:24418  1000 */\n      0x03e8\n      swap1\n        /* \"contracts/reference.sol\":24384:24451  (amount.mul(_sellTeamFee).div(1000)).mul(transferFeeIncreaseFactor) */\n      dup5\n      swap1\n        /* \"contracts/reference.sol\":24385:24391  amount */\n      dup10\n      swap1\n        /* \"contracts/reference.sol\":24385:24395  amount.mul */\n      tag_442\n        /* \"contracts/reference.sol\":24385:24409  amount.mul(_sellTeamFee) */\n      jump\t// in\n        /* \"contracts/reference.sol\":24384:24460  (amount.mul(_sellTeamFee).div(1000)).mul(transferFeeIncreaseFactor).div(100) */\n    tag_782:\n        /* \"contracts/reference.sol\":24371:24375  fees */\n      dup2\n        /* \"contracts/reference.sol\":24371:24381  fees.tTeam */\n      0x40\n      add\n        /* \"contracts/reference.sol\":24371:24460  fees.tTeam = (amount.mul(_sellTeamFee).div(1000)).mul(transferFeeIncreaseFactor).div(100) */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/reference.sol\":24492:24573  (amount.mul(_sellEcosystemFee).div(1000)).mul(transferFeeIncreaseFactor).div(100) */\n      tag_786\n        /* \"contracts/reference.sol\":24569:24572  100 */\n      0x64\n        /* \"contracts/reference.sol\":24492:24564  (amount.mul(_sellEcosystemFee).div(1000)).mul(transferFeeIncreaseFactor) */\n      tag_441\n        /* \"contracts/reference.sol\":24538:24563  transferFeeIncreaseFactor */\n      sload(0x19)\n        /* \"contracts/reference.sol\":24493:24532  amount.mul(_sellEcosystemFee).div(1000) */\n      tag_776\n        /* \"contracts/reference.sol\":24527:24531  1000 */\n      0x03e8\n        /* \"contracts/reference.sol\":24493:24522  amount.mul(_sellEcosystemFee) */\n      tag_441\n        /* \"contracts/reference.sol\":24504:24521  _sellEcosystemFee */\n      sload(0x13)\n        /* \"contracts/reference.sol\":24493:24499  amount */\n      dup10\n        /* \"contracts/reference.sol\":24493:24503  amount.mul */\n      tag_442\n      swap1\n        /* \"contracts/reference.sol\":24493:24522  amount.mul(_sellEcosystemFee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"contracts/reference.sol\":24492:24573  (amount.mul(_sellEcosystemFee).div(1000)).mul(transferFeeIncreaseFactor).div(100) */\n    tag_786:\n        /* \"contracts/reference.sol\":24474:24489  fees.tEcosystem */\n      0x60\n      dup3\n      add\n        /* \"contracts/reference.sol\":24474:24573  fees.tEcosystem = (amount.mul(_sellEcosystemFee).div(1000)).mul(transferFeeIncreaseFactor).div(100) */\n      mstore\n        /* \"contracts/reference.sol\":24062:24584  if (sender != uniswapV2Pair && recipient != uniswapV2Pair) {//transfer... */\n    tag_773:\n        /* \"contracts/reference.sol\":24617:24702  amount.sub(fees.tMarketing).sub(fees.tLiquidity).sub(fees.tTeam).sub(fees.tEcosystem) */\n      tag_790\n        /* \"contracts/reference.sol\":24686:24690  fees */\n      dup2\n        /* \"contracts/reference.sol\":24686:24701  fees.tEcosystem */\n      0x60\n      add\n      mload\n        /* \"contracts/reference.sol\":24617:24681  amount.sub(fees.tMarketing).sub(fees.tLiquidity).sub(fees.tTeam) */\n      tag_690\n        /* \"contracts/reference.sol\":24670:24674  fees */\n      dup4\n        /* \"contracts/reference.sol\":24670:24680  fees.tTeam */\n      0x40\n      add\n      mload\n        /* \"contracts/reference.sol\":24617:24665  amount.sub(fees.tMarketing).sub(fees.tLiquidity) */\n      tag_690\n        /* \"contracts/reference.sol\":24649:24653  fees */\n      dup6\n        /* \"contracts/reference.sol\":24649:24664  fees.tLiquidity */\n      0x00\n      add\n      mload\n        /* \"contracts/reference.sol\":24617:24644  amount.sub(fees.tMarketing) */\n      tag_690\n        /* \"contracts/reference.sol\":24628:24632  fees */\n      dup8\n        /* \"contracts/reference.sol\":24628:24643  fees.tMarketing */\n      0x20\n      add\n      mload\n        /* \"contracts/reference.sol\":24617:24623  amount */\n      dup10\n        /* \"contracts/reference.sol\":24617:24627  amount.sub */\n      tag_456\n      swap1\n        /* \"contracts/reference.sol\":24617:24644  amount.sub(fees.tMarketing) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"contracts/reference.sol\":24617:24702  amount.sub(fees.tMarketing).sub(fees.tLiquidity).sub(fees.tTeam).sub(fees.tEcosystem) */\n    tag_790:\n        /* \"contracts/reference.sol\":24602:24614  fees.tAmount */\n      0x80\n      dup3\n      add\n        /* \"contracts/reference.sol\":24602:24702  fees.tAmount = amount.sub(fees.tMarketing).sub(fees.tLiquidity).sub(fees.tTeam).sub(fees.tEcosystem) */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/reference.sol\":24741:24758  _balances[sender] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/reference.sol\":24741:24750  _balances */\n      0x02\n        /* \"contracts/reference.sol\":24741:24758  _balances[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/reference.sol\":24741:24770  _balances[sender].sub(amount) */\n      tag_794\n      swap1\n        /* \"contracts/reference.sol\":24763:24769  amount */\n      dup4\n        /* \"contracts/reference.sol\":24741:24762  _balances[sender].sub */\n      tag_456\n        /* \"contracts/reference.sol\":24741:24770  _balances[sender].sub(amount) */\n      jump\t// in\n    tag_794:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/reference.sol\":24721:24738  _balances[sender] */\n      dup1\n      dup7\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/reference.sol\":24721:24730  _balances */\n      0x02\n        /* \"contracts/reference.sol\":24721:24738  _balances[sender] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/reference.sol\":24721:24770  _balances[sender] = _balances[sender].sub(amount) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"contracts/reference.sol\":24828:24840  fees.tAmount */\n      0x80\n      dup5\n      add\n      mload\n        /* \"contracts/reference.sol\":24803:24823  _balances[recipient] */\n      swap2\n      dup7\n      and\n      dup2\n      mstore\n      swap2\n      swap1\n      swap2\n      keccak256\n      sload\n        /* \"contracts/reference.sol\":24803:24841  _balances[recipient].add(fees.tAmount) */\n      tag_795\n      swap2\n        /* \"contracts/reference.sol\":24803:24827  _balances[recipient].add */\n      tag_515\n        /* \"contracts/reference.sol\":24803:24841  _balances[recipient].add(fees.tAmount) */\n      jump\t// in\n    tag_795:\n        /* \"contracts/reference.sol\":24780:24789  _balances */\n      0x02\n        /* \"contracts/reference.sol\":24780:24800  _balances[recipient] */\n      0x00\n        /* \"contracts/reference.sol\":24790:24799  recipient */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/reference.sol\":24780:24800  _balances[recipient] */\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/reference.sol\":24780:24841  _balances[recipient] = _balances[recipient].add(fees.tAmount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/reference.sol\":24878:24981  _balances[address(this)].add(fees.tMarketing.add(fees.tLiquidity).add(fees.tTeam).add(fees.tEcosystem)) */\n      tag_796\n        /* \"contracts/reference.sol\":24907:24980  fees.tMarketing.add(fees.tLiquidity).add(fees.tTeam).add(fees.tEcosystem) */\n      tag_797\n        /* \"contracts/reference.sol\":24964:24968  fees */\n      dup3\n        /* \"contracts/reference.sol\":24964:24979  fees.tEcosystem */\n      0x60\n      add\n      mload\n        /* \"contracts/reference.sol\":24907:24959  fees.tMarketing.add(fees.tLiquidity).add(fees.tTeam) */\n      tag_514\n        /* \"contracts/reference.sol\":24948:24952  fees */\n      dup5\n        /* \"contracts/reference.sol\":24948:24958  fees.tTeam */\n      0x40\n      add\n      mload\n        /* \"contracts/reference.sol\":24907:24943  fees.tMarketing.add(fees.tLiquidity) */\n      tag_514\n        /* \"contracts/reference.sol\":24927:24931  fees */\n      dup7\n        /* \"contracts/reference.sol\":24927:24942  fees.tLiquidity */\n      0x00\n      add\n      mload\n        /* \"contracts/reference.sol\":24907:24911  fees */\n      dup8\n        /* \"contracts/reference.sol\":24907:24922  fees.tMarketing */\n      0x20\n      add\n      mload\n        /* \"contracts/reference.sol\":24907:24926  fees.tMarketing.add */\n      tag_515\n      swap1\n        /* \"contracts/reference.sol\":24907:24943  fees.tMarketing.add(fees.tLiquidity) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"contracts/reference.sol\":24907:24980  fees.tMarketing.add(fees.tLiquidity).add(fees.tTeam).add(fees.tEcosystem) */\n    tag_797:\n        /* \"contracts/reference.sol\":24896:24900  this */\n      address\n        /* \"contracts/reference.sol\":24878:24902  _balances[address(this)] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/reference.sol\":24878:24887  _balances */\n      0x02\n        /* \"contracts/reference.sol\":24878:24902  _balances[address(this)] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"contracts/reference.sol\":24878:24906  _balances[address(this)].add */\n      tag_515\n        /* \"contracts/reference.sol\":24878:24981  _balances[address(this)].add(fees.tMarketing.add(fees.tLiquidity).add(fees.tTeam).add(fees.tEcosystem)) */\n      jump\t// in\n    tag_796:\n        /* \"contracts/reference.sol\":24869:24873  this */\n      address\n        /* \"contracts/reference.sol\":24851:24875  _balances[address(this)] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/reference.sol\":24851:24860  _balances */\n      0x02\n        /* \"contracts/reference.sol\":24851:24875  _balances[address(this)] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/reference.sol\":24851:24981  _balances[address(this)] = _balances[address(this)].add(fees.tMarketing.add(fees.tLiquidity).add(fees.tTeam).add(fees.tEcosystem)) */\n      swap3\n      swap1\n      swap3\n      sstore\n        /* \"contracts/reference.sol\":25033:25045  fees.tAmount */\n      0x80\n      dup4\n      add\n      mload\n        /* \"contracts/reference.sol\":25005:25046  Transfer(sender, recipient, fees.tAmount) */\n      swap1\n      mload\n        /* \"#utility.yul\":15123:15148   */\n      swap1\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/reference.sol\":25005:25046  Transfer(sender, recipient, fees.tAmount) */\n      dup6\n      dup2\n      and\n      swap3\n      swap1\n      dup8\n      and\n      swap2\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n        /* \"#utility.yul\":15096:15114   */\n      add\n        /* \"contracts/reference.sol\":25005:25046  Transfer(sender, recipient, fees.tAmount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/reference.sol\":23206:25053  function _transferStandard(address sender, address recipient, uint256 amount) private {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:202   */\n    tag_803:\n        /* \"#utility.yul\":93:106   */\n      dup1\n      mload\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"#utility.yul\":135:177   */\n      dup2\n      and\n        /* \"#utility.yul\":125:178   */\n      dup2\n      eq\n        /* \"#utility.yul\":115:117   */\n      tag_805\n      jumpi\n        /* \"#utility.yul\":192:193   */\n      0x00\n        /* \"#utility.yul\":189:190   */\n      dup1\n        /* \"#utility.yul\":182:194   */\n      revert\n        /* \"#utility.yul\":115:117   */\n    tag_805:\n        /* \"#utility.yul\":74:202   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":207:464   */\n    tag_128:\n        /* \"#utility.yul\":266:272   */\n      0x00\n        /* \"#utility.yul\":319:321   */\n      0x20\n        /* \"#utility.yul\":307:316   */\n      dup3\n        /* \"#utility.yul\":298:305   */\n      dup5\n        /* \"#utility.yul\":294:317   */\n      sub\n        /* \"#utility.yul\":290:322   */\n      slt\n        /* \"#utility.yul\":287:289   */\n      iszero\n      tag_807\n      jumpi\n        /* \"#utility.yul\":340:346   */\n      dup1\n        /* \"#utility.yul\":332:338   */\n      dup2\n        /* \"#utility.yul\":325:347   */\n      revert\n        /* \"#utility.yul\":287:289   */\n    tag_807:\n        /* \"#utility.yul\":384:393   */\n      dup2\n        /* \"#utility.yul\":371:394   */\n      calldataload\n        /* \"#utility.yul\":403:434   */\n      tag_649\n        /* \"#utility.yul\":428:433   */\n      dup2\n        /* \"#utility.yul\":403:434   */\n      tag_809\n      jump\t// in\n        /* \"#utility.yul\":469:730   */\n    tag_438:\n        /* \"#utility.yul\":539:545   */\n      0x00\n        /* \"#utility.yul\":592:594   */\n      0x20\n        /* \"#utility.yul\":580:589   */\n      dup3\n        /* \"#utility.yul\":571:578   */\n      dup5\n        /* \"#utility.yul\":567:590   */\n      sub\n        /* \"#utility.yul\":563:595   */\n      slt\n        /* \"#utility.yul\":560:562   */\n      iszero\n      tag_811\n      jumpi\n        /* \"#utility.yul\":613:619   */\n      dup1\n        /* \"#utility.yul\":605:611   */\n      dup2\n        /* \"#utility.yul\":598:620   */\n      revert\n        /* \"#utility.yul\":560:562   */\n    tag_811:\n        /* \"#utility.yul\":650:659   */\n      dup2\n        /* \"#utility.yul\":644:660   */\n      mload\n        /* \"#utility.yul\":669:700   */\n      tag_649\n        /* \"#utility.yul\":694:699   */\n      dup2\n        /* \"#utility.yul\":669:700   */\n      tag_809\n      jump\t// in\n        /* \"#utility.yul\":1005:1403   */\n    tag_283:\n        /* \"#utility.yul\":1073:1079   */\n      0x00\n        /* \"#utility.yul\":1081:1087   */\n      dup1\n        /* \"#utility.yul\":1134:1136   */\n      0x40\n        /* \"#utility.yul\":1122:1131   */\n      dup4\n        /* \"#utility.yul\":1113:1120   */\n      dup6\n        /* \"#utility.yul\":1109:1132   */\n      sub\n        /* \"#utility.yul\":1105:1137   */\n      slt\n        /* \"#utility.yul\":1102:1104   */\n      iszero\n      tag_817\n      jumpi\n        /* \"#utility.yul\":1155:1161   */\n      dup1\n        /* \"#utility.yul\":1147:1153   */\n      dup2\n        /* \"#utility.yul\":1140:1162   */\n      revert\n        /* \"#utility.yul\":1102:1104   */\n    tag_817:\n        /* \"#utility.yul\":1199:1208   */\n      dup3\n        /* \"#utility.yul\":1186:1209   */\n      calldataload\n        /* \"#utility.yul\":1218:1249   */\n      tag_818\n        /* \"#utility.yul\":1243:1248   */\n      dup2\n        /* \"#utility.yul\":1218:1249   */\n      tag_809\n      jump\t// in\n    tag_818:\n        /* \"#utility.yul\":1268:1273   */\n      swap2\n      pop\n        /* \"#utility.yul\":1325:1327   */\n      0x20\n        /* \"#utility.yul\":1310:1328   */\n      dup4\n      add\n        /* \"#utility.yul\":1297:1329   */\n      calldataload\n        /* \"#utility.yul\":1338:1371   */\n      tag_819\n        /* \"#utility.yul\":1297:1329   */\n      dup2\n        /* \"#utility.yul\":1338:1371   */\n      tag_809\n      jump\t// in\n    tag_819:\n        /* \"#utility.yul\":1390:1397   */\n      dup1\n        /* \"#utility.yul\":1380:1397   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":1092:1403   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1408:1874   */\n    tag_109:\n        /* \"#utility.yul\":1485:1491   */\n      0x00\n        /* \"#utility.yul\":1493:1499   */\n      dup1\n        /* \"#utility.yul\":1501:1507   */\n      0x00\n        /* \"#utility.yul\":1554:1556   */\n      0x60\n        /* \"#utility.yul\":1542:1551   */\n      dup5\n        /* \"#utility.yul\":1533:1540   */\n      dup7\n        /* \"#utility.yul\":1529:1552   */\n      sub\n        /* \"#utility.yul\":1525:1557   */\n      slt\n        /* \"#utility.yul\":1522:1524   */\n      iszero\n      tag_821\n      jumpi\n        /* \"#utility.yul\":1575:1581   */\n      dup1\n        /* \"#utility.yul\":1567:1573   */\n      dup2\n        /* \"#utility.yul\":1560:1582   */\n      revert\n        /* \"#utility.yul\":1522:1524   */\n    tag_821:\n        /* \"#utility.yul\":1619:1628   */\n      dup4\n        /* \"#utility.yul\":1606:1629   */\n      calldataload\n        /* \"#utility.yul\":1638:1669   */\n      tag_822\n        /* \"#utility.yul\":1663:1668   */\n      dup2\n        /* \"#utility.yul\":1638:1669   */\n      tag_809\n      jump\t// in\n    tag_822:\n        /* \"#utility.yul\":1688:1693   */\n      swap3\n      pop\n        /* \"#utility.yul\":1745:1747   */\n      0x20\n        /* \"#utility.yul\":1730:1748   */\n      dup5\n      add\n        /* \"#utility.yul\":1717:1749   */\n      calldataload\n        /* \"#utility.yul\":1758:1791   */\n      tag_823\n        /* \"#utility.yul\":1717:1749   */\n      dup2\n        /* \"#utility.yul\":1758:1791   */\n      tag_809\n      jump\t// in\n    tag_823:\n        /* \"#utility.yul\":1512:1874   */\n      swap3\n      swap6\n        /* \"#utility.yul\":1810:1817   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1864:1866   */\n      0x40\n        /* \"#utility.yul\":1849:1867   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":1836:1868   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":1512:1874   */\n      jump\t// out\n        /* \"#utility.yul\":1879:2204   */\n    tag_89:\n        /* \"#utility.yul\":1947:1953   */\n      0x00\n        /* \"#utility.yul\":1955:1961   */\n      dup1\n        /* \"#utility.yul\":2008:2010   */\n      0x40\n        /* \"#utility.yul\":1996:2005   */\n      dup4\n        /* \"#utility.yul\":1987:1994   */\n      dup6\n        /* \"#utility.yul\":1983:2006   */\n      sub\n        /* \"#utility.yul\":1979:2011   */\n      slt\n        /* \"#utility.yul\":1976:1978   */\n      iszero\n      tag_825\n      jumpi\n        /* \"#utility.yul\":2029:2035   */\n      dup2\n        /* \"#utility.yul\":2021:2027   */\n      dup3\n        /* \"#utility.yul\":2014:2036   */\n      revert\n        /* \"#utility.yul\":1976:1978   */\n    tag_825:\n        /* \"#utility.yul\":2073:2082   */\n      dup3\n        /* \"#utility.yul\":2060:2083   */\n      calldataload\n        /* \"#utility.yul\":2092:2123   */\n      tag_826\n        /* \"#utility.yul\":2117:2122   */\n      dup2\n        /* \"#utility.yul\":2092:2123   */\n      tag_809\n      jump\t// in\n    tag_826:\n        /* \"#utility.yul\":2142:2147   */\n      swap5\n        /* \"#utility.yul\":2194:2196   */\n      0x20\n        /* \"#utility.yul\":2179:2197   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":2166:2198   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1966:2204   */\n      jump\t// out\n        /* \"#utility.yul\":2209:2464   */\n    tag_372:\n        /* \"#utility.yul\":2276:2282   */\n      0x00\n        /* \"#utility.yul\":2329:2331   */\n      0x20\n        /* \"#utility.yul\":2317:2326   */\n      dup3\n        /* \"#utility.yul\":2308:2315   */\n      dup5\n        /* \"#utility.yul\":2304:2327   */\n      sub\n        /* \"#utility.yul\":2300:2332   */\n      slt\n        /* \"#utility.yul\":2297:2299   */\n      iszero\n      tag_828\n      jumpi\n        /* \"#utility.yul\":2350:2356   */\n      dup1\n        /* \"#utility.yul\":2342:2348   */\n      dup2\n        /* \"#utility.yul\":2335:2357   */\n      revert\n        /* \"#utility.yul\":2297:2299   */\n    tag_828:\n        /* \"#utility.yul\":2387:2396   */\n      dup2\n        /* \"#utility.yul\":2381:2397   */\n      mload\n        /* \"#utility.yul\":2406:2434   */\n      tag_649\n        /* \"#utility.yul\":2428:2433   */\n      dup2\n        /* \"#utility.yul\":2406:2434   */\n      tag_830\n      jump\t// in\n        /* \"#utility.yul\":2469:2859   */\n    tag_189:\n        /* \"#utility.yul\":2533:2539   */\n      0x00\n        /* \"#utility.yul\":2541:2547   */\n      dup1\n        /* \"#utility.yul\":2594:2596   */\n      0x40\n        /* \"#utility.yul\":2582:2591   */\n      dup4\n        /* \"#utility.yul\":2573:2580   */\n      dup6\n        /* \"#utility.yul\":2569:2592   */\n      sub\n        /* \"#utility.yul\":2565:2597   */\n      slt\n        /* \"#utility.yul\":2562:2564   */\n      iszero\n      tag_832\n      jumpi\n        /* \"#utility.yul\":2615:2621   */\n      dup2\n        /* \"#utility.yul\":2607:2613   */\n      dup3\n        /* \"#utility.yul\":2600:2622   */\n      revert\n        /* \"#utility.yul\":2562:2564   */\n    tag_832:\n        /* \"#utility.yul\":2659:2668   */\n      dup3\n        /* \"#utility.yul\":2646:2669   */\n      calldataload\n        /* \"#utility.yul\":2678:2706   */\n      tag_833\n        /* \"#utility.yul\":2700:2705   */\n      dup2\n        /* \"#utility.yul\":2678:2706   */\n      tag_830\n      jump\t// in\n    tag_833:\n        /* \"#utility.yul\":2725:2730   */\n      swap2\n      pop\n        /* \"#utility.yul\":2782:2784   */\n      0x20\n        /* \"#utility.yul\":2767:2785   */\n      dup4\n      add\n        /* \"#utility.yul\":2754:2786   */\n      calldataload\n        /* \"#utility.yul\":2795:2827   */\n      tag_819\n        /* \"#utility.yul\":2754:2786   */\n      dup2\n        /* \"#utility.yul\":2795:2827   */\n      tag_835\n      jump\t// in\n        /* \"#utility.yul\":2864:3293   */\n    tag_431:\n        /* \"#utility.yul\":2951:2957   */\n      0x00\n        /* \"#utility.yul\":2959:2965   */\n      dup1\n        /* \"#utility.yul\":2967:2973   */\n      0x00\n        /* \"#utility.yul\":3020:3022   */\n      0x60\n        /* \"#utility.yul\":3008:3017   */\n      dup5\n        /* \"#utility.yul\":2999:3006   */\n      dup7\n        /* \"#utility.yul\":2995:3018   */\n      sub\n        /* \"#utility.yul\":2991:3023   */\n      slt\n        /* \"#utility.yul\":2988:2990   */\n      iszero\n      tag_837\n      jumpi\n        /* \"#utility.yul\":3041:3047   */\n      dup3\n        /* \"#utility.yul\":3033:3039   */\n      dup4\n        /* \"#utility.yul\":3026:3048   */\n      revert\n        /* \"#utility.yul\":2988:2990   */\n    tag_837:\n        /* \"#utility.yul\":3069:3109   */\n      tag_838\n        /* \"#utility.yul\":3099:3108   */\n      dup5\n        /* \"#utility.yul\":3069:3109   */\n      tag_803\n      jump\t// in\n    tag_838:\n        /* \"#utility.yul\":3059:3109   */\n      swap3\n      pop\n        /* \"#utility.yul\":3128:3177   */\n      tag_839\n        /* \"#utility.yul\":3173:3175   */\n      0x20\n        /* \"#utility.yul\":3162:3171   */\n      dup6\n        /* \"#utility.yul\":3158:3176   */\n      add\n        /* \"#utility.yul\":3128:3177   */\n      tag_803\n      jump\t// in\n    tag_839:\n        /* \"#utility.yul\":3118:3177   */\n      swap2\n      pop\n        /* \"#utility.yul\":3220:3222   */\n      0x40\n        /* \"#utility.yul\":3209:3218   */\n      dup5\n        /* \"#utility.yul\":3205:3223   */\n      add\n        /* \"#utility.yul\":3199:3224   */\n      mload\n        /* \"#utility.yul\":3233:3263   */\n      tag_840\n        /* \"#utility.yul\":3257:3262   */\n      dup2\n        /* \"#utility.yul\":3233:3263   */\n      tag_835\n      jump\t// in\n    tag_840:\n        /* \"#utility.yul\":3282:3287   */\n      dup1\n        /* \"#utility.yul\":3272:3287   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2978:3293   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":3298:3488   */\n    tag_119:\n        /* \"#utility.yul\":3357:3363   */\n      0x00\n        /* \"#utility.yul\":3410:3412   */\n      0x20\n        /* \"#utility.yul\":3398:3407   */\n      dup3\n        /* \"#utility.yul\":3389:3396   */\n      dup5\n        /* \"#utility.yul\":3385:3408   */\n      sub\n        /* \"#utility.yul\":3381:3413   */\n      slt\n        /* \"#utility.yul\":3378:3380   */\n      iszero\n      tag_842\n      jumpi\n        /* \"#utility.yul\":3431:3437   */\n      dup1\n        /* \"#utility.yul\":3423:3429   */\n      dup2\n        /* \"#utility.yul\":3416:3438   */\n      revert\n        /* \"#utility.yul\":3378:3380   */\n    tag_842:\n      pop\n        /* \"#utility.yul\":3459:3482   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":3368:3488   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3493:3687   */\n    tag_364:\n        /* \"#utility.yul\":3563:3569   */\n      0x00\n        /* \"#utility.yul\":3616:3618   */\n      0x20\n        /* \"#utility.yul\":3604:3613   */\n      dup3\n        /* \"#utility.yul\":3595:3602   */\n      dup5\n        /* \"#utility.yul\":3591:3614   */\n      sub\n        /* \"#utility.yul\":3587:3619   */\n      slt\n        /* \"#utility.yul\":3584:3586   */\n      iszero\n      tag_844\n      jumpi\n        /* \"#utility.yul\":3637:3643   */\n      dup1\n        /* \"#utility.yul\":3629:3635   */\n      dup2\n        /* \"#utility.yul\":3622:3644   */\n      revert\n        /* \"#utility.yul\":3584:3586   */\n    tag_844:\n      pop\n        /* \"#utility.yul\":3665:3681   */\n      mload\n      swap2\n        /* \"#utility.yul\":3574:3687   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3692:4008   */\n    tag_747:\n        /* \"#utility.yul\":3780:3786   */\n      0x00\n        /* \"#utility.yul\":3788:3794   */\n      dup1\n        /* \"#utility.yul\":3796:3802   */\n      0x00\n        /* \"#utility.yul\":3849:3851   */\n      0x60\n        /* \"#utility.yul\":3837:3846   */\n      dup5\n        /* \"#utility.yul\":3828:3835   */\n      dup7\n        /* \"#utility.yul\":3824:3847   */\n      sub\n        /* \"#utility.yul\":3820:3852   */\n      slt\n        /* \"#utility.yul\":3817:3819   */\n      iszero\n      tag_846\n      jumpi\n        /* \"#utility.yul\":3870:3876   */\n      dup3\n        /* \"#utility.yul\":3862:3868   */\n      dup4\n        /* \"#utility.yul\":3855:3877   */\n      revert\n        /* \"#utility.yul\":3817:3819   */\n    tag_846:\n        /* \"#utility.yul\":3904:3913   */\n      dup4\n        /* \"#utility.yul\":3898:3914   */\n      mload\n        /* \"#utility.yul\":3888:3914   */\n      swap3\n      pop\n        /* \"#utility.yul\":3954:3956   */\n      0x20\n        /* \"#utility.yul\":3943:3952   */\n      dup5\n        /* \"#utility.yul\":3939:3957   */\n      add\n        /* \"#utility.yul\":3933:3958   */\n      mload\n        /* \"#utility.yul\":3923:3958   */\n      swap2\n      pop\n        /* \"#utility.yul\":3998:4000   */\n      0x40\n        /* \"#utility.yul\":3987:3996   */\n      dup5\n        /* \"#utility.yul\":3983:4001   */\n      add\n        /* \"#utility.yul\":3977:4002   */\n      mload\n        /* \"#utility.yul\":3967:4002   */\n      swap1\n      pop\n        /* \"#utility.yul\":3807:4008   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4013:4408   */\n    tag_293:\n        /* \"#utility.yul\":4099:4105   */\n      0x00\n        /* \"#utility.yul\":4107:4113   */\n      dup1\n        /* \"#utility.yul\":4115:4121   */\n      0x00\n        /* \"#utility.yul\":4123:4129   */\n      dup1\n        /* \"#utility.yul\":4176:4179   */\n      0x80\n        /* \"#utility.yul\":4164:4173   */\n      dup6\n        /* \"#utility.yul\":4155:4162   */\n      dup8\n        /* \"#utility.yul\":4151:4174   */\n      sub\n        /* \"#utility.yul\":4147:4180   */\n      slt\n        /* \"#utility.yul\":4144:4146   */\n      iszero\n      tag_848\n      jumpi\n        /* \"#utility.yul\":4198:4204   */\n      dup1\n        /* \"#utility.yul\":4190:4196   */\n      dup2\n        /* \"#utility.yul\":4183:4205   */\n      revert\n        /* \"#utility.yul\":4144:4146   */\n    tag_848:\n      pop\n      pop\n        /* \"#utility.yul\":4226:4249   */\n      dup3\n      calldataload\n      swap5\n        /* \"#utility.yul\":4296:4298   */\n      0x20\n        /* \"#utility.yul\":4281:4299   */\n      dup5\n      add\n        /* \"#utility.yul\":4268:4300   */\n      calldataload\n      swap5\n      pop\n        /* \"#utility.yul\":4347:4349   */\n      0x40\n        /* \"#utility.yul\":4332:4350   */\n      dup5\n      add\n        /* \"#utility.yul\":4319:4351   */\n      calldataload\n      swap4\n        /* \"#utility.yul\":4398:4400   */\n      0x60\n        /* \"#utility.yul\":4383:4401   */\n      add\n        /* \"#utility.yul\":4370:4402   */\n      calldataload\n      swap3\n      pop\n        /* \"#utility.yul\":4134:4408   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6489:7092   */\n    tag_85:\n        /* \"#utility.yul\":6601:6605   */\n      0x00\n        /* \"#utility.yul\":6630:6632   */\n      0x20\n        /* \"#utility.yul\":6659:6661   */\n      dup1\n        /* \"#utility.yul\":6648:6657   */\n      dup4\n        /* \"#utility.yul\":6641:6662   */\n      mstore\n        /* \"#utility.yul\":6691:6697   */\n      dup4\n        /* \"#utility.yul\":6685:6698   */\n      mload\n        /* \"#utility.yul\":6734:6740   */\n      dup1\n        /* \"#utility.yul\":6729:6731   */\n      dup3\n        /* \"#utility.yul\":6718:6727   */\n      dup6\n        /* \"#utility.yul\":6714:6732   */\n      add\n        /* \"#utility.yul\":6707:6741   */\n      mstore\n        /* \"#utility.yul\":6759:6763   */\n      dup3\n        /* \"#utility.yul\":6772:6912   */\n    tag_856:\n        /* \"#utility.yul\":6786:6792   */\n      dup2\n        /* \"#utility.yul\":6783:6784   */\n      dup2\n        /* \"#utility.yul\":6780:6793   */\n      lt\n        /* \"#utility.yul\":6772:6912   */\n      iszero\n      tag_858\n      jumpi\n        /* \"#utility.yul\":6881:6895   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":6877:6900   */\n      dup4\n      add\n        /* \"#utility.yul\":6871:6901   */\n      mload\n        /* \"#utility.yul\":6847:6864   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":6866:6868   */\n      0x40\n        /* \"#utility.yul\":6843:6869   */\n      add\n        /* \"#utility.yul\":6836:6902   */\n      mstore\n        /* \"#utility.yul\":6801:6811   */\n      dup3\n      add\n        /* \"#utility.yul\":6772:6912   */\n      jump(tag_856)\n    tag_858:\n        /* \"#utility.yul\":6930:6936   */\n      dup2\n        /* \"#utility.yul\":6927:6928   */\n      dup2\n        /* \"#utility.yul\":6924:6937   */\n      gt\n        /* \"#utility.yul\":6921:6923   */\n      iszero\n      tag_859\n      jumpi\n        /* \"#utility.yul\":7000:7004   */\n      dup4\n        /* \"#utility.yul\":6995:6997   */\n      0x40\n        /* \"#utility.yul\":6986:6992   */\n      dup4\n        /* \"#utility.yul\":6975:6984   */\n      dup8\n        /* \"#utility.yul\":6971:6993   */\n      add\n        /* \"#utility.yul\":6967:6998   */\n      add\n        /* \"#utility.yul\":6960:7005   */\n      mstore\n        /* \"#utility.yul\":6921:6923   */\n    tag_859:\n      pop\n        /* \"#utility.yul\":7076:7078   */\n      0x1f\n        /* \"#utility.yul\":7055:7070   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":7051:7080   */\n      and\n        /* \"#utility.yul\":7036:7081   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":7083:7085   */\n      0x40\n        /* \"#utility.yul\":7032:7086   */\n      add\n      swap4\n        /* \"#utility.yul\":6610:7092   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11340:11809   */\n    tag_596:\n        /* \"#utility.yul\":11542:11544   */\n      0x20\n        /* \"#utility.yul\":11524:11545   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":11581:11583   */\n      0x41\n        /* \"#utility.yul\":11561:11579   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":11554:11584   */\n      mstore\n        /* \"#utility.yul\":11620:11654   */\n      0x77616c6c65742062616c616e6365206166746572207472616e73666572206d75\n        /* \"#utility.yul\":11615:11617   */\n      0x40\n        /* \"#utility.yul\":11600:11618   */\n      dup3\n      add\n        /* \"#utility.yul\":11593:11655   */\n      mstore\n        /* \"#utility.yul\":11691:11725   */\n      0x7374206265206c657373207468616e206d61782077616c6c657420616d6f756e\n        /* \"#utility.yul\":11686:11688   */\n      0x60\n        /* \"#utility.yul\":11671:11689   */\n      dup3\n      add\n        /* \"#utility.yul\":11664:11726   */\n      mstore\n      shl(0xfa, 0x1d)\n        /* \"#utility.yul\":11757:11760   */\n      0x80\n        /* \"#utility.yul\":11742:11761   */\n      dup3\n      add\n        /* \"#utility.yul\":11735:11767   */\n      mstore\n        /* \"#utility.yul\":11799:11802   */\n      0xa0\n        /* \"#utility.yul\":11784:11803   */\n      add\n      swap1\n        /* \"#utility.yul\":11514:11809   */\n      jump\t// out\n        /* \"#utility.yul\":12216:12572   */\n    tag_325:\n        /* \"#utility.yul\":12418:12420   */\n      0x20\n        /* \"#utility.yul\":12400:12421   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":12437:12455   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":12430:12460   */\n      mstore\n        /* \"#utility.yul\":12496:12530   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":12491:12493   */\n      0x40\n        /* \"#utility.yul\":12476:12494   */\n      dup3\n      add\n        /* \"#utility.yul\":12469:12531   */\n      mstore\n        /* \"#utility.yul\":12563:12565   */\n      0x60\n        /* \"#utility.yul\":12548:12566   */\n      add\n      swap1\n        /* \"#utility.yul\":12390:12572   */\n      jump\t// out\n        /* \"#utility.yul\":15159:16142   */\n    tag_674:\n        /* \"#utility.yul\":15421:15425   */\n      0x00\n        /* \"#utility.yul\":15469:15472   */\n      0xa0\n        /* \"#utility.yul\":15458:15467   */\n      dup3\n        /* \"#utility.yul\":15454:15473   */\n      add\n        /* \"#utility.yul\":15500:15506   */\n      dup8\n        /* \"#utility.yul\":15489:15498   */\n      dup4\n        /* \"#utility.yul\":15482:15507   */\n      mstore\n        /* \"#utility.yul\":15526:15528   */\n      0x20\n        /* \"#utility.yul\":15564:15570   */\n      dup8\n        /* \"#utility.yul\":15559:15561   */\n      dup2\n        /* \"#utility.yul\":15548:15557   */\n      dup6\n        /* \"#utility.yul\":15544:15562   */\n      add\n        /* \"#utility.yul\":15537:15571   */\n      mstore\n        /* \"#utility.yul\":15607:15610   */\n      0xa0\n        /* \"#utility.yul\":15602:15604   */\n      0x40\n        /* \"#utility.yul\":15591:15600   */\n      dup6\n        /* \"#utility.yul\":15587:15605   */\n      add\n        /* \"#utility.yul\":15580:15611   */\n      mstore\n        /* \"#utility.yul\":15631:15637   */\n      dup2\n        /* \"#utility.yul\":15666:15672   */\n      dup8\n        /* \"#utility.yul\":15660:15673   */\n      mload\n        /* \"#utility.yul\":15697:15703   */\n      dup1\n        /* \"#utility.yul\":15689:15695   */\n      dup5\n        /* \"#utility.yul\":15682:15704   */\n      mstore\n        /* \"#utility.yul\":15735:15738   */\n      0xc0\n        /* \"#utility.yul\":15724:15733   */\n      dup7\n        /* \"#utility.yul\":15720:15739   */\n      add\n        /* \"#utility.yul\":15713:15739   */\n      swap2\n      pop\n        /* \"#utility.yul\":15774:15776   */\n      dup3\n        /* \"#utility.yul\":15766:15772   */\n      dup10\n        /* \"#utility.yul\":15762:15777   */\n      add\n        /* \"#utility.yul\":15748:15777   */\n      swap4\n      pop\n        /* \"#utility.yul\":15795:15799   */\n      dup5\n        /* \"#utility.yul\":15808:16003   */\n    tag_882:\n        /* \"#utility.yul\":15822:15828   */\n      dup2\n        /* \"#utility.yul\":15819:15820   */\n      dup2\n        /* \"#utility.yul\":15816:15829   */\n      lt\n        /* \"#utility.yul\":15808:16003   */\n      iszero\n      tag_884\n      jumpi\n        /* \"#utility.yul\":15887:15900   */\n      dup5\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":15883:15922   */\n      and\n        /* \"#utility.yul\":15871:15923   */\n      dup4\n      mstore\n        /* \"#utility.yul\":15978:15993   */\n      swap4\n      dup4\n      add\n      swap4\n        /* \"#utility.yul\":15943:15955   */\n      swap2\n      dup4\n      add\n      swap2\n        /* \"#utility.yul\":15919:15920   */\n      0x01\n        /* \"#utility.yul\":15837:15846   */\n      add\n        /* \"#utility.yul\":15808:16003   */\n      jump(tag_882)\n    tag_884:\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":16059:16091   */\n      swap7\n      swap1\n      swap7\n      and\n        /* \"#utility.yul\":16054:16056   */\n      0x60\n        /* \"#utility.yul\":16039:16057   */\n      dup6\n      add\n        /* \"#utility.yul\":16032:16092   */\n      mstore\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":16123:16126   */\n      0x80\n        /* \"#utility.yul\":16108:16127   */\n      add\n        /* \"#utility.yul\":16101:16136   */\n      mstore\n        /* \"#utility.yul\":16020:16023   */\n      swap4\n        /* \"#utility.yul\":15430:16142   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16732:16860   */\n    tag_607:\n        /* \"#utility.yul\":16772:16775   */\n      0x00\n        /* \"#utility.yul\":16803:16804   */\n      dup3\n        /* \"#utility.yul\":16799:16805   */\n      not\n        /* \"#utility.yul\":16796:16797   */\n      dup3\n        /* \"#utility.yul\":16793:16806   */\n      gt\n        /* \"#utility.yul\":16790:16792   */\n      iszero\n      tag_889\n      jumpi\n        /* \"#utility.yul\":16809:16827   */\n      tag_889\n      tag_890\n      jump\t// in\n    tag_889:\n      pop\n        /* \"#utility.yul\":16845:16854   */\n      add\n      swap1\n        /* \"#utility.yul\":16780:16860   */\n      jump\t// out\n        /* \"#utility.yul\":16865:16985   */\n    tag_656:\n        /* \"#utility.yul\":16905:16906   */\n      0x00\n        /* \"#utility.yul\":16931:16932   */\n      dup3\n        /* \"#utility.yul\":16921:16923   */\n      tag_893\n      jumpi\n        /* \"#utility.yul\":16936:16954   */\n      tag_893\n      tag_894\n      jump\t// in\n    tag_893:\n      pop\n        /* \"#utility.yul\":16970:16979   */\n      div\n      swap1\n        /* \"#utility.yul\":16911:16985   */\n      jump\t// out\n        /* \"#utility.yul\":16990:17158   */\n    tag_654:\n        /* \"#utility.yul\":17030:17037   */\n      0x00\n        /* \"#utility.yul\":17096:17097   */\n      dup2\n        /* \"#utility.yul\":17092:17093   */\n      0x00\n        /* \"#utility.yul\":17088:17094   */\n      not\n        /* \"#utility.yul\":17084:17098   */\n      div\n        /* \"#utility.yul\":17081:17082   */\n      dup4\n        /* \"#utility.yul\":17078:17099   */\n      gt\n        /* \"#utility.yul\":17073:17074   */\n      dup3\n        /* \"#utility.yul\":17066:17075   */\n      iszero\n        /* \"#utility.yul\":17059:17076   */\n      iszero\n        /* \"#utility.yul\":17055:17100   */\n      and\n        /* \"#utility.yul\":17052:17054   */\n      iszero\n      tag_897\n      jumpi\n        /* \"#utility.yul\":17103:17121   */\n      tag_897\n      tag_890\n      jump\t// in\n    tag_897:\n      pop\n        /* \"#utility.yul\":17143:17152   */\n      mul\n      swap1\n        /* \"#utility.yul\":17042:17158   */\n      jump\t// out\n        /* \"#utility.yul\":17163:17425   */\n    tag_419:\n        /* \"#utility.yul\":17202:17209   */\n      0x00\n        /* \"#utility.yul\":17234:17244   */\n      0xffffffff\n        /* \"#utility.yul\":17271:17273   */\n      dup1\n        /* \"#utility.yul\":17268:17269   */\n      dup4\n        /* \"#utility.yul\":17264:17274   */\n      and\n        /* \"#utility.yul\":17301:17303   */\n      dup2\n        /* \"#utility.yul\":17298:17299   */\n      dup6\n        /* \"#utility.yul\":17294:17304   */\n      and\n        /* \"#utility.yul\":17357:17360   */\n      dup2\n        /* \"#utility.yul\":17353:17355   */\n      dup4\n        /* \"#utility.yul\":17349:17361   */\n      div\n        /* \"#utility.yul\":17344:17347   */\n      dup2\n        /* \"#utility.yul\":17341:17362   */\n      gt\n        /* \"#utility.yul\":17334:17337   */\n      dup3\n        /* \"#utility.yul\":17327:17338   */\n      iszero\n        /* \"#utility.yul\":17320:17339   */\n      iszero\n        /* \"#utility.yul\":17316:17363   */\n      and\n        /* \"#utility.yul\":17313:17315   */\n      iszero\n      tag_900\n      jumpi\n        /* \"#utility.yul\":17366:17384   */\n      tag_900\n      tag_890\n      jump\t// in\n    tag_900:\n        /* \"#utility.yul\":17406:17419   */\n      mul\n      swap5\n        /* \"#utility.yul\":17214:17425   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17430:17555   */\n    tag_647:\n        /* \"#utility.yul\":17470:17474   */\n      0x00\n        /* \"#utility.yul\":17498:17499   */\n      dup3\n        /* \"#utility.yul\":17495:17496   */\n      dup3\n        /* \"#utility.yul\":17492:17500   */\n      lt\n        /* \"#utility.yul\":17489:17491   */\n      iszero\n      tag_903\n      jumpi\n        /* \"#utility.yul\":17503:17521   */\n      tag_903\n      tag_890\n      jump\t// in\n    tag_903:\n      pop\n        /* \"#utility.yul\":17540:17549   */\n      sub\n      swap1\n        /* \"#utility.yul\":17479:17555   */\n      jump\t// out\n        /* \"#utility.yul\":17560:17672   */\n    tag_459:\n        /* \"#utility.yul\":17592:17593   */\n      0x00\n        /* \"#utility.yul\":17618:17619   */\n      dup3\n        /* \"#utility.yul\":17608:17610   */\n      tag_906\n      jumpi\n        /* \"#utility.yul\":17623:17641   */\n      tag_906\n      tag_894\n      jump\t// in\n    tag_906:\n      pop\n        /* \"#utility.yul\":17657:17666   */\n      mod\n      swap1\n        /* \"#utility.yul\":17598:17672   */\n      jump\t// out\n        /* \"#utility.yul\":17677:17804   */\n    tag_890:\n        /* \"#utility.yul\":17738:17748   */\n      0x4e487b71\n        /* \"#utility.yul\":17733:17736   */\n      0xe0\n        /* \"#utility.yul\":17729:17749   */\n      shl\n        /* \"#utility.yul\":17726:17727   */\n      0x00\n        /* \"#utility.yul\":17719:17750   */\n      mstore\n        /* \"#utility.yul\":17769:17773   */\n      0x11\n        /* \"#utility.yul\":17766:17767   */\n      0x04\n        /* \"#utility.yul\":17759:17774   */\n      mstore\n        /* \"#utility.yul\":17793:17797   */\n      0x24\n        /* \"#utility.yul\":17790:17791   */\n      0x00\n        /* \"#utility.yul\":17783:17798   */\n      revert\n        /* \"#utility.yul\":17809:17936   */\n    tag_894:\n        /* \"#utility.yul\":17870:17880   */\n      0x4e487b71\n        /* \"#utility.yul\":17865:17868   */\n      0xe0\n        /* \"#utility.yul\":17861:17881   */\n      shl\n        /* \"#utility.yul\":17858:17859   */\n      0x00\n        /* \"#utility.yul\":17851:17882   */\n      mstore\n        /* \"#utility.yul\":17901:17905   */\n      0x12\n        /* \"#utility.yul\":17898:17899   */\n      0x04\n        /* \"#utility.yul\":17891:17906   */\n      mstore\n        /* \"#utility.yul\":17925:17929   */\n      0x24\n        /* \"#utility.yul\":17922:17923   */\n      0x00\n        /* \"#utility.yul\":17915:17930   */\n      revert\n        /* \"#utility.yul\":17941:18072   */\n    tag_809:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":18016:18047   */\n      dup2\n      and\n        /* \"#utility.yul\":18006:18048   */\n      dup2\n      eq\n        /* \"#utility.yul\":17996:17998   */\n      tag_403\n      jumpi\n        /* \"#utility.yul\":18062:18063   */\n      0x00\n        /* \"#utility.yul\":18059:18060   */\n      dup1\n        /* \"#utility.yul\":18052:18064   */\n      revert\n        /* \"#utility.yul\":18077:18195   */\n    tag_830:\n        /* \"#utility.yul\":18163:18168   */\n      dup1\n        /* \"#utility.yul\":18156:18169   */\n      iszero\n        /* \"#utility.yul\":18149:18170   */\n      iszero\n        /* \"#utility.yul\":18142:18147   */\n      dup2\n        /* \"#utility.yul\":18139:18171   */\n      eq\n        /* \"#utility.yul\":18129:18131   */\n      tag_403\n      jumpi\n        /* \"#utility.yul\":18185:18186   */\n      0x00\n        /* \"#utility.yul\":18182:18183   */\n      dup1\n        /* \"#utility.yul\":18175:18187   */\n      revert\n        /* \"#utility.yul\":18200:18321   */\n    tag_835:\n        /* \"#utility.yul\":18285:18295   */\n      0xffffffff\n        /* \"#utility.yul\":18278:18283   */\n      dup2\n        /* \"#utility.yul\":18274:18296   */\n      and\n        /* \"#utility.yul\":18267:18272   */\n      dup2\n        /* \"#utility.yul\":18264:18297   */\n      eq\n        /* \"#utility.yul\":18254:18256   */\n      tag_403\n      jumpi\n        /* \"#utility.yul\":18311:18312   */\n      0x00\n        /* \"#utility.yul\":18308:18309   */\n      dup1\n        /* \"#utility.yul\":18301:18313   */\n      revert\n    stop\n    data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330 45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365\n\n    auxdata: 0xa2646970667358221220fc57e276852f112951403513d009406b1b67ebbb47d9537d5ec34db201657b1064736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2206:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "95:229:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "141:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "150:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "158:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "143:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "143:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "143:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "116:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "125:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "112:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "112:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "137:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "108:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "108:32:1"
															},
															"nodeType": "YulIf",
															"src": "105:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "176:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "195:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "189:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "189:16:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "180:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "268:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "277:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "285:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "270:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "270:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "270:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "227:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "238:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "253:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "258:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "249:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "249:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "262:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "245:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "245:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "234:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "234:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "224:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "224:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "217:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "217:50:1"
															},
															"nodeType": "YulIf",
															"src": "214:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "303:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "313:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "303:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "61:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "72:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "84:6:1",
														"type": ""
													}
												],
												"src": "14:310:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "407:219:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "453:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "462:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "470:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "455:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "455:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "455:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "428:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "437:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "424:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "424:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "449:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "420:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "420:32:1"
															},
															"nodeType": "YulIf",
															"src": "417:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "488:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "507:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "501:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "501:16:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "492:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "570:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "579:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "587:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "572:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "572:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "572:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "539:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "560:5:1"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "553:6:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "553:13:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "546:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "546:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "536:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "536:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "529:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "529:40:1"
															},
															"nodeType": "YulIf",
															"src": "526:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "605:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "615:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "605:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "373:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "384:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "396:6:1",
														"type": ""
													}
												],
												"src": "329:297:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "760:175:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "770:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "782:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "793:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "778:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "770:4:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "805:29:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "823:3:1",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "828:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "819:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "819:11:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "832:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "815:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "815:19:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "809:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "850:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "865:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "873:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "861:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "861:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "843:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "843:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "843:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "897:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "908:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "893:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "893:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "917:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "925:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "913:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "913:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "886:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "886:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "886:43:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "721:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "732:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "740:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "751:4:1",
														"type": ""
													}
												],
												"src": "631:304:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1069:145:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1079:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1091:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1102:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1087:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1087:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1079:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1121:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1136:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1152:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1157:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1148:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1148:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1161:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1144:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1144:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1132:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1132:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1114:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1114:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1114:51:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1185:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1196:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1181:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1181:18:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "1201:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1174:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1174:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1174:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1030:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1041:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1049:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1060:4:1",
														"type": ""
													}
												],
												"src": "940:274:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1393:224:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1410:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1421:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1403:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1403:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1403:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1444:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1455:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1440:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1440:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1460:2:1",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1433:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1433:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1433:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1483:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1494:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1479:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1479:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1499:34:1",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1472:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1472:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1472:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1554:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1565:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1550:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1550:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1570:4:1",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1543:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1543:32:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1543:32:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1584:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1596:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1607:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1592:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1592:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1584:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1370:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1384:4:1",
														"type": ""
													}
												],
												"src": "1219:398:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1796:226:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1813:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1824:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1806:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1806:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1806:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1847:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1858:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1843:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1843:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1863:2:1",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1836:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1836:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1836:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1886:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1897:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1882:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1882:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1902:34:1",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1875:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1875:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1875:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1957:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1968:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1953:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1953:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1973:6:1",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1946:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1946:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1946:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1989:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2001:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2012:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1997:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1997:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1989:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1773:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1787:4:1",
														"type": ""
													}
												],
												"src": "1622:400:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2128:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2138:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2150:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2161:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2146:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2146:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2138:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2180:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2191:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2173:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2173:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2173:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2097:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2108:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2119:4:1",
														"type": ""
													}
												],
												"src": "2027:177:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6080604052662386f2ab5bca0060075566038d7ea4c6800060085560006009819055600a819055600b819055600c819055600d819055600e819055600f8190556010819055601181905560128190556013819055601481905560158190556016819055601781905560188190556019556021805461dead6001600160a01b0319918216811790925560228054821683179055602380548216831790556024805490911690911790556028805464ffffffffff1916640101010000179055348015620000c957600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350602580546001600160a01b0319167310ed43c718714eb63d5aa57b78b54704e256024e908117909155620001493082670de0b6b3a7640000620003fa565b806001600160a01b031663c45a01556040518163ffffffff1660e01b815260040160206040518083038186803b1580156200018357600080fd5b505afa15801562000198573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001be919062000526565b6001600160a01b031663c9c6539630836001600160a01b031663ad5c46486040518163ffffffff1660e01b815260040160206040518083038186803b1580156200020757600080fd5b505afa1580156200021c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000242919062000526565b6040516001600160e01b031960e085901b1681526001600160a01b03928316600482015291166024820152604401602060405180830381600087803b1580156200028b57600080fd5b505af1158015620002a0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002c6919062000526565b602680546001600160a01b0319166001600160a01b0392831690811790915560255460405163095ea7b360e01b81529216600483015260001960248301529063095ea7b390604401602060405180830381600087803b1580156200032957600080fd5b505af11580156200033e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000364919062000556565b50670de0b6b3a76400006027819055600781905533600081815260026020908152604080832085905582546001600160a01b03168352600482528083208054600160ff1991821681179092553085528285208054909116909117905551938452919290917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35062000578565b6001600160a01b038316620004625760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084015b60405180910390fd5b6001600160a01b038216620004c55760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840162000459565b6001600160a01b0383811660008181526003602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006020828403121562000538578081fd5b81516001600160a01b03811681146200054f578182fd5b9392505050565b60006020828403121562000568578081fd5b815180151581146200054f578182fd5b6130e880620005886000396000f3fe60806040526004361061036f5760003560e01c806388790a68116101c6578063cab03471116100f7578063e315a6da11610095578063f2fde38b1161006f578063f2fde38b14610a64578063f480fec214610a84578063ffb54a9914610aa4578063ffecf51614610abe57600080fd5b8063e315a6da14610a04578063e4bf1bed14610a24578063ea2f0b3714610a4457600080fd5b8063d55cb78a116100d1578063d55cb78a14610973578063db0045ec14610988578063dc44b6a0146109a8578063dd62ed3e146109be57600080fd5b8063cab034711461091d578063cdb3858f14610933578063d16336491461095357600080fd5b8063a850673d11610164578063c469b6dd1161013e578063c469b6dd14610876578063c5d241891461088c578063c8607952146108a2578063c95457ff146108b857600080fd5b8063a850673d14610821578063a9059cbb14610841578063c3c8cd801461086157600080fd5b80639491f94d116101a05780639491f94d1461078957806395d89b411461079e57806399a7b9bc146107cc5780639d82190f146107e157600080fd5b806388790a68146107405780638da5cb5b146107565780638e3602531461077457600080fd5b806339a53c4e116102a05780636c0a24eb1161023e578063715018a611610218578063715018a6146106b2578063729cb3f2146106c757806372b2aecc146106e7578063787a08a6146106fd57600080fd5b80636c0a24eb146106515780636fc3eaec1461066757806370a082311461067c57600080fd5b8063437823ec1161027a578063437823ec146105c457806349bd5a5e146105e45780635fecd9261461061c5780636aabff3f1461063c57600080fd5b806339a53c4e146105555780633bbac579146105775780633e0f966d146105af57600080fd5b8063248dd2321161030d57806329409395116102e757806329409395146104d8578063301ad558146104f8578063313ce56714610519578063323be1c51461053557600080fd5b8063248dd2321461048c57806327a14fc2146104a25780632843631d146104c257600080fd5b806314eb76ac1161034957806314eb76ac1461040f57806318160ddd146104315780632369bf831461044c57806323b872dd1461046c57600080fd5b806301a6c43b1461037b57806306fdde03146103a4578063095ea7b3146103df57600080fd5b3661037657005b600080fd5b34801561038757600080fd5b5061039160085481565b6040519081526020015b60405180910390f35b3480156103b057600080fd5b506040805180820190915260098152684761696e5a696c6c6160b81b60208201525b60405161039b9190612e28565b3480156103eb57600080fd5b506103ff6103fa366004612ce0565b610ade565b604051901515815260200161039b565b34801561041b57600080fd5b5061042f61042a366004612c30565b610af5565b005b34801561043d57600080fd5b50670de0b6b3a7640000610391565b34801561045857600080fd5b5061042f610467366004612c30565b610b4a565b34801561047857600080fd5b506103ff610487366004612ca0565b610b96565b34801561049857600080fd5b5061039160135481565b3480156104ae57600080fd5b5061042f6104bd366004612d9a565b610bff565b3480156104ce57600080fd5b50610391600b5481565b3480156104e457600080fd5b5061042f6104f3366004612c30565b610d15565b34801561050457600080fd5b506028546103ff906301000000900460ff1681565b34801561052557600080fd5b506040516009815260200161039b565b34801561054157600080fd5b506028546103ff9062010000900460ff1681565b34801561056157600080fd5b506028546103ff90640100000000900460ff1681565b34801561058357600080fd5b506103ff610592366004612c30565b6001600160a01b0316600090815260208052604090205460ff1690565b3480156105bb57600080fd5b5061042f610e61565b3480156105d057600080fd5b5061042f6105df366004612c30565b610eef565b3480156105f057600080fd5b50602654610604906001600160a01b031681565b6040516001600160a01b03909116815260200161039b565b34801561062857600080fd5b5061042f610637366004612c30565b610f3d565b34801561064857600080fd5b5061042f610f87565b34801561065d57600080fd5b5061039160075481565b34801561067357600080fd5b5061042f610fbf565b34801561068857600080fd5b50610391610697366004612c30565b6001600160a01b031660009081526002602052604090205490565b3480156106be57600080fd5b5061042f61102e565b3480156106d357600080fd5b5061042f6106e2366004612d27565b6110a2565b3480156106f357600080fd5b5061039160195481565b34801561070957600080fd5b50601a546107249060ff811690610100900463ffffffff1682565b60408051921515835263ffffffff90911660208301520161039b565b34801561074c57600080fd5b5061039160115481565b34801561076257600080fd5b506000546001600160a01b0316610604565b34801561078057600080fd5b5061042f61110a565b34801561079557600080fd5b50610391611143565b3480156107aa57600080fd5b5060408051808201909152600581526447494c4c4160d81b60208201526103d2565b3480156107d857600080fd5b5061042f6112e2565b3480156107ed57600080fd5b506108016107fc366004612c30565b61131c565b60408051948552602085019390935291830152606082015260800161039b565b34801561082d57600080fd5b5061042f61083c366004612d9a565b6113cb565b34801561084d57600080fd5b506103ff61085c366004612ce0565b6113fa565b34801561086d57600080fd5b5061042f611407565b34801561088257600080fd5b50610391600f5481565b34801561089857600080fd5b50610391600d5481565b3480156108ae57600080fd5b5061039160155481565b3480156108c457600080fd5b50601c54601d54601e54601f546108ee9360ff8082169461010090920461ffff1693919291169085565b60408051951515865261ffff90941660208601529284019190915215156060830152608082015260a00161039b565b34801561092957600080fd5b5061039160175481565b34801561093f57600080fd5b5061042f61094e366004612c30565b611450565b34801561095f57600080fd5b5061042f61096e366004612d9a565b61149c565b34801561097f57600080fd5b5061042f6114dc565b34801561099457600080fd5b5061042f6109a3366004612c30565b611515565b3480156109b457600080fd5b5061039160095481565b3480156109ca57600080fd5b506103916109d9366004612c68565b6001600160a01b03918216600090815260036020908152604080832093909416825291909152205490565b348015610a1057600080fd5b5061042f610a1f366004612d9a565b611561565b348015610a3057600080fd5b5061042f610a3f366004612df7565b611590565b348015610a5057600080fd5b5061042f610a5f366004612c30565b61170c565b348015610a7057600080fd5b5061042f610a7f366004612c30565b611757565b348015610a9057600080fd5b5061042f610a9f366004612df7565b6117ef565b348015610ab057600080fd5b506028546103ff9060ff1681565b348015610aca57600080fd5b5061042f610ad9366004612c30565b61195b565b6000610aeb338484611a12565b5060015b92915050565b6000546001600160a01b03163314610b285760405162461bcd60e51b8152600401610b1f90612ee2565b60405180910390fd5b602280546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b03163314610b745760405162461bcd60e51b8152600401610b1f90612ee2565b602180546001600160a01b0319166001600160a01b0392909216919091179055565b6000610ba3848484611b36565b610bf58433610bf08560405180606001604052806028815260200161308b602891396001600160a01b038a16600090815260036020908152604080832033845290915290205491906120e5565b611a12565b5060019392505050565b6000546001600160a01b03163314610c295760405162461bcd60e51b8152600401610b1f90612ee2565b610c3d670de0b6b3a76400006103e861211f565b811015610c9f5760405162461bcd60e51b815260206004820152602a60248201527f416d6f756e74206d7573742062652067726561746572207468616e20302e3125604482015269206f6620737570706c7960b01b6064820152608401610b1f565b670de0b6b3a7640000811115610d105760405162461bcd60e51b815260206004820152603060248201527f416d6f756e74206d757374206265206c657373207468616e206f72206571756160448201526f6c20746f20746f74616c537570706c7960801b6064820152608401610b1f565b600755565b6000546001600160a01b03163314610d3f5760405162461bcd60e51b8152600401610b1f90612ee2565b6040516370a0823160e01b81523060048201526000906001600160a01b038316906370a082319060240160206040518083038186803b158015610d8157600080fd5b505afa158015610d95573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610db99190612db2565b9050816001600160a01b031663a9059cbb610ddc6000546001600160a01b031690565b6040516001600160e01b031960e084901b1681526001600160a01b03909116600482015260248101849052604401602060405180830381600087803b158015610e2457600080fd5b505af1158015610e38573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e5c9190612d0b565b505050565b6000546001600160a01b03163314610e8b5760405162461bcd60e51b8152600401610b1f90612ee2565b60285462010000900460ff16610ee35760405162461bcd60e51b815260206004820152601e60248201527f7468697320636f6e74726163742063616e6e6f742062652070617573656400006044820152606401610b1f565b6028805460ff19169055565b6000546001600160a01b03163314610f195760405162461bcd60e51b8152600401610b1f90612ee2565b6001600160a01b03166000908152600460205260409020805460ff19166001179055565b6000546001600160a01b03163314610f675760405162461bcd60e51b8152600401610b1f90612ee2565b6001600160a01b031660009081526020805260409020805460ff19169055565b6000546001600160a01b03163314610fb15760405162461bcd60e51b8152600401610b1f90612ee2565b6028805462ff000019169055565b6000546001600160a01b03163314610fe95760405162461bcd60e51b8152600401610b1f90612ee2565b47801561102b57600080546040516001600160a01b039091169183156108fc02918491818181858888f19350505050158015611029573d6000803e3d6000fd5b505b50565b6000546001600160a01b031633146110585760405162461bcd60e51b8152600401610b1f90612ee2565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146110cc5760405162461bcd60e51b8152600401610b1f90612ee2565b601a805460ff19168315151790556110e581603c612fd2565b601a805463ffffffff929092166101000264ffffffff00199092169190911790555050565b6000546001600160a01b031633146111345760405162461bcd60e51b8152600401610b1f90612ee2565b6028805460ff19166001179055565b6000806000602660009054906101000a90046001600160a01b03166001600160a01b0316630902f1ac6040518163ffffffff1660e01b815260040160606040518083038186803b15801561119657600080fd5b505afa1580156111aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111ce9190612d54565b5091509150816001600160701b0316600014806111f257506001600160701b038116155b156112005760009250505090565b60265460408051630dfe168160e01b8152905130926001600160a01b031691630dfe1681916004808301926020929190829003018186803b15801561124457600080fd5b505afa158015611258573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061127c9190612c4c565b6001600160a01b0316146112b8576112b36001600160701b03808316906112ad908516670de0b6b3a7640000612168565b9061211f565b6112db565b6112db6001600160701b03808416906112ad908416670de0b6b3a7640000612168565b9250505090565b6000546001600160a01b0316331461130c5760405162461bcd60e51b8152600401610b1f90612ee2565b6028805464ff0000000019169055565b6001600160a01b0381166000908152601b60205260408120548190819081908190421061134a57600061136d565b6001600160a01b0386166000908152601b602052604090205461136d90426121e7565b905061137c816201518061211f565b945061138b6201518082613015565b905061139981610e1061211f565b93506113a7610e1082613015565b90506113b481603c61211f565b92506113c1603c82613015565b9150509193509193565b6000546001600160a01b031633146113f55760405162461bcd60e51b8152600401610b1f90612ee2565b601955565b6000610aeb338484611b36565b6000546001600160a01b031633146114315760405162461bcd60e51b8152600401610b1f90612ee2565b30600090815260026020526040902054801561102b5761102b81612229565b6000546001600160a01b0316331461147a5760405162461bcd60e51b8152600401610b1f90612ee2565b602480546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031633146114c65760405162461bcd60e51b8152600401610b1f90612ee2565b426005556006556028805460ff19166001179055565b6000546001600160a01b031633146115065760405162461bcd60e51b8152600401610b1f90612ee2565b6028805463ff00000019169055565b6000546001600160a01b0316331461153f5760405162461bcd60e51b8152600401610b1f90612ee2565b602380546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b0316331461158b5760405162461bcd60e51b8152600401610b1f90612ee2565b600855565b6000546001600160a01b031633146115ba5760405162461bcd60e51b8152600401610b1f90612ee2565b60006115d2826115cc858189896123c8565b906123c8565b905060fa81111561163f5760405162461bcd60e51b815260206004820152603160248201527f53756d206f66206275792066656573206d757374206265206c657373207468616044820152706e206f7220657175616c20746f2032352560781b6064820152608401610b1f565b602854640100000000900460ff166116945760405162461bcd60e51b8152602060048201526018602482015277151a1a5cc8199d5b98dd1a5bdb881a5cc8191a58589b195960421b6044820152606401610b1f565b600d8590556009849055600f839055600b829055600e859055600a8490556010839055600c8290556040805186815260208101869052908101849052606081018390527f892b2caa2d791bf7b8d9a49c4db7a4513ff1ae2e0e068ed217f9d5ab4c1a28f0906080015b60405180910390a15050505050565b6000546001600160a01b031633146117365760405162461bcd60e51b8152600401610b1f90612ee2565b6001600160a01b03166000908152600460205260409020805460ff19169055565b6000546001600160a01b031633146117815760405162461bcd60e51b8152600401610b1f90612ee2565b6001600160a01b0381166117e65760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610b1f565b61102b81612427565b6000546001600160a01b031633146118195760405162461bcd60e51b8152600401610b1f90612ee2565b600061182b826115cc858189896123c8565b905060fa8111156118995760405162461bcd60e51b815260206004820152603260248201527f53756d206f662073656c6c2066656573206d757374206265206c657373207468604482015271616e206f7220657175616c20746f2032352560701b6064820152608401610b1f565b602854640100000000900460ff166118ee5760405162461bcd60e51b8152602060048201526018602482015277151a1a5cc8199d5b98dd1a5bdb881a5cc8191a58589b195960421b6044820152606401610b1f565b601585905560118490556017839055601382905560168590556012849055601883905560148290556040805186815260208101869052908101849052606081018390527f439932620c72dddea29980c098bca1a482729646d1216b226d723c6d278a30d1906080016116fd565b6000546001600160a01b031633146119855760405162461bcd60e51b8152600401610b1f90612ee2565b6028546301000000900460ff166119ef5760405162461bcd60e51b815260206004820152602860248201527f7468697320636f6e74726163742063616e6e6f7420626c61636b6c6973742061604482015267646472657373657360c01b6064820152608401610b1f565b6001600160a01b031660009081526020805260409020805460ff19166001179055565b6001600160a01b038316611a745760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610b1f565b6001600160a01b038216611ad55760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610b1f565b6001600160a01b0383811660008181526003602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316611b9a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610b1f565b6001600160a01b038216611bfc5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610b1f565b60008111611c5e5760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b6064820152608401610b1f565b6001611c726000546001600160a01b031690565b6001600160a01b0316846001600160a01b031614158015611ca157506000546001600160a01b03848116911614155b8015611cb657506001600160a01b0384163014155b8015611ccb57506001600160a01b0383163014155b1561208b5760285460ff16611d1a5760405162461bcd60e51b815260206004820152601560248201527454726164696e67206973206e6f742061637469766560581b6044820152606401610b1f565b6026546001600160a01b038581169116148015611d4557506025546001600160a01b03848116911614155b15611dc657600654600554611d59916123c8565b4211611d82576001600160a01b03831660009081526020805260409020805460ff191660011790555b600754611da8836115cc866001600160a01b031660009081526002602052604090205490565b1115611dc65760405162461bcd60e51b8152600401610b1f90612e7b565b602854610100900460ff16158015611dec57506026546001600160a01b03858116911614155b8015611e0557506026546001600160a01b038481169116145b15612016576001600160a01b038416600090815260208052604090205460ff16158015611e4a57506001600160a01b038316600090815260208052604090205460ff16155b611e5357600080fd5b601a5460ff1615611ef8576001600160a01b0384166000908152601b6020526040902054421015611ec65760405162461bcd60e51b815260206004820152601c60248201527f5374726f6e672048616e64732050726f746f636f6c20616374697665000000006044820152606401610b1f565b601a54611ede90610100900463ffffffff1642612f87565b6001600160a01b0385166000908152601b60205260409020555b601c5460ff1615611f5e57601e5460ff1615611f565760405162461bcd60e51b815260206004820152601e60248201527f53656c6c732073746f70706564206279204469616d6f6e6420466c6f6f7200006044820152606401610b1f565b611f5e612477565b306000908152600260205260409020546008548110612014578015612002576000611fa26011546115cc6013546115cc6017546015546123c890919063ffffffff16565b1115612002576000611fdd611fd06011546115cc6013546115cc6017546015546123c890919063ffffffff16565b6011546112ad9085612168565b90506000818310611ff557611ff283836121e7565b90505b611fff8282612526565b50505b4780156120125761201247612599565b505b505b6026546001600160a01b0385811691161480159061204257506026546001600160a01b03848116911614155b1561208b5760075461206d836115cc866001600160a01b031660009081526002602052604090205490565b111561208b5760405162461bcd60e51b8152600401610b1f90612e7b565b6001600160a01b03841660009081526004602052604090205460ff16806120ca57506001600160a01b03831660009081526004602052604090205460ff165b156120d3575060005b6120df848484846126d9565b50505050565b600081848411156121095760405162461bcd60e51b8152600401610b1f9190612e28565b5060006121168486612ffe565b95945050505050565b600061216183836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250612777565b9392505050565b60008261217757506000610aef565b60006121838385612fb3565b9050826121908583612f9f565b146121615760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b6064820152608401610b1f565b600061216183836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506120e5565b6028805461ff001916610100179055604080516002808252606082018352600092602083019080368337019050509050308160008151811061227b57634e487b7160e01b600052603260045260246000fd5b6001600160a01b03928316602091820292909201810191909152602554604080516315ab88c960e31b81529051919093169263ad5c4648926004808301939192829003018186803b1580156122cf57600080fd5b505afa1580156122e3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123079190612c4c565b8160018151811061232857634e487b7160e01b600052603260045260246000fd5b6001600160a01b03928316602091820292909201015260255461234e9130911684611a12565b60255460405163791ac94760e01b81526001600160a01b039091169063791ac94790612387908590600090869030904290600401612f17565b600060405180830381600087803b1580156123a157600080fd5b505af11580156123b5573d6000803e3d6000fd5b50506028805461ff001916905550505050565b6000806123d58385612f87565b9050838110156121615760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006044820152606401610b1f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000612481611143565b90508061248b5750565b601d548111156124a457601d55601e805460ff19169055565b601c54601d546000916124d4916103e8916112ad9161010090910461ffff16906124ce9084612168565b906121e7565b9050808210156124f257601e805460ff19166001179055601d54601f555b601e5460ff1680156125115750601f5461250d906002612168565b8210155b156110295750601e805460ff19169055601d55565b6028805461ff001916610100179055600061254283600261211f565b9050600061255084836121e7565b90504761256561256085856123c8565b612229565b600061257147836121e7565b905082156123b5576123b58361259461258a88886123c8565b6112ad8589612168565b6127a5565b60006125b86017546115cc6013546015546123c890919063ffffffff16565b905080156110295760006125db826112ad6015548661216890919063ffffffff16565b905060006125f8836112ad6017548761216890919063ffffffff16565b9050600061260a826124ce87866121e7565b9050821561264e576021546040516001600160a01b039091169084156108fc029085906000818181858888f1935050505015801561264c573d6000803e3d6000fd5b505b8115612690576022546040516001600160a01b039091169083156108fc029084906000818181858888f1935050505015801561268e573d6000803e3d6000fd5b505b80156126d2576023546040516001600160a01b039091169082156108fc029083906000818181858888f193505050501580156126d0573d6000803e3d6000fd5b505b5050505050565b8061273757612737600d8054600e5560098054600a55600f8054601055600b8054600c556000938490559183905582905581905560158054601655601180546012556017805460185560138054601455928490559083905582905555565b612742848484612862565b6120df600e54600d55600a54600955601054600f55600c54600b55601654601555601254601155601854601755601454601355565b600081836127985760405162461bcd60e51b8152600401610b1f9190612e28565b5060006121168486612f9f565b6025546127bd9030906001600160a01b031684611a12565b6025546024805460405163f305d71960e01b815230600482015291820185905260006044830181905260648301526001600160a01b0390811660848301524260a48301529091169063f305d71990839060c4016060604051808303818588803b15801561282957600080fd5b505af115801561283d573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906126d29190612dca565b6128946040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b6026546001600160a01b0385811691161480156128bf57506025546001600160a01b03848116911614155b15612933576128df6103e86112ad600d548561216890919063ffffffff16565b60208201526009546128fa906103e8906112ad908590612168565b8152600f54612912906103e8906112ad908590612168565b6040820152600b5461292d906103e8906112ad908590612168565b60608201525b6026546001600160a01b0385811691161480159061295e57506026546001600160a01b038481169116145b156129d25761297e6103e86112ad6015548561216890919063ffffffff16565b6020820152601154612999906103e8906112ad908590612168565b81526017546129b1906103e8906112ad908590612168565b60408201526013546129cc906103e8906112ad908590612168565b60608201525b6026546001600160a01b038581169116148015906129fe57506026546001600160a01b03848116911614155b15612ab857612a2f60646112ad601954612a296103e86112ad6015548961216890919063ffffffff16565b90612168565b816020018181525050612a5e60646112ad601954612a296103e86112ad6011548961216890919063ffffffff16565b8152601954601754612a83916064916112ad9190612a29906103e89084908990612168565b816040018181525050612ab260646112ad601954612a296103e86112ad6013548961216890919063ffffffff16565b60608201525b612ae781606001516124ce83604001516124ce85600001516124ce8760200151896121e790919063ffffffff16565b60808201526001600160a01b038416600090815260026020526040902054612b0f90836121e7565b6001600160a01b0380861660009081526002602052604080822093909355608084015191861681529190912054612b45916123c8565b60026000856001600160a01b03166001600160a01b0316815260200190815260200160002081905550612bb2612b9c82606001516115cc84604001516115cc866000015187602001516123c890919063ffffffff16565b30600090815260026020526040902054906123c8565b3060009081526002602090815260409182902092909255608083015190519081526001600160a01b0385811692908716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a350505050565b80516001600160701b0381168114612c2b57600080fd5b919050565b600060208284031215612c41578081fd5b813561216181613055565b600060208284031215612c5d578081fd5b815161216181613055565b60008060408385031215612c7a578081fd5b8235612c8581613055565b91506020830135612c9581613055565b809150509250929050565b600080600060608486031215612cb4578081fd5b8335612cbf81613055565b92506020840135612ccf81613055565b929592945050506040919091013590565b60008060408385031215612cf2578182fd5b8235612cfd81613055565b946020939093013593505050565b600060208284031215612d1c578081fd5b81516121618161306a565b60008060408385031215612d39578182fd5b8235612d448161306a565b91506020830135612c9581613078565b600080600060608486031215612d68578283fd5b612d7184612c14565b9250612d7f60208501612c14565b91506040840151612d8f81613078565b809150509250925092565b600060208284031215612dab578081fd5b5035919050565b600060208284031215612dc3578081fd5b5051919050565b600080600060608486031215612dde578283fd5b8351925060208401519150604084015190509250925092565b60008060008060808587031215612e0c578081fd5b5050823594602084013594506040840135936060013592509050565b6000602080835283518082850152825b81811015612e5457858101830151858201604001528201612e38565b81811115612e655783604083870101525b50601f01601f1916929092016040019392505050565b60208082526041908201527f77616c6c65742062616c616e6365206166746572207472616e73666572206d7560408201527f7374206265206c657373207468616e206d61782077616c6c657420616d6f756e6060820152601d60fa1b608082015260a00190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600060a082018783526020878185015260a0604085015281875180845260c0860191508289019350845b81811015612f665784516001600160a01b031683529383019391830191600101612f41565b50506001600160a01b03969096166060850152505050608001529392505050565b60008219821115612f9a57612f9a613029565b500190565b600082612fae57612fae61303f565b500490565b6000816000190483118215151615612fcd57612fcd613029565b500290565b600063ffffffff80831681851681830481118215151615612ff557612ff5613029565b02949350505050565b60008282101561301057613010613029565b500390565b6000826130245761302461303f565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b6001600160a01b038116811461102b57600080fd5b801515811461102b57600080fd5b63ffffffff8116811461102b57600080fdfe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a2646970667358221220fc57e276852f112951403513d009406b1b67ebbb47d9537d5ec34db201657b1064736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH7 0x2386F2AB5BCA00 PUSH1 0x7 SSTORE PUSH7 0x38D7EA4C68000 PUSH1 0x8 SSTORE PUSH1 0x0 PUSH1 0x9 DUP2 SWAP1 SSTORE PUSH1 0xA DUP2 SWAP1 SSTORE PUSH1 0xB DUP2 SWAP1 SSTORE PUSH1 0xC DUP2 SWAP1 SSTORE PUSH1 0xD DUP2 SWAP1 SSTORE PUSH1 0xE DUP2 SWAP1 SSTORE PUSH1 0xF DUP2 SWAP1 SSTORE PUSH1 0x10 DUP2 SWAP1 SSTORE PUSH1 0x11 DUP2 SWAP1 SSTORE PUSH1 0x12 DUP2 SWAP1 SSTORE PUSH1 0x13 DUP2 SWAP1 SSTORE PUSH1 0x14 DUP2 SWAP1 SSTORE PUSH1 0x15 DUP2 SWAP1 SSTORE PUSH1 0x16 DUP2 SWAP1 SSTORE PUSH1 0x17 DUP2 SWAP1 SSTORE PUSH1 0x18 DUP2 SWAP1 SSTORE PUSH1 0x19 SSTORE PUSH1 0x21 DUP1 SLOAD PUSH2 0xDEAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE PUSH1 0x22 DUP1 SLOAD DUP3 AND DUP4 OR SWAP1 SSTORE PUSH1 0x23 DUP1 SLOAD DUP3 AND DUP4 OR SWAP1 SSTORE PUSH1 0x24 DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x28 DUP1 SLOAD PUSH5 0xFFFFFFFFFF NOT AND PUSH5 0x101010000 OR SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0xC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP1 SWAP2 DUP3 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP3 SWAP1 LOG3 POP PUSH1 0x25 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH20 0x10ED43C718714EB63D5AA57B78B54704E256024E SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH3 0x149 ADDRESS DUP3 PUSH8 0xDE0B6B3A7640000 PUSH3 0x3FA JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xC45A0155 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x183 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x198 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x1BE SWAP2 SWAP1 PUSH3 0x526 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xC9C65396 ADDRESS DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xAD5C4648 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x207 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x21C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x242 SWAP2 SWAP1 PUSH3 0x526 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP2 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x28B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x2A0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x2C6 SWAP2 SWAP1 PUSH3 0x526 JUMP JUMPDEST PUSH1 0x26 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x25 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x0 NOT PUSH1 0x24 DUP4 ADD MSTORE SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x329 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x33E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x364 SWAP2 SWAP1 PUSH3 0x556 JUMP JUMPDEST POP PUSH8 0xDE0B6B3A7640000 PUSH1 0x27 DUP2 SWAP1 SSTORE PUSH1 0x7 DUP2 SWAP1 SSTORE CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x4 DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0xFF NOT SWAP2 DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE ADDRESS DUP6 MSTORE DUP3 DUP6 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SWAP2 OR SWAP1 SSTORE MLOAD SWAP4 DUP5 MSTORE SWAP2 SWAP3 SWAP1 SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH3 0x578 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH3 0x462 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x4C5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0x459 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x538 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x54F JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x568 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH3 0x54F JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x30E8 DUP1 PUSH3 0x588 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x88790A68 GT PUSH2 0x1C6 JUMPI DUP1 PUSH4 0xCAB03471 GT PUSH2 0xF7 JUMPI DUP1 PUSH4 0xE315A6DA GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xF2FDE38B GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xA64 JUMPI DUP1 PUSH4 0xF480FEC2 EQ PUSH2 0xA84 JUMPI DUP1 PUSH4 0xFFB54A99 EQ PUSH2 0xAA4 JUMPI DUP1 PUSH4 0xFFECF516 EQ PUSH2 0xABE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xE315A6DA EQ PUSH2 0xA04 JUMPI DUP1 PUSH4 0xE4BF1BED EQ PUSH2 0xA24 JUMPI DUP1 PUSH4 0xEA2F0B37 EQ PUSH2 0xA44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xD55CB78A GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0xD55CB78A EQ PUSH2 0x973 JUMPI DUP1 PUSH4 0xDB0045EC EQ PUSH2 0x988 JUMPI DUP1 PUSH4 0xDC44B6A0 EQ PUSH2 0x9A8 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x9BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xCAB03471 EQ PUSH2 0x91D JUMPI DUP1 PUSH4 0xCDB3858F EQ PUSH2 0x933 JUMPI DUP1 PUSH4 0xD1633649 EQ PUSH2 0x953 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA850673D GT PUSH2 0x164 JUMPI DUP1 PUSH4 0xC469B6DD GT PUSH2 0x13E JUMPI DUP1 PUSH4 0xC469B6DD EQ PUSH2 0x876 JUMPI DUP1 PUSH4 0xC5D24189 EQ PUSH2 0x88C JUMPI DUP1 PUSH4 0xC8607952 EQ PUSH2 0x8A2 JUMPI DUP1 PUSH4 0xC95457FF EQ PUSH2 0x8B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA850673D EQ PUSH2 0x821 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x841 JUMPI DUP1 PUSH4 0xC3C8CD80 EQ PUSH2 0x861 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9491F94D GT PUSH2 0x1A0 JUMPI DUP1 PUSH4 0x9491F94D EQ PUSH2 0x789 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x79E JUMPI DUP1 PUSH4 0x99A7B9BC EQ PUSH2 0x7CC JUMPI DUP1 PUSH4 0x9D82190F EQ PUSH2 0x7E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x88790A68 EQ PUSH2 0x740 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x756 JUMPI DUP1 PUSH4 0x8E360253 EQ PUSH2 0x774 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x39A53C4E GT PUSH2 0x2A0 JUMPI DUP1 PUSH4 0x6C0A24EB GT PUSH2 0x23E JUMPI DUP1 PUSH4 0x715018A6 GT PUSH2 0x218 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x6B2 JUMPI DUP1 PUSH4 0x729CB3F2 EQ PUSH2 0x6C7 JUMPI DUP1 PUSH4 0x72B2AECC EQ PUSH2 0x6E7 JUMPI DUP1 PUSH4 0x787A08A6 EQ PUSH2 0x6FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6C0A24EB EQ PUSH2 0x651 JUMPI DUP1 PUSH4 0x6FC3EAEC EQ PUSH2 0x667 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x67C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x437823EC GT PUSH2 0x27A JUMPI DUP1 PUSH4 0x437823EC EQ PUSH2 0x5C4 JUMPI DUP1 PUSH4 0x49BD5A5E EQ PUSH2 0x5E4 JUMPI DUP1 PUSH4 0x5FECD926 EQ PUSH2 0x61C JUMPI DUP1 PUSH4 0x6AABFF3F EQ PUSH2 0x63C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x39A53C4E EQ PUSH2 0x555 JUMPI DUP1 PUSH4 0x3BBAC579 EQ PUSH2 0x577 JUMPI DUP1 PUSH4 0x3E0F966D EQ PUSH2 0x5AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x248DD232 GT PUSH2 0x30D JUMPI DUP1 PUSH4 0x29409395 GT PUSH2 0x2E7 JUMPI DUP1 PUSH4 0x29409395 EQ PUSH2 0x4D8 JUMPI DUP1 PUSH4 0x301AD558 EQ PUSH2 0x4F8 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x519 JUMPI DUP1 PUSH4 0x323BE1C5 EQ PUSH2 0x535 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x248DD232 EQ PUSH2 0x48C JUMPI DUP1 PUSH4 0x27A14FC2 EQ PUSH2 0x4A2 JUMPI DUP1 PUSH4 0x2843631D EQ PUSH2 0x4C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x14EB76AC GT PUSH2 0x349 JUMPI DUP1 PUSH4 0x14EB76AC EQ PUSH2 0x40F JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x431 JUMPI DUP1 PUSH4 0x2369BF83 EQ PUSH2 0x44C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x46C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1A6C43B EQ PUSH2 0x37B JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x3A4 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x3DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x376 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x387 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x391 PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x9 DUP2 MSTORE PUSH9 0x4761696E5A696C6C61 PUSH1 0xB8 SHL PUSH1 0x20 DUP3 ADD MSTORE JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x39B SWAP2 SWAP1 PUSH2 0x2E28 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3FF PUSH2 0x3FA CALLDATASIZE PUSH1 0x4 PUSH2 0x2CE0 JUMP JUMPDEST PUSH2 0xADE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x39B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x41B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x42F PUSH2 0x42A CALLDATASIZE PUSH1 0x4 PUSH2 0x2C30 JUMP JUMPDEST PUSH2 0xAF5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x43D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH8 0xDE0B6B3A7640000 PUSH2 0x391 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x458 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x42F PUSH2 0x467 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C30 JUMP JUMPDEST PUSH2 0xB4A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x478 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3FF PUSH2 0x487 CALLDATASIZE PUSH1 0x4 PUSH2 0x2CA0 JUMP JUMPDEST PUSH2 0xB96 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x498 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x391 PUSH1 0x13 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x42F PUSH2 0x4BD CALLDATASIZE PUSH1 0x4 PUSH2 0x2D9A JUMP JUMPDEST PUSH2 0xBFF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x391 PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x42F PUSH2 0x4F3 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C30 JUMP JUMPDEST PUSH2 0xD15 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x504 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x28 SLOAD PUSH2 0x3FF SWAP1 PUSH4 0x1000000 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x525 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x39B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x541 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x28 SLOAD PUSH2 0x3FF SWAP1 PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x561 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x28 SLOAD PUSH2 0x3FF SWAP1 PUSH5 0x100000000 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x583 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3FF PUSH2 0x592 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C30 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x42F PUSH2 0xE61 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x42F PUSH2 0x5DF CALLDATASIZE PUSH1 0x4 PUSH2 0x2C30 JUMP JUMPDEST PUSH2 0xEEF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x26 SLOAD PUSH2 0x604 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x39B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x628 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x42F PUSH2 0x637 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C30 JUMP JUMPDEST PUSH2 0xF3D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x648 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x42F PUSH2 0xF87 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x65D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x391 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x673 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x42F PUSH2 0xFBF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x688 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x391 PUSH2 0x697 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C30 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x42F PUSH2 0x102E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x42F PUSH2 0x6E2 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D27 JUMP JUMPDEST PUSH2 0x10A2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x391 PUSH1 0x19 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x709 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1A SLOAD PUSH2 0x724 SWAP1 PUSH1 0xFF DUP2 AND SWAP1 PUSH2 0x100 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 ISZERO ISZERO DUP4 MSTORE PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH2 0x39B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x74C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x391 PUSH1 0x11 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x762 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x604 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x780 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x42F PUSH2 0x110A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x795 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x391 PUSH2 0x1143 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x5 DUP2 MSTORE PUSH5 0x47494C4C41 PUSH1 0xD8 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x3D2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x42F PUSH2 0x12E2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x801 PUSH2 0x7FC CALLDATASIZE PUSH1 0x4 PUSH2 0x2C30 JUMP JUMPDEST PUSH2 0x131C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0x39B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x82D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x42F PUSH2 0x83C CALLDATASIZE PUSH1 0x4 PUSH2 0x2D9A JUMP JUMPDEST PUSH2 0x13CB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x84D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3FF PUSH2 0x85C CALLDATASIZE PUSH1 0x4 PUSH2 0x2CE0 JUMP JUMPDEST PUSH2 0x13FA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x86D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x42F PUSH2 0x1407 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x882 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x391 PUSH1 0xF SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x898 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x391 PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x391 PUSH1 0x15 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1C SLOAD PUSH1 0x1D SLOAD PUSH1 0x1E SLOAD PUSH1 0x1F SLOAD PUSH2 0x8EE SWAP4 PUSH1 0xFF DUP1 DUP3 AND SWAP5 PUSH2 0x100 SWAP1 SWAP3 DIV PUSH2 0xFFFF AND SWAP4 SWAP2 SWAP3 SWAP2 AND SWAP1 DUP6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP6 ISZERO ISZERO DUP7 MSTORE PUSH2 0xFFFF SWAP1 SWAP5 AND PUSH1 0x20 DUP7 ADD MSTORE SWAP3 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE ISZERO ISZERO PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD PUSH2 0x39B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x929 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x391 PUSH1 0x17 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x93F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x42F PUSH2 0x94E CALLDATASIZE PUSH1 0x4 PUSH2 0x2C30 JUMP JUMPDEST PUSH2 0x1450 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x95F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x42F PUSH2 0x96E CALLDATASIZE PUSH1 0x4 PUSH2 0x2D9A JUMP JUMPDEST PUSH2 0x149C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x97F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x42F PUSH2 0x14DC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x994 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x42F PUSH2 0x9A3 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C30 JUMP JUMPDEST PUSH2 0x1515 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x391 PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x391 PUSH2 0x9D9 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C68 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x42F PUSH2 0xA1F CALLDATASIZE PUSH1 0x4 PUSH2 0x2D9A JUMP JUMPDEST PUSH2 0x1561 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA30 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x42F PUSH2 0xA3F CALLDATASIZE PUSH1 0x4 PUSH2 0x2DF7 JUMP JUMPDEST PUSH2 0x1590 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x42F PUSH2 0xA5F CALLDATASIZE PUSH1 0x4 PUSH2 0x2C30 JUMP JUMPDEST PUSH2 0x170C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x42F PUSH2 0xA7F CALLDATASIZE PUSH1 0x4 PUSH2 0x2C30 JUMP JUMPDEST PUSH2 0x1757 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x42F PUSH2 0xA9F CALLDATASIZE PUSH1 0x4 PUSH2 0x2DF7 JUMP JUMPDEST PUSH2 0x17EF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAB0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x28 SLOAD PUSH2 0x3FF SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xACA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x42F PUSH2 0xAD9 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C30 JUMP JUMPDEST PUSH2 0x195B JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAEB CALLER DUP5 DUP5 PUSH2 0x1A12 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xB28 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB1F SWAP1 PUSH2 0x2EE2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x22 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xB74 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB1F SWAP1 PUSH2 0x2EE2 JUMP JUMPDEST PUSH1 0x21 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBA3 DUP5 DUP5 DUP5 PUSH2 0x1B36 JUMP JUMPDEST PUSH2 0xBF5 DUP5 CALLER PUSH2 0xBF0 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x308B PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x20E5 JUMP JUMPDEST PUSH2 0x1A12 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC29 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB1F SWAP1 PUSH2 0x2EE2 JUMP JUMPDEST PUSH2 0xC3D PUSH8 0xDE0B6B3A7640000 PUSH2 0x3E8 PUSH2 0x211F JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0xC9F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E20302E3125 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x206F6620737570706C79 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB1F JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 GT ISZERO PUSH2 0xD10 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D757374206265206C657373207468616E206F722065717561 PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x6C20746F20746F74616C537570706C79 PUSH1 0x80 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB1F JUMP JUMPDEST PUSH1 0x7 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xD3F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB1F SWAP1 PUSH2 0x2EE2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD95 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDB9 SWAP2 SWAP1 PUSH2 0x2DB2 JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB PUSH2 0xDDC PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE24 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE38 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE5C SWAP2 SWAP1 PUSH2 0x2D0B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xE8B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB1F SWAP1 PUSH2 0x2EE2 JUMP JUMPDEST PUSH1 0x28 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND PUSH2 0xEE3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x7468697320636F6E74726163742063616E6E6F74206265207061757365640000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB1F JUMP JUMPDEST PUSH1 0x28 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xF19 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB1F SWAP1 PUSH2 0x2EE2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xF67 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB1F SWAP1 PUSH2 0x2EE2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xFB1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB1F SWAP1 PUSH2 0x2EE2 JUMP JUMPDEST PUSH1 0x28 DUP1 SLOAD PUSH3 0xFF0000 NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xFE9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB1F SWAP1 PUSH2 0x2EE2 JUMP JUMPDEST SELFBALANCE DUP1 ISZERO PUSH2 0x102B JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 DUP4 ISZERO PUSH2 0x8FC MUL SWAP2 DUP5 SWAP2 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1029 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1058 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB1F SWAP1 PUSH2 0x2EE2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x10CC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB1F SWAP1 PUSH2 0x2EE2 JUMP JUMPDEST PUSH1 0x1A DUP1 SLOAD PUSH1 0xFF NOT AND DUP4 ISZERO ISZERO OR SWAP1 SSTORE PUSH2 0x10E5 DUP2 PUSH1 0x3C PUSH2 0x2FD2 JUMP JUMPDEST PUSH1 0x1A DUP1 SLOAD PUSH4 0xFFFFFFFF SWAP3 SWAP1 SWAP3 AND PUSH2 0x100 MUL PUSH5 0xFFFFFFFF00 NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1134 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB1F SWAP1 PUSH2 0x2EE2 JUMP JUMPDEST PUSH1 0x28 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x26 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x902F1AC PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1196 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x11AA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11CE SWAP2 SWAP1 PUSH2 0x2D54 JUMP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND PUSH1 0x0 EQ DUP1 PUSH2 0x11F2 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP2 AND ISZERO JUMPDEST ISZERO PUSH2 0x1200 JUMPI PUSH1 0x0 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x26 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xDFE1681 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD ADDRESS SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0xDFE1681 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1244 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1258 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x127C SWAP2 SWAP1 PUSH2 0x2C4C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x12B8 JUMPI PUSH2 0x12B3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP1 DUP4 AND SWAP1 PUSH2 0x12AD SWAP1 DUP6 AND PUSH8 0xDE0B6B3A7640000 PUSH2 0x2168 JUMP JUMPDEST SWAP1 PUSH2 0x211F JUMP JUMPDEST PUSH2 0x12DB JUMP JUMPDEST PUSH2 0x12DB PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP1 DUP5 AND SWAP1 PUSH2 0x12AD SWAP1 DUP5 AND PUSH8 0xDE0B6B3A7640000 PUSH2 0x2168 JUMP JUMPDEST SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x130C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB1F SWAP1 PUSH2 0x2EE2 JUMP JUMPDEST PUSH1 0x28 DUP1 SLOAD PUSH5 0xFF00000000 NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1B PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP2 SWAP1 DUP2 SWAP1 DUP2 SWAP1 DUP2 SWAP1 TIMESTAMP LT PUSH2 0x134A JUMPI PUSH1 0x0 PUSH2 0x136D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1B PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x136D SWAP1 TIMESTAMP PUSH2 0x21E7 JUMP JUMPDEST SWAP1 POP PUSH2 0x137C DUP2 PUSH3 0x15180 PUSH2 0x211F JUMP JUMPDEST SWAP5 POP PUSH2 0x138B PUSH3 0x15180 DUP3 PUSH2 0x3015 JUMP JUMPDEST SWAP1 POP PUSH2 0x1399 DUP2 PUSH2 0xE10 PUSH2 0x211F JUMP JUMPDEST SWAP4 POP PUSH2 0x13A7 PUSH2 0xE10 DUP3 PUSH2 0x3015 JUMP JUMPDEST SWAP1 POP PUSH2 0x13B4 DUP2 PUSH1 0x3C PUSH2 0x211F JUMP JUMPDEST SWAP3 POP PUSH2 0x13C1 PUSH1 0x3C DUP3 PUSH2 0x3015 JUMP JUMPDEST SWAP2 POP POP SWAP2 SWAP4 POP SWAP2 SWAP4 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x13F5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB1F SWAP1 PUSH2 0x2EE2 JUMP JUMPDEST PUSH1 0x19 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAEB CALLER DUP5 DUP5 PUSH2 0x1B36 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1431 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB1F SWAP1 PUSH2 0x2EE2 JUMP JUMPDEST ADDRESS PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x102B JUMPI PUSH2 0x102B DUP2 PUSH2 0x2229 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x147A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB1F SWAP1 PUSH2 0x2EE2 JUMP JUMPDEST PUSH1 0x24 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x14C6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB1F SWAP1 PUSH2 0x2EE2 JUMP JUMPDEST TIMESTAMP PUSH1 0x5 SSTORE PUSH1 0x6 SSTORE PUSH1 0x28 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1506 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB1F SWAP1 PUSH2 0x2EE2 JUMP JUMPDEST PUSH1 0x28 DUP1 SLOAD PUSH4 0xFF000000 NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x153F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB1F SWAP1 PUSH2 0x2EE2 JUMP JUMPDEST PUSH1 0x23 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x158B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB1F SWAP1 PUSH2 0x2EE2 JUMP JUMPDEST PUSH1 0x8 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x15BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB1F SWAP1 PUSH2 0x2EE2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15D2 DUP3 PUSH2 0x15CC DUP6 DUP2 DUP10 DUP10 PUSH2 0x23C8 JUMP JUMPDEST SWAP1 PUSH2 0x23C8 JUMP JUMPDEST SWAP1 POP PUSH1 0xFA DUP2 GT ISZERO PUSH2 0x163F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x31 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53756D206F66206275792066656573206D757374206265206C65737320746861 PUSH1 0x44 DUP3 ADD MSTORE PUSH17 0x6E206F7220657175616C20746F20323525 PUSH1 0x78 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB1F JUMP JUMPDEST PUSH1 0x28 SLOAD PUSH5 0x100000000 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1694 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x151A1A5CC8199D5B98DD1A5BDB881A5CC8191A58589B1959 PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB1F JUMP JUMPDEST PUSH1 0xD DUP6 SWAP1 SSTORE PUSH1 0x9 DUP5 SWAP1 SSTORE PUSH1 0xF DUP4 SWAP1 SSTORE PUSH1 0xB DUP3 SWAP1 SSTORE PUSH1 0xE DUP6 SWAP1 SSTORE PUSH1 0xA DUP5 SWAP1 SSTORE PUSH1 0x10 DUP4 SWAP1 SSTORE PUSH1 0xC DUP3 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP7 SWAP1 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x892B2CAA2D791BF7B8D9A49C4DB7A4513FF1AE2E0E068ED217F9D5AB4C1A28F0 SWAP1 PUSH1 0x80 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1736 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB1F SWAP1 PUSH2 0x2EE2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1781 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB1F SWAP1 PUSH2 0x2EE2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x17E6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB1F JUMP JUMPDEST PUSH2 0x102B DUP2 PUSH2 0x2427 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1819 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB1F SWAP1 PUSH2 0x2EE2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x182B DUP3 PUSH2 0x15CC DUP6 DUP2 DUP10 DUP10 PUSH2 0x23C8 JUMP JUMPDEST SWAP1 POP PUSH1 0xFA DUP2 GT ISZERO PUSH2 0x1899 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53756D206F662073656C6C2066656573206D757374206265206C657373207468 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x616E206F7220657175616C20746F20323525 PUSH1 0x70 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB1F JUMP JUMPDEST PUSH1 0x28 SLOAD PUSH5 0x100000000 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x18EE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x151A1A5CC8199D5B98DD1A5BDB881A5CC8191A58589B1959 PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB1F JUMP JUMPDEST PUSH1 0x15 DUP6 SWAP1 SSTORE PUSH1 0x11 DUP5 SWAP1 SSTORE PUSH1 0x17 DUP4 SWAP1 SSTORE PUSH1 0x13 DUP3 SWAP1 SSTORE PUSH1 0x16 DUP6 SWAP1 SSTORE PUSH1 0x12 DUP5 SWAP1 SSTORE PUSH1 0x18 DUP4 SWAP1 SSTORE PUSH1 0x14 DUP3 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP7 SWAP1 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x439932620C72DDDEA29980C098BCA1A482729646D1216B226D723C6D278A30D1 SWAP1 PUSH1 0x80 ADD PUSH2 0x16FD JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1985 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB1F SWAP1 PUSH2 0x2EE2 JUMP JUMPDEST PUSH1 0x28 SLOAD PUSH4 0x1000000 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x19EF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x7468697320636F6E74726163742063616E6E6F7420626C61636B6C6973742061 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6464726573736573 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB1F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1A74 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB1F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1AD5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB1F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1B9A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB1F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1BFC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB1F JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x1C5E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E7366657220616D6F756E74206D757374206265206772656174657220 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x7468616E207A65726F PUSH1 0xB8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB1F JUMP JUMPDEST PUSH1 0x1 PUSH2 0x1C72 PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO DUP1 ISZERO PUSH2 0x1CA1 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1CB6 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ADDRESS EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1CCB JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ADDRESS EQ ISZERO JUMPDEST ISZERO PUSH2 0x208B JUMPI PUSH1 0x28 SLOAD PUSH1 0xFF AND PUSH2 0x1D1A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x54726164696E67206973206E6F7420616374697665 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB1F JUMP JUMPDEST PUSH1 0x26 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP2 AND EQ DUP1 ISZERO PUSH2 0x1D45 JUMPI POP PUSH1 0x25 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1DC6 JUMPI PUSH1 0x6 SLOAD PUSH1 0x5 SLOAD PUSH2 0x1D59 SWAP2 PUSH2 0x23C8 JUMP JUMPDEST TIMESTAMP GT PUSH2 0x1D82 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x1DA8 DUP4 PUSH2 0x15CC DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST GT ISZERO PUSH2 0x1DC6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB1F SWAP1 PUSH2 0x2E7B JUMP JUMPDEST PUSH1 0x28 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x1DEC JUMPI POP PUSH1 0x26 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP2 AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1E05 JUMPI POP PUSH1 0x26 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ JUMPDEST ISZERO PUSH2 0x2016 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x1E4A JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x1E53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1A SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1EF8 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1B PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD TIMESTAMP LT ISZERO PUSH2 0x1EC6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374726F6E672048616E64732050726F746F636F6C2061637469766500000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB1F JUMP JUMPDEST PUSH1 0x1A SLOAD PUSH2 0x1EDE SWAP1 PUSH2 0x100 SWAP1 DIV PUSH4 0xFFFFFFFF AND TIMESTAMP PUSH2 0x2F87 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1B PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMPDEST PUSH1 0x1C SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1F5E JUMPI PUSH1 0x1E SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1F56 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53656C6C732073746F70706564206279204469616D6F6E6420466C6F6F720000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB1F JUMP JUMPDEST PUSH2 0x1F5E PUSH2 0x2477 JUMP JUMPDEST ADDRESS PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x8 SLOAD DUP2 LT PUSH2 0x2014 JUMPI DUP1 ISZERO PUSH2 0x2002 JUMPI PUSH1 0x0 PUSH2 0x1FA2 PUSH1 0x11 SLOAD PUSH2 0x15CC PUSH1 0x13 SLOAD PUSH2 0x15CC PUSH1 0x17 SLOAD PUSH1 0x15 SLOAD PUSH2 0x23C8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST GT ISZERO PUSH2 0x2002 JUMPI PUSH1 0x0 PUSH2 0x1FDD PUSH2 0x1FD0 PUSH1 0x11 SLOAD PUSH2 0x15CC PUSH1 0x13 SLOAD PUSH2 0x15CC PUSH1 0x17 SLOAD PUSH1 0x15 SLOAD PUSH2 0x23C8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH2 0x12AD SWAP1 DUP6 PUSH2 0x2168 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x1FF5 JUMPI PUSH2 0x1FF2 DUP4 DUP4 PUSH2 0x21E7 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0x1FFF DUP3 DUP3 PUSH2 0x2526 JUMP JUMPDEST POP POP JUMPDEST SELFBALANCE DUP1 ISZERO PUSH2 0x2012 JUMPI PUSH2 0x2012 SELFBALANCE PUSH2 0x2599 JUMP JUMPDEST POP JUMPDEST POP JUMPDEST PUSH1 0x26 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP2 AND EQ DUP1 ISZERO SWAP1 PUSH2 0x2042 JUMPI POP PUSH1 0x26 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x208B JUMPI PUSH1 0x7 SLOAD PUSH2 0x206D DUP4 PUSH2 0x15CC DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST GT ISZERO PUSH2 0x208B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB1F SWAP1 PUSH2 0x2E7B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 PUSH2 0x20CA JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x20D3 JUMPI POP PUSH1 0x0 JUMPDEST PUSH2 0x20DF DUP5 DUP5 DUP5 DUP5 PUSH2 0x26D9 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x2109 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB1F SWAP2 SWAP1 PUSH2 0x2E28 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x2116 DUP5 DUP7 PUSH2 0x2FFE JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2161 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x2777 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2177 JUMPI POP PUSH1 0x0 PUSH2 0xAEF JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2183 DUP4 DUP6 PUSH2 0x2FB3 JUMP JUMPDEST SWAP1 POP DUP3 PUSH2 0x2190 DUP6 DUP4 PUSH2 0x2F9F JUMP JUMPDEST EQ PUSH2 0x2161 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206D756C7469706C69636174696F6E206F766572666C6F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x77 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB1F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2161 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x20E5 JUMP JUMPDEST PUSH1 0x28 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE PUSH1 0x0 SWAP3 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP ADDRESS DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x227B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x25 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP1 SWAP4 AND SWAP3 PUSH4 0xAD5C4648 SWAP3 PUSH1 0x4 DUP1 DUP4 ADD SWAP4 SWAP2 SWAP3 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x22CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x22E3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2307 SWAP2 SWAP1 PUSH2 0x2C4C JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x2328 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x25 SLOAD PUSH2 0x234E SWAP2 ADDRESS SWAP2 AND DUP5 PUSH2 0x1A12 JUMP JUMPDEST PUSH1 0x25 SLOAD PUSH1 0x40 MLOAD PUSH4 0x791AC947 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x791AC947 SWAP1 PUSH2 0x2387 SWAP1 DUP6 SWAP1 PUSH1 0x0 SWAP1 DUP7 SWAP1 ADDRESS SWAP1 TIMESTAMP SWAP1 PUSH1 0x4 ADD PUSH2 0x2F17 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x23A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x23B5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x28 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x23D5 DUP4 DUP6 PUSH2 0x2F87 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x2161 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB1F JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2481 PUSH2 0x1143 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x248B JUMPI POP JUMP JUMPDEST PUSH1 0x1D SLOAD DUP2 GT ISZERO PUSH2 0x24A4 JUMPI PUSH1 0x1D SSTORE PUSH1 0x1E DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1C SLOAD PUSH1 0x1D SLOAD PUSH1 0x0 SWAP2 PUSH2 0x24D4 SWAP2 PUSH2 0x3E8 SWAP2 PUSH2 0x12AD SWAP2 PUSH2 0x100 SWAP1 SWAP2 DIV PUSH2 0xFFFF AND SWAP1 PUSH2 0x24CE SWAP1 DUP5 PUSH2 0x2168 JUMP JUMPDEST SWAP1 PUSH2 0x21E7 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 LT ISZERO PUSH2 0x24F2 JUMPI PUSH1 0x1E DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x1D SLOAD PUSH1 0x1F SSTORE JUMPDEST PUSH1 0x1E SLOAD PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x2511 JUMPI POP PUSH1 0x1F SLOAD PUSH2 0x250D SWAP1 PUSH1 0x2 PUSH2 0x2168 JUMP JUMPDEST DUP3 LT ISZERO JUMPDEST ISZERO PUSH2 0x1029 JUMPI POP PUSH1 0x1E DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x1D SSTORE JUMP JUMPDEST PUSH1 0x28 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE PUSH1 0x0 PUSH2 0x2542 DUP4 PUSH1 0x2 PUSH2 0x211F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2550 DUP5 DUP4 PUSH2 0x21E7 JUMP JUMPDEST SWAP1 POP SELFBALANCE PUSH2 0x2565 PUSH2 0x2560 DUP6 DUP6 PUSH2 0x23C8 JUMP JUMPDEST PUSH2 0x2229 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2571 SELFBALANCE DUP4 PUSH2 0x21E7 JUMP JUMPDEST SWAP1 POP DUP3 ISZERO PUSH2 0x23B5 JUMPI PUSH2 0x23B5 DUP4 PUSH2 0x2594 PUSH2 0x258A DUP9 DUP9 PUSH2 0x23C8 JUMP JUMPDEST PUSH2 0x12AD DUP6 DUP10 PUSH2 0x2168 JUMP JUMPDEST PUSH2 0x27A5 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25B8 PUSH1 0x17 SLOAD PUSH2 0x15CC PUSH1 0x13 SLOAD PUSH1 0x15 SLOAD PUSH2 0x23C8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x1029 JUMPI PUSH1 0x0 PUSH2 0x25DB DUP3 PUSH2 0x12AD PUSH1 0x15 SLOAD DUP7 PUSH2 0x2168 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x25F8 DUP4 PUSH2 0x12AD PUSH1 0x17 SLOAD DUP8 PUSH2 0x2168 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x260A DUP3 PUSH2 0x24CE DUP8 DUP7 PUSH2 0x21E7 JUMP JUMPDEST SWAP1 POP DUP3 ISZERO PUSH2 0x264E JUMPI PUSH1 0x21 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP5 ISZERO PUSH2 0x8FC MUL SWAP1 DUP6 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x264C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST DUP2 ISZERO PUSH2 0x2690 JUMPI PUSH1 0x22 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP4 ISZERO PUSH2 0x8FC MUL SWAP1 DUP5 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x268E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST DUP1 ISZERO PUSH2 0x26D2 JUMPI PUSH1 0x23 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x26D0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP1 PUSH2 0x2737 JUMPI PUSH2 0x2737 PUSH1 0xD DUP1 SLOAD PUSH1 0xE SSTORE PUSH1 0x9 DUP1 SLOAD PUSH1 0xA SSTORE PUSH1 0xF DUP1 SLOAD PUSH1 0x10 SSTORE PUSH1 0xB DUP1 SLOAD PUSH1 0xC SSTORE PUSH1 0x0 SWAP4 DUP5 SWAP1 SSTORE SWAP2 DUP4 SWAP1 SSTORE DUP3 SWAP1 SSTORE DUP2 SWAP1 SSTORE PUSH1 0x15 DUP1 SLOAD PUSH1 0x16 SSTORE PUSH1 0x11 DUP1 SLOAD PUSH1 0x12 SSTORE PUSH1 0x17 DUP1 SLOAD PUSH1 0x18 SSTORE PUSH1 0x13 DUP1 SLOAD PUSH1 0x14 SSTORE SWAP3 DUP5 SWAP1 SSTORE SWAP1 DUP4 SWAP1 SSTORE DUP3 SWAP1 SSTORE SSTORE JUMP JUMPDEST PUSH2 0x2742 DUP5 DUP5 DUP5 PUSH2 0x2862 JUMP JUMPDEST PUSH2 0x20DF PUSH1 0xE SLOAD PUSH1 0xD SSTORE PUSH1 0xA SLOAD PUSH1 0x9 SSTORE PUSH1 0x10 SLOAD PUSH1 0xF SSTORE PUSH1 0xC SLOAD PUSH1 0xB SSTORE PUSH1 0x16 SLOAD PUSH1 0x15 SSTORE PUSH1 0x12 SLOAD PUSH1 0x11 SSTORE PUSH1 0x18 SLOAD PUSH1 0x17 SSTORE PUSH1 0x14 SLOAD PUSH1 0x13 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x2798 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB1F SWAP2 SWAP1 PUSH2 0x2E28 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x2116 DUP5 DUP7 PUSH2 0x2F9F JUMP JUMPDEST PUSH1 0x25 SLOAD PUSH2 0x27BD SWAP1 ADDRESS SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH2 0x1A12 JUMP JUMPDEST PUSH1 0x25 SLOAD PUSH1 0x24 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xF305D719 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP2 DUP3 ADD DUP6 SWAP1 MSTORE PUSH1 0x0 PUSH1 0x44 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x64 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x84 DUP4 ADD MSTORE TIMESTAMP PUSH1 0xA4 DUP4 ADD MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xF305D719 SWAP1 DUP4 SWAP1 PUSH1 0xC4 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2829 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x283D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x26D2 SWAP2 SWAP1 PUSH2 0x2DCA JUMP JUMPDEST PUSH2 0x2894 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x26 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP2 AND EQ DUP1 ISZERO PUSH2 0x28BF JUMPI POP PUSH1 0x25 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x2933 JUMPI PUSH2 0x28DF PUSH2 0x3E8 PUSH2 0x12AD PUSH1 0xD SLOAD DUP6 PUSH2 0x2168 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x9 SLOAD PUSH2 0x28FA SWAP1 PUSH2 0x3E8 SWAP1 PUSH2 0x12AD SWAP1 DUP6 SWAP1 PUSH2 0x2168 JUMP JUMPDEST DUP2 MSTORE PUSH1 0xF SLOAD PUSH2 0x2912 SWAP1 PUSH2 0x3E8 SWAP1 PUSH2 0x12AD SWAP1 DUP6 SWAP1 PUSH2 0x2168 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0xB SLOAD PUSH2 0x292D SWAP1 PUSH2 0x3E8 SWAP1 PUSH2 0x12AD SWAP1 DUP6 SWAP1 PUSH2 0x2168 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD MSTORE JUMPDEST PUSH1 0x26 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP2 AND EQ DUP1 ISZERO SWAP1 PUSH2 0x295E JUMPI POP PUSH1 0x26 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ JUMPDEST ISZERO PUSH2 0x29D2 JUMPI PUSH2 0x297E PUSH2 0x3E8 PUSH2 0x12AD PUSH1 0x15 SLOAD DUP6 PUSH2 0x2168 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x11 SLOAD PUSH2 0x2999 SWAP1 PUSH2 0x3E8 SWAP1 PUSH2 0x12AD SWAP1 DUP6 SWAP1 PUSH2 0x2168 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x17 SLOAD PUSH2 0x29B1 SWAP1 PUSH2 0x3E8 SWAP1 PUSH2 0x12AD SWAP1 DUP6 SWAP1 PUSH2 0x2168 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x13 SLOAD PUSH2 0x29CC SWAP1 PUSH2 0x3E8 SWAP1 PUSH2 0x12AD SWAP1 DUP6 SWAP1 PUSH2 0x2168 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD MSTORE JUMPDEST PUSH1 0x26 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP2 AND EQ DUP1 ISZERO SWAP1 PUSH2 0x29FE JUMPI POP PUSH1 0x26 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x2AB8 JUMPI PUSH2 0x2A2F PUSH1 0x64 PUSH2 0x12AD PUSH1 0x19 SLOAD PUSH2 0x2A29 PUSH2 0x3E8 PUSH2 0x12AD PUSH1 0x15 SLOAD DUP10 PUSH2 0x2168 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0x2168 JUMP JUMPDEST DUP2 PUSH1 0x20 ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x2A5E PUSH1 0x64 PUSH2 0x12AD PUSH1 0x19 SLOAD PUSH2 0x2A29 PUSH2 0x3E8 PUSH2 0x12AD PUSH1 0x11 SLOAD DUP10 PUSH2 0x2168 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 MSTORE PUSH1 0x19 SLOAD PUSH1 0x17 SLOAD PUSH2 0x2A83 SWAP2 PUSH1 0x64 SWAP2 PUSH2 0x12AD SWAP2 SWAP1 PUSH2 0x2A29 SWAP1 PUSH2 0x3E8 SWAP1 DUP5 SWAP1 DUP10 SWAP1 PUSH2 0x2168 JUMP JUMPDEST DUP2 PUSH1 0x40 ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x2AB2 PUSH1 0x64 PUSH2 0x12AD PUSH1 0x19 SLOAD PUSH2 0x2A29 PUSH2 0x3E8 PUSH2 0x12AD PUSH1 0x13 SLOAD DUP10 PUSH2 0x2168 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x60 DUP3 ADD MSTORE JUMPDEST PUSH2 0x2AE7 DUP2 PUSH1 0x60 ADD MLOAD PUSH2 0x24CE DUP4 PUSH1 0x40 ADD MLOAD PUSH2 0x24CE DUP6 PUSH1 0x0 ADD MLOAD PUSH2 0x24CE DUP8 PUSH1 0x20 ADD MLOAD DUP10 PUSH2 0x21E7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x2B0F SWAP1 DUP4 PUSH2 0x21E7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x80 DUP5 ADD MLOAD SWAP2 DUP7 AND DUP2 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD PUSH2 0x2B45 SWAP2 PUSH2 0x23C8 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x2BB2 PUSH2 0x2B9C DUP3 PUSH1 0x60 ADD MLOAD PUSH2 0x15CC DUP5 PUSH1 0x40 ADD MLOAD PUSH2 0x15CC DUP7 PUSH1 0x0 ADD MLOAD DUP8 PUSH1 0x20 ADD MLOAD PUSH2 0x23C8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST ADDRESS PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0x23C8 JUMP JUMPDEST ADDRESS PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x80 DUP4 ADD MLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP3 SWAP1 DUP8 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2C2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2C41 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2161 DUP2 PUSH2 0x3055 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2C5D JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x2161 DUP2 PUSH2 0x3055 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2C7A JUMPI DUP1 DUP2 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x2C85 DUP2 PUSH2 0x3055 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x2C95 DUP2 PUSH2 0x3055 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2CB4 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x2CBF DUP2 PUSH2 0x3055 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x2CCF DUP2 PUSH2 0x3055 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2CF2 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x2CFD DUP2 PUSH2 0x3055 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2D1C JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x2161 DUP2 PUSH2 0x306A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2D39 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x2D44 DUP2 PUSH2 0x306A JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x2C95 DUP2 PUSH2 0x3078 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2D68 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x2D71 DUP5 PUSH2 0x2C14 JUMP JUMPDEST SWAP3 POP PUSH2 0x2D7F PUSH1 0x20 DUP6 ADD PUSH2 0x2C14 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD MLOAD PUSH2 0x2D8F DUP2 PUSH2 0x3078 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2DAB JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2DC3 JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2DDE JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 MLOAD SWAP3 POP PUSH1 0x20 DUP5 ADD MLOAD SWAP2 POP PUSH1 0x40 DUP5 ADD MLOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2E0C JUMPI DUP1 DUP2 REVERT JUMPDEST POP POP DUP3 CALLDATALOAD SWAP5 PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP4 PUSH1 0x60 ADD CALLDATALOAD SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE DUP3 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2E54 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x2E38 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x2E65 JUMPI DUP4 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x41 SWAP1 DUP3 ADD MSTORE PUSH32 0x77616C6C65742062616C616E6365206166746572207472616E73666572206D75 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x7374206265206C657373207468616E206D61782077616C6C657420616D6F756E PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0xFA SHL PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD DUP8 DUP4 MSTORE PUSH1 0x20 DUP8 DUP2 DUP6 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP6 ADD MSTORE DUP2 DUP8 MLOAD DUP1 DUP5 MSTORE PUSH1 0xC0 DUP7 ADD SWAP2 POP DUP3 DUP10 ADD SWAP4 POP DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2F66 JUMPI DUP5 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP4 DUP4 ADD SWAP4 SWAP2 DUP4 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x2F41 JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 SWAP1 SWAP7 AND PUSH1 0x60 DUP6 ADD MSTORE POP POP POP PUSH1 0x80 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x2F9A JUMPI PUSH2 0x2F9A PUSH2 0x3029 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2FAE JUMPI PUSH2 0x2FAE PUSH2 0x303F JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x2FCD JUMPI PUSH2 0x2FCD PUSH2 0x3029 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP1 DUP4 AND DUP2 DUP6 AND DUP2 DUP4 DIV DUP2 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x2FF5 JUMPI PUSH2 0x2FF5 PUSH2 0x3029 JUMP JUMPDEST MUL SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x3010 JUMPI PUSH2 0x3010 PUSH2 0x3029 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x3024 JUMPI PUSH2 0x3024 PUSH2 0x303F JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x102B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x102B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x102B JUMPI PUSH1 0x0 DUP1 REVERT INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E6365A2646970667358221220 0xFC JUMPI 0xE2 PUSH23 0x852F112951403513D009406B1B67EBBB47D9537D5EC34D 0xB2 ADD PUSH6 0x7B1064736F6C PUSH4 0x43000804 STOP CALLER ",
							"sourceMap": "8181:21161:0:-:0;;;8780:16;8746:50;;8835:15;8802:48;;-1:-1:-1;8912:35:0;;;;8972:59;;;;9037:35;;;;9097:59;;;;9162:35;;;;9222:59;;;;9287:30;;;;9342:49;;;;9415:36;;;;9476:61;;;;9543:36;;;;9604:61;;;;9671:36;;;;9732:61;;;;9799:31;;;;9855:51;;;;9912:44;;10568:95;;;10620:42;-1:-1:-1;;;;;;10568:95:0;;;;;;;;10669:90;;;;;;;;;10765:95;;;;;;;;;10866:90;;;;;;;;;;;11079:31;;;-1:-1:-1;;11219:31:0;;;;;11656:776;;;;;;;;;-1:-1:-1;2823:17:0;2865:18;;-1:-1:-1;;;;;;2865:18:0;818:10;2865:18;;;;;2898:43;;818:10;;;;2898:43;;2823:17;;2898:43;-1:-1:-1;11790:15:0;:34;;-1:-1:-1;;;;;;11790:34:0;11737:42;11790:34;;;;;;11834:58;11851:4;11737:42;8637:18;11834:8;:58::i;:::-;11936:16;-1:-1:-1;;;;;11936:24:0;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;11918:56:0;;11983:4;11990:16;-1:-1:-1;;;;;11990:21:0;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11918:96;;-1:-1:-1;;;;;;11918:96:0;;;;;;;-1:-1:-1;;;;;861:15:1;;;11918:96:0;;;843:34:1;913:15;;893:18;;;886:43;778:18;;11918:96:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11902:13;:112;;-1:-1:-1;;;;;;11902:112:0;-1:-1:-1;;;;;11902:112:0;;;;;;;;;12062:15;;12024:73;;-1:-1:-1;;;12024:73:0;;12062:15;;12024:73;;;1114:51:1;-1:-1:-1;;1181:18:1;;;1174:34;11902:112:0;12024:29;;1087:18:1;;12024:73:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;8637:18:0;12108:12;:22;;;12195:16;:26;;;818:10;-1:-1:-1;12240:23:0;;;:9;-1:-1:-1;12240:23:0;;;;;;;:33;;;3018:6;;-1:-1:-1;;;;;3018:6:0;12283:27;;:18;:27;;;;;:34;;12313:4;-1:-1:-1;;12283:34:0;;;;;;;;12354:4;12327:33;;;;;:40;;;;;;;;;;12382:43;2173:25:1;;;818:10:0;;-1:-1:-1;;12382:43:0;;2146:18:1;12382:43:0;;;;;;;11656:776;8181:21161;;15040:330;-1:-1:-1;;;;;15132:19:0;;15124:68;;;;-1:-1:-1;;;15124:68:0;;1824:2:1;15124:68:0;;;1806:21:1;1863:2;1843:18;;;1836:30;1902:34;1882:18;;;1875:62;-1:-1:-1;;;1953:18:1;;;1946:34;1997:19;;15124:68:0;;;;;;;;;-1:-1:-1;;;;;15210:21:0;;15202:68;;;;-1:-1:-1;;;15202:68:0;;1421:2:1;15202:68:0;;;1403:21:1;1460:2;1440:18;;;1433:30;1499:34;1479:18;;;1472:62;-1:-1:-1;;;1550:18:1;;;1543:32;1592:19;;15202:68:0;1393:224:1;15202:68:0;-1:-1:-1;;;;;15280:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;15331:32;;2173:25:1;;;15331:32:0;;2146:18:1;15331:32:0;;;;;;;15040:330;;;:::o;14:310:1:-;84:6;137:2;125:9;116:7;112:23;108:32;105:2;;;158:6;150;143:22;105:2;189:16;;-1:-1:-1;;;;;234:31:1;;224:42;;214:2;;285:6;277;270:22;214:2;313:5;95:229;-1:-1:-1;;;95:229:1:o;329:297::-;396:6;449:2;437:9;428:7;424:23;420:32;417:2;;;470:6;462;455:22;417:2;507:9;501:16;560:5;553:13;546:21;539:5;536:32;526:2;;587:6;579;572:22;2128:76;8181:21161:0;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:18323:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "74:128:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "84:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "99:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "93:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "93:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "84:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "180:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "189:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "192:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "182:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "182:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "182:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "128:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "139:5:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "146:30:1",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "135:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "135:42:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "125:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "125:53:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "118:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "118:61:1"
															},
															"nodeType": "YulIf",
															"src": "115:2:1"
														}
													]
												},
												"name": "abi_decode_uint112_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "53:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:1",
														"type": ""
													}
												],
												"src": "14:188:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "277:187:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "323:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "332:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "340:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "325:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "325:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "325:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "298:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "307:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "294:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "294:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "319:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "290:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "290:32:1"
															},
															"nodeType": "YulIf",
															"src": "287:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "358:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "384:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "371:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "371:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "362:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "428:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "403:24:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "403:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "403:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "443:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "453:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "443:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "243:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "254:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "266:6:1",
														"type": ""
													}
												],
												"src": "207:257:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "550:180:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "596:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "605:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "613:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "598:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "598:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "598:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "571:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "580:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "567:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "567:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "592:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "563:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "563:32:1"
															},
															"nodeType": "YulIf",
															"src": "560:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "631:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "650:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "644:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "644:16:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "635:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "694:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "669:24:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "669:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "669:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "709:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "719:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "709:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "516:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "527:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "539:6:1",
														"type": ""
													}
												],
												"src": "469:261:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "813:187:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "859:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "868:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "876:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "861:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "861:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "861:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "834:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "843:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "830:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "830:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "855:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "826:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "826:32:1"
															},
															"nodeType": "YulIf",
															"src": "823:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "894:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "920:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "907:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "907:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "898:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "964:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "939:24:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "939:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "939:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "979:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "989:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "979:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "779:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "790:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "802:6:1",
														"type": ""
													}
												],
												"src": "735:265:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1092:311:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1138:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "1147:6:1"
																				},
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "1155:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1140:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1140:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1140:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1113:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1122:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1109:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1109:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1105:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1105:32:1"
															},
															"nodeType": "YulIf",
															"src": "1102:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1173:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1199:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1186:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1186:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1177:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1243:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "1218:24:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1218:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1218:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1258:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1268:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1258:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1282:47:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1314:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1325:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1310:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1310:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1297:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1297:32:1"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "1286:7:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "1363:7:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "1338:24:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1338:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1338:33:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1380:17:1",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "1390:7:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1380:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1050:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1061:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1073:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1081:6:1",
														"type": ""
													}
												],
												"src": "1005:398:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1512:362:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1558:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value2",
																					"nodeType": "YulIdentifier",
																					"src": "1567:6:1"
																				},
																				{
																					"name": "value2",
																					"nodeType": "YulIdentifier",
																					"src": "1575:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1560:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1560:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1560:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1533:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1542:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1529:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1529:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1554:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1525:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1525:32:1"
															},
															"nodeType": "YulIf",
															"src": "1522:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1593:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1619:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1606:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1606:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1597:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1663:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "1638:24:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1638:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1638:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1678:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1688:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1678:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1702:47:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1734:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1745:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1730:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1730:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1717:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1717:32:1"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "1706:7:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "1783:7:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "1758:24:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1758:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1758:33:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1800:17:1",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "1810:7:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1800:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1826:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1853:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1864:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1849:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1849:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1836:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1836:32:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1826:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1462:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1473:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1485:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1493:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1501:6:1",
														"type": ""
													}
												],
												"src": "1408:466:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1966:238:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2012:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2021:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2029:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2014:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2014:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2014:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1987:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1996:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1983:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1983:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2008:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1979:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1979:32:1"
															},
															"nodeType": "YulIf",
															"src": "1976:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2047:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2073:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2060:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2060:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2051:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2117:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "2092:24:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2092:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2092:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2132:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2142:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2132:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2156:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2183:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2194:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2179:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2179:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2166:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2166:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2156:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1924:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1935:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1947:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1955:6:1",
														"type": ""
													}
												],
												"src": "1879:325:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2287:177:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2333:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2342:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2350:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2335:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2335:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2335:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2308:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2317:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2304:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2304:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2329:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2300:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2300:32:1"
															},
															"nodeType": "YulIf",
															"src": "2297:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2368:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2387:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2381:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2381:16:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2372:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2428:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bool",
																	"nodeType": "YulIdentifier",
																	"src": "2406:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2406:28:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2406:28:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2443:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2453:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2443:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2253:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2264:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2276:6:1",
														"type": ""
													}
												],
												"src": "2209:255:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2552:307:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2598:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2607:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2615:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2600:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2600:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2600:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2573:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2582:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2569:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2569:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2594:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2565:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2565:32:1"
															},
															"nodeType": "YulIf",
															"src": "2562:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2633:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2659:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2646:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2646:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2637:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2700:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bool",
																	"nodeType": "YulIdentifier",
																	"src": "2678:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2678:28:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2678:28:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2715:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2725:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2715:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2739:47:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2771:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2782:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2767:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2767:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2754:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2754:32:1"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "2743:7:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "2819:7:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_uint32",
																	"nodeType": "YulIdentifier",
																	"src": "2795:23:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2795:32:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2795:32:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2836:17:1",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "2846:7:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2836:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_boolt_uint32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2510:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2521:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2533:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2541:6:1",
														"type": ""
													}
												],
												"src": "2469:390:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2978:315:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3024:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "3033:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "3041:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3026:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3026:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3026:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2999:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3008:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2995:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2995:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3020:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2991:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2991:32:1"
															},
															"nodeType": "YulIf",
															"src": "2988:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3059:50:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3099:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint112_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "3069:29:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3069:40:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3059:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3118:59:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3162:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3173:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3158:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3158:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint112_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "3128:29:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3128:49:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3118:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3186:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3209:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3220:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3205:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3205:18:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3199:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3199:25:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3190:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3257:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_uint32",
																	"nodeType": "YulIdentifier",
																	"src": "3233:23:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3233:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3233:30:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3272:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3282:5:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "3272:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint112t_uint112t_uint32_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2928:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2939:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2951:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2959:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2967:6:1",
														"type": ""
													}
												],
												"src": "2864:429:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3368:120:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3414:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "3423:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "3431:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3416:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3416:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3416:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3389:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3398:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3385:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3385:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3410:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3381:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3381:32:1"
															},
															"nodeType": "YulIf",
															"src": "3378:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3449:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3472:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3459:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3459:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3449:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3334:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3345:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3357:6:1",
														"type": ""
													}
												],
												"src": "3298:190:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3574:113:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3620:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "3629:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "3637:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3622:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3622:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3622:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3595:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3604:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3591:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3591:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3616:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3587:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3587:32:1"
															},
															"nodeType": "YulIf",
															"src": "3584:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3655:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3671:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3665:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3665:16:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3655:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3540:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3551:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3563:6:1",
														"type": ""
													}
												],
												"src": "3493:194:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3807:201:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3853:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "3862:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "3870:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3855:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3855:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3855:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3828:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3837:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3824:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3824:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3849:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3820:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3820:32:1"
															},
															"nodeType": "YulIf",
															"src": "3817:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3888:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3904:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3898:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3898:16:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3888:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3923:35:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3943:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3954:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3939:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3939:18:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3933:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3933:25:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3923:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3967:35:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3987:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3998:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3983:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3983:18:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3977:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3977:25:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "3967:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3757:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3768:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3780:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3788:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3796:6:1",
														"type": ""
													}
												],
												"src": "3692:316:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4134:274:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4181:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value3",
																					"nodeType": "YulIdentifier",
																					"src": "4190:6:1"
																				},
																				{
																					"name": "value3",
																					"nodeType": "YulIdentifier",
																					"src": "4198:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4183:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4183:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4183:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4155:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4164:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4151:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4151:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4176:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4147:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4147:33:1"
															},
															"nodeType": "YulIf",
															"src": "4144:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4216:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4239:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4226:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4226:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4216:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4258:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4285:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4296:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4281:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4281:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4268:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4268:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4258:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4309:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4336:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4347:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4332:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4332:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4319:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4319:32:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "4309:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4360:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4387:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4398:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4383:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4383:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4370:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4370:32:1"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "4360:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4076:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4087:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4099:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4107:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4115:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "4123:6:1",
														"type": ""
													}
												],
												"src": "4013:395:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4514:102:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4524:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4536:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4547:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4532:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4532:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4524:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4566:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4581:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4597:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4602:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "4593:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4593:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4606:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "4589:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4589:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4577:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4577:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4559:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4559:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4559:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4483:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4494:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4505:4:1",
														"type": ""
													}
												],
												"src": "4413:203:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4750:145:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4760:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4772:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4783:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4768:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4768:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4760:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4802:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4817:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4833:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4838:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "4829:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4829:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4842:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "4825:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4825:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4813:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4813:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4795:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4795:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4795:51:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4866:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4877:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4862:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4862:18:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "4882:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4855:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4855:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4855:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4711:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4722:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4730:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4741:4:1",
														"type": ""
													}
												],
												"src": "4621:274:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5165:350:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5175:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5187:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5198:3:1",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5183:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5183:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5175:4:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5211:29:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5229:3:1",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5234:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "5225:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5225:11:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5238:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "5221:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5221:19:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "5215:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5256:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5271:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "5279:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5267:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5267:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5249:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5249:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5249:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5303:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5314:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5299:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5299:18:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5319:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5292:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5292:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5292:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5346:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5357:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5342:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5342:18:1"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "5362:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5335:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5335:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5335:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5389:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5400:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5385:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5385:18:1"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "5405:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5378:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5378:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5378:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5432:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5443:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5428:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5428:19:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value4",
																				"nodeType": "YulIdentifier",
																				"src": "5453:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "5461:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5449:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5449:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5421:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5421:44:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5421:44:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5485:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5496:3:1",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5481:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5481:19:1"
																	},
																	{
																		"name": "value5",
																		"nodeType": "YulIdentifier",
																		"src": "5502:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5474:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5474:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5474:35:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_rational_0_by_1_t_rational_0_by_1_t_address_payable_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5094:9:1",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "5105:6:1",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "5113:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "5121:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5129:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5137:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5145:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5156:4:1",
														"type": ""
													}
												],
												"src": "4900:615:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5615:92:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5625:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5637:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5648:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5633:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5633:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5625:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5667:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "5692:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "5685:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5685:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "5678:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5678:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5660:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5660:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5660:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5584:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5595:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5606:4:1",
														"type": ""
													}
												],
												"src": "5520:187:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5911:295:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5921:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5933:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5944:3:1",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5929:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5929:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5921:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5964:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "5989:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "5982:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5982:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "5975:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5975:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5957:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5957:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5957:41:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6018:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6029:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6014:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6014:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "6038:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6046:6:1",
																				"type": "",
																				"value": "0xffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6034:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6034:19:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6007:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6007:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6007:47:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6074:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6085:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6070:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6070:18:1"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "6090:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6063:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6063:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6063:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6117:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6128:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6113:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6113:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value3",
																						"nodeType": "YulIdentifier",
																						"src": "6147:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "6140:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6140:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "6133:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6133:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6106:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6106:50:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6106:50:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6176:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6187:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6172:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6172:19:1"
																	},
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "6193:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6165:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6165:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6165:35:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool_t_uint16_t_uint256_t_bool_t_uint256__to_t_bool_t_uint16_t_uint256_t_bool_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5848:9:1",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "5859:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "5867:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5875:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5883:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5891:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5902:4:1",
														"type": ""
													}
												],
												"src": "5712:494:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6332:152:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6342:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6354:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6365:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6350:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6350:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6342:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6384:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "6409:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "6402:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6402:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "6395:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6395:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6377:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6377:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6377:41:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6438:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6449:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6434:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6434:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "6458:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6466:10:1",
																				"type": "",
																				"value": "0xffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6454:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6454:23:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6427:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6427:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6427:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool_t_uint32__to_t_bool_t_uint32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6293:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6304:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6312:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6323:4:1",
														"type": ""
													}
												],
												"src": "6211:273:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6610:482:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6620:12:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6630:2:1",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "6624:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6648:9:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6659:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6641:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6641:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6641:21:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6671:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6691:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6685:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6685:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "6675:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6718:9:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "6729:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6714:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6714:18:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6734:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6707:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6707:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6707:34:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6750:13:1",
															"value": {
																"name": "tail",
																"nodeType": "YulIdentifier",
																"src": "6759:4:1"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "6754:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6822:90:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "6851:9:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "6862:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "6847:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6847:17:1"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "6866:2:1",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "6843:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6843:26:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "6885:6:1"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "6893:1:1"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "6881:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "6881:14:1"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "6897:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "6877:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6877:23:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "6871:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6871:30:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6836:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6836:66:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6836:66:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "6783:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6786:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "6780:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6780:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "6794:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6796:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "6805:1:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "6808:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6801:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6801:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "6796:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "6776:3:1",
																"statements": []
															},
															"src": "6772:140:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6946:69:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "6975:9:1"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "6986:6:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "6971:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6971:22:1"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "6995:2:1",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "6967:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6967:31:1"
																				},
																				{
																					"name": "tail",
																					"nodeType": "YulIdentifier",
																					"src": "7000:4:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6960:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6960:45:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6960:45:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "6927:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6930:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6924:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6924:13:1"
															},
															"nodeType": "YulIf",
															"src": "6921:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7024:62:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7040:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "7059:6:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7067:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "7055:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7055:15:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7076:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "7072:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7072:7:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "7051:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7051:29:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7036:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7036:45:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7083:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7032:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7032:54:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7024:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6579:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6590:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6601:4:1",
														"type": ""
													}
												],
												"src": "6489:603:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7271:180:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7288:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7299:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7281:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7281:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7281:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7322:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7333:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7318:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7318:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7338:2:1",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7311:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7311:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7311:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7361:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7372:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7357:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7357:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7377:32:1",
																		"type": "",
																		"value": "this contract cannot be paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7350:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7350:60:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7350:60:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7419:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7431:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7442:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7427:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7427:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7419:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_046a8fc234c98369d46f45f5bed63e994dab3910bdaebfe1ca0cd49f568245a6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7248:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7262:4:1",
														"type": ""
													}
												],
												"src": "7097:354:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7630:225:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7647:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7658:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7640:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7640:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7640:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7681:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7692:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7677:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7677:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7697:2:1",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7670:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7670:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7670:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7720:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7731:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7716:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7716:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7736:34:1",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7709:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7709:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7709:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7791:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7802:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7787:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7787:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7807:5:1",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7780:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7780:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7780:33:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7822:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7834:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7845:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7830:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7830:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7822:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7607:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7621:4:1",
														"type": ""
													}
												],
												"src": "7456:399:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8034:239:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8051:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8062:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8044:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8044:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8044:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8085:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8096:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8081:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8081:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8101:2:1",
																		"type": "",
																		"value": "49"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8074:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8074:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8074:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8124:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8135:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8120:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8120:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8140:34:1",
																		"type": "",
																		"value": "Sum of buy fees must be less tha"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8113:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8113:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8113:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8195:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8206:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8191:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8191:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8211:19:1",
																		"type": "",
																		"value": "n or equal to 25%"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8184:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8184:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8184:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8240:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8252:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8263:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8248:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8248:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8240:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1755f62c229a290ad9b7faac2959e1b3eb8f692fba0f163aae0b9540e4f5fdce__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8011:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8025:4:1",
														"type": ""
													}
												],
												"src": "7860:413:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8452:171:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8469:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8480:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8462:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8462:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8462:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8503:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8514:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8499:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8499:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8519:2:1",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8492:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8492:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8492:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8542:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8553:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8538:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8538:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8558:23:1",
																		"type": "",
																		"value": "Trading is not active"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8531:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8531:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8531:51:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8591:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8603:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8614:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8599:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8599:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8591:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1e00c61f0a7b721724fe214bc791e509089379e5d75afe66b9a59ad6bee5002b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8429:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8443:4:1",
														"type": ""
													}
												],
												"src": "8278:345:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8802:228:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8819:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8830:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8812:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8812:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8812:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8853:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8864:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8849:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8849:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8869:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8842:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8842:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8842:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8892:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8903:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8888:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8888:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8908:34:1",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8881:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8881:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8881:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8963:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8974:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8959:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8959:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8979:8:1",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8952:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8952:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8952:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8997:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9009:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9020:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9005:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9005:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8997:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8779:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8793:4:1",
														"type": ""
													}
												],
												"src": "8628:402:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9209:224:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9226:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9237:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9219:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9219:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9219:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9260:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9271:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9256:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9256:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9276:2:1",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9249:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9249:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9249:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9299:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9310:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9295:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9295:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9315:34:1",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9288:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9288:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9288:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9370:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9381:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9366:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9366:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9386:4:1",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9359:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9359:32:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9359:32:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9400:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9412:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9423:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9408:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9408:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9400:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9186:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9200:4:1",
														"type": ""
													}
												],
												"src": "9035:398:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9612:178:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9629:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9640:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9622:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9622:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9622:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9663:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9674:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9659:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9659:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9679:2:1",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9652:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9652:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9652:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9702:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9713:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9698:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9698:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9718:30:1",
																		"type": "",
																		"value": "Strong Hands Protocol active"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9691:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9691:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9691:58:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9758:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9770:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9781:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9766:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9766:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9758:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_268446f78394810523a9d9ab5dfb456a808e6d969331d3363f26d133e00f8a00__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9589:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9603:4:1",
														"type": ""
													}
												],
												"src": "9438:352:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9969:177:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9986:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9997:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9979:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9979:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9979:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10020:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10031:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10016:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10016:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10036:2:1",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10009:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10009:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10009:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10059:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10070:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10055:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10055:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10075:29:1",
																		"type": "",
																		"value": "SafeMath: addition overflow"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10048:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10048:57:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10048:57:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10114:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10126:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10137:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10122:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10122:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10114:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9946:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9960:4:1",
														"type": ""
													}
												],
												"src": "9795:351:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10325:180:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10342:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10353:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10335:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10335:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10335:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10376:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10387:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10372:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10372:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10392:2:1",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10365:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10365:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10365:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10415:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10426:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10411:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10411:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10431:32:1",
																		"type": "",
																		"value": "Sells stopped by Diamond Floor"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10404:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10404:60:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10404:60:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10473:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10485:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10496:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10481:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10481:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10473:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_30dd4f997a6ca09c24570e16af51c4dd5e70cd227c7036b9ebf2853f38eba550__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10302:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10316:4:1",
														"type": ""
													}
												],
												"src": "10151:354:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10684:240:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10701:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10712:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10694:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10694:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10694:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10735:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10746:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10731:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10731:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10751:2:1",
																		"type": "",
																		"value": "50"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10724:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10724:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10724:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10774:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10785:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10770:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10770:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10790:34:1",
																		"type": "",
																		"value": "Sum of sell fees must be less th"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10763:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10763:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10763:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10845:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10856:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10841:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10841:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10861:20:1",
																		"type": "",
																		"value": "an or equal to 25%"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10834:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10834:48:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10834:48:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10891:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10903:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10914:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10899:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10899:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10891:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_64ead83ef76ea1c4f9fc5432258ce7c66fa12ae4c25d99983db46b0d37058094__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10661:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10675:4:1",
														"type": ""
													}
												],
												"src": "10510:414:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11103:232:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11120:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11131:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11113:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11113:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11113:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11154:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11165:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11150:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11150:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11170:2:1",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11143:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11143:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11143:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11193:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11204:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11189:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11189:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11209:34:1",
																		"type": "",
																		"value": "Amount must be greater than 0.1%"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11182:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11182:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11182:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11264:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11275:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11260:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11260:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11280:12:1",
																		"type": "",
																		"value": " of supply"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11253:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11253:40:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11253:40:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11302:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11314:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11325:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11310:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11310:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11302:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6c4db68624a2e770077620719acb05295e7dcfc072b9733d6b92c297674c94f0__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11080:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11094:4:1",
														"type": ""
													}
												],
												"src": "10929:406:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11514:295:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11531:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11542:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11524:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11524:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11524:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11565:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11576:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11561:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11561:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11581:2:1",
																		"type": "",
																		"value": "65"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11554:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11554:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11554:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11604:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11615:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11600:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11600:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11620:34:1",
																		"type": "",
																		"value": "wallet balance after transfer mu"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11593:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11593:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11593:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11675:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11686:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11671:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11671:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11691:34:1",
																		"type": "",
																		"value": "st be less than max wallet amoun"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11664:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11664:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11664:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11746:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11757:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11742:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11742:19:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11763:3:1",
																		"type": "",
																		"value": "t"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11735:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11735:32:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11735:32:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11776:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11788:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11799:3:1",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11784:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11784:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11776:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_731e86e0f4debbbebee6a0dcbb3d6dc5cdb0fbd7e578469b1b568c260565d3dc__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11491:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11505:4:1",
														"type": ""
													}
												],
												"src": "11340:469:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11988:223:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12005:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12016:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11998:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11998:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11998:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12039:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12050:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12035:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12035:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12055:2:1",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12028:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12028:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12028:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12078:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12089:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12074:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12074:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12094:34:1",
																		"type": "",
																		"value": "SafeMath: multiplication overflo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12067:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12067:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12067:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12149:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12160:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12145:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12145:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12165:3:1",
																		"type": "",
																		"value": "w"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12138:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12138:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12138:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12178:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12190:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12201:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12186:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12186:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12178:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11965:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11979:4:1",
														"type": ""
													}
												],
												"src": "11814:397:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12390:182:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12407:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12418:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12400:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12400:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12400:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12441:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12452:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12437:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12437:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12457:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12430:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12430:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12430:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12480:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12491:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12476:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12476:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12496:34:1",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12469:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12469:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12469:62:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12540:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12552:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12563:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12548:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12548:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12540:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12367:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12381:4:1",
														"type": ""
													}
												],
												"src": "12216:356:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12751:231:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12768:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12779:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12761:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12761:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12761:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12802:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12813:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12798:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12798:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12818:2:1",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12791:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12791:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12791:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12841:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12852:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12837:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12837:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12857:34:1",
																		"type": "",
																		"value": "Transfer amount must be greater "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12830:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12830:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12830:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12912:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12923:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12908:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12908:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12928:11:1",
																		"type": "",
																		"value": "than zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12901:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12901:39:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12901:39:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12949:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12961:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12972:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12957:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12957:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12949:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9edb5ab58321f35d2386ea65721c9b107daa2c273610fc16d394af2a320ba785__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12728:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12742:4:1",
														"type": ""
													}
												],
												"src": "12577:405:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13161:238:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13178:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13189:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13171:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13171:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13171:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13212:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13223:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13208:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13208:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13228:2:1",
																		"type": "",
																		"value": "48"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13201:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13201:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13201:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13251:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13262:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13247:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13247:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13267:34:1",
																		"type": "",
																		"value": "Amount must be less than or equa"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13240:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13240:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13240:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13322:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13333:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13318:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13318:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13338:18:1",
																		"type": "",
																		"value": "l to totalSupply"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13311:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13311:46:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13311:46:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13366:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13378:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13389:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13374:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13374:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13366:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b44a94ebbca3d153cb9c59a36d3c7e6533b0baf54384f35b08da2c0561f7e004__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13138:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13152:4:1",
														"type": ""
													}
												],
												"src": "12987:412:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13578:230:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13595:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13606:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13588:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13588:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13588:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13629:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13640:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13625:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13625:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13645:2:1",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13618:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13618:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13618:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13668:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13679:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13664:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13664:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13684:34:1",
																		"type": "",
																		"value": "this contract cannot blacklist a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13657:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13657:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13657:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13739:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13750:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13735:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13735:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13755:10:1",
																		"type": "",
																		"value": "ddresses"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13728:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13728:38:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13728:38:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13775:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13787:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13798:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13783:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13783:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13775:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_bad442360b6845337bd4003d69c5089367f1b69f213d5a6e716006a978ac85ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13555:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13569:4:1",
														"type": ""
													}
												],
												"src": "13404:404:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13987:227:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14004:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14015:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13997:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13997:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13997:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14038:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14049:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14034:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14034:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14054:2:1",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14027:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14027:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14027:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14077:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14088:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14073:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14073:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14093:34:1",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14066:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14066:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14066:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14148:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14159:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14144:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14144:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14164:7:1",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14137:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14137:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14137:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14181:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14193:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14204:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14189:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14189:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14181:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13964:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13978:4:1",
														"type": ""
													}
												],
												"src": "13813:401:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14393:174:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14410:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14421:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14403:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14403:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14403:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14444:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14455:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14440:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14440:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14460:2:1",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14433:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14433:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14433:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14483:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14494:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14479:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14479:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14499:26:1",
																		"type": "",
																		"value": "This function is diabled"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14472:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14472:54:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14472:54:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14535:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14547:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14558:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14543:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14543:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14535:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c16e27d8b3dc7ef60b76b5fcfd20d370ba809516527639905c66e9f077293ec0__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14370:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14384:4:1",
														"type": ""
													}
												],
												"src": "14219:348:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14746:226:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14763:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14774:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14756:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14756:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14756:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14797:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14808:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14793:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14793:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14813:2:1",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14786:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14786:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14786:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14836:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14847:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14832:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14832:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14852:34:1",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14825:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14825:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14825:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14907:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14918:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14903:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14903:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14923:6:1",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14896:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14896:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14896:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14939:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14951:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14962:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14947:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14947:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14939:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14723:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14737:4:1",
														"type": ""
													}
												],
												"src": "14572:400:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15078:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15088:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15100:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15111:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15096:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15096:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15088:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15130:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "15141:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15123:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15123:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15123:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15047:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15058:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15069:4:1",
														"type": ""
													}
												],
												"src": "14977:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15430:712:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15440:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15458:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15469:3:1",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15454:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15454:19:1"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "15444:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15489:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "15500:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15482:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15482:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15482:25:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15516:12:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "15526:2:1",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "15520:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15548:9:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "15559:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15544:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15544:18:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "15564:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15537:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15537:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15537:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15591:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15602:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15587:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15587:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15607:3:1",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15580:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15580:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15580:31:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15620:17:1",
															"value": {
																"name": "tail_1",
																"nodeType": "YulIdentifier",
																"src": "15631:6:1"
															},
															"variables": [
																{
																	"name": "pos",
																	"nodeType": "YulTypedName",
																	"src": "15624:3:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15646:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "15666:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "15660:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15660:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "15650:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "15689:6:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "15697:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15682:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15682:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15682:22:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15713:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15724:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15735:3:1",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15720:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15720:19:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "15713:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15748:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "15766:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "15774:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15762:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15762:15:1"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "15752:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15786:13:1",
															"value": {
																"name": "tail",
																"nodeType": "YulIdentifier",
																"src": "15795:4:1"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "15790:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15857:146:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "15878:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "srcPtr",
																									"nodeType": "YulIdentifier",
																									"src": "15893:6:1"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nodeType": "YulIdentifier",
																								"src": "15887:5:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "15887:13:1"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "15910:3:1",
																											"type": "",
																											"value": "160"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "15915:1:1",
																											"type": "",
																											"value": "1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "15906:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "15906:11:1"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "15919:1:1",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nodeType": "YulIdentifier",
																								"src": "15902:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "15902:19:1"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "15883:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "15883:39:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "15871:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15871:52:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15871:52:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "15936:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "15947:3:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "15952:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "15943:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15943:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "15936:3:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "15968:25:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "15982:6:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "15990:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "15978:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15978:15:1"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15968:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "15819:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "15822:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "15816:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15816:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "15830:18:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "15832:14:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "15841:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15844:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "15837:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15837:9:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "15832:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "15812:3:1",
																"statements": []
															},
															"src": "15808:195:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16012:11:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "16020:3:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16012:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16043:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16054:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16039:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16039:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value3",
																				"nodeType": "YulIdentifier",
																				"src": "16063:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "16079:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "16084:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "16075:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "16075:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "16088:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "16071:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16071:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "16059:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16059:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16032:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16032:60:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16032:60:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16112:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16123:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16108:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16108:19:1"
																	},
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "16129:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16101:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16101:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16101:35:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_rational_0_by_1_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15367:9:1",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "15378:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "15386:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "15394:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "15402:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15410:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15421:4:1",
														"type": ""
													}
												],
												"src": "15159:983:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16332:206:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16342:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16354:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16365:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16350:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16350:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16342:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16385:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "16396:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16378:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16378:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16378:25:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16423:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16434:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16419:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16419:18:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "16439:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16412:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16412:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16412:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16466:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16477:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16462:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16462:18:1"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "16482:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16455:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16455:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16455:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16509:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16520:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16505:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16505:18:1"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "16525:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16498:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16498:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16498:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16277:9:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "16288:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "16296:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "16304:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16312:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16323:4:1",
														"type": ""
													}
												],
												"src": "16147:391:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16640:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16650:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16662:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16673:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16658:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16658:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16650:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16692:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "16707:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16715:4:1",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "16703:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16703:17:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16685:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16685:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16685:36:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16609:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16620:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16631:4:1",
														"type": ""
													}
												],
												"src": "16543:184:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16780:80:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16807:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "16809:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16809:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16809:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "16796:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "16803:1:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "16799:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16799:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "16793:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16793:13:1"
															},
															"nodeType": "YulIf",
															"src": "16790:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16838:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "16849:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "16852:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16845:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16845:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "16838:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "16763:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "16766:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "16772:3:1",
														"type": ""
													}
												],
												"src": "16732:128:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16911:74:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16934:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "16936:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16936:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16936:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "16931:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "16924:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16924:9:1"
															},
															"nodeType": "YulIf",
															"src": "16921:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16965:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "16974:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "16977:1:1"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "16970:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16970:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "16965:1:1"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "16896:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "16899:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "16905:1:1",
														"type": ""
													}
												],
												"src": "16865:120:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17042:116:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17101:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "17103:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17103:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17103:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "17073:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "17066:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17066:9:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "17059:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17059:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "17081:1:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "17092:1:1",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "17088:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "17088:6:1"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "17096:1:1"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "17084:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17084:14:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "17078:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17078:21:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "17055:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17055:45:1"
															},
															"nodeType": "YulIf",
															"src": "17052:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17132:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "17147:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "17150:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "17143:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17143:9:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "17132:7:1"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "17021:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "17024:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "17030:7:1",
														"type": ""
													}
												],
												"src": "16990:168:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17214:211:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "17224:20:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "17234:10:1",
																"type": "",
																"value": "0xffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "17228:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "17253:21:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "17268:1:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "17271:2:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "17264:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17264:10:1"
															},
															"variables": [
																{
																	"name": "x_1",
																	"nodeType": "YulTypedName",
																	"src": "17257:3:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "17283:21:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "17298:1:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "17301:2:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "17294:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17294:10:1"
															},
															"variables": [
																{
																	"name": "y_1",
																	"nodeType": "YulTypedName",
																	"src": "17287:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17364:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "17366:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17366:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17366:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x_1",
																						"nodeType": "YulIdentifier",
																						"src": "17334:3:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "17327:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17327:11:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "17320:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17320:19:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y_1",
																				"nodeType": "YulIdentifier",
																				"src": "17344:3:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "17353:2:1"
																					},
																					{
																						"name": "x_1",
																						"nodeType": "YulIdentifier",
																						"src": "17357:3:1"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "17349:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17349:12:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "17341:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17341:21:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "17316:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17316:47:1"
															},
															"nodeType": "YulIf",
															"src": "17313:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17395:24:1",
															"value": {
																"arguments": [
																	{
																		"name": "x_1",
																		"nodeType": "YulIdentifier",
																		"src": "17410:3:1"
																	},
																	{
																		"name": "y_1",
																		"nodeType": "YulIdentifier",
																		"src": "17415:3:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "17406:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17406:13:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "17395:7:1"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "17193:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "17196:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "17202:7:1",
														"type": ""
													}
												],
												"src": "17163:262:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17479:76:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17501:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "17503:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17503:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17503:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "17495:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "17498:1:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "17492:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17492:8:1"
															},
															"nodeType": "YulIf",
															"src": "17489:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17532:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "17544:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "17547:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "17540:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17540:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "17532:4:1"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "17461:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "17464:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "17470:4:1",
														"type": ""
													}
												],
												"src": "17430:125:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17598:74:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17621:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "17623:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17623:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17623:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "17618:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "17611:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17611:9:1"
															},
															"nodeType": "YulIf",
															"src": "17608:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17652:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "17661:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "17664:1:1"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nodeType": "YulIdentifier",
																	"src": "17657:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17657:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "17652:1:1"
																}
															]
														}
													]
												},
												"name": "mod_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "17583:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "17586:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "17592:1:1",
														"type": ""
													}
												],
												"src": "17560:112:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17709:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17726:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17733:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17738:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "17729:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17729:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17719:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17719:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17719:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17766:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17769:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17759:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17759:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17759:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17790:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17793:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "17783:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17783:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17783:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "17677:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17841:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17858:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17865:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17870:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "17861:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17861:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17851:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17851:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17851:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17898:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17901:4:1",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17891:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17891:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17891:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17922:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17925:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "17915:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17915:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17915:15:1"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "17809:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17986:86:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18050:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18059:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18062:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "18052:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18052:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18052:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "18009:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "18020:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "18035:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "18040:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "18031:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "18031:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "18044:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "18027:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "18027:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "18016:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18016:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "18006:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18006:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "17999:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17999:50:1"
															},
															"nodeType": "YulIf",
															"src": "17996:2:1"
														}
													]
												},
												"name": "validator_revert_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17975:5:1",
														"type": ""
													}
												],
												"src": "17941:131:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18119:76:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18173:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18182:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18185:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "18175:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18175:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18175:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "18142:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "18163:5:1"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "18156:6:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "18156:13:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "18149:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18149:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "18139:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18139:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "18132:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18132:40:1"
															},
															"nodeType": "YulIf",
															"src": "18129:2:1"
														}
													]
												},
												"name": "validator_revert_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18108:5:1",
														"type": ""
													}
												],
												"src": "18077:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18244:77:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18299:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18308:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18311:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "18301:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18301:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18301:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "18267:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "18278:5:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "18285:10:1",
																						"type": "",
																						"value": "0xffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "18274:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18274:22:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "18264:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18264:33:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "18257:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18257:41:1"
															},
															"nodeType": "YulIf",
															"src": "18254:2:1"
														}
													]
												},
												"name": "validator_revert_uint32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18233:5:1",
														"type": ""
													}
												],
												"src": "18200:121:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_uint112_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_address_payable(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value2, value2) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_boolt_uint32(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_uint32(value_1)\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_uint112t_uint112t_uint32_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value0, value0) }\n        value0 := abi_decode_uint112_fromMemory(headStart)\n        value1 := abi_decode_uint112_fromMemory(add(headStart, 32))\n        let value := mload(add(headStart, 64))\n        validator_revert_uint32(value)\n        value2 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := mload(headStart)\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value0, value0) }\n        value0 := mload(headStart)\n        value1 := mload(add(headStart, 32))\n        value2 := mload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(value3, value3) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_rational_0_by_1_t_rational_0_by_1_t_address_payable_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256_t_address_t_uint256__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, _1))\n        mstore(add(headStart, 160), value5)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_bool_t_uint16_t_uint256_t_bool_t_uint256__to_t_bool_t_uint16_t_uint256_t_bool_t_uint256__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, iszero(iszero(value0)))\n        mstore(add(headStart, 32), and(value1, 0xffff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), iszero(iszero(value3)))\n        mstore(add(headStart, 128), value4)\n    }\n    function abi_encode_tuple_t_bool_t_uint32__to_t_bool_t_uint32__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, iszero(iszero(value0)))\n        mstore(add(headStart, 32), and(value1, 0xffffffff))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := tail\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), tail)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_046a8fc234c98369d46f45f5bed63e994dab3910bdaebfe1ca0cd49f568245a6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"this contract cannot be paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_1755f62c229a290ad9b7faac2959e1b3eb8f692fba0f163aae0b9540e4f5fdce__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 49)\n        mstore(add(headStart, 64), \"Sum of buy fees must be less tha\")\n        mstore(add(headStart, 96), \"n or equal to 25%\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_1e00c61f0a7b721724fe214bc791e509089379e5d75afe66b9a59ad6bee5002b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Trading is not active\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_268446f78394810523a9d9ab5dfb456a808e6d969331d3363f26d133e00f8a00__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"Strong Hands Protocol active\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"SafeMath: addition overflow\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_30dd4f997a6ca09c24570e16af51c4dd5e70cd227c7036b9ebf2853f38eba550__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"Sells stopped by Diamond Floor\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_64ead83ef76ea1c4f9fc5432258ce7c66fa12ae4c25d99983db46b0d37058094__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"Sum of sell fees must be less th\")\n        mstore(add(headStart, 96), \"an or equal to 25%\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_6c4db68624a2e770077620719acb05295e7dcfc072b9733d6b92c297674c94f0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"Amount must be greater than 0.1%\")\n        mstore(add(headStart, 96), \" of supply\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_731e86e0f4debbbebee6a0dcbb3d6dc5cdb0fbd7e578469b1b568c260565d3dc__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 65)\n        mstore(add(headStart, 64), \"wallet balance after transfer mu\")\n        mstore(add(headStart, 96), \"st be less than max wallet amoun\")\n        mstore(add(headStart, 128), \"t\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"SafeMath: multiplication overflo\")\n        mstore(add(headStart, 96), \"w\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9edb5ab58321f35d2386ea65721c9b107daa2c273610fc16d394af2a320ba785__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"Transfer amount must be greater \")\n        mstore(add(headStart, 96), \"than zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b44a94ebbca3d153cb9c59a36d3c7e6533b0baf54384f35b08da2c0561f7e004__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 48)\n        mstore(add(headStart, 64), \"Amount must be less than or equa\")\n        mstore(add(headStart, 96), \"l to totalSupply\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_bad442360b6845337bd4003d69c5089367f1b69f213d5a6e716006a978ac85ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"this contract cannot blacklist a\")\n        mstore(add(headStart, 96), \"ddresses\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c16e27d8b3dc7ef60b76b5fcfd20d370ba809516527639905c66e9f077293ec0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"This function is diabled\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_rational_0_by_1_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let tail_1 := add(headStart, 160)\n        mstore(headStart, value0)\n        let _1 := 32\n        mstore(add(headStart, _1), value1)\n        mstore(add(headStart, 64), 160)\n        let pos := tail_1\n        let length := mload(value2)\n        mstore(tail_1, length)\n        pos := add(headStart, 192)\n        let srcPtr := add(value2, _1)\n        let i := tail\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n        mstore(add(headStart, 96), and(value3, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 128), value4)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_mul_t_uint32(x, y) -> product\n    {\n        let _1 := 0xffffffff\n        let x_1 := and(x, _1)\n        let y_1 := and(y, _1)\n        if and(iszero(iszero(x_1)), gt(y_1, div(_1, x_1))) { panic_error_0x11() }\n        product := mul(x_1, y_1)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function mod_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function validator_revert_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function validator_revert_uint32(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffff))) { revert(0, 0) }\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061036f5760003560e01c806388790a68116101c6578063cab03471116100f7578063e315a6da11610095578063f2fde38b1161006f578063f2fde38b14610a64578063f480fec214610a84578063ffb54a9914610aa4578063ffecf51614610abe57600080fd5b8063e315a6da14610a04578063e4bf1bed14610a24578063ea2f0b3714610a4457600080fd5b8063d55cb78a116100d1578063d55cb78a14610973578063db0045ec14610988578063dc44b6a0146109a8578063dd62ed3e146109be57600080fd5b8063cab034711461091d578063cdb3858f14610933578063d16336491461095357600080fd5b8063a850673d11610164578063c469b6dd1161013e578063c469b6dd14610876578063c5d241891461088c578063c8607952146108a2578063c95457ff146108b857600080fd5b8063a850673d14610821578063a9059cbb14610841578063c3c8cd801461086157600080fd5b80639491f94d116101a05780639491f94d1461078957806395d89b411461079e57806399a7b9bc146107cc5780639d82190f146107e157600080fd5b806388790a68146107405780638da5cb5b146107565780638e3602531461077457600080fd5b806339a53c4e116102a05780636c0a24eb1161023e578063715018a611610218578063715018a6146106b2578063729cb3f2146106c757806372b2aecc146106e7578063787a08a6146106fd57600080fd5b80636c0a24eb146106515780636fc3eaec1461066757806370a082311461067c57600080fd5b8063437823ec1161027a578063437823ec146105c457806349bd5a5e146105e45780635fecd9261461061c5780636aabff3f1461063c57600080fd5b806339a53c4e146105555780633bbac579146105775780633e0f966d146105af57600080fd5b8063248dd2321161030d57806329409395116102e757806329409395146104d8578063301ad558146104f8578063313ce56714610519578063323be1c51461053557600080fd5b8063248dd2321461048c57806327a14fc2146104a25780632843631d146104c257600080fd5b806314eb76ac1161034957806314eb76ac1461040f57806318160ddd146104315780632369bf831461044c57806323b872dd1461046c57600080fd5b806301a6c43b1461037b57806306fdde03146103a4578063095ea7b3146103df57600080fd5b3661037657005b600080fd5b34801561038757600080fd5b5061039160085481565b6040519081526020015b60405180910390f35b3480156103b057600080fd5b506040805180820190915260098152684761696e5a696c6c6160b81b60208201525b60405161039b9190612e28565b3480156103eb57600080fd5b506103ff6103fa366004612ce0565b610ade565b604051901515815260200161039b565b34801561041b57600080fd5b5061042f61042a366004612c30565b610af5565b005b34801561043d57600080fd5b50670de0b6b3a7640000610391565b34801561045857600080fd5b5061042f610467366004612c30565b610b4a565b34801561047857600080fd5b506103ff610487366004612ca0565b610b96565b34801561049857600080fd5b5061039160135481565b3480156104ae57600080fd5b5061042f6104bd366004612d9a565b610bff565b3480156104ce57600080fd5b50610391600b5481565b3480156104e457600080fd5b5061042f6104f3366004612c30565b610d15565b34801561050457600080fd5b506028546103ff906301000000900460ff1681565b34801561052557600080fd5b506040516009815260200161039b565b34801561054157600080fd5b506028546103ff9062010000900460ff1681565b34801561056157600080fd5b506028546103ff90640100000000900460ff1681565b34801561058357600080fd5b506103ff610592366004612c30565b6001600160a01b0316600090815260208052604090205460ff1690565b3480156105bb57600080fd5b5061042f610e61565b3480156105d057600080fd5b5061042f6105df366004612c30565b610eef565b3480156105f057600080fd5b50602654610604906001600160a01b031681565b6040516001600160a01b03909116815260200161039b565b34801561062857600080fd5b5061042f610637366004612c30565b610f3d565b34801561064857600080fd5b5061042f610f87565b34801561065d57600080fd5b5061039160075481565b34801561067357600080fd5b5061042f610fbf565b34801561068857600080fd5b50610391610697366004612c30565b6001600160a01b031660009081526002602052604090205490565b3480156106be57600080fd5b5061042f61102e565b3480156106d357600080fd5b5061042f6106e2366004612d27565b6110a2565b3480156106f357600080fd5b5061039160195481565b34801561070957600080fd5b50601a546107249060ff811690610100900463ffffffff1682565b60408051921515835263ffffffff90911660208301520161039b565b34801561074c57600080fd5b5061039160115481565b34801561076257600080fd5b506000546001600160a01b0316610604565b34801561078057600080fd5b5061042f61110a565b34801561079557600080fd5b50610391611143565b3480156107aa57600080fd5b5060408051808201909152600581526447494c4c4160d81b60208201526103d2565b3480156107d857600080fd5b5061042f6112e2565b3480156107ed57600080fd5b506108016107fc366004612c30565b61131c565b60408051948552602085019390935291830152606082015260800161039b565b34801561082d57600080fd5b5061042f61083c366004612d9a565b6113cb565b34801561084d57600080fd5b506103ff61085c366004612ce0565b6113fa565b34801561086d57600080fd5b5061042f611407565b34801561088257600080fd5b50610391600f5481565b34801561089857600080fd5b50610391600d5481565b3480156108ae57600080fd5b5061039160155481565b3480156108c457600080fd5b50601c54601d54601e54601f546108ee9360ff8082169461010090920461ffff1693919291169085565b60408051951515865261ffff90941660208601529284019190915215156060830152608082015260a00161039b565b34801561092957600080fd5b5061039160175481565b34801561093f57600080fd5b5061042f61094e366004612c30565b611450565b34801561095f57600080fd5b5061042f61096e366004612d9a565b61149c565b34801561097f57600080fd5b5061042f6114dc565b34801561099457600080fd5b5061042f6109a3366004612c30565b611515565b3480156109b457600080fd5b5061039160095481565b3480156109ca57600080fd5b506103916109d9366004612c68565b6001600160a01b03918216600090815260036020908152604080832093909416825291909152205490565b348015610a1057600080fd5b5061042f610a1f366004612d9a565b611561565b348015610a3057600080fd5b5061042f610a3f366004612df7565b611590565b348015610a5057600080fd5b5061042f610a5f366004612c30565b61170c565b348015610a7057600080fd5b5061042f610a7f366004612c30565b611757565b348015610a9057600080fd5b5061042f610a9f366004612df7565b6117ef565b348015610ab057600080fd5b506028546103ff9060ff1681565b348015610aca57600080fd5b5061042f610ad9366004612c30565b61195b565b6000610aeb338484611a12565b5060015b92915050565b6000546001600160a01b03163314610b285760405162461bcd60e51b8152600401610b1f90612ee2565b60405180910390fd5b602280546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b03163314610b745760405162461bcd60e51b8152600401610b1f90612ee2565b602180546001600160a01b0319166001600160a01b0392909216919091179055565b6000610ba3848484611b36565b610bf58433610bf08560405180606001604052806028815260200161308b602891396001600160a01b038a16600090815260036020908152604080832033845290915290205491906120e5565b611a12565b5060019392505050565b6000546001600160a01b03163314610c295760405162461bcd60e51b8152600401610b1f90612ee2565b610c3d670de0b6b3a76400006103e861211f565b811015610c9f5760405162461bcd60e51b815260206004820152602a60248201527f416d6f756e74206d7573742062652067726561746572207468616e20302e3125604482015269206f6620737570706c7960b01b6064820152608401610b1f565b670de0b6b3a7640000811115610d105760405162461bcd60e51b815260206004820152603060248201527f416d6f756e74206d757374206265206c657373207468616e206f72206571756160448201526f6c20746f20746f74616c537570706c7960801b6064820152608401610b1f565b600755565b6000546001600160a01b03163314610d3f5760405162461bcd60e51b8152600401610b1f90612ee2565b6040516370a0823160e01b81523060048201526000906001600160a01b038316906370a082319060240160206040518083038186803b158015610d8157600080fd5b505afa158015610d95573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610db99190612db2565b9050816001600160a01b031663a9059cbb610ddc6000546001600160a01b031690565b6040516001600160e01b031960e084901b1681526001600160a01b03909116600482015260248101849052604401602060405180830381600087803b158015610e2457600080fd5b505af1158015610e38573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e5c9190612d0b565b505050565b6000546001600160a01b03163314610e8b5760405162461bcd60e51b8152600401610b1f90612ee2565b60285462010000900460ff16610ee35760405162461bcd60e51b815260206004820152601e60248201527f7468697320636f6e74726163742063616e6e6f742062652070617573656400006044820152606401610b1f565b6028805460ff19169055565b6000546001600160a01b03163314610f195760405162461bcd60e51b8152600401610b1f90612ee2565b6001600160a01b03166000908152600460205260409020805460ff19166001179055565b6000546001600160a01b03163314610f675760405162461bcd60e51b8152600401610b1f90612ee2565b6001600160a01b031660009081526020805260409020805460ff19169055565b6000546001600160a01b03163314610fb15760405162461bcd60e51b8152600401610b1f90612ee2565b6028805462ff000019169055565b6000546001600160a01b03163314610fe95760405162461bcd60e51b8152600401610b1f90612ee2565b47801561102b57600080546040516001600160a01b039091169183156108fc02918491818181858888f19350505050158015611029573d6000803e3d6000fd5b505b50565b6000546001600160a01b031633146110585760405162461bcd60e51b8152600401610b1f90612ee2565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146110cc5760405162461bcd60e51b8152600401610b1f90612ee2565b601a805460ff19168315151790556110e581603c612fd2565b601a805463ffffffff929092166101000264ffffffff00199092169190911790555050565b6000546001600160a01b031633146111345760405162461bcd60e51b8152600401610b1f90612ee2565b6028805460ff19166001179055565b6000806000602660009054906101000a90046001600160a01b03166001600160a01b0316630902f1ac6040518163ffffffff1660e01b815260040160606040518083038186803b15801561119657600080fd5b505afa1580156111aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111ce9190612d54565b5091509150816001600160701b0316600014806111f257506001600160701b038116155b156112005760009250505090565b60265460408051630dfe168160e01b8152905130926001600160a01b031691630dfe1681916004808301926020929190829003018186803b15801561124457600080fd5b505afa158015611258573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061127c9190612c4c565b6001600160a01b0316146112b8576112b36001600160701b03808316906112ad908516670de0b6b3a7640000612168565b9061211f565b6112db565b6112db6001600160701b03808416906112ad908416670de0b6b3a7640000612168565b9250505090565b6000546001600160a01b0316331461130c5760405162461bcd60e51b8152600401610b1f90612ee2565b6028805464ff0000000019169055565b6001600160a01b0381166000908152601b60205260408120548190819081908190421061134a57600061136d565b6001600160a01b0386166000908152601b602052604090205461136d90426121e7565b905061137c816201518061211f565b945061138b6201518082613015565b905061139981610e1061211f565b93506113a7610e1082613015565b90506113b481603c61211f565b92506113c1603c82613015565b9150509193509193565b6000546001600160a01b031633146113f55760405162461bcd60e51b8152600401610b1f90612ee2565b601955565b6000610aeb338484611b36565b6000546001600160a01b031633146114315760405162461bcd60e51b8152600401610b1f90612ee2565b30600090815260026020526040902054801561102b5761102b81612229565b6000546001600160a01b0316331461147a5760405162461bcd60e51b8152600401610b1f90612ee2565b602480546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031633146114c65760405162461bcd60e51b8152600401610b1f90612ee2565b426005556006556028805460ff19166001179055565b6000546001600160a01b031633146115065760405162461bcd60e51b8152600401610b1f90612ee2565b6028805463ff00000019169055565b6000546001600160a01b0316331461153f5760405162461bcd60e51b8152600401610b1f90612ee2565b602380546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b0316331461158b5760405162461bcd60e51b8152600401610b1f90612ee2565b600855565b6000546001600160a01b031633146115ba5760405162461bcd60e51b8152600401610b1f90612ee2565b60006115d2826115cc858189896123c8565b906123c8565b905060fa81111561163f5760405162461bcd60e51b815260206004820152603160248201527f53756d206f66206275792066656573206d757374206265206c657373207468616044820152706e206f7220657175616c20746f2032352560781b6064820152608401610b1f565b602854640100000000900460ff166116945760405162461bcd60e51b8152602060048201526018602482015277151a1a5cc8199d5b98dd1a5bdb881a5cc8191a58589b195960421b6044820152606401610b1f565b600d8590556009849055600f839055600b829055600e859055600a8490556010839055600c8290556040805186815260208101869052908101849052606081018390527f892b2caa2d791bf7b8d9a49c4db7a4513ff1ae2e0e068ed217f9d5ab4c1a28f0906080015b60405180910390a15050505050565b6000546001600160a01b031633146117365760405162461bcd60e51b8152600401610b1f90612ee2565b6001600160a01b03166000908152600460205260409020805460ff19169055565b6000546001600160a01b031633146117815760405162461bcd60e51b8152600401610b1f90612ee2565b6001600160a01b0381166117e65760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610b1f565b61102b81612427565b6000546001600160a01b031633146118195760405162461bcd60e51b8152600401610b1f90612ee2565b600061182b826115cc858189896123c8565b905060fa8111156118995760405162461bcd60e51b815260206004820152603260248201527f53756d206f662073656c6c2066656573206d757374206265206c657373207468604482015271616e206f7220657175616c20746f2032352560701b6064820152608401610b1f565b602854640100000000900460ff166118ee5760405162461bcd60e51b8152602060048201526018602482015277151a1a5cc8199d5b98dd1a5bdb881a5cc8191a58589b195960421b6044820152606401610b1f565b601585905560118490556017839055601382905560168590556012849055601883905560148290556040805186815260208101869052908101849052606081018390527f439932620c72dddea29980c098bca1a482729646d1216b226d723c6d278a30d1906080016116fd565b6000546001600160a01b031633146119855760405162461bcd60e51b8152600401610b1f90612ee2565b6028546301000000900460ff166119ef5760405162461bcd60e51b815260206004820152602860248201527f7468697320636f6e74726163742063616e6e6f7420626c61636b6c6973742061604482015267646472657373657360c01b6064820152608401610b1f565b6001600160a01b031660009081526020805260409020805460ff19166001179055565b6001600160a01b038316611a745760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610b1f565b6001600160a01b038216611ad55760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610b1f565b6001600160a01b0383811660008181526003602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316611b9a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610b1f565b6001600160a01b038216611bfc5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610b1f565b60008111611c5e5760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b6064820152608401610b1f565b6001611c726000546001600160a01b031690565b6001600160a01b0316846001600160a01b031614158015611ca157506000546001600160a01b03848116911614155b8015611cb657506001600160a01b0384163014155b8015611ccb57506001600160a01b0383163014155b1561208b5760285460ff16611d1a5760405162461bcd60e51b815260206004820152601560248201527454726164696e67206973206e6f742061637469766560581b6044820152606401610b1f565b6026546001600160a01b038581169116148015611d4557506025546001600160a01b03848116911614155b15611dc657600654600554611d59916123c8565b4211611d82576001600160a01b03831660009081526020805260409020805460ff191660011790555b600754611da8836115cc866001600160a01b031660009081526002602052604090205490565b1115611dc65760405162461bcd60e51b8152600401610b1f90612e7b565b602854610100900460ff16158015611dec57506026546001600160a01b03858116911614155b8015611e0557506026546001600160a01b038481169116145b15612016576001600160a01b038416600090815260208052604090205460ff16158015611e4a57506001600160a01b038316600090815260208052604090205460ff16155b611e5357600080fd5b601a5460ff1615611ef8576001600160a01b0384166000908152601b6020526040902054421015611ec65760405162461bcd60e51b815260206004820152601c60248201527f5374726f6e672048616e64732050726f746f636f6c20616374697665000000006044820152606401610b1f565b601a54611ede90610100900463ffffffff1642612f87565b6001600160a01b0385166000908152601b60205260409020555b601c5460ff1615611f5e57601e5460ff1615611f565760405162461bcd60e51b815260206004820152601e60248201527f53656c6c732073746f70706564206279204469616d6f6e6420466c6f6f7200006044820152606401610b1f565b611f5e612477565b306000908152600260205260409020546008548110612014578015612002576000611fa26011546115cc6013546115cc6017546015546123c890919063ffffffff16565b1115612002576000611fdd611fd06011546115cc6013546115cc6017546015546123c890919063ffffffff16565b6011546112ad9085612168565b90506000818310611ff557611ff283836121e7565b90505b611fff8282612526565b50505b4780156120125761201247612599565b505b505b6026546001600160a01b0385811691161480159061204257506026546001600160a01b03848116911614155b1561208b5760075461206d836115cc866001600160a01b031660009081526002602052604090205490565b111561208b5760405162461bcd60e51b8152600401610b1f90612e7b565b6001600160a01b03841660009081526004602052604090205460ff16806120ca57506001600160a01b03831660009081526004602052604090205460ff165b156120d3575060005b6120df848484846126d9565b50505050565b600081848411156121095760405162461bcd60e51b8152600401610b1f9190612e28565b5060006121168486612ffe565b95945050505050565b600061216183836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250612777565b9392505050565b60008261217757506000610aef565b60006121838385612fb3565b9050826121908583612f9f565b146121615760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b6064820152608401610b1f565b600061216183836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506120e5565b6028805461ff001916610100179055604080516002808252606082018352600092602083019080368337019050509050308160008151811061227b57634e487b7160e01b600052603260045260246000fd5b6001600160a01b03928316602091820292909201810191909152602554604080516315ab88c960e31b81529051919093169263ad5c4648926004808301939192829003018186803b1580156122cf57600080fd5b505afa1580156122e3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123079190612c4c565b8160018151811061232857634e487b7160e01b600052603260045260246000fd5b6001600160a01b03928316602091820292909201015260255461234e9130911684611a12565b60255460405163791ac94760e01b81526001600160a01b039091169063791ac94790612387908590600090869030904290600401612f17565b600060405180830381600087803b1580156123a157600080fd5b505af11580156123b5573d6000803e3d6000fd5b50506028805461ff001916905550505050565b6000806123d58385612f87565b9050838110156121615760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006044820152606401610b1f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000612481611143565b90508061248b5750565b601d548111156124a457601d55601e805460ff19169055565b601c54601d546000916124d4916103e8916112ad9161010090910461ffff16906124ce9084612168565b906121e7565b9050808210156124f257601e805460ff19166001179055601d54601f555b601e5460ff1680156125115750601f5461250d906002612168565b8210155b156110295750601e805460ff19169055601d55565b6028805461ff001916610100179055600061254283600261211f565b9050600061255084836121e7565b90504761256561256085856123c8565b612229565b600061257147836121e7565b905082156123b5576123b58361259461258a88886123c8565b6112ad8589612168565b6127a5565b60006125b86017546115cc6013546015546123c890919063ffffffff16565b905080156110295760006125db826112ad6015548661216890919063ffffffff16565b905060006125f8836112ad6017548761216890919063ffffffff16565b9050600061260a826124ce87866121e7565b9050821561264e576021546040516001600160a01b039091169084156108fc029085906000818181858888f1935050505015801561264c573d6000803e3d6000fd5b505b8115612690576022546040516001600160a01b039091169083156108fc029084906000818181858888f1935050505015801561268e573d6000803e3d6000fd5b505b80156126d2576023546040516001600160a01b039091169082156108fc029083906000818181858888f193505050501580156126d0573d6000803e3d6000fd5b505b5050505050565b8061273757612737600d8054600e5560098054600a55600f8054601055600b8054600c556000938490559183905582905581905560158054601655601180546012556017805460185560138054601455928490559083905582905555565b612742848484612862565b6120df600e54600d55600a54600955601054600f55600c54600b55601654601555601254601155601854601755601454601355565b600081836127985760405162461bcd60e51b8152600401610b1f9190612e28565b5060006121168486612f9f565b6025546127bd9030906001600160a01b031684611a12565b6025546024805460405163f305d71960e01b815230600482015291820185905260006044830181905260648301526001600160a01b0390811660848301524260a48301529091169063f305d71990839060c4016060604051808303818588803b15801561282957600080fd5b505af115801561283d573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906126d29190612dca565b6128946040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b6026546001600160a01b0385811691161480156128bf57506025546001600160a01b03848116911614155b15612933576128df6103e86112ad600d548561216890919063ffffffff16565b60208201526009546128fa906103e8906112ad908590612168565b8152600f54612912906103e8906112ad908590612168565b6040820152600b5461292d906103e8906112ad908590612168565b60608201525b6026546001600160a01b0385811691161480159061295e57506026546001600160a01b038481169116145b156129d25761297e6103e86112ad6015548561216890919063ffffffff16565b6020820152601154612999906103e8906112ad908590612168565b81526017546129b1906103e8906112ad908590612168565b60408201526013546129cc906103e8906112ad908590612168565b60608201525b6026546001600160a01b038581169116148015906129fe57506026546001600160a01b03848116911614155b15612ab857612a2f60646112ad601954612a296103e86112ad6015548961216890919063ffffffff16565b90612168565b816020018181525050612a5e60646112ad601954612a296103e86112ad6011548961216890919063ffffffff16565b8152601954601754612a83916064916112ad9190612a29906103e89084908990612168565b816040018181525050612ab260646112ad601954612a296103e86112ad6013548961216890919063ffffffff16565b60608201525b612ae781606001516124ce83604001516124ce85600001516124ce8760200151896121e790919063ffffffff16565b60808201526001600160a01b038416600090815260026020526040902054612b0f90836121e7565b6001600160a01b0380861660009081526002602052604080822093909355608084015191861681529190912054612b45916123c8565b60026000856001600160a01b03166001600160a01b0316815260200190815260200160002081905550612bb2612b9c82606001516115cc84604001516115cc866000015187602001516123c890919063ffffffff16565b30600090815260026020526040902054906123c8565b3060009081526002602090815260409182902092909255608083015190519081526001600160a01b0385811692908716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a350505050565b80516001600160701b0381168114612c2b57600080fd5b919050565b600060208284031215612c41578081fd5b813561216181613055565b600060208284031215612c5d578081fd5b815161216181613055565b60008060408385031215612c7a578081fd5b8235612c8581613055565b91506020830135612c9581613055565b809150509250929050565b600080600060608486031215612cb4578081fd5b8335612cbf81613055565b92506020840135612ccf81613055565b929592945050506040919091013590565b60008060408385031215612cf2578182fd5b8235612cfd81613055565b946020939093013593505050565b600060208284031215612d1c578081fd5b81516121618161306a565b60008060408385031215612d39578182fd5b8235612d448161306a565b91506020830135612c9581613078565b600080600060608486031215612d68578283fd5b612d7184612c14565b9250612d7f60208501612c14565b91506040840151612d8f81613078565b809150509250925092565b600060208284031215612dab578081fd5b5035919050565b600060208284031215612dc3578081fd5b5051919050565b600080600060608486031215612dde578283fd5b8351925060208401519150604084015190509250925092565b60008060008060808587031215612e0c578081fd5b5050823594602084013594506040840135936060013592509050565b6000602080835283518082850152825b81811015612e5457858101830151858201604001528201612e38565b81811115612e655783604083870101525b50601f01601f1916929092016040019392505050565b60208082526041908201527f77616c6c65742062616c616e6365206166746572207472616e73666572206d7560408201527f7374206265206c657373207468616e206d61782077616c6c657420616d6f756e6060820152601d60fa1b608082015260a00190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600060a082018783526020878185015260a0604085015281875180845260c0860191508289019350845b81811015612f665784516001600160a01b031683529383019391830191600101612f41565b50506001600160a01b03969096166060850152505050608001529392505050565b60008219821115612f9a57612f9a613029565b500190565b600082612fae57612fae61303f565b500490565b6000816000190483118215151615612fcd57612fcd613029565b500290565b600063ffffffff80831681851681830481118215151615612ff557612ff5613029565b02949350505050565b60008282101561301057613010613029565b500390565b6000826130245761302461303f565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b6001600160a01b038116811461102b57600080fd5b801515811461102b57600080fd5b63ffffffff8116811461102b57600080fdfe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a2646970667358221220fc57e276852f112951403513d009406b1b67ebbb47d9537d5ec34db201657b1064736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x88790A68 GT PUSH2 0x1C6 JUMPI DUP1 PUSH4 0xCAB03471 GT PUSH2 0xF7 JUMPI DUP1 PUSH4 0xE315A6DA GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xF2FDE38B GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xA64 JUMPI DUP1 PUSH4 0xF480FEC2 EQ PUSH2 0xA84 JUMPI DUP1 PUSH4 0xFFB54A99 EQ PUSH2 0xAA4 JUMPI DUP1 PUSH4 0xFFECF516 EQ PUSH2 0xABE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xE315A6DA EQ PUSH2 0xA04 JUMPI DUP1 PUSH4 0xE4BF1BED EQ PUSH2 0xA24 JUMPI DUP1 PUSH4 0xEA2F0B37 EQ PUSH2 0xA44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xD55CB78A GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0xD55CB78A EQ PUSH2 0x973 JUMPI DUP1 PUSH4 0xDB0045EC EQ PUSH2 0x988 JUMPI DUP1 PUSH4 0xDC44B6A0 EQ PUSH2 0x9A8 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x9BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xCAB03471 EQ PUSH2 0x91D JUMPI DUP1 PUSH4 0xCDB3858F EQ PUSH2 0x933 JUMPI DUP1 PUSH4 0xD1633649 EQ PUSH2 0x953 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA850673D GT PUSH2 0x164 JUMPI DUP1 PUSH4 0xC469B6DD GT PUSH2 0x13E JUMPI DUP1 PUSH4 0xC469B6DD EQ PUSH2 0x876 JUMPI DUP1 PUSH4 0xC5D24189 EQ PUSH2 0x88C JUMPI DUP1 PUSH4 0xC8607952 EQ PUSH2 0x8A2 JUMPI DUP1 PUSH4 0xC95457FF EQ PUSH2 0x8B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA850673D EQ PUSH2 0x821 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x841 JUMPI DUP1 PUSH4 0xC3C8CD80 EQ PUSH2 0x861 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9491F94D GT PUSH2 0x1A0 JUMPI DUP1 PUSH4 0x9491F94D EQ PUSH2 0x789 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x79E JUMPI DUP1 PUSH4 0x99A7B9BC EQ PUSH2 0x7CC JUMPI DUP1 PUSH4 0x9D82190F EQ PUSH2 0x7E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x88790A68 EQ PUSH2 0x740 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x756 JUMPI DUP1 PUSH4 0x8E360253 EQ PUSH2 0x774 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x39A53C4E GT PUSH2 0x2A0 JUMPI DUP1 PUSH4 0x6C0A24EB GT PUSH2 0x23E JUMPI DUP1 PUSH4 0x715018A6 GT PUSH2 0x218 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x6B2 JUMPI DUP1 PUSH4 0x729CB3F2 EQ PUSH2 0x6C7 JUMPI DUP1 PUSH4 0x72B2AECC EQ PUSH2 0x6E7 JUMPI DUP1 PUSH4 0x787A08A6 EQ PUSH2 0x6FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6C0A24EB EQ PUSH2 0x651 JUMPI DUP1 PUSH4 0x6FC3EAEC EQ PUSH2 0x667 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x67C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x437823EC GT PUSH2 0x27A JUMPI DUP1 PUSH4 0x437823EC EQ PUSH2 0x5C4 JUMPI DUP1 PUSH4 0x49BD5A5E EQ PUSH2 0x5E4 JUMPI DUP1 PUSH4 0x5FECD926 EQ PUSH2 0x61C JUMPI DUP1 PUSH4 0x6AABFF3F EQ PUSH2 0x63C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x39A53C4E EQ PUSH2 0x555 JUMPI DUP1 PUSH4 0x3BBAC579 EQ PUSH2 0x577 JUMPI DUP1 PUSH4 0x3E0F966D EQ PUSH2 0x5AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x248DD232 GT PUSH2 0x30D JUMPI DUP1 PUSH4 0x29409395 GT PUSH2 0x2E7 JUMPI DUP1 PUSH4 0x29409395 EQ PUSH2 0x4D8 JUMPI DUP1 PUSH4 0x301AD558 EQ PUSH2 0x4F8 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x519 JUMPI DUP1 PUSH4 0x323BE1C5 EQ PUSH2 0x535 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x248DD232 EQ PUSH2 0x48C JUMPI DUP1 PUSH4 0x27A14FC2 EQ PUSH2 0x4A2 JUMPI DUP1 PUSH4 0x2843631D EQ PUSH2 0x4C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x14EB76AC GT PUSH2 0x349 JUMPI DUP1 PUSH4 0x14EB76AC EQ PUSH2 0x40F JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x431 JUMPI DUP1 PUSH4 0x2369BF83 EQ PUSH2 0x44C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x46C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1A6C43B EQ PUSH2 0x37B JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x3A4 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x3DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x376 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x387 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x391 PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x9 DUP2 MSTORE PUSH9 0x4761696E5A696C6C61 PUSH1 0xB8 SHL PUSH1 0x20 DUP3 ADD MSTORE JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x39B SWAP2 SWAP1 PUSH2 0x2E28 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3FF PUSH2 0x3FA CALLDATASIZE PUSH1 0x4 PUSH2 0x2CE0 JUMP JUMPDEST PUSH2 0xADE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x39B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x41B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x42F PUSH2 0x42A CALLDATASIZE PUSH1 0x4 PUSH2 0x2C30 JUMP JUMPDEST PUSH2 0xAF5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x43D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH8 0xDE0B6B3A7640000 PUSH2 0x391 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x458 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x42F PUSH2 0x467 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C30 JUMP JUMPDEST PUSH2 0xB4A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x478 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3FF PUSH2 0x487 CALLDATASIZE PUSH1 0x4 PUSH2 0x2CA0 JUMP JUMPDEST PUSH2 0xB96 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x498 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x391 PUSH1 0x13 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x42F PUSH2 0x4BD CALLDATASIZE PUSH1 0x4 PUSH2 0x2D9A JUMP JUMPDEST PUSH2 0xBFF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x391 PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x42F PUSH2 0x4F3 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C30 JUMP JUMPDEST PUSH2 0xD15 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x504 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x28 SLOAD PUSH2 0x3FF SWAP1 PUSH4 0x1000000 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x525 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x39B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x541 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x28 SLOAD PUSH2 0x3FF SWAP1 PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x561 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x28 SLOAD PUSH2 0x3FF SWAP1 PUSH5 0x100000000 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x583 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3FF PUSH2 0x592 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C30 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x42F PUSH2 0xE61 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x42F PUSH2 0x5DF CALLDATASIZE PUSH1 0x4 PUSH2 0x2C30 JUMP JUMPDEST PUSH2 0xEEF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x26 SLOAD PUSH2 0x604 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x39B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x628 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x42F PUSH2 0x637 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C30 JUMP JUMPDEST PUSH2 0xF3D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x648 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x42F PUSH2 0xF87 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x65D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x391 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x673 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x42F PUSH2 0xFBF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x688 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x391 PUSH2 0x697 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C30 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x42F PUSH2 0x102E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x42F PUSH2 0x6E2 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D27 JUMP JUMPDEST PUSH2 0x10A2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x391 PUSH1 0x19 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x709 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1A SLOAD PUSH2 0x724 SWAP1 PUSH1 0xFF DUP2 AND SWAP1 PUSH2 0x100 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 ISZERO ISZERO DUP4 MSTORE PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH2 0x39B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x74C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x391 PUSH1 0x11 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x762 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x604 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x780 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x42F PUSH2 0x110A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x795 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x391 PUSH2 0x1143 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x5 DUP2 MSTORE PUSH5 0x47494C4C41 PUSH1 0xD8 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x3D2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x42F PUSH2 0x12E2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x801 PUSH2 0x7FC CALLDATASIZE PUSH1 0x4 PUSH2 0x2C30 JUMP JUMPDEST PUSH2 0x131C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0x39B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x82D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x42F PUSH2 0x83C CALLDATASIZE PUSH1 0x4 PUSH2 0x2D9A JUMP JUMPDEST PUSH2 0x13CB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x84D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3FF PUSH2 0x85C CALLDATASIZE PUSH1 0x4 PUSH2 0x2CE0 JUMP JUMPDEST PUSH2 0x13FA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x86D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x42F PUSH2 0x1407 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x882 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x391 PUSH1 0xF SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x898 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x391 PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x391 PUSH1 0x15 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1C SLOAD PUSH1 0x1D SLOAD PUSH1 0x1E SLOAD PUSH1 0x1F SLOAD PUSH2 0x8EE SWAP4 PUSH1 0xFF DUP1 DUP3 AND SWAP5 PUSH2 0x100 SWAP1 SWAP3 DIV PUSH2 0xFFFF AND SWAP4 SWAP2 SWAP3 SWAP2 AND SWAP1 DUP6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP6 ISZERO ISZERO DUP7 MSTORE PUSH2 0xFFFF SWAP1 SWAP5 AND PUSH1 0x20 DUP7 ADD MSTORE SWAP3 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE ISZERO ISZERO PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD PUSH2 0x39B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x929 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x391 PUSH1 0x17 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x93F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x42F PUSH2 0x94E CALLDATASIZE PUSH1 0x4 PUSH2 0x2C30 JUMP JUMPDEST PUSH2 0x1450 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x95F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x42F PUSH2 0x96E CALLDATASIZE PUSH1 0x4 PUSH2 0x2D9A JUMP JUMPDEST PUSH2 0x149C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x97F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x42F PUSH2 0x14DC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x994 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x42F PUSH2 0x9A3 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C30 JUMP JUMPDEST PUSH2 0x1515 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x391 PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x391 PUSH2 0x9D9 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C68 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x42F PUSH2 0xA1F CALLDATASIZE PUSH1 0x4 PUSH2 0x2D9A JUMP JUMPDEST PUSH2 0x1561 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA30 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x42F PUSH2 0xA3F CALLDATASIZE PUSH1 0x4 PUSH2 0x2DF7 JUMP JUMPDEST PUSH2 0x1590 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x42F PUSH2 0xA5F CALLDATASIZE PUSH1 0x4 PUSH2 0x2C30 JUMP JUMPDEST PUSH2 0x170C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x42F PUSH2 0xA7F CALLDATASIZE PUSH1 0x4 PUSH2 0x2C30 JUMP JUMPDEST PUSH2 0x1757 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x42F PUSH2 0xA9F CALLDATASIZE PUSH1 0x4 PUSH2 0x2DF7 JUMP JUMPDEST PUSH2 0x17EF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAB0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x28 SLOAD PUSH2 0x3FF SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xACA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x42F PUSH2 0xAD9 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C30 JUMP JUMPDEST PUSH2 0x195B JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAEB CALLER DUP5 DUP5 PUSH2 0x1A12 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xB28 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB1F SWAP1 PUSH2 0x2EE2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x22 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xB74 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB1F SWAP1 PUSH2 0x2EE2 JUMP JUMPDEST PUSH1 0x21 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBA3 DUP5 DUP5 DUP5 PUSH2 0x1B36 JUMP JUMPDEST PUSH2 0xBF5 DUP5 CALLER PUSH2 0xBF0 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x308B PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x20E5 JUMP JUMPDEST PUSH2 0x1A12 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC29 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB1F SWAP1 PUSH2 0x2EE2 JUMP JUMPDEST PUSH2 0xC3D PUSH8 0xDE0B6B3A7640000 PUSH2 0x3E8 PUSH2 0x211F JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0xC9F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E20302E3125 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x206F6620737570706C79 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB1F JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 GT ISZERO PUSH2 0xD10 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D757374206265206C657373207468616E206F722065717561 PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x6C20746F20746F74616C537570706C79 PUSH1 0x80 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB1F JUMP JUMPDEST PUSH1 0x7 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xD3F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB1F SWAP1 PUSH2 0x2EE2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD95 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDB9 SWAP2 SWAP1 PUSH2 0x2DB2 JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB PUSH2 0xDDC PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE24 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE38 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE5C SWAP2 SWAP1 PUSH2 0x2D0B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xE8B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB1F SWAP1 PUSH2 0x2EE2 JUMP JUMPDEST PUSH1 0x28 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND PUSH2 0xEE3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x7468697320636F6E74726163742063616E6E6F74206265207061757365640000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB1F JUMP JUMPDEST PUSH1 0x28 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xF19 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB1F SWAP1 PUSH2 0x2EE2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xF67 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB1F SWAP1 PUSH2 0x2EE2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xFB1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB1F SWAP1 PUSH2 0x2EE2 JUMP JUMPDEST PUSH1 0x28 DUP1 SLOAD PUSH3 0xFF0000 NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xFE9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB1F SWAP1 PUSH2 0x2EE2 JUMP JUMPDEST SELFBALANCE DUP1 ISZERO PUSH2 0x102B JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 DUP4 ISZERO PUSH2 0x8FC MUL SWAP2 DUP5 SWAP2 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1029 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1058 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB1F SWAP1 PUSH2 0x2EE2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x10CC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB1F SWAP1 PUSH2 0x2EE2 JUMP JUMPDEST PUSH1 0x1A DUP1 SLOAD PUSH1 0xFF NOT AND DUP4 ISZERO ISZERO OR SWAP1 SSTORE PUSH2 0x10E5 DUP2 PUSH1 0x3C PUSH2 0x2FD2 JUMP JUMPDEST PUSH1 0x1A DUP1 SLOAD PUSH4 0xFFFFFFFF SWAP3 SWAP1 SWAP3 AND PUSH2 0x100 MUL PUSH5 0xFFFFFFFF00 NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1134 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB1F SWAP1 PUSH2 0x2EE2 JUMP JUMPDEST PUSH1 0x28 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x26 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x902F1AC PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1196 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x11AA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11CE SWAP2 SWAP1 PUSH2 0x2D54 JUMP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND PUSH1 0x0 EQ DUP1 PUSH2 0x11F2 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP2 AND ISZERO JUMPDEST ISZERO PUSH2 0x1200 JUMPI PUSH1 0x0 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x26 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xDFE1681 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD ADDRESS SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0xDFE1681 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1244 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1258 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x127C SWAP2 SWAP1 PUSH2 0x2C4C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x12B8 JUMPI PUSH2 0x12B3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP1 DUP4 AND SWAP1 PUSH2 0x12AD SWAP1 DUP6 AND PUSH8 0xDE0B6B3A7640000 PUSH2 0x2168 JUMP JUMPDEST SWAP1 PUSH2 0x211F JUMP JUMPDEST PUSH2 0x12DB JUMP JUMPDEST PUSH2 0x12DB PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP1 DUP5 AND SWAP1 PUSH2 0x12AD SWAP1 DUP5 AND PUSH8 0xDE0B6B3A7640000 PUSH2 0x2168 JUMP JUMPDEST SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x130C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB1F SWAP1 PUSH2 0x2EE2 JUMP JUMPDEST PUSH1 0x28 DUP1 SLOAD PUSH5 0xFF00000000 NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1B PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP2 SWAP1 DUP2 SWAP1 DUP2 SWAP1 DUP2 SWAP1 TIMESTAMP LT PUSH2 0x134A JUMPI PUSH1 0x0 PUSH2 0x136D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1B PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x136D SWAP1 TIMESTAMP PUSH2 0x21E7 JUMP JUMPDEST SWAP1 POP PUSH2 0x137C DUP2 PUSH3 0x15180 PUSH2 0x211F JUMP JUMPDEST SWAP5 POP PUSH2 0x138B PUSH3 0x15180 DUP3 PUSH2 0x3015 JUMP JUMPDEST SWAP1 POP PUSH2 0x1399 DUP2 PUSH2 0xE10 PUSH2 0x211F JUMP JUMPDEST SWAP4 POP PUSH2 0x13A7 PUSH2 0xE10 DUP3 PUSH2 0x3015 JUMP JUMPDEST SWAP1 POP PUSH2 0x13B4 DUP2 PUSH1 0x3C PUSH2 0x211F JUMP JUMPDEST SWAP3 POP PUSH2 0x13C1 PUSH1 0x3C DUP3 PUSH2 0x3015 JUMP JUMPDEST SWAP2 POP POP SWAP2 SWAP4 POP SWAP2 SWAP4 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x13F5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB1F SWAP1 PUSH2 0x2EE2 JUMP JUMPDEST PUSH1 0x19 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAEB CALLER DUP5 DUP5 PUSH2 0x1B36 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1431 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB1F SWAP1 PUSH2 0x2EE2 JUMP JUMPDEST ADDRESS PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x102B JUMPI PUSH2 0x102B DUP2 PUSH2 0x2229 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x147A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB1F SWAP1 PUSH2 0x2EE2 JUMP JUMPDEST PUSH1 0x24 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x14C6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB1F SWAP1 PUSH2 0x2EE2 JUMP JUMPDEST TIMESTAMP PUSH1 0x5 SSTORE PUSH1 0x6 SSTORE PUSH1 0x28 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1506 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB1F SWAP1 PUSH2 0x2EE2 JUMP JUMPDEST PUSH1 0x28 DUP1 SLOAD PUSH4 0xFF000000 NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x153F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB1F SWAP1 PUSH2 0x2EE2 JUMP JUMPDEST PUSH1 0x23 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x158B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB1F SWAP1 PUSH2 0x2EE2 JUMP JUMPDEST PUSH1 0x8 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x15BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB1F SWAP1 PUSH2 0x2EE2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15D2 DUP3 PUSH2 0x15CC DUP6 DUP2 DUP10 DUP10 PUSH2 0x23C8 JUMP JUMPDEST SWAP1 PUSH2 0x23C8 JUMP JUMPDEST SWAP1 POP PUSH1 0xFA DUP2 GT ISZERO PUSH2 0x163F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x31 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53756D206F66206275792066656573206D757374206265206C65737320746861 PUSH1 0x44 DUP3 ADD MSTORE PUSH17 0x6E206F7220657175616C20746F20323525 PUSH1 0x78 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB1F JUMP JUMPDEST PUSH1 0x28 SLOAD PUSH5 0x100000000 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1694 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x151A1A5CC8199D5B98DD1A5BDB881A5CC8191A58589B1959 PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB1F JUMP JUMPDEST PUSH1 0xD DUP6 SWAP1 SSTORE PUSH1 0x9 DUP5 SWAP1 SSTORE PUSH1 0xF DUP4 SWAP1 SSTORE PUSH1 0xB DUP3 SWAP1 SSTORE PUSH1 0xE DUP6 SWAP1 SSTORE PUSH1 0xA DUP5 SWAP1 SSTORE PUSH1 0x10 DUP4 SWAP1 SSTORE PUSH1 0xC DUP3 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP7 SWAP1 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x892B2CAA2D791BF7B8D9A49C4DB7A4513FF1AE2E0E068ED217F9D5AB4C1A28F0 SWAP1 PUSH1 0x80 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1736 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB1F SWAP1 PUSH2 0x2EE2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1781 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB1F SWAP1 PUSH2 0x2EE2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x17E6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB1F JUMP JUMPDEST PUSH2 0x102B DUP2 PUSH2 0x2427 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1819 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB1F SWAP1 PUSH2 0x2EE2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x182B DUP3 PUSH2 0x15CC DUP6 DUP2 DUP10 DUP10 PUSH2 0x23C8 JUMP JUMPDEST SWAP1 POP PUSH1 0xFA DUP2 GT ISZERO PUSH2 0x1899 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53756D206F662073656C6C2066656573206D757374206265206C657373207468 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x616E206F7220657175616C20746F20323525 PUSH1 0x70 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB1F JUMP JUMPDEST PUSH1 0x28 SLOAD PUSH5 0x100000000 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x18EE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x151A1A5CC8199D5B98DD1A5BDB881A5CC8191A58589B1959 PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB1F JUMP JUMPDEST PUSH1 0x15 DUP6 SWAP1 SSTORE PUSH1 0x11 DUP5 SWAP1 SSTORE PUSH1 0x17 DUP4 SWAP1 SSTORE PUSH1 0x13 DUP3 SWAP1 SSTORE PUSH1 0x16 DUP6 SWAP1 SSTORE PUSH1 0x12 DUP5 SWAP1 SSTORE PUSH1 0x18 DUP4 SWAP1 SSTORE PUSH1 0x14 DUP3 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP7 SWAP1 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x439932620C72DDDEA29980C098BCA1A482729646D1216B226D723C6D278A30D1 SWAP1 PUSH1 0x80 ADD PUSH2 0x16FD JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1985 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB1F SWAP1 PUSH2 0x2EE2 JUMP JUMPDEST PUSH1 0x28 SLOAD PUSH4 0x1000000 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x19EF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x7468697320636F6E74726163742063616E6E6F7420626C61636B6C6973742061 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6464726573736573 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB1F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1A74 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB1F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1AD5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB1F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1B9A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB1F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1BFC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB1F JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x1C5E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E7366657220616D6F756E74206D757374206265206772656174657220 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x7468616E207A65726F PUSH1 0xB8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB1F JUMP JUMPDEST PUSH1 0x1 PUSH2 0x1C72 PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO DUP1 ISZERO PUSH2 0x1CA1 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1CB6 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ADDRESS EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1CCB JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ADDRESS EQ ISZERO JUMPDEST ISZERO PUSH2 0x208B JUMPI PUSH1 0x28 SLOAD PUSH1 0xFF AND PUSH2 0x1D1A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x54726164696E67206973206E6F7420616374697665 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB1F JUMP JUMPDEST PUSH1 0x26 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP2 AND EQ DUP1 ISZERO PUSH2 0x1D45 JUMPI POP PUSH1 0x25 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1DC6 JUMPI PUSH1 0x6 SLOAD PUSH1 0x5 SLOAD PUSH2 0x1D59 SWAP2 PUSH2 0x23C8 JUMP JUMPDEST TIMESTAMP GT PUSH2 0x1D82 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x1DA8 DUP4 PUSH2 0x15CC DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST GT ISZERO PUSH2 0x1DC6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB1F SWAP1 PUSH2 0x2E7B JUMP JUMPDEST PUSH1 0x28 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x1DEC JUMPI POP PUSH1 0x26 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP2 AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1E05 JUMPI POP PUSH1 0x26 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ JUMPDEST ISZERO PUSH2 0x2016 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x1E4A JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x1E53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1A SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1EF8 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1B PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD TIMESTAMP LT ISZERO PUSH2 0x1EC6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374726F6E672048616E64732050726F746F636F6C2061637469766500000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB1F JUMP JUMPDEST PUSH1 0x1A SLOAD PUSH2 0x1EDE SWAP1 PUSH2 0x100 SWAP1 DIV PUSH4 0xFFFFFFFF AND TIMESTAMP PUSH2 0x2F87 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1B PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMPDEST PUSH1 0x1C SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1F5E JUMPI PUSH1 0x1E SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1F56 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53656C6C732073746F70706564206279204469616D6F6E6420466C6F6F720000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB1F JUMP JUMPDEST PUSH2 0x1F5E PUSH2 0x2477 JUMP JUMPDEST ADDRESS PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x8 SLOAD DUP2 LT PUSH2 0x2014 JUMPI DUP1 ISZERO PUSH2 0x2002 JUMPI PUSH1 0x0 PUSH2 0x1FA2 PUSH1 0x11 SLOAD PUSH2 0x15CC PUSH1 0x13 SLOAD PUSH2 0x15CC PUSH1 0x17 SLOAD PUSH1 0x15 SLOAD PUSH2 0x23C8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST GT ISZERO PUSH2 0x2002 JUMPI PUSH1 0x0 PUSH2 0x1FDD PUSH2 0x1FD0 PUSH1 0x11 SLOAD PUSH2 0x15CC PUSH1 0x13 SLOAD PUSH2 0x15CC PUSH1 0x17 SLOAD PUSH1 0x15 SLOAD PUSH2 0x23C8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH2 0x12AD SWAP1 DUP6 PUSH2 0x2168 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x1FF5 JUMPI PUSH2 0x1FF2 DUP4 DUP4 PUSH2 0x21E7 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0x1FFF DUP3 DUP3 PUSH2 0x2526 JUMP JUMPDEST POP POP JUMPDEST SELFBALANCE DUP1 ISZERO PUSH2 0x2012 JUMPI PUSH2 0x2012 SELFBALANCE PUSH2 0x2599 JUMP JUMPDEST POP JUMPDEST POP JUMPDEST PUSH1 0x26 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP2 AND EQ DUP1 ISZERO SWAP1 PUSH2 0x2042 JUMPI POP PUSH1 0x26 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x208B JUMPI PUSH1 0x7 SLOAD PUSH2 0x206D DUP4 PUSH2 0x15CC DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST GT ISZERO PUSH2 0x208B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB1F SWAP1 PUSH2 0x2E7B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 PUSH2 0x20CA JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x20D3 JUMPI POP PUSH1 0x0 JUMPDEST PUSH2 0x20DF DUP5 DUP5 DUP5 DUP5 PUSH2 0x26D9 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x2109 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB1F SWAP2 SWAP1 PUSH2 0x2E28 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x2116 DUP5 DUP7 PUSH2 0x2FFE JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2161 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x2777 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2177 JUMPI POP PUSH1 0x0 PUSH2 0xAEF JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2183 DUP4 DUP6 PUSH2 0x2FB3 JUMP JUMPDEST SWAP1 POP DUP3 PUSH2 0x2190 DUP6 DUP4 PUSH2 0x2F9F JUMP JUMPDEST EQ PUSH2 0x2161 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206D756C7469706C69636174696F6E206F766572666C6F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x77 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB1F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2161 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x20E5 JUMP JUMPDEST PUSH1 0x28 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE PUSH1 0x0 SWAP3 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP ADDRESS DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x227B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x25 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP1 SWAP4 AND SWAP3 PUSH4 0xAD5C4648 SWAP3 PUSH1 0x4 DUP1 DUP4 ADD SWAP4 SWAP2 SWAP3 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x22CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x22E3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2307 SWAP2 SWAP1 PUSH2 0x2C4C JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x2328 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x25 SLOAD PUSH2 0x234E SWAP2 ADDRESS SWAP2 AND DUP5 PUSH2 0x1A12 JUMP JUMPDEST PUSH1 0x25 SLOAD PUSH1 0x40 MLOAD PUSH4 0x791AC947 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x791AC947 SWAP1 PUSH2 0x2387 SWAP1 DUP6 SWAP1 PUSH1 0x0 SWAP1 DUP7 SWAP1 ADDRESS SWAP1 TIMESTAMP SWAP1 PUSH1 0x4 ADD PUSH2 0x2F17 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x23A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x23B5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x28 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x23D5 DUP4 DUP6 PUSH2 0x2F87 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x2161 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB1F JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2481 PUSH2 0x1143 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x248B JUMPI POP JUMP JUMPDEST PUSH1 0x1D SLOAD DUP2 GT ISZERO PUSH2 0x24A4 JUMPI PUSH1 0x1D SSTORE PUSH1 0x1E DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1C SLOAD PUSH1 0x1D SLOAD PUSH1 0x0 SWAP2 PUSH2 0x24D4 SWAP2 PUSH2 0x3E8 SWAP2 PUSH2 0x12AD SWAP2 PUSH2 0x100 SWAP1 SWAP2 DIV PUSH2 0xFFFF AND SWAP1 PUSH2 0x24CE SWAP1 DUP5 PUSH2 0x2168 JUMP JUMPDEST SWAP1 PUSH2 0x21E7 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 LT ISZERO PUSH2 0x24F2 JUMPI PUSH1 0x1E DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x1D SLOAD PUSH1 0x1F SSTORE JUMPDEST PUSH1 0x1E SLOAD PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x2511 JUMPI POP PUSH1 0x1F SLOAD PUSH2 0x250D SWAP1 PUSH1 0x2 PUSH2 0x2168 JUMP JUMPDEST DUP3 LT ISZERO JUMPDEST ISZERO PUSH2 0x1029 JUMPI POP PUSH1 0x1E DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x1D SSTORE JUMP JUMPDEST PUSH1 0x28 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE PUSH1 0x0 PUSH2 0x2542 DUP4 PUSH1 0x2 PUSH2 0x211F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2550 DUP5 DUP4 PUSH2 0x21E7 JUMP JUMPDEST SWAP1 POP SELFBALANCE PUSH2 0x2565 PUSH2 0x2560 DUP6 DUP6 PUSH2 0x23C8 JUMP JUMPDEST PUSH2 0x2229 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2571 SELFBALANCE DUP4 PUSH2 0x21E7 JUMP JUMPDEST SWAP1 POP DUP3 ISZERO PUSH2 0x23B5 JUMPI PUSH2 0x23B5 DUP4 PUSH2 0x2594 PUSH2 0x258A DUP9 DUP9 PUSH2 0x23C8 JUMP JUMPDEST PUSH2 0x12AD DUP6 DUP10 PUSH2 0x2168 JUMP JUMPDEST PUSH2 0x27A5 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25B8 PUSH1 0x17 SLOAD PUSH2 0x15CC PUSH1 0x13 SLOAD PUSH1 0x15 SLOAD PUSH2 0x23C8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x1029 JUMPI PUSH1 0x0 PUSH2 0x25DB DUP3 PUSH2 0x12AD PUSH1 0x15 SLOAD DUP7 PUSH2 0x2168 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x25F8 DUP4 PUSH2 0x12AD PUSH1 0x17 SLOAD DUP8 PUSH2 0x2168 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x260A DUP3 PUSH2 0x24CE DUP8 DUP7 PUSH2 0x21E7 JUMP JUMPDEST SWAP1 POP DUP3 ISZERO PUSH2 0x264E JUMPI PUSH1 0x21 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP5 ISZERO PUSH2 0x8FC MUL SWAP1 DUP6 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x264C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST DUP2 ISZERO PUSH2 0x2690 JUMPI PUSH1 0x22 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP4 ISZERO PUSH2 0x8FC MUL SWAP1 DUP5 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x268E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST DUP1 ISZERO PUSH2 0x26D2 JUMPI PUSH1 0x23 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x26D0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP1 PUSH2 0x2737 JUMPI PUSH2 0x2737 PUSH1 0xD DUP1 SLOAD PUSH1 0xE SSTORE PUSH1 0x9 DUP1 SLOAD PUSH1 0xA SSTORE PUSH1 0xF DUP1 SLOAD PUSH1 0x10 SSTORE PUSH1 0xB DUP1 SLOAD PUSH1 0xC SSTORE PUSH1 0x0 SWAP4 DUP5 SWAP1 SSTORE SWAP2 DUP4 SWAP1 SSTORE DUP3 SWAP1 SSTORE DUP2 SWAP1 SSTORE PUSH1 0x15 DUP1 SLOAD PUSH1 0x16 SSTORE PUSH1 0x11 DUP1 SLOAD PUSH1 0x12 SSTORE PUSH1 0x17 DUP1 SLOAD PUSH1 0x18 SSTORE PUSH1 0x13 DUP1 SLOAD PUSH1 0x14 SSTORE SWAP3 DUP5 SWAP1 SSTORE SWAP1 DUP4 SWAP1 SSTORE DUP3 SWAP1 SSTORE SSTORE JUMP JUMPDEST PUSH2 0x2742 DUP5 DUP5 DUP5 PUSH2 0x2862 JUMP JUMPDEST PUSH2 0x20DF PUSH1 0xE SLOAD PUSH1 0xD SSTORE PUSH1 0xA SLOAD PUSH1 0x9 SSTORE PUSH1 0x10 SLOAD PUSH1 0xF SSTORE PUSH1 0xC SLOAD PUSH1 0xB SSTORE PUSH1 0x16 SLOAD PUSH1 0x15 SSTORE PUSH1 0x12 SLOAD PUSH1 0x11 SSTORE PUSH1 0x18 SLOAD PUSH1 0x17 SSTORE PUSH1 0x14 SLOAD PUSH1 0x13 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x2798 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB1F SWAP2 SWAP1 PUSH2 0x2E28 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x2116 DUP5 DUP7 PUSH2 0x2F9F JUMP JUMPDEST PUSH1 0x25 SLOAD PUSH2 0x27BD SWAP1 ADDRESS SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH2 0x1A12 JUMP JUMPDEST PUSH1 0x25 SLOAD PUSH1 0x24 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xF305D719 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP2 DUP3 ADD DUP6 SWAP1 MSTORE PUSH1 0x0 PUSH1 0x44 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x64 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x84 DUP4 ADD MSTORE TIMESTAMP PUSH1 0xA4 DUP4 ADD MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xF305D719 SWAP1 DUP4 SWAP1 PUSH1 0xC4 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2829 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x283D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x26D2 SWAP2 SWAP1 PUSH2 0x2DCA JUMP JUMPDEST PUSH2 0x2894 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x26 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP2 AND EQ DUP1 ISZERO PUSH2 0x28BF JUMPI POP PUSH1 0x25 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x2933 JUMPI PUSH2 0x28DF PUSH2 0x3E8 PUSH2 0x12AD PUSH1 0xD SLOAD DUP6 PUSH2 0x2168 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x9 SLOAD PUSH2 0x28FA SWAP1 PUSH2 0x3E8 SWAP1 PUSH2 0x12AD SWAP1 DUP6 SWAP1 PUSH2 0x2168 JUMP JUMPDEST DUP2 MSTORE PUSH1 0xF SLOAD PUSH2 0x2912 SWAP1 PUSH2 0x3E8 SWAP1 PUSH2 0x12AD SWAP1 DUP6 SWAP1 PUSH2 0x2168 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0xB SLOAD PUSH2 0x292D SWAP1 PUSH2 0x3E8 SWAP1 PUSH2 0x12AD SWAP1 DUP6 SWAP1 PUSH2 0x2168 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD MSTORE JUMPDEST PUSH1 0x26 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP2 AND EQ DUP1 ISZERO SWAP1 PUSH2 0x295E JUMPI POP PUSH1 0x26 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ JUMPDEST ISZERO PUSH2 0x29D2 JUMPI PUSH2 0x297E PUSH2 0x3E8 PUSH2 0x12AD PUSH1 0x15 SLOAD DUP6 PUSH2 0x2168 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x11 SLOAD PUSH2 0x2999 SWAP1 PUSH2 0x3E8 SWAP1 PUSH2 0x12AD SWAP1 DUP6 SWAP1 PUSH2 0x2168 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x17 SLOAD PUSH2 0x29B1 SWAP1 PUSH2 0x3E8 SWAP1 PUSH2 0x12AD SWAP1 DUP6 SWAP1 PUSH2 0x2168 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x13 SLOAD PUSH2 0x29CC SWAP1 PUSH2 0x3E8 SWAP1 PUSH2 0x12AD SWAP1 DUP6 SWAP1 PUSH2 0x2168 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD MSTORE JUMPDEST PUSH1 0x26 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP2 AND EQ DUP1 ISZERO SWAP1 PUSH2 0x29FE JUMPI POP PUSH1 0x26 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x2AB8 JUMPI PUSH2 0x2A2F PUSH1 0x64 PUSH2 0x12AD PUSH1 0x19 SLOAD PUSH2 0x2A29 PUSH2 0x3E8 PUSH2 0x12AD PUSH1 0x15 SLOAD DUP10 PUSH2 0x2168 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0x2168 JUMP JUMPDEST DUP2 PUSH1 0x20 ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x2A5E PUSH1 0x64 PUSH2 0x12AD PUSH1 0x19 SLOAD PUSH2 0x2A29 PUSH2 0x3E8 PUSH2 0x12AD PUSH1 0x11 SLOAD DUP10 PUSH2 0x2168 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 MSTORE PUSH1 0x19 SLOAD PUSH1 0x17 SLOAD PUSH2 0x2A83 SWAP2 PUSH1 0x64 SWAP2 PUSH2 0x12AD SWAP2 SWAP1 PUSH2 0x2A29 SWAP1 PUSH2 0x3E8 SWAP1 DUP5 SWAP1 DUP10 SWAP1 PUSH2 0x2168 JUMP JUMPDEST DUP2 PUSH1 0x40 ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x2AB2 PUSH1 0x64 PUSH2 0x12AD PUSH1 0x19 SLOAD PUSH2 0x2A29 PUSH2 0x3E8 PUSH2 0x12AD PUSH1 0x13 SLOAD DUP10 PUSH2 0x2168 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x60 DUP3 ADD MSTORE JUMPDEST PUSH2 0x2AE7 DUP2 PUSH1 0x60 ADD MLOAD PUSH2 0x24CE DUP4 PUSH1 0x40 ADD MLOAD PUSH2 0x24CE DUP6 PUSH1 0x0 ADD MLOAD PUSH2 0x24CE DUP8 PUSH1 0x20 ADD MLOAD DUP10 PUSH2 0x21E7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x2B0F SWAP1 DUP4 PUSH2 0x21E7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x80 DUP5 ADD MLOAD SWAP2 DUP7 AND DUP2 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD PUSH2 0x2B45 SWAP2 PUSH2 0x23C8 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x2BB2 PUSH2 0x2B9C DUP3 PUSH1 0x60 ADD MLOAD PUSH2 0x15CC DUP5 PUSH1 0x40 ADD MLOAD PUSH2 0x15CC DUP7 PUSH1 0x0 ADD MLOAD DUP8 PUSH1 0x20 ADD MLOAD PUSH2 0x23C8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST ADDRESS PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0x23C8 JUMP JUMPDEST ADDRESS PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x80 DUP4 ADD MLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP3 SWAP1 DUP8 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2C2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2C41 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2161 DUP2 PUSH2 0x3055 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2C5D JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x2161 DUP2 PUSH2 0x3055 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2C7A JUMPI DUP1 DUP2 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x2C85 DUP2 PUSH2 0x3055 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x2C95 DUP2 PUSH2 0x3055 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2CB4 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x2CBF DUP2 PUSH2 0x3055 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x2CCF DUP2 PUSH2 0x3055 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2CF2 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x2CFD DUP2 PUSH2 0x3055 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2D1C JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x2161 DUP2 PUSH2 0x306A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2D39 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x2D44 DUP2 PUSH2 0x306A JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x2C95 DUP2 PUSH2 0x3078 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2D68 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x2D71 DUP5 PUSH2 0x2C14 JUMP JUMPDEST SWAP3 POP PUSH2 0x2D7F PUSH1 0x20 DUP6 ADD PUSH2 0x2C14 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD MLOAD PUSH2 0x2D8F DUP2 PUSH2 0x3078 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2DAB JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2DC3 JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2DDE JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 MLOAD SWAP3 POP PUSH1 0x20 DUP5 ADD MLOAD SWAP2 POP PUSH1 0x40 DUP5 ADD MLOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2E0C JUMPI DUP1 DUP2 REVERT JUMPDEST POP POP DUP3 CALLDATALOAD SWAP5 PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP4 PUSH1 0x60 ADD CALLDATALOAD SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE DUP3 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2E54 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x2E38 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x2E65 JUMPI DUP4 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x41 SWAP1 DUP3 ADD MSTORE PUSH32 0x77616C6C65742062616C616E6365206166746572207472616E73666572206D75 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x7374206265206C657373207468616E206D61782077616C6C657420616D6F756E PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0xFA SHL PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD DUP8 DUP4 MSTORE PUSH1 0x20 DUP8 DUP2 DUP6 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP6 ADD MSTORE DUP2 DUP8 MLOAD DUP1 DUP5 MSTORE PUSH1 0xC0 DUP7 ADD SWAP2 POP DUP3 DUP10 ADD SWAP4 POP DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2F66 JUMPI DUP5 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP4 DUP4 ADD SWAP4 SWAP2 DUP4 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x2F41 JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 SWAP1 SWAP7 AND PUSH1 0x60 DUP6 ADD MSTORE POP POP POP PUSH1 0x80 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x2F9A JUMPI PUSH2 0x2F9A PUSH2 0x3029 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2FAE JUMPI PUSH2 0x2FAE PUSH2 0x303F JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x2FCD JUMPI PUSH2 0x2FCD PUSH2 0x3029 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP1 DUP4 AND DUP2 DUP6 AND DUP2 DUP4 DIV DUP2 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x2FF5 JUMPI PUSH2 0x2FF5 PUSH2 0x3029 JUMP JUMPDEST MUL SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x3010 JUMPI PUSH2 0x3010 PUSH2 0x3029 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x3024 JUMPI PUSH2 0x3024 PUSH2 0x303F JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x102B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x102B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x102B JUMPI PUSH1 0x0 DUP1 REVERT INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E6365A2646970667358221220 0xFC JUMPI 0xE2 PUSH23 0x852F112951403513D009406B1B67EBBB47D9537D5EC34D 0xB2 ADD PUSH6 0x7B1064736F6C PUSH4 0x43000804 STOP CALLER ",
							"sourceMap": "8181:21161:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8802:48;;;;;;;;;;;;;;;;;;;15123:25:1;;;15111:2;15096:18;8802:48:0;;;;;;;;12438:92;;;;;;;;;;-1:-1:-1;12518:5:0;;;;;;;;;;;;-1:-1:-1;;;12518:5:0;;;;12438:92;;;;;;;:::i;13387:160::-;;;;;;;;;;-1:-1:-1;13387:160:0;;;;;:::i;:::-;;:::i;:::-;;;5685:14:1;;5678:22;5660:41;;5648:2;5633:18;13387:160:0;5615:92:1;28249:120:0;;;;;;;;;;-1:-1:-1;28249:120:0;;;;;:::i;:::-;;:::i;:::-;;12736:95;;;;;;;;;;-1:-1:-1;8637:18:0;12736:95;;28099:140;;;;;;;;;;-1:-1:-1;28099:140:0;;;;;:::i;:::-;;:::i;13553:308::-;;;;;;;;;;-1:-1:-1;13553:308:0;;;;;:::i;:::-;;:::i;9543:36::-;;;;;;;;;;;;;;;;25855:323;;;;;;;;;;-1:-1:-1;25855:323:0;;;;;:::i;:::-;;:::i;9037:35::-;;;;;;;;;;;;;;;;22762:182;;;;;;;;;;-1:-1:-1;22762:182:0;;;;;:::i;:::-;;:::i;11182:31::-;;;;;;;;;;-1:-1:-1;11182:31:0;;;;;;;;;;;12638:92;;;;;;;;;;-1:-1:-1;12638:92:0;;8413:1;16685:36:1;;16673:2;16658:18;12638:92:0;16640:87:1;11149:27:0;;;;;;;;;;-1:-1:-1;11149:27:0;;;;;;;;;;;11219:31;;;;;;;;;;-1:-1:-1;11219:31:0;;;;;;;;;;;12960:96;;;;;;;;;;-1:-1:-1;12960:96:0;;;;;:::i;:::-;-1:-1:-1;;;;;13036:13:0;13013:4;13036:13;;;:4;:13;;;;;;;;;12960:96;22083:142;;;;;;;;;;;;;:::i;25098:111::-;;;;;;;;;;-1:-1:-1;25098:111:0;;;;;:::i;:::-;;:::i;11010:28::-;;;;;;;;;;-1:-1:-1;11010:28:0;;;;-1:-1:-1;;;;;11010:28:0;;;;;;-1:-1:-1;;;;;4577:32:1;;;4559:51;;4547:2;4532:18;11010:28:0;4514:102:1;25337:95:0;;;;;;;;;;-1:-1:-1;25337:95:0;;;;;:::i;:::-;;:::i;22231:85::-;;;;;;;;;;;;;:::i;8746:50::-;;;;;;;;;;;;;;;;22530:226;;;;;;;;;;;;;:::i;12837:117::-;;;;;;;;;;-1:-1:-1;12837:117:0;;;;;:::i;:::-;-1:-1:-1;;;;;12929:18:0;12903:7;12929:18;;;:9;:18;;;;;;;12837:117;3851:147;;;;;;;;;;;;;:::i;28623:173::-;;;;;;;;;;-1:-1:-1;28623:173:0;;;;;:::i;:::-;;:::i;9912:44::-;;;;;;;;;;;;;;;;10278:33;;;;;;;;;;-1:-1:-1;10278:33:0;;;;;;;;;;;;;;;;;;;6402:14:1;;6395:22;6377:41;;6466:10;6454:23;;;6449:2;6434:18;;6427:51;6350:18;10278:33:0;6332:152:1;9415:36:0;;;;;;;;;;;;;;;;2954:77;;;;;;;;;;-1:-1:-1;2992:7:0;3018:6;-1:-1:-1;;;;;3018:6:0;2954:77;;21998:79;;;;;;;;;;;;;:::i;19677:416::-;;;;;;;;;;;;;:::i;12536:96::-;;;;;;;;;;-1:-1:-1;12618:7:0;;;;;;;;;;;;-1:-1:-1;;;12618:7:0;;;;12536:96;;27857:86;;;;;;;;;;;;;:::i;28802:538::-;;;;;;;;;;-1:-1:-1;28802:538:0;;;;;:::i;:::-;;:::i;:::-;;;;16378:25:1;;;16434:2;16419:18;;16412:34;;;;16462:18;;;16455:34;16520:2;16505:18;;16498:34;16365:3;16350:19;28802:538:0;16332:206:1;25709:140:0;;;;;;;;;;-1:-1:-1;25709:140:0;;;;;:::i;:::-;;:::i;13066:166::-;;;;;;;;;;-1:-1:-1;13066:166:0;;;;;:::i;:::-;;:::i;22322:202::-;;;;;;;;;;;;;:::i;9287:30::-;;;;;;;;;;;;;;;;9162:35;;;;;;;;;;;;;;;;9671:36;;;;;;;;;;;;;;;;10486:32;;;;;;;;;;-1:-1:-1;10486:32:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5982:14:1;;5975:22;5957:41;;6046:6;6034:19;;;6029:2;6014:18;;6007:47;6070:18;;;6063:34;;;;6140:14;6133:22;6128:2;6113:18;;6106:50;6187:3;6172:19;;6165:35;5944:3;5929:19;10486:32:0;5911:295:1;9799:31:0;;;;;;;;;;;;;;;;28376:120;;;;;;;;;;-1:-1:-1;28376:120:0;;;;;:::i;:::-;;:::i;21825:167::-;;;;;;;;;;-1:-1:-1;21825:167:0;;;;;:::i;:::-;;:::i;25610:89::-;;;;;;;;;;;;;:::i;27949:140::-;;;;;;;;;;-1:-1:-1;27949:140:0;;;;;:::i;:::-;;:::i;8912:35::-;;;;;;;;;;;;;;;;13238:143;;;;;;;;;;-1:-1:-1;13238:143:0;;;;;:::i;:::-;-1:-1:-1;;;;;13347:18:0;;;13321:7;13347:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;13238:143;28502:115;;;;;;;;;;-1:-1:-1;28502:115:0;;;;;:::i;:::-;;:::i;26184:823::-;;;;;;;;;;-1:-1:-1;26184:823:0;;;;;:::i;:::-;;:::i;25215:112::-;;;;;;;;;;-1:-1:-1;25215:112:0;;;;;:::i;:::-;;:::i;3302:198::-;;;;;;;;;;-1:-1:-1;3302:198:0;;;;;:::i;:::-;;:::i;27013:838::-;;;;;;;;;;-1:-1:-1;27013:838:0;;;;;:::i;:::-;;:::i;11079:31::-;;;;;;;;;;-1:-1:-1;11079:31:0;;;;;;;;25438:166;;;;;;;;;;-1:-1:-1;25438:166:0;;;;;:::i;:::-;;:::i;13387:160::-;13464:4;13480:39;818:10;13503:7;13512:6;13480:8;:39::i;:::-;-1:-1:-1;13536:4:0;13387:160;;;;;:::o;28249:120::-;3076:6;;-1:-1:-1;;;;;3076:6:0;818:10;3076:22;3068:67;;;;-1:-1:-1;;;3068:67:0;;;;;;;:::i;:::-;;;;;;;;;28336:12:::1;:26:::0;;-1:-1:-1;;;;;;28336:26:0::1;-1:-1:-1::0;;;;;28336:26:0;;;::::1;::::0;;;::::1;::::0;;28249:120::o;28099:140::-;3076:6;;-1:-1:-1;;;;;3076:6:0;818:10;3076:22;3068:67;;;;-1:-1:-1;;;3068:67:0;;;;;;;:::i;:::-;28196:17:::1;:36:::0;;-1:-1:-1;;;;;;28196:36:0::1;-1:-1:-1::0;;;;;28196:36:0;;;::::1;::::0;;;::::1;::::0;;28099:140::o;13553:308::-;13653:4;13669:36;13679:6;13687:9;13698:6;13669:9;:36::i;:::-;13715:118;13724:6;818:10;13744:88;13782:6;13744:88;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;13744:19:0;;;;;;:11;:19;;;;;;;;818:10;13744:33;;;;;;;;;;:37;:88::i;:::-;13715:8;:118::i;:::-;-1:-1:-1;13850:4:0;13553:308;;;;;:::o;25855:323::-;3076:6;;-1:-1:-1;;;;;3076:6:0;818:10;3076:22;3068:67;;;;-1:-1:-1;;;3068:67:0;;;;;;;:::i;:::-;25966:17:::1;8637:18;25978:4;25966:11;:17::i;:::-;25947:15;:36;;25939:91;;;::::0;-1:-1:-1;;;25939:91:0;;11131:2:1;25939:91:0::1;::::0;::::1;11113:21:1::0;11170:2;11150:18;;;11143:30;11209:34;11189:18;;;11182:62;-1:-1:-1;;;11260:18:1;;;11253:40;11310:19;;25939:91:0::1;11103:232:1::0;25939:91:0::1;8637:18;26048:15;:26;;26040:87;;;::::0;-1:-1:-1;;;26040:87:0;;13189:2:1;26040:87:0::1;::::0;::::1;13171:21:1::0;13228:2;13208:18;;;13201:30;13267:34;13247:18;;;13240:62;-1:-1:-1;;;13318:18:1;;;13311:46;13374:19;;26040:87:0::1;13161:238:1::0;26040:87:0::1;26137:16;:34:::0;25855:323::o;22762:182::-;3076:6;;-1:-1:-1;;;;;3076:6:0;818:10;3076:22;3068:67;;;;-1:-1:-1;;;3068:67:0;;;;;;;:::i;:::-;22850:38:::1;::::0;-1:-1:-1;;;22850:38:0;;22882:4:::1;22850:38;::::0;::::1;4559:51:1::0;22833:14:0::1;::::0;-1:-1:-1;;;;;22850:23:0;::::1;::::0;::::1;::::0;4532:18:1;;22850:38:0::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;22833:55;;22905:5;-1:-1:-1::0;;;;;22898:22:0::1;;22921:7;2992::::0;3018:6;-1:-1:-1;;;;;3018:6:0;;2954:77;22921:7:::1;22898:39;::::0;-1:-1:-1;;;;;;22898:39:0::1;::::0;;;;;;-1:-1:-1;;;;;4813:32:1;;;22898:39:0::1;::::0;::::1;4795:51:1::0;4862:18;;;4855:34;;;4768:18;;22898:39:0::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3145:1;22762:182:::0;:::o;22083:142::-;3076:6;;-1:-1:-1;;;;;3076:6:0;818:10;3076:22;3068:67;;;;-1:-1:-1;;;3068:67:0;;;;;;;:::i;:::-;22146:8:::1;::::0;;;::::1;;;22138:51;;;::::0;-1:-1:-1;;;22138:51:0;;7299:2:1;22138:51:0::1;::::0;::::1;7281:21:1::0;7338:2;7318:18;;;7311:30;7377:32;7357:18;;;7350:60;7427:18;;22138:51:0::1;7271:180:1::0;22138:51:0::1;22199:11;:19:::0;;-1:-1:-1;;22199:19:0::1;::::0;;22083:142::o;25098:111::-;3076:6;;-1:-1:-1;;;;;3076:6:0;818:10;3076:22;3068:67;;;;-1:-1:-1;;;3068:67:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;25168:27:0::1;;::::0;;;:18:::1;:27;::::0;;;;:34;;-1:-1:-1;;25168:34:0::1;25198:4;25168:34;::::0;;25098:111::o;25337:95::-;3076:6;;-1:-1:-1;;;;;3076:6:0;818:10;3076:22;3068:67;;;;-1:-1:-1;;;3068:67:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;25404:13:0::1;25420:5;25404:13:::0;;;:4:::1;:13:::0;;;;;:21;;-1:-1:-1;;25404:21:0::1;::::0;;25337:95::o;22231:85::-;3076:6;;-1:-1:-1;;;;;3076:6:0;818:10;3076:22;3068:67;;;;-1:-1:-1;;;3068:67:0;;;;;;;:::i;:::-;22293:8:::1;:16:::0;;-1:-1:-1;;22293:16:0::1;::::0;;22231:85::o;22530:226::-;3076:6;;-1:-1:-1;;;;;3076:6:0;818:10;3076:22;3068:67;;;;-1:-1:-1;;;3068:67:0;;;;;;;:::i;:::-;22612:21:::1;22647:22:::0;;22643:107:::1;;2992:7:::0;3018:6;;22685:54:::1;::::0;-1:-1:-1;;;;;3018:6:0;;;;22685:54;::::1;;;::::0;22720:18;;22685:54;2992:7;22685:54;22720:18;3018:6;22685:54;::::1;;;;;;;;;;;;;::::0;::::1;;;;;;22643:107;3145:1;22530:226::o:0;3851:147::-;3076:6;;-1:-1:-1;;;;;3076:6:0;818:10;3076:22;3068:67;;;;-1:-1:-1;;;3068:67:0;;;;;;;:::i;:::-;3959:1:::1;3943:6:::0;;3922:40:::1;::::0;-1:-1:-1;;;;;3943:6:0;;::::1;::::0;3922:40:::1;::::0;3959:1;;3922:40:::1;3989:1;3972:19:::0;;-1:-1:-1;;;;;;3972:19:0::1;::::0;;3851:147::o;28623:173::-;3076:6;;-1:-1:-1;;;;;3076:6:0;818:10;3076:22;3068:67;;;;-1:-1:-1;;;3068:67:0;;;;;;;:::i;:::-;28713:8:::1;:26:::0;;-1:-1:-1;;28713:26:0::1;::::0;::::1;;;::::0;;28769:20:::1;:8:::0;28780:9:::1;28769:20;:::i;:::-;28749:8;:40:::0;;::::1;::::0;;;::::1;;;-1:-1:-1::0;;28749:40:0;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;28623:173:0:o;21998:79::-;3076:6;;-1:-1:-1;;;;;3076:6:0;818:10;3076:22;3068:67;;;;-1:-1:-1;;;3068:67:0;;;;;;;:::i;:::-;22052:11:::1;:18:::0;;-1:-1:-1;;22052:18:0::1;22066:4;22052:18;::::0;;21998:79::o;19677:416::-;19719:7;19739:16;19757;19793:13;;;;;;;;;-1:-1:-1;;;;;19793:13:0;-1:-1:-1;;;;;19778:41:0;;:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;19738:83;;;;;19835:8;-1:-1:-1;;;;;19835:13:0;19847:1;19835:13;:30;;;-1:-1:-1;;;;;;19852:13:0;;;19835:30;19831:44;;;19874:1;19867:8;;;;19677:416;:::o;19831:44::-;19916:13;;19901:38;;;-1:-1:-1;;;19901:38:0;;;;19951:4;;-1:-1:-1;;;;;19916:13:0;;19901:36;;:38;;;;;;;;;;;;;;19916:13;19901:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;19901:55:0;;:185;;20036:50;-1:-1:-1;;;;;20068:17:0;;;;20036:27;;:17;;20058:4;20036:21;:27::i;:::-;:31;;:50::i;:::-;19901:185;;;19971:50;-1:-1:-1;;;;;20003:17:0;;;;19971:27;;:17;;19993:4;19971:21;:27::i;:50::-;19894:192;;;;19677:416;:::o;27857:86::-;3076:6;;-1:-1:-1;;;;;3076:6:0;818:10;3076:22;3068:67;;;;-1:-1:-1;;;3068:67:0;;;;;;;:::i;:::-;27916:12:::1;:20:::0;;-1:-1:-1;;27916:20:0::1;::::0;;27857:86::o;28802:538::-;-1:-1:-1;;;;;29005:28:0;;28876:13;29005:28;;;:19;:28;;;;;;28876:13;;;;;;;;29036:15;-1:-1:-1;29005:115:0;;29119:1;29005:115;;;-1:-1:-1;;;;;29067:28:0;;;;;;:19;:28;;;;;;:49;;29100:15;29067:32;:49::i;:::-;28985:135;-1:-1:-1;29147:20:0;28985:135;29161:5;29147:13;:20::i;:::-;29139:28;-1:-1:-1;29177:18:0;29190:5;29177:18;;:::i;:::-;;-1:-1:-1;29214:19:0;29177:18;29228:4;29214:13;:19::i;:::-;29205:28;-1:-1:-1;29243:17:0;29256:4;29243:17;;:::i;:::-;;-1:-1:-1;29281:17:0;29243;29295:2;29281:13;:17::i;:::-;29270:28;-1:-1:-1;29319:14:0;29331:2;29319:9;:14;:::i;:::-;29308:25;;28802:538;;;;;;:::o;25709:140::-;3076:6;;-1:-1:-1;;;;;3076:6:0;818:10;3076:22;3068:67;;;;-1:-1:-1;;;3068:67:0;;;;;;;:::i;:::-;25803:25:::1;:39:::0;25709:140::o;13066:166::-;13146:4;13162:42;818:10;13186:9;13197:6;13162:9;:42::i;22322:202::-;3076:6;;-1:-1:-1;;;;;3076:6:0;818:10;3076:22;3068:67;;;;-1:-1:-1;;;3068:67:0;;;;;;;:::i;:::-;22419:4:::1;22375:23;12929:18:::0;;;:9;:18;;;;;;22439:19;;22435:83:::1;;22474:33;22491:15;22474:16;:33::i;28376:120::-:0;3076:6;;-1:-1:-1;;;;;3076:6:0;818:10;3076:22;3068:67;;;;-1:-1:-1;;;3068:67:0;;;;;;;:::i;:::-;28463:12:::1;:26:::0;;-1:-1:-1;;;;;;28463:26:0::1;-1:-1:-1::0;;;;;28463:26:0;;;::::1;::::0;;;::::1;::::0;;28376:120::o;21825:167::-;3076:6;;-1:-1:-1;;;;;3076:6:0;818:10;3076:22;3068:67;;;;-1:-1:-1;;;3068:67:0;;;;;;;:::i;:::-;21910:15:::1;21896:11;:29:::0;21935:10:::1;:22:::0;21967:11:::1;:18:::0;;-1:-1:-1;;21967:18:0::1;21981:4;21967:18;::::0;;21825:167::o;25610:89::-;3076:6;;-1:-1:-1;;;;;3076:6:0;818:10;3076:22;3068:67;;;;-1:-1:-1;;;3068:67:0;;;;;;;:::i;:::-;25672:12:::1;:20:::0;;-1:-1:-1;;25672:20:0::1;::::0;;25610:89::o;27949:140::-;3076:6;;-1:-1:-1;;;;;3076:6:0;818:10;3076:22;3068:67;;;;-1:-1:-1;;;3068:67:0;;;;;;;:::i;:::-;28046:17:::1;:36:::0;;-1:-1:-1;;;;;;28046:36:0::1;-1:-1:-1::0;;;;;28046:36:0;;;::::1;::::0;;;::::1;::::0;;27949:140::o;28502:115::-;3076:6;;-1:-1:-1;;;;;3076:6:0;818:10;3076:22;3068:67;;;;-1:-1:-1;;;3068:67:0;;;;;;;:::i;:::-;28583:15:::1;:27:::0;28502:115::o;26184:823::-;3076:6;;-1:-1:-1;;;;;3076:6:0;818:10;3076:22;3068:67;;;;-1:-1:-1;;;3068:67:0;;;;;;;:::i;:::-;26319:16:::1;26338:61;26386:12:::0;26338:43:::1;26373:7:::0;26338:43;:12;26355;26338:16:::1;:30::i;:::-;:34:::0;::::1;:43::i;:61::-;26319:80;;26429:3;26417:8;:15;;26409:77;;;::::0;-1:-1:-1;;;26409:77:0;;8062:2:1;26409:77:0::1;::::0;::::1;8044:21:1::0;8101:2;8081:18;;;8074:30;8140:34;8120:18;;;8113:62;-1:-1:-1;;;8191:18:1;;;8184:47;8248:19;;26409:77:0::1;8034:239:1::0;26409:77:0::1;26504:12;::::0;;;::::1;;;26496:49;;;::::0;-1:-1:-1;;;26496:49:0;;14421:2:1;26496:49:0::1;::::0;::::1;14403:21:1::0;14460:2;14440:18;;;14433:30;-1:-1:-1;;;14479:18:1;;;14472:54;14543:18;;26496:49:0::1;14393:174:1::0;26496:49:0::1;26556:16;:31:::0;;;26597:16:::1;:31:::0;;;26638:11:::1;:21:::0;;;26669:16:::1;:31:::0;;;26719:24:::1;:43:::0;;;26772:24:::1;:43:::0;;;26825:19:::1;:33:::0;;;26868:24:::1;:43:::0;;;26935:65:::1;::::0;;16378:25:1;;;16434:2;16419:18;;16412:34;;;16462:18;;;16455:34;;;16520:2;16505:18;;16498:34;;;26935:65:0::1;::::0;16365:3:1;16350:19;26935:65:0::1;;;;;;;;3145:1;26184:823:::0;;;;:::o;25215:112::-;3076:6;;-1:-1:-1;;;;;3076:6:0;818:10;3076:22;3068:67;;;;-1:-1:-1;;;3068:67:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;25285:27:0::1;25315:5;25285:27:::0;;;:18:::1;:27;::::0;;;;:35;;-1:-1:-1;;25285:35:0::1;::::0;;25215:112::o;3302:198::-;3076:6;;-1:-1:-1;;;;;3076:6:0;818:10;3076:22;3068:67;;;;-1:-1:-1;;;3068:67:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;3390:22:0;::::1;3382:73;;;::::0;-1:-1:-1;;;3382:73:0;;8830:2:1;3382:73:0::1;::::0;::::1;8812:21:1::0;8869:2;8849:18;;;8842:30;8908:34;8888:18;;;8881:62;-1:-1:-1;;;8959:18:1;;;8952:36;9005:19;;3382:73:0::1;8802:228:1::0;3382:73:0::1;3465:28;3484:8;3465:18;:28::i;27013:838::-:0;3076:6;;-1:-1:-1;;;;;3076:6:0;818:10;3076:22;3068:67;;;;-1:-1:-1;;;3068:67:0;;;;;;;:::i;:::-;27149:16:::1;27168:61;27216:12:::0;27168:43:::1;27203:7:::0;27168:43;:12;27185;27168:16:::1;:30::i;:61::-;27149:80;;27259:3;27247:8;:15;;27239:78;;;::::0;-1:-1:-1;;;27239:78:0;;10712:2:1;27239:78:0::1;::::0;::::1;10694:21:1::0;10751:2;10731:18;;;10724:30;10790:34;10770:18;;;10763:62;-1:-1:-1;;;10841:18:1;;;10834:48;10899:19;;27239:78:0::1;10684:240:1::0;27239:78:0::1;27335:12;::::0;;;::::1;;;27327:49;;;::::0;-1:-1:-1;;;27327:49:0;;14421:2:1;27327:49:0::1;::::0;::::1;14403:21:1::0;14460:2;14440:18;;;14433:30;-1:-1:-1;;;14479:18:1;;;14472:54;14543:18;;27327:49:0::1;14393:174:1::0;27327:49:0::1;27387:17;:32:::0;;;27429:17:::1;:32:::0;;;27471:12:::1;:22:::0;;;27503:17:::1;:32:::0;;;27554:25:::1;:45:::0;;;27609:25:::1;:45:::0;;;27664:20:::1;:35:::0;;;27709:25:::1;:45:::0;;;27778:66:::1;::::0;;16378:25:1;;;16434:2;16419:18;;16412:34;;;16462:18;;;16455:34;;;16520:2;16505:18;;16498:34;;;27778:66:0::1;::::0;16365:3:1;16350:19;27778:66:0::1;16332:206:1::0;25438:166:0;3076:6;;-1:-1:-1;;;;;3076:6:0;818:10;3076:22;3068:67;;;;-1:-1:-1;;;3068:67:0;;;;;;;:::i;:::-;25510:12:::1;::::0;;;::::1;;;25502:65;;;::::0;-1:-1:-1;;;25502:65:0;;13606:2:1;25502:65:0::1;::::0;::::1;13588:21:1::0;13645:2;13625:18;;;13618:30;13684:34;13664:18;;;13657:62;-1:-1:-1;;;13735:18:1;;;13728:38;13783:19;;25502:65:0::1;13578:230:1::0;25502:65:0::1;-1:-1:-1::0;;;;;25577:13:0::1;;::::0;;;:4:::1;:13:::0;;;;;:20;;-1:-1:-1;;25577:20:0::1;25593:4;25577:20;::::0;;25438:166::o;15040:330::-;-1:-1:-1;;;;;15132:19:0;;15124:68;;;;-1:-1:-1;;;15124:68:0;;14774:2:1;15124:68:0;;;14756:21:1;14813:2;14793:18;;;14786:30;14852:34;14832:18;;;14825:62;-1:-1:-1;;;14903:18:1;;;14896:34;14947:19;;15124:68:0;14746:226:1;15124:68:0;-1:-1:-1;;;;;15210:21:0;;15202:68;;;;-1:-1:-1;;;15202:68:0;;9237:2:1;15202:68:0;;;9219:21:1;9276:2;9256:18;;;9249:30;9315:34;9295:18;;;9288:62;-1:-1:-1;;;9366:18:1;;;9359:32;9408:19;;15202:68:0;9209:224:1;15202:68:0;-1:-1:-1;;;;;15280:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;15331:32;;15123:25:1;;;15331:32:0;;15096:18:1;15331:32:0;;;;;;;15040:330;;;:::o;15380:3067::-;-1:-1:-1;;;;;15467:18:0;;15459:68;;;;-1:-1:-1;;;15459:68:0;;14015:2:1;15459:68:0;;;13997:21:1;14054:2;14034:18;;;14027:30;14093:34;14073:18;;;14066:62;-1:-1:-1;;;14144:18:1;;;14137:35;14189:19;;15459:68:0;13987:227:1;15459:68:0;-1:-1:-1;;;;;15545:16:0;;15537:64;;;;-1:-1:-1;;;15537:64:0;;7658:2:1;15537:64:0;;;7640:21:1;7697:2;7677:18;;;7670:30;7736:34;7716:18;;;7709:62;-1:-1:-1;;;7787:18:1;;;7780:33;7830:19;;15537:64:0;7630:225:1;15537:64:0;15628:1;15619:6;:10;15611:64;;;;-1:-1:-1;;;15611:64:0;;12779:2:1;15611:64:0;;;12761:21:1;12818:2;12798:18;;;12791:30;12857:34;12837:18;;;12830:62;-1:-1:-1;;;12908:18:1;;;12901:39;12957:19;;15611:64:0;12751:231:1;15611:64:0;15701:4;15728:7;2992;3018:6;-1:-1:-1;;;;;3018:6:0;;2954:77;15728:7;-1:-1:-1;;;;;15720:15:0;:4;-1:-1:-1;;;;;15720:15:0;;;:32;;;;-1:-1:-1;2992:7:0;3018:6;-1:-1:-1;;;;;15739:13:0;;;3018:6;;15739:13;;15720:32;:57;;;;-1:-1:-1;;;;;;15756:21:0;;15772:4;15756:21;;15720:57;:80;;;;-1:-1:-1;;;;;;15781:19:0;;15795:4;15781:19;;15720:80;15716:2559;;;15824:11;;;;15816:45;;;;-1:-1:-1;;;15816:45:0;;8480:2:1;15816:45:0;;;8462:21:1;8519:2;8499:18;;;8492:30;-1:-1:-1;;;8538:18:1;;;8531:51;8599:18;;15816:45:0;8452:171:1;15816:45:0;15887:13;;-1:-1:-1;;;;;15879:21:0;;;15887:13;;15879:21;:55;;;;-1:-1:-1;15918:15:0;;-1:-1:-1;;;;;15904:30:0;;;15918:15;;15904:30;;15879:55;15875:349;;;16000:10;;15984:11;;:27;;:15;:27::i;:::-;15965:15;:46;15961:108;;-1:-1:-1;;;;;16035:8:0;;;;;;:4;:8;;;;;:15;;-1:-1:-1;;16035:15:0;16046:4;16035:15;;;15961:108;16123:16;;16094:25;16112:6;16094:13;16104:2;-1:-1:-1;;;;;12929:18:0;12903:7;12929:18;;;:9;:18;;;;;;;12837:117;16094:25;:45;;16086:123;;;;-1:-1:-1;;;16086:123:0;;;;;;;:::i;:::-;16255:6;;;;;;;16254:7;:32;;;;-1:-1:-1;16273:13:0;;-1:-1:-1;;;;;16265:21:0;;;16273:13;;16265:21;;16254:32;:55;;;;-1:-1:-1;16296:13:0;;-1:-1:-1;;;;;16290:19:0;;;16296:13;;16290:19;16254:55;16250:1766;;;-1:-1:-1;;;;;16346:10:0;;;;;;:4;:10;;;;;;;;16345:11;:24;;;;-1:-1:-1;;;;;;16361:8:0;;;;;;:4;:8;;;;;;;;16360:9;16345:24;16337:33;;;;;;16438:8;:16;;;16434:233;;;-1:-1:-1;;;;;16505:25:0;;;;;;:19;:25;;;;;;16486:15;:44;;16478:85;;;;-1:-1:-1;;;16478:85:0;;9640:2:1;16478:85:0;;;9622:21:1;9679:2;9659:18;;;9652:30;9718;9698:18;;;9691:58;9766:18;;16478:85:0;9612:178:1;16478:85:0;16631:8;:17;16613:35;;16631:17;;;;;16613:15;:35;:::i;:::-;-1:-1:-1;;;;;16585:25:0;;;;;;:19;:25;;;;;:63;16434:233;16728:12;:20;;;16724:180;;;16781:24;;;;16780:25;16772:68;;;;-1:-1:-1;;;16772:68:0;;10353:2:1;16772:68:0;;;10335:21:1;10392:2;10372:18;;;10365:30;10431:32;10411:18;;;10404:60;10481:18;;16772:68:0;10325:180:1;16772:68:0;16862:23;:21;:23::i;:::-;16987:4;16938:28;12929:18;;;:9;:18;;;;;;17040:15;;17016:39;;17012:969;;17083:24;;17079:679;;17223:1;17139:81;17202:17;;17139:58;17179:17;;17139:35;17161:12;;17139:17;;:21;;:35;;;;:::i;:81::-;:85;17135:601;;;17256:20;17279:130;17327:81;17390:17;;17327:58;17367:17;;17327:35;17349:12;;17327:17;;:21;;:35;;;;:::i;:81::-;17279:17;;:43;;17301:20;17279:21;:43::i;:130::-;17256:153;;17439:15;17516:12;17492:20;:36;17488:155;;17574:38;:20;17599:12;17574:24;:38::i;:::-;17564:48;;17488:155;17672:37;17687:12;17701:7;17672:14;:37::i;:::-;17135:601;;;17808:21;17855:22;;17851:112;;17905:35;17918:21;17905:12;:35::i;:::-;17012:969;;16250:1766;;18041:13;;-1:-1:-1;;;;;18033:21:0;;;18041:13;;18033:21;;;;:44;;-1:-1:-1;18064:13:0;;-1:-1:-1;;;;;18058:19:0;;;18064:13;;18058:19;;18033:44;18030:235;;;18163:16;;18134:25;18152:6;18134:13;18144:2;-1:-1:-1;;;;;12929:18:0;12903:7;12929:18;;;:9;:18;;;;;;;12837:117;18134:25;:45;;18126:123;;;;-1:-1:-1;;;18126:123:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;18289:24:0;;;;;;:18;:24;;;;;;;;;:50;;-1:-1:-1;;;;;;18317:22:0;;;;;;:18;:22;;;;;;;;18289:50;18285:96;;;-1:-1:-1;18365:5:0;18285:96;18399:41;18414:4;18420:2;18424:6;18432:7;18399:14;:41::i;:::-;15380:3067;;;;:::o;1849:186::-;1935:7;1970:12;1962:6;;;;1954:29;;;;-1:-1:-1;;;1954:29:0;;;;;;;;:::i;:::-;-1:-1:-1;1993:9:0;2005:5;2009:1;2005;:5;:::i;:::-;1993:17;1849:186;-1:-1:-1;;;;;1849:186:0:o;2286:130::-;2344:7;2370:39;2374:1;2377;2370:39;;;;;;;;;;;;;;;;;:3;:39::i;:::-;2363:46;2286:130;-1:-1:-1;;;2286:130:0:o;2041:239::-;2099:7;2122:6;2118:45;;-1:-1:-1;2151:1:0;2144:8;;2118:45;2172:9;2184:5;2188:1;2184;:5;:::i;:::-;2172:17;-1:-1:-1;2216:1:0;2207:5;2211:1;2172:17;2207:5;:::i;:::-;:10;2199:56;;;;-1:-1:-1;;;2199:56:0;;12016:2:1;2199:56:0;;;11998:21:1;12055:2;12035:18;;;12028:30;12094:34;12074:18;;;12067:62;-1:-1:-1;;;12145:18:1;;;12138:31;12186:19;;2199:56:0;11988:223:1;1709:134:0;1767:7;1793:43;1797:1;1800;1793:43;;;;;;;;;;;;;;;;;:3;:43::i;18456:401::-;11596:6;:13;;-1:-1:-1;;11596:13:0;;;;;18557:16:::1;::::0;;18571:1:::1;18557:16:::0;;;;;::::1;::::0;;-1:-1:-1;;18557:16:0::1;::::0;::::1;::::0;;::::1;::::0;::::1;;::::0;-1:-1:-1;18557:16:0::1;18533:40;;18601:4;18583;18588:1;18583:7;;;;;;-1:-1:-1::0;;;18583:7:0::1;;;;;;;;;-1:-1:-1::0;;;;;18583:23:0;;::::1;:7;::::0;;::::1;::::0;;;;;;:23;;;;18626:15:::1;::::0;:22:::1;::::0;;-1:-1:-1;;;18626:22:0;;;;:15;;;::::1;::::0;:20:::1;::::0;:22:::1;::::0;;::::1;::::0;18583:7;;18626:22;;;;;:15;:22;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18616:4;18621:1;18616:7;;;;;;-1:-1:-1::0;;;18616:7:0::1;;;;;;;;;-1:-1:-1::0;;;;;18616:32:0;;::::1;:7;::::0;;::::1;::::0;;;;;:32;18690:15:::1;::::0;18658:62:::1;::::0;18675:4:::1;::::0;18690:15:::1;18708:11:::0;18658:8:::1;:62::i;:::-;18730:15;::::0;:120:::1;::::0;-1:-1:-1;;;18730:120:0;;-1:-1:-1;;;;;18730:15:0;;::::1;::::0;:66:::1;::::0;:120:::1;::::0;18797:11;;18730:15:::1;::::0;18813:4;;18827::::1;::::0;18834:15:::1;::::0;18730:120:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;11630:6:0;:14;;-1:-1:-1;;11630:14:0;;;-1:-1:-1;;;;18456:401:0:o;1528:175::-;1586:7;;1617:5;1621:1;1617;:5;:::i;:::-;1605:17;;1645:1;1640;:6;;1632:46;;;;-1:-1:-1;;;1632:46:0;;9997:2:1;1632:46:0;;;9979:21:1;10036:2;10016:18;;;10009:30;10075:29;10055:18;;;10048:57;10122:18;;1632:46:0;9969:177:1;3654:187:0;3727:16;3746:6;;-1:-1:-1;;;;;3762:17:0;;;-1:-1:-1;;;;;;3762:17:0;;;;;;3794:40;;3746:6;;;;;;;3794:40;;3727:16;3794:40;3654:187;;:::o;18863:808::-;18914:20;18937:11;:9;:11::i;:::-;18914:34;-1:-1:-1;18962:17:0;18958:30;;18981:7;18863:808::o;18958:30::-;19017:21;;19002:36;;18998:169;;;19054:21;:36;19104:24;:32;;-1:-1:-1;;19104:32:0;;;18863:808::o;18998:169::-;19251:12;:30;19202:21;;19177:22;;19202:103;;19300:4;;19202:80;;19251:30;;;;;;;19202:44;;19300:4;19202:38;:44::i;:::-;:48;;:80::i;:103::-;19177:128;;19335:14;19320:12;:29;19316:152;;;19365:24;:31;;-1:-1:-1;;19365:31:0;19392:4;19365:31;;;19436:21;;19410:23;:47;19316:152;19482:24;;;;:74;;;;-1:-1:-1;19526:23:0;;:30;;19554:1;19526:27;:30::i;:::-;19510:12;:46;;19482:74;19478:187;;;-1:-1:-1;19572:24:0;:32;;-1:-1:-1;;19572:32:0;;;19618:21;:36;18863:808::o;20564:507::-;11596:6;:13;;-1:-1:-1;;11596:13:0;;;;;;20681:15:::1;:8:::0;20694:1:::1;20681:12;:15::i;:::-;20666:30:::0;-1:-1:-1;20706:17:0::1;20726:18;:8:::0;20666:30;20726:12:::1;:18::i;:::-;20706:38:::0;-1:-1:-1;20779:21:0::1;20810:48;20827:30;:20:::0;20852:4;20827:24:::1;:30::i;:::-;20810:16;:48::i;:::-;20868:18;20889:41;:21;20915:14:::0;20889:25:::1;:41::i;:::-;20868:62:::0;-1:-1:-1;20944:13:0;;20940:125:::1;;20973:81;20986:9:::0;20997:56:::1;21022:30;:20:::0;21047:4;21022:24:::1;:30::i;:::-;20997:20;:10:::0;21012:4;20997:14:::1;:20::i;:56::-;20973:12;:81::i;21077:742::-:0;21133:17;21153:58;21198:12;;21153:40;21175:17;;21153;;:21;;:40;;;;:::i;:58::-;21133:78;-1:-1:-1;21225:14:0;;21221:592;;21255:24;21282:44;21316:9;21282:29;21293:17;;21282:6;:10;;:29;;;;:::i;:44::-;21255:71;;21340:19;21362:39;21391:9;21362:24;21373:12;;21362:6;:10;;:24;;;;:::i;:39::-;21340:61;-1:-1:-1;21415:18:0;21436:45;21340:61;21436:28;:6;21447:16;21436:10;:28::i;:45::-;21415:66;-1:-1:-1;21499:20:0;;21495:103;;21539:17;;:44;;-1:-1:-1;;;;;21539:17:0;;;;:44;;;;;21566:16;;21539:17;:44;:17;:44;21566:16;21539:17;:44;;;;;;;;;;;;;;;;;;;;;21495:103;21615:15;;21611:88;;21650:12;;:34;;-1:-1:-1;;;;;21650:12:0;;;;:34;;;;;21672:11;;21650:12;:34;:12;:34;21672:11;21650:12;:34;;;;;;;;;;;;;;;;;;;;;21611:88;21716:14;;21712:91;;21750:17;;:38;;-1:-1:-1;;;;;21750:17:0;;;;:38;;;;;21777:10;;21750:17;:38;:17;:38;21777:10;21750:17;:38;;;;;;;;;;;;;;;;;;;;;21712:91;21221:592;;;21077:742;;:::o;22950:250::-;23062:7;23057:58;;23090:14;13936:16;;;13909:24;:43;13989:16;;;13962:24;:43;14037:11;;;14015:19;:33;14085:16;;;14058:24;:43;-1:-1:-1;14120:20:0;;;;14150;;;;14180:15;;;14205:20;;;14264:17;;;14236:25;:45;14319:17;;;14291:25;:45;14369:12;;;14346:20;:35;14419:17;;;14391:25;:45;14455:21;;;;14486;;;;14517:16;;;14543:21;13867:704;23090:14;23124:44;23142:6;23150:9;23161:6;23124:17;:44::i;:::-;23178:15;14643:24;;14624:16;:43;14696:24;;14677:16;:43;14744:19;;14730:11;:33;14792:24;;14773:16;:43;14847:25;;14827:17;:45;14902:25;;14882:17;:45;14952:20;;14937:12;:35;15002:25;;14982:17;:45;14581:453;2422:185;2508:7;2542:12;2535:5;2527:28;;;;-1:-1:-1;;;2527:28:0;;;;;;;;:::i;:::-;-1:-1:-1;2565:9:0;2577:5;2581:1;2577;:5;:::i;20103:453::-;20215:15;;20183:62;;20200:4;;-1:-1:-1;;;;;20215:15:0;20233:11;20183:8;:62::i;:::-;20285:15;;20494:12;;;20285:264;;-1:-1:-1;;;20285:264:0;;20358:4;20285:264;;;5249:34:1;5299:18;;;5292:34;;;20285:15:0;5342:18:1;;;5335:34;;;5385:18;;;5378:34;-1:-1:-1;;;;;20494:12:0;;;5428:19:1;;;5421:44;20522:15:0;5481:19:1;;;5474:35;20285:15:0;;;;:31;;20324:9;;5183:19:1;;20285:264:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;23206:1847::-;23302:24;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23302:24:0;23350:13;;-1:-1:-1;;;;;23340:23:0;;;23350:13;;23340:23;:64;;;;-1:-1:-1;23388:15:0;;-1:-1:-1;;;;;23367:37:0;;;23388:15;;23367:37;;23340:64;23336:357;;;23444:38;23477:4;23444:28;23455:16;;23444:6;:10;;:28;;;;:::i;:38::-;23426:15;;;:56;23525:16;;23514:38;;23547:4;;23514:28;;:6;;:10;:28::i;:38::-;23496:56;;23590:11;;23579:33;;23607:4;;23579:23;;:6;;:10;:23::i;:33::-;23566:10;;;:46;23655:16;;23644:38;;23677:4;;23644:28;;:6;;:10;:28::i;:38::-;23626:15;;;:56;23336:357;23716:13;;-1:-1:-1;;;;;23706:23:0;;;23716:13;;23706:23;;;;:53;;-1:-1:-1;23746:13:0;;-1:-1:-1;;;;;23733:26:0;;;23746:13;;23733:26;23706:53;23702:351;;;23800:39;23834:4;23800:29;23811:17;;23800:6;:10;;:29;;;;:::i;:39::-;23782:15;;;:57;23882:17;;23871:39;;23905:4;;23871:29;;:6;;:10;:29::i;:39::-;23853:57;;23948:12;;23937:34;;23966:4;;23937:24;;:6;;:10;:24::i;:34::-;23924:10;;;:47;24014:17;;24003:39;;24037:4;;24003:29;;:6;;:10;:29::i;:39::-;23985:15;;;:57;23702:351;24076:13;;-1:-1:-1;;;;;24066:23:0;;;24076:13;;24066:23;;;;:53;;-1:-1:-1;24106:13:0;;-1:-1:-1;;;;;24093:26:0;;;24106:13;;24093:26;;24066:53;24062:522;;;24163:81;24240:3;24163:72;24209:25;;24164:39;24198:4;24164:29;24175:17;;24164:6;:10;;:29;;;;:::i;:39::-;24163:45;;:72::i;:81::-;24145:4;:15;;:99;;;;;24276:81;24353:3;24276:72;24322:25;;24277:39;24311:4;24277:29;24288:17;;24277:6;:10;;:29;;;;:::i;24276:81::-;24258:99;;24425:25;;24396:12;;24384:76;;24456:3;;24384:67;;24425:25;24385:34;;24414:4;;24384:67;;24385:6;;:10;:24::i;24384:76::-;24371:4;:10;;:89;;;;;24492:81;24569:3;24492:72;24538:25;;24493:39;24527:4;24493:29;24504:17;;24493:6;:10;;:29;;;;:::i;24492:81::-;24474:15;;;:99;24062:522;24617:85;24686:4;:15;;;24617:64;24670:4;:10;;;24617:48;24649:4;:15;;;24617:27;24628:4;:15;;;24617:6;:10;;:27;;;;:::i;:85::-;24602:12;;;:100;-1:-1:-1;;;;;24741:17:0;;;;;;:9;:17;;;;;;:29;;24763:6;24741:21;:29::i;:::-;-1:-1:-1;;;;;24721:17:0;;;;;;;:9;:17;;;;;;:49;;;;24828:12;;;;24803:20;;;;;;;;;;:38;;:24;:38::i;:::-;24780:9;:20;24790:9;-1:-1:-1;;;;;24780:20:0;-1:-1:-1;;;;;24780:20:0;;;;;;;;;;;;:61;;;;24878:103;24907:73;24964:4;:15;;;24907:52;24948:4;:10;;;24907:36;24927:4;:15;;;24907:4;:15;;;:19;;:36;;;;:::i;:73::-;24896:4;24878:24;;;;:9;:24;;;;;;;:28;:103::i;:::-;24869:4;24851:24;;;;:9;:24;;;;;;;;;:130;;;;25033:12;;;;25005:41;;15123:25:1;;;-1:-1:-1;;;;;25005:41:0;;;;;;;;;;15096:18:1;25005:41:0;;;;;;;23206:1847;;;;:::o;14:188:1:-;93:13;;-1:-1:-1;;;;;135:42:1;;125:53;;115:2;;192:1;189;182:12;115:2;74:128;;;:::o;207:257::-;266:6;319:2;307:9;298:7;294:23;290:32;287:2;;;340:6;332;325:22;287:2;384:9;371:23;403:31;428:5;403:31;:::i;469:261::-;539:6;592:2;580:9;571:7;567:23;563:32;560:2;;;613:6;605;598:22;560:2;650:9;644:16;669:31;694:5;669:31;:::i;1005:398::-;1073:6;1081;1134:2;1122:9;1113:7;1109:23;1105:32;1102:2;;;1155:6;1147;1140:22;1102:2;1199:9;1186:23;1218:31;1243:5;1218:31;:::i;:::-;1268:5;-1:-1:-1;1325:2:1;1310:18;;1297:32;1338:33;1297:32;1338:33;:::i;:::-;1390:7;1380:17;;;1092:311;;;;;:::o;1408:466::-;1485:6;1493;1501;1554:2;1542:9;1533:7;1529:23;1525:32;1522:2;;;1575:6;1567;1560:22;1522:2;1619:9;1606:23;1638:31;1663:5;1638:31;:::i;:::-;1688:5;-1:-1:-1;1745:2:1;1730:18;;1717:32;1758:33;1717:32;1758:33;:::i;:::-;1512:362;;1810:7;;-1:-1:-1;;;1864:2:1;1849:18;;;;1836:32;;1512:362::o;1879:325::-;1947:6;1955;2008:2;1996:9;1987:7;1983:23;1979:32;1976:2;;;2029:6;2021;2014:22;1976:2;2073:9;2060:23;2092:31;2117:5;2092:31;:::i;:::-;2142:5;2194:2;2179:18;;;;2166:32;;-1:-1:-1;;;1966:238:1:o;2209:255::-;2276:6;2329:2;2317:9;2308:7;2304:23;2300:32;2297:2;;;2350:6;2342;2335:22;2297:2;2387:9;2381:16;2406:28;2428:5;2406:28;:::i;2469:390::-;2533:6;2541;2594:2;2582:9;2573:7;2569:23;2565:32;2562:2;;;2615:6;2607;2600:22;2562:2;2659:9;2646:23;2678:28;2700:5;2678:28;:::i;:::-;2725:5;-1:-1:-1;2782:2:1;2767:18;;2754:32;2795;2754;2795;:::i;2864:429::-;2951:6;2959;2967;3020:2;3008:9;2999:7;2995:23;2991:32;2988:2;;;3041:6;3033;3026:22;2988:2;3069:40;3099:9;3069:40;:::i;:::-;3059:50;;3128:49;3173:2;3162:9;3158:18;3128:49;:::i;:::-;3118:59;;3220:2;3209:9;3205:18;3199:25;3233:30;3257:5;3233:30;:::i;:::-;3282:5;3272:15;;;2978:315;;;;;:::o;3298:190::-;3357:6;3410:2;3398:9;3389:7;3385:23;3381:32;3378:2;;;3431:6;3423;3416:22;3378:2;-1:-1:-1;3459:23:1;;3368:120;-1:-1:-1;3368:120:1:o;3493:194::-;3563:6;3616:2;3604:9;3595:7;3591:23;3587:32;3584:2;;;3637:6;3629;3622:22;3584:2;-1:-1:-1;3665:16:1;;3574:113;-1:-1:-1;3574:113:1:o;3692:316::-;3780:6;3788;3796;3849:2;3837:9;3828:7;3824:23;3820:32;3817:2;;;3870:6;3862;3855:22;3817:2;3904:9;3898:16;3888:26;;3954:2;3943:9;3939:18;3933:25;3923:35;;3998:2;3987:9;3983:18;3977:25;3967:35;;3807:201;;;;;:::o;4013:395::-;4099:6;4107;4115;4123;4176:3;4164:9;4155:7;4151:23;4147:33;4144:2;;;4198:6;4190;4183:22;4144:2;-1:-1:-1;;4226:23:1;;;4296:2;4281:18;;4268:32;;-1:-1:-1;4347:2:1;4332:18;;4319:32;;4398:2;4383:18;4370:32;;-1:-1:-1;4134:274:1;-1:-1:-1;4134:274:1:o;6489:603::-;6601:4;6630:2;6659;6648:9;6641:21;6691:6;6685:13;6734:6;6729:2;6718:9;6714:18;6707:34;6759:4;6772:140;6786:6;6783:1;6780:13;6772:140;;;6881:14;;;6877:23;;6871:30;6847:17;;;6866:2;6843:26;6836:66;6801:10;;6772:140;;;6930:6;6927:1;6924:13;6921:2;;;7000:4;6995:2;6986:6;6975:9;6971:22;6967:31;6960:45;6921:2;-1:-1:-1;7076:2:1;7055:15;-1:-1:-1;;7051:29:1;7036:45;;;;7083:2;7032:54;;6610:482;-1:-1:-1;;;6610:482:1:o;11340:469::-;11542:2;11524:21;;;11581:2;11561:18;;;11554:30;11620:34;11615:2;11600:18;;11593:62;11691:34;11686:2;11671:18;;11664:62;-1:-1:-1;;;11757:3:1;11742:19;;11735:32;11799:3;11784:19;;11514:295::o;12216:356::-;12418:2;12400:21;;;12437:18;;;12430:30;12496:34;12491:2;12476:18;;12469:62;12563:2;12548:18;;12390:182::o;15159:983::-;15421:4;15469:3;15458:9;15454:19;15500:6;15489:9;15482:25;15526:2;15564:6;15559:2;15548:9;15544:18;15537:34;15607:3;15602:2;15591:9;15587:18;15580:31;15631:6;15666;15660:13;15697:6;15689;15682:22;15735:3;15724:9;15720:19;15713:26;;15774:2;15766:6;15762:15;15748:29;;15795:4;15808:195;15822:6;15819:1;15816:13;15808:195;;;15887:13;;-1:-1:-1;;;;;15883:39:1;15871:52;;15978:15;;;;15943:12;;;;15919:1;15837:9;15808:195;;;-1:-1:-1;;;;;;;16059:32:1;;;;16054:2;16039:18;;16032:60;-1:-1:-1;;;16123:3:1;16108:19;16101:35;16020:3;15430:712;-1:-1:-1;;;15430:712:1:o;16732:128::-;16772:3;16803:1;16799:6;16796:1;16793:13;16790:2;;;16809:18;;:::i;:::-;-1:-1:-1;16845:9:1;;16780:80::o;16865:120::-;16905:1;16931;16921:2;;16936:18;;:::i;:::-;-1:-1:-1;16970:9:1;;16911:74::o;16990:168::-;17030:7;17096:1;17092;17088:6;17084:14;17081:1;17078:21;17073:1;17066:9;17059:17;17055:45;17052:2;;;17103:18;;:::i;:::-;-1:-1:-1;17143:9:1;;17042:116::o;17163:262::-;17202:7;17234:10;17271:2;17268:1;17264:10;17301:2;17298:1;17294:10;17357:3;17353:2;17349:12;17344:3;17341:21;17334:3;17327:11;17320:19;17316:47;17313:2;;;17366:18;;:::i;:::-;17406:13;;17214:211;-1:-1:-1;;;;17214:211:1:o;17430:125::-;17470:4;17498:1;17495;17492:8;17489:2;;;17503:18;;:::i;:::-;-1:-1:-1;17540:9:1;;17479:76::o;17560:112::-;17592:1;17618;17608:2;;17623:18;;:::i;:::-;-1:-1:-1;17657:9:1;;17598:74::o;17677:127::-;17738:10;17733:3;17729:20;17726:1;17719:31;17769:4;17766:1;17759:15;17793:4;17790:1;17783:15;17809:127;17870:10;17865:3;17861:20;17858:1;17851:31;17901:4;17898:1;17891:15;17925:4;17922:1;17915:15;17941:131;-1:-1:-1;;;;;18016:31:1;;18006:42;;17996:2;;18062:1;18059;18052:12;18077:118;18163:5;18156:13;18149:21;18142:5;18139:32;18129:2;;18185:1;18182;18175:12;18200:121;18285:10;18278:5;18274:22;18267:5;18264:33;18254:2;;18311:1;18308;18301:12"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2504000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"_buyEcosystemFee()": "1097",
								"_buyLiquidityFee()": "1095",
								"_buyMarketingFee()": "1073",
								"_buyTeamFee()": "1051",
								"_maxWalletAmount()": "1052",
								"_sellEcosystemFee()": "1053",
								"_sellLiquidityFee()": "1053",
								"_sellMarketingFee()": "1095",
								"_sellTeamFee()": "1052",
								"addBot(address)": "23010",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "22605",
								"balanceOf(address)": "1332",
								"canBlackList()": "1111",
								"canChangeTax()": "1090",
								"canPause()": "1155",
								"configureStrongHands(bool,uint32)": "infinite",
								"cooldown()": "1193",
								"cooldownRemaining(address)": "infinite",
								"decimals()": "289",
								"diamondFloor()": "3689",
								"disableBlackListing()": "21869",
								"disablePauseAbility()": "21936",
								"disableTaxChange()": "21914",
								"disableToken()": "22749",
								"enableToken()": "21921",
								"excludeFromFee(address)": "22112",
								"includeInFee(address)": "22149",
								"isBot(address)": "1334",
								"manualSendToken(address)": "infinite",
								"manualsend()": "infinite",
								"manualswap()": "infinite",
								"name()": "infinite",
								"numTokensToSwap()": "1054",
								"openTrading(uint256)": "62005",
								"owner()": "1122",
								"pairPrice()": "infinite",
								"removeBot(address)": "22150",
								"renounceOwnership()": "24232",
								"setBuyTaxes(uint256,uint256,uint256,uint256)": "infinite",
								"setMaxWalletAmount(uint256)": "21442",
								"setSellTaxes(uint256,uint256,uint256,uint256)": "infinite",
								"setTransferTransactionMultiplier(uint256)": "21132",
								"symbol()": "infinite",
								"totalSupply()": "272",
								"tradingOpen()": "1120",
								"transfer(address,uint256)": "infinite",
								"transferFeeIncreaseFactor()": "1095",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"uniswapV2Pair()": "1127",
								"updateEcosystemAddress(address)": "22094",
								"updateLpRecipient(address)": "22095",
								"updateMarketingAddress(address)": "22118",
								"updateNumTokensToSwap(uint256)": "21131",
								"updateTeamAddress(address)": "22074"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_checkPriceConditions()": "infinite",
								"_tokenTransfer(address,address,uint256,bool)": "infinite",
								"_transfer(address,address,uint256)": "infinite",
								"_transferStandard(address,address,uint256)": "infinite",
								"addLiquidity(uint256,uint256)": "infinite",
								"removeAllFee()": "infinite",
								"restoreAllFee()": "infinite",
								"sendETHToFee(uint256)": "infinite",
								"swapAndLiquify(uint256,uint256)": "infinite",
								"swapTokensForEth(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 8181,
									"end": 29342,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 8181,
									"end": 29342,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 8181,
									"end": 29342,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 8780,
									"end": 8796,
									"name": "PUSH",
									"source": 0,
									"value": "2386F2AB5BCA00"
								},
								{
									"begin": 8746,
									"end": 8796,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 8746,
									"end": 8796,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 8835,
									"end": 8850,
									"name": "PUSH",
									"source": 0,
									"value": "38D7EA4C68000"
								},
								{
									"begin": 8802,
									"end": 8850,
									"name": "PUSH",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 8802,
									"end": 8850,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 8912,
									"end": 8947,
									"name": "PUSH",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 8912,
									"end": 8947,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8912,
									"end": 8947,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8912,
									"end": 8947,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 8972,
									"end": 9031,
									"name": "PUSH",
									"source": 0,
									"value": "A"
								},
								{
									"begin": 8972,
									"end": 9031,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8972,
									"end": 9031,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8972,
									"end": 9031,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 9037,
									"end": 9072,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 9037,
									"end": 9072,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 9037,
									"end": 9072,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 9037,
									"end": 9072,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 9097,
									"end": 9156,
									"name": "PUSH",
									"source": 0,
									"value": "C"
								},
								{
									"begin": 9097,
									"end": 9156,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 9097,
									"end": 9156,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 9097,
									"end": 9156,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 9162,
									"end": 9197,
									"name": "PUSH",
									"source": 0,
									"value": "D"
								},
								{
									"begin": 9162,
									"end": 9197,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 9162,
									"end": 9197,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 9162,
									"end": 9197,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 9222,
									"end": 9281,
									"name": "PUSH",
									"source": 0,
									"value": "E"
								},
								{
									"begin": 9222,
									"end": 9281,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 9222,
									"end": 9281,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 9222,
									"end": 9281,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 9287,
									"end": 9317,
									"name": "PUSH",
									"source": 0,
									"value": "F"
								},
								{
									"begin": 9287,
									"end": 9317,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 9287,
									"end": 9317,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 9287,
									"end": 9317,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 9342,
									"end": 9391,
									"name": "PUSH",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 9342,
									"end": 9391,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 9342,
									"end": 9391,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 9342,
									"end": 9391,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 9415,
									"end": 9451,
									"name": "PUSH",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 9415,
									"end": 9451,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 9415,
									"end": 9451,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 9415,
									"end": 9451,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 9476,
									"end": 9537,
									"name": "PUSH",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 9476,
									"end": 9537,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 9476,
									"end": 9537,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 9476,
									"end": 9537,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 9543,
									"end": 9579,
									"name": "PUSH",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 9543,
									"end": 9579,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 9543,
									"end": 9579,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 9543,
									"end": 9579,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 9604,
									"end": 9665,
									"name": "PUSH",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 9604,
									"end": 9665,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 9604,
									"end": 9665,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 9604,
									"end": 9665,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 9671,
									"end": 9707,
									"name": "PUSH",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 9671,
									"end": 9707,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 9671,
									"end": 9707,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 9671,
									"end": 9707,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 9732,
									"end": 9793,
									"name": "PUSH",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 9732,
									"end": 9793,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 9732,
									"end": 9793,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 9732,
									"end": 9793,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 9799,
									"end": 9830,
									"name": "PUSH",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 9799,
									"end": 9830,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 9799,
									"end": 9830,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 9799,
									"end": 9830,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 9855,
									"end": 9906,
									"name": "PUSH",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 9855,
									"end": 9906,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 9855,
									"end": 9906,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 9855,
									"end": 9906,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 9912,
									"end": 9956,
									"name": "PUSH",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 9912,
									"end": 9956,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 10568,
									"end": 10663,
									"name": "PUSH",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 10568,
									"end": 10663,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 10568,
									"end": 10663,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 10620,
									"end": 10662,
									"name": "PUSH",
									"source": 0,
									"value": "DEAD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 10568,
									"end": 10663,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 10568,
									"end": 10663,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 10568,
									"end": 10663,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 10568,
									"end": 10663,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 10568,
									"end": 10663,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 10568,
									"end": 10663,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 10568,
									"end": 10663,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 10568,
									"end": 10663,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 10669,
									"end": 10759,
									"name": "PUSH",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 10669,
									"end": 10759,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 10669,
									"end": 10759,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 10669,
									"end": 10759,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 10669,
									"end": 10759,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 10669,
									"end": 10759,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 10669,
									"end": 10759,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 10669,
									"end": 10759,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 10669,
									"end": 10759,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 10765,
									"end": 10860,
									"name": "PUSH",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 10765,
									"end": 10860,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 10765,
									"end": 10860,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 10765,
									"end": 10860,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 10765,
									"end": 10860,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 10765,
									"end": 10860,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 10765,
									"end": 10860,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 10765,
									"end": 10860,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 10765,
									"end": 10860,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 10866,
									"end": 10956,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 10866,
									"end": 10956,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 10866,
									"end": 10956,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 10866,
									"end": 10956,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 10866,
									"end": 10956,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 10866,
									"end": 10956,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 10866,
									"end": 10956,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 10866,
									"end": 10956,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 10866,
									"end": 10956,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 10866,
									"end": 10956,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 10866,
									"end": 10956,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 11079,
									"end": 11110,
									"name": "PUSH",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 11079,
									"end": 11110,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11079,
									"end": 11110,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FFFFFFFFFF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 11219,
									"end": 11250,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 11219,
									"end": 11250,
									"name": "PUSH",
									"source": 0,
									"value": "101010000"
								},
								{
									"begin": 11219,
									"end": 11250,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 11219,
									"end": 11250,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11219,
									"end": 11250,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 11656,
									"end": 12432,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 11656,
									"end": 12432,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11656,
									"end": 12432,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 11656,
									"end": 12432,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 11656,
									"end": 12432,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 11656,
									"end": 12432,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 11656,
									"end": 12432,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11656,
									"end": 12432,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 11656,
									"end": 12432,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 11656,
									"end": 12432,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2823,
									"end": 2840,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2865,
									"end": 2883,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2865,
									"end": 2883,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2865,
									"end": 2883,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 818,
									"end": 828,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 2865,
									"end": 2883,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2865,
									"end": 2883,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2865,
									"end": 2883,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2865,
									"end": 2883,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2865,
									"end": 2883,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2898,
									"end": 2941,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2898,
									"end": 2941,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 818,
									"end": 828,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 818,
									"end": 828,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 818,
									"end": 828,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 818,
									"end": 828,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2898,
									"end": 2941,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2898,
									"end": 2941,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2823,
									"end": 2840,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2823,
									"end": 2840,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2898,
									"end": 2941,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 11790,
									"end": 11805,
									"name": "PUSH",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 11790,
									"end": 11824,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11790,
									"end": 11824,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 11790,
									"end": 11824,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 11737,
									"end": 11779,
									"name": "PUSH",
									"source": 0,
									"value": "10ED43C718714EB63D5AA57B78B54704E256024E"
								},
								{
									"begin": 11790,
									"end": 11824,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11790,
									"end": 11824,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11790,
									"end": 11824,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 11790,
									"end": 11824,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11790,
									"end": 11824,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 11790,
									"end": 11824,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 11834,
									"end": 11892,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 11851,
									"end": 11855,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 11737,
									"end": 11779,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8637,
									"end": 8655,
									"name": "PUSH",
									"source": 0,
									"value": "DE0B6B3A7640000"
								},
								{
									"begin": 11834,
									"end": 11842,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 11834,
									"end": 11892,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 11834,
									"end": 11892,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 11834,
									"end": 11892,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 11936,
									"end": 11952,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 11936,
									"end": 11960,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 11936,
									"end": 11960,
									"name": "PUSH",
									"source": 0,
									"value": "C45A0155"
								},
								{
									"begin": 11936,
									"end": 11962,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 11936,
									"end": 11962,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 11936,
									"end": 11962,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11936,
									"end": 11962,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFF"
								},
								{
									"begin": 11936,
									"end": 11962,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 11936,
									"end": 11962,
									"name": "PUSH",
									"source": 0,
									"value": "E0"
								},
								{
									"begin": 11936,
									"end": 11962,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 11936,
									"end": 11962,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11936,
									"end": 11962,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 11936,
									"end": 11962,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 11936,
									"end": 11962,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 11936,
									"end": 11962,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 11936,
									"end": 11962,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 11936,
									"end": 11962,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 11936,
									"end": 11962,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11936,
									"end": 11962,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 11936,
									"end": 11962,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 11936,
									"end": 11962,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11936,
									"end": 11962,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 11936,
									"end": 11962,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11936,
									"end": 11962,
									"name": "EXTCODESIZE",
									"source": 0
								},
								{
									"begin": 11936,
									"end": 11962,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 11936,
									"end": 11962,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11936,
									"end": 11962,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 11936,
									"end": 11962,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 11936,
									"end": 11962,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 11936,
									"end": 11962,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 11936,
									"end": 11962,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11936,
									"end": 11962,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 11936,
									"end": 11962,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 11936,
									"end": 11962,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 11936,
									"end": 11962,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11936,
									"end": 11962,
									"name": "GAS",
									"source": 0
								},
								{
									"begin": 11936,
									"end": 11962,
									"name": "STATICCALL",
									"source": 0
								},
								{
									"begin": 11936,
									"end": 11962,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 11936,
									"end": 11962,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11936,
									"end": 11962,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 11936,
									"end": 11962,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 11936,
									"end": 11962,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 11936,
									"end": 11962,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 11936,
									"end": 11962,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 11936,
									"end": 11962,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11936,
									"end": 11962,
									"name": "RETURNDATACOPY",
									"source": 0
								},
								{
									"begin": 11936,
									"end": 11962,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 11936,
									"end": 11962,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 11936,
									"end": 11962,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 11936,
									"end": 11962,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 11936,
									"end": 11962,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 11936,
									"end": 11962,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11936,
									"end": 11962,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11936,
									"end": 11962,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11936,
									"end": 11962,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11936,
									"end": 11962,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 11936,
									"end": 11962,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 11936,
									"end": 11962,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 11936,
									"end": 11962,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 11936,
									"end": 11962,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 11936,
									"end": 11962,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 11936,
									"end": 11962,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 11936,
									"end": 11962,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 11936,
									"end": 11962,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 11936,
									"end": 11962,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 11936,
									"end": 11962,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 11936,
									"end": 11962,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11936,
									"end": 11962,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 11936,
									"end": 11962,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 11936,
									"end": 11962,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11936,
									"end": 11962,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11936,
									"end": 11962,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 11936,
									"end": 11962,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11936,
									"end": 11962,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 11936,
									"end": 11962,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 11936,
									"end": 11962,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11936,
									"end": 11962,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 11936,
									"end": 11962,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 11936,
									"end": 11962,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 11936,
									"end": 11962,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 11918,
									"end": 11974,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 11918,
									"end": 11974,
									"name": "PUSH",
									"source": 0,
									"value": "C9C65396"
								},
								{
									"begin": 11983,
									"end": 11987,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 11990,
									"end": 12006,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 11990,
									"end": 12011,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 11990,
									"end": 12011,
									"name": "PUSH",
									"source": 0,
									"value": "AD5C4648"
								},
								{
									"begin": 11990,
									"end": 12013,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 11990,
									"end": 12013,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 11990,
									"end": 12013,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11990,
									"end": 12013,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFF"
								},
								{
									"begin": 11990,
									"end": 12013,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 11990,
									"end": 12013,
									"name": "PUSH",
									"source": 0,
									"value": "E0"
								},
								{
									"begin": 11990,
									"end": 12013,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 11990,
									"end": 12013,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11990,
									"end": 12013,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 11990,
									"end": 12013,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 11990,
									"end": 12013,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 11990,
									"end": 12013,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 11990,
									"end": 12013,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 11990,
									"end": 12013,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 11990,
									"end": 12013,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11990,
									"end": 12013,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 11990,
									"end": 12013,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 11990,
									"end": 12013,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11990,
									"end": 12013,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 11990,
									"end": 12013,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11990,
									"end": 12013,
									"name": "EXTCODESIZE",
									"source": 0
								},
								{
									"begin": 11990,
									"end": 12013,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 11990,
									"end": 12013,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11990,
									"end": 12013,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 11990,
									"end": 12013,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 11990,
									"end": 12013,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 11990,
									"end": 12013,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 11990,
									"end": 12013,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11990,
									"end": 12013,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 11990,
									"end": 12013,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 11990,
									"end": 12013,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 11990,
									"end": 12013,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11990,
									"end": 12013,
									"name": "GAS",
									"source": 0
								},
								{
									"begin": 11990,
									"end": 12013,
									"name": "STATICCALL",
									"source": 0
								},
								{
									"begin": 11990,
									"end": 12013,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 11990,
									"end": 12013,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11990,
									"end": 12013,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 11990,
									"end": 12013,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 11990,
									"end": 12013,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 11990,
									"end": 12013,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 11990,
									"end": 12013,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 11990,
									"end": 12013,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11990,
									"end": 12013,
									"name": "RETURNDATACOPY",
									"source": 0
								},
								{
									"begin": 11990,
									"end": 12013,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 11990,
									"end": 12013,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 11990,
									"end": 12013,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 11990,
									"end": 12013,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 11990,
									"end": 12013,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 11990,
									"end": 12013,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11990,
									"end": 12013,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11990,
									"end": 12013,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11990,
									"end": 12013,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11990,
									"end": 12013,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 11990,
									"end": 12013,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 11990,
									"end": 12013,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 11990,
									"end": 12013,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 11990,
									"end": 12013,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 11990,
									"end": 12013,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 11990,
									"end": 12013,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 11990,
									"end": 12013,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 11990,
									"end": 12013,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 11990,
									"end": 12013,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 11990,
									"end": 12013,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 11990,
									"end": 12013,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11990,
									"end": 12013,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 11990,
									"end": 12013,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 11990,
									"end": 12013,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11990,
									"end": 12013,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11990,
									"end": 12013,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 11990,
									"end": 12013,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11990,
									"end": 12013,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 11990,
									"end": 12013,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 11990,
									"end": 12013,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11990,
									"end": 12013,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 11990,
									"end": 12013,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 11990,
									"end": 12013,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 11990,
									"end": 12013,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 11918,
									"end": 12014,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 11918,
									"end": 12014,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 11918,
									"end": 12014,
									"name": "PUSH",
									"source": 0,
									"value": "E0"
								},
								{
									"begin": 11918,
									"end": 12014,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 11918,
									"end": 12014,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11918,
									"end": 12014,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 11918,
									"end": 12014,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 11918,
									"end": 12014,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11918,
									"end": 12014,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 861,
									"end": 876,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 861,
									"end": 876,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 861,
									"end": 876,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 11918,
									"end": 12014,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 11918,
									"end": 12014,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 11918,
									"end": 12014,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 843,
									"end": 877,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 913,
									"end": 928,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 913,
									"end": 928,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 893,
									"end": 911,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 893,
									"end": 911,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 893,
									"end": 911,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 886,
									"end": 929,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 778,
									"end": 796,
									"name": "PUSH",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 778,
									"end": 796,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 11918,
									"end": 12014,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 11918,
									"end": 12014,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 11918,
									"end": 12014,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 11918,
									"end": 12014,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11918,
									"end": 12014,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 11918,
									"end": 12014,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 11918,
									"end": 12014,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11918,
									"end": 12014,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 11918,
									"end": 12014,
									"name": "DUP8",
									"source": 0
								},
								{
									"begin": 11918,
									"end": 12014,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11918,
									"end": 12014,
									"name": "EXTCODESIZE",
									"source": 0
								},
								{
									"begin": 11918,
									"end": 12014,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 11918,
									"end": 12014,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11918,
									"end": 12014,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 11918,
									"end": 12014,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 11918,
									"end": 12014,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 11918,
									"end": 12014,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 11918,
									"end": 12014,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11918,
									"end": 12014,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 11918,
									"end": 12014,
									"name": "tag",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 11918,
									"end": 12014,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 11918,
									"end": 12014,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11918,
									"end": 12014,
									"name": "GAS",
									"source": 0
								},
								{
									"begin": 11918,
									"end": 12014,
									"name": "CALL",
									"source": 0
								},
								{
									"begin": 11918,
									"end": 12014,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 11918,
									"end": 12014,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11918,
									"end": 12014,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 11918,
									"end": 12014,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 11918,
									"end": 12014,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 11918,
									"end": 12014,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 11918,
									"end": 12014,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 11918,
									"end": 12014,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11918,
									"end": 12014,
									"name": "RETURNDATACOPY",
									"source": 0
								},
								{
									"begin": 11918,
									"end": 12014,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 11918,
									"end": 12014,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 11918,
									"end": 12014,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 11918,
									"end": 12014,
									"name": "tag",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 11918,
									"end": 12014,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 11918,
									"end": 12014,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11918,
									"end": 12014,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11918,
									"end": 12014,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11918,
									"end": 12014,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11918,
									"end": 12014,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 11918,
									"end": 12014,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 11918,
									"end": 12014,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 11918,
									"end": 12014,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 11918,
									"end": 12014,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 11918,
									"end": 12014,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 11918,
									"end": 12014,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 11918,
									"end": 12014,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 11918,
									"end": 12014,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 11918,
									"end": 12014,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 11918,
									"end": 12014,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 11918,
									"end": 12014,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11918,
									"end": 12014,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 11918,
									"end": 12014,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 11918,
									"end": 12014,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11918,
									"end": 12014,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11918,
									"end": 12014,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 11918,
									"end": 12014,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11918,
									"end": 12014,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 11918,
									"end": 12014,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 11918,
									"end": 12014,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11918,
									"end": 12014,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 11918,
									"end": 12014,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 11918,
									"end": 12014,
									"name": "tag",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 11918,
									"end": 12014,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 11902,
									"end": 11915,
									"name": "PUSH",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 11902,
									"end": 12014,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11902,
									"end": 12014,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 11902,
									"end": 12014,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 11902,
									"end": 12014,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 11902,
									"end": 12014,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 11902,
									"end": 12014,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 11902,
									"end": 12014,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11902,
									"end": 12014,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11902,
									"end": 12014,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 11902,
									"end": 12014,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11902,
									"end": 12014,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 11902,
									"end": 12014,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 12062,
									"end": 12077,
									"name": "PUSH",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 12062,
									"end": 12077,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 12024,
									"end": 12097,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12024,
									"end": 12097,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "95EA7B3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 12024,
									"end": 12097,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12024,
									"end": 12097,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12062,
									"end": 12077,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 12062,
									"end": 12077,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 12024,
									"end": 12097,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 12024,
									"end": 12097,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 12024,
									"end": 12097,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1114,
									"end": 1165,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1181,
									"end": 1199,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1181,
									"end": 1199,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1181,
									"end": 1199,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1174,
									"end": 1208,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 11902,
									"end": 12014,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12024,
									"end": 12053,
									"name": "PUSH",
									"source": 0,
									"value": "95EA7B3"
								},
								{
									"begin": 12024,
									"end": 12053,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1087,
									"end": 1105,
									"name": "PUSH",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 1087,
									"end": 1105,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 12024,
									"end": 12097,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 12024,
									"end": 12097,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12024,
									"end": 12097,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 12024,
									"end": 12097,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12024,
									"end": 12097,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 12024,
									"end": 12097,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 12024,
									"end": 12097,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12024,
									"end": 12097,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 12024,
									"end": 12097,
									"name": "DUP8",
									"source": 0
								},
								{
									"begin": 12024,
									"end": 12097,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12024,
									"end": 12097,
									"name": "EXTCODESIZE",
									"source": 0
								},
								{
									"begin": 12024,
									"end": 12097,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 12024,
									"end": 12097,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12024,
									"end": 12097,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 12024,
									"end": 12097,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 12024,
									"end": 12097,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 12024,
									"end": 12097,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 12024,
									"end": 12097,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12024,
									"end": 12097,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 12024,
									"end": 12097,
									"name": "tag",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 12024,
									"end": 12097,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12024,
									"end": 12097,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12024,
									"end": 12097,
									"name": "GAS",
									"source": 0
								},
								{
									"begin": 12024,
									"end": 12097,
									"name": "CALL",
									"source": 0
								},
								{
									"begin": 12024,
									"end": 12097,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 12024,
									"end": 12097,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12024,
									"end": 12097,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 12024,
									"end": 12097,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 12024,
									"end": 12097,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 12024,
									"end": 12097,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 12024,
									"end": 12097,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 12024,
									"end": 12097,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12024,
									"end": 12097,
									"name": "RETURNDATACOPY",
									"source": 0
								},
								{
									"begin": 12024,
									"end": 12097,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 12024,
									"end": 12097,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 12024,
									"end": 12097,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 12024,
									"end": 12097,
									"name": "tag",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 12024,
									"end": 12097,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12024,
									"end": 12097,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12024,
									"end": 12097,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12024,
									"end": 12097,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12024,
									"end": 12097,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12024,
									"end": 12097,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12024,
									"end": 12097,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 12024,
									"end": 12097,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 12024,
									"end": 12097,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 12024,
									"end": 12097,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 12024,
									"end": 12097,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 12024,
									"end": 12097,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12024,
									"end": 12097,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12024,
									"end": 12097,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 12024,
									"end": 12097,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12024,
									"end": 12097,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12024,
									"end": 12097,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12024,
									"end": 12097,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12024,
									"end": 12097,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12024,
									"end": 12097,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12024,
									"end": 12097,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12024,
									"end": 12097,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12024,
									"end": 12097,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12024,
									"end": 12097,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 12024,
									"end": 12097,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12024,
									"end": 12097,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12024,
									"end": 12097,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 12024,
									"end": 12097,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 12024,
									"end": 12097,
									"name": "tag",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 12024,
									"end": 12097,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 8637,
									"end": 8655,
									"name": "PUSH",
									"source": 0,
									"value": "DE0B6B3A7640000"
								},
								{
									"begin": 12108,
									"end": 12120,
									"name": "PUSH",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 12108,
									"end": 12130,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12108,
									"end": 12130,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12108,
									"end": 12130,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 12195,
									"end": 12211,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 12195,
									"end": 12221,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12195,
									"end": 12221,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12195,
									"end": 12221,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 818,
									"end": 828,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 12240,
									"end": 12263,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12240,
									"end": 12263,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12240,
									"end": 12263,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12240,
									"end": 12249,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": 12240,
									"end": 12263,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12240,
									"end": 12263,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12240,
									"end": 12263,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12240,
									"end": 12263,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12240,
									"end": 12263,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12240,
									"end": 12263,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 12240,
									"end": 12263,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 12240,
									"end": 12273,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 12240,
									"end": 12273,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12240,
									"end": 12273,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3018,
									"end": 3024,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3018,
									"end": 3024,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3018,
									"end": 3024,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 12283,
									"end": 12310,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 12283,
									"end": 12310,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12283,
									"end": 12301,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 12283,
									"end": 12310,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12283,
									"end": 12310,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12283,
									"end": 12310,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12283,
									"end": 12310,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 12283,
									"end": 12310,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 12283,
									"end": 12317,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12283,
									"end": 12317,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 12313,
									"end": 12317,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 12283,
									"end": 12317,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12283,
									"end": 12317,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12283,
									"end": 12317,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 12283,
									"end": 12317,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12283,
									"end": 12317,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 12283,
									"end": 12317,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12283,
									"end": 12317,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 12283,
									"end": 12317,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 12354,
									"end": 12358,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 12327,
									"end": 12360,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 12327,
									"end": 12360,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12327,
									"end": 12360,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12327,
									"end": 12360,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 12327,
									"end": 12360,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 12327,
									"end": 12367,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12327,
									"end": 12367,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 12327,
									"end": 12367,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12327,
									"end": 12367,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12327,
									"end": 12367,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 12327,
									"end": 12367,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12327,
									"end": 12367,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12327,
									"end": 12367,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 12327,
									"end": 12367,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12327,
									"end": 12367,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 12382,
									"end": 12425,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2173,
									"end": 2198,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 2173,
									"end": 2198,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2173,
									"end": 2198,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 818,
									"end": 828,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 818,
									"end": 828,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": 12382,
									"end": 12425,
									"name": "PUSH",
									"source": 0,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 12382,
									"end": 12425,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2146,
									"end": 2164,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 12382,
									"end": 12425,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12382,
									"end": 12425,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 12382,
									"end": 12425,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12382,
									"end": 12425,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12382,
									"end": 12425,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 12382,
									"end": 12425,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12382,
									"end": 12425,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 11656,
									"end": 12432,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 8181,
									"end": 29342,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "49"
								},
								{
									"begin": 8181,
									"end": 29342,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 15040,
									"end": 15370,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 15040,
									"end": 15370,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 15132,
									"end": 15151,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 15132,
									"end": 15151,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 15124,
									"end": 15192,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "41"
								},
								{
									"begin": 15124,
									"end": 15192,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 15124,
									"end": 15192,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 15124,
									"end": 15192,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 15124,
									"end": 15192,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 15124,
									"end": 15192,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1824,
									"end": 1826,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 15124,
									"end": 15192,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 15124,
									"end": 15192,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 15124,
									"end": 15192,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1806,
									"end": 1827,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1863,
									"end": 1865,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1843,
									"end": 1861,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1843,
									"end": 1861,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1843,
									"end": 1861,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1836,
									"end": 1866,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1902,
									"end": 1936,
									"name": "PUSH",
									"source": 1,
									"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
								},
								{
									"begin": 1882,
									"end": 1900,
									"name": "PUSH",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 1882,
									"end": 1900,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1882,
									"end": 1900,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1875,
									"end": 1937,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "72657373"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1953,
									"end": 1971,
									"name": "PUSH",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 1953,
									"end": 1971,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1953,
									"end": 1971,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1946,
									"end": 1980,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1997,
									"end": 2016,
									"name": "PUSH",
									"source": 1,
									"value": "84"
								},
								{
									"begin": 1997,
									"end": 2016,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 15124,
									"end": 15192,
									"name": "tag",
									"source": 0,
									"value": "42"
								},
								{
									"begin": 15124,
									"end": 15192,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 15124,
									"end": 15192,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 15124,
									"end": 15192,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 15124,
									"end": 15192,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 15124,
									"end": 15192,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 15124,
									"end": 15192,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 15124,
									"end": 15192,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 15124,
									"end": 15192,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 15124,
									"end": 15192,
									"name": "tag",
									"source": 0,
									"value": "41"
								},
								{
									"begin": 15124,
									"end": 15192,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 15210,
									"end": 15231,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 15210,
									"end": 15231,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 15202,
									"end": 15270,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "44"
								},
								{
									"begin": 15202,
									"end": 15270,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 15202,
									"end": 15270,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 15202,
									"end": 15270,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 15202,
									"end": 15270,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 15202,
									"end": 15270,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1421,
									"end": 1423,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 15202,
									"end": 15270,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 15202,
									"end": 15270,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 15202,
									"end": 15270,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 1424,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1460,
									"end": 1462,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 1440,
									"end": 1458,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1440,
									"end": 1458,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1440,
									"end": 1458,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1433,
									"end": 1463,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1499,
									"end": 1533,
									"name": "PUSH",
									"source": 1,
									"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
								},
								{
									"begin": 1479,
									"end": 1497,
									"name": "PUSH",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 1479,
									"end": 1497,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1479,
									"end": 1497,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1472,
									"end": 1534,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "7373"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "F0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1550,
									"end": 1568,
									"name": "PUSH",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 1550,
									"end": 1568,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1550,
									"end": 1568,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1543,
									"end": 1575,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1592,
									"end": 1611,
									"name": "PUSH",
									"source": 1,
									"value": "84"
								},
								{
									"begin": 1592,
									"end": 1611,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 15202,
									"end": 15270,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "42"
								},
								{
									"begin": 1393,
									"end": 1617,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 15202,
									"end": 15270,
									"name": "tag",
									"source": 0,
									"value": "44"
								},
								{
									"begin": 15202,
									"end": 15270,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 15280,
									"end": 15298,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 15280,
									"end": 15298,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 15280,
									"end": 15298,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 15280,
									"end": 15298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 15280,
									"end": 15298,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 15280,
									"end": 15298,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 15280,
									"end": 15298,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 15280,
									"end": 15291,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 15280,
									"end": 15298,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 15280,
									"end": 15298,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 15280,
									"end": 15298,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 15280,
									"end": 15298,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 15280,
									"end": 15298,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 15280,
									"end": 15298,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 15280,
									"end": 15298,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 15280,
									"end": 15298,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 15280,
									"end": 15307,
									"name": "SWAP5",
									"source": 0
								},
								{
									"begin": 15280,
									"end": 15307,
									"name": "DUP8",
									"source": 0
								},
								{
									"begin": 15280,
									"end": 15307,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 15280,
									"end": 15307,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 15280,
									"end": 15307,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 15280,
									"end": 15307,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 15280,
									"end": 15307,
									"name": "SWAP5",
									"source": 0
								},
								{
									"begin": 15280,
									"end": 15307,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 15280,
									"end": 15307,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 15280,
									"end": 15307,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 15280,
									"end": 15307,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 15280,
									"end": 15307,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 15280,
									"end": 15307,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 15280,
									"end": 15316,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 15280,
									"end": 15316,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 15280,
									"end": 15316,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 15331,
									"end": 15363,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 15331,
									"end": 15363,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2173,
									"end": 2198,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2173,
									"end": 2198,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2173,
									"end": 2198,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 15331,
									"end": 15363,
									"name": "PUSH",
									"source": 0,
									"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
								},
								{
									"begin": 15331,
									"end": 15363,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2146,
									"end": 2164,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 15331,
									"end": 15363,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 15331,
									"end": 15363,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 15331,
									"end": 15363,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 15331,
									"end": 15363,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 15331,
									"end": 15363,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 15331,
									"end": 15363,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 15331,
									"end": 15363,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 15040,
									"end": 15370,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 15040,
									"end": 15370,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 15040,
									"end": 15370,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 15040,
									"end": 15370,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 14,
									"end": 324,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 14,
									"end": 324,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 84,
									"end": 90,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 139,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 125,
									"end": 134,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 116,
									"end": 123,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 112,
									"end": 135,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 108,
									"end": 140,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 105,
									"end": 107,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 105,
									"end": 107,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 105,
									"end": 107,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 158,
									"end": 164,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 150,
									"end": 156,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 143,
									"end": 165,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 105,
									"end": 107,
									"name": "tag",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 105,
									"end": 107,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 189,
									"end": 205,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 189,
									"end": 205,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 234,
									"end": 265,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 234,
									"end": 265,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 224,
									"end": 266,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 224,
									"end": 266,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 214,
									"end": 216,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 214,
									"end": 216,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 285,
									"end": 291,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 277,
									"end": 283,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 270,
									"end": 292,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 214,
									"end": 216,
									"name": "tag",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 214,
									"end": 216,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 313,
									"end": 318,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 95,
									"end": 324,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 95,
									"end": 324,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 329,
									"end": 626,
									"name": "tag",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 329,
									"end": 626,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 396,
									"end": 402,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 449,
									"end": 451,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 437,
									"end": 446,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 428,
									"end": 435,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 424,
									"end": 447,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 420,
									"end": 452,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 417,
									"end": 419,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 417,
									"end": 419,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 417,
									"end": 419,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 470,
									"end": 476,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 462,
									"end": 468,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 455,
									"end": 477,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 417,
									"end": 419,
									"name": "tag",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 417,
									"end": 419,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 507,
									"end": 516,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 501,
									"end": 517,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 560,
									"end": 565,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 553,
									"end": 566,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 546,
									"end": 567,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 539,
									"end": 544,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 536,
									"end": 568,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 526,
									"end": 528,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 526,
									"end": 528,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 587,
									"end": 593,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 579,
									"end": 585,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 572,
									"end": 594,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 2128,
									"end": 2204,
									"name": "tag",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 2128,
									"end": 2204,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8181,
									"end": 29342,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 8181,
									"end": 29342,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8181,
									"end": 29342,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 8181,
									"end": 29342,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8181,
									"end": 29342,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 8181,
									"end": 29342,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8181,
									"end": 29342,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220fc57e276852f112951403513d009406b1b67ebbb47d9537d5ec34db201657b1064736f6c63430008040033",
									".code": [
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH",
											"source": 0,
											"value": "88790A68"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH",
											"source": 0,
											"value": "CAB03471"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH",
											"source": 0,
											"value": "E315A6DA"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH",
											"source": 0,
											"value": "F480FEC2"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH",
											"source": 0,
											"value": "FFB54A99"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH",
											"source": 0,
											"value": "FFECF516"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH",
											"source": 0,
											"value": "E315A6DA"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH",
											"source": 0,
											"value": "E4BF1BED"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH",
											"source": 0,
											"value": "EA2F0B37"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH",
											"source": 0,
											"value": "D55CB78A"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH",
											"source": 0,
											"value": "D55CB78A"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH",
											"source": 0,
											"value": "DB0045EC"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH",
											"source": 0,
											"value": "DC44B6A0"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH",
											"source": 0,
											"value": "CAB03471"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH",
											"source": 0,
											"value": "CDB3858F"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH",
											"source": 0,
											"value": "D1633649"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH",
											"source": 0,
											"value": "A850673D"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH",
											"source": 0,
											"value": "C469B6DD"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH",
											"source": 0,
											"value": "C469B6DD"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH",
											"source": 0,
											"value": "C5D24189"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH",
											"source": 0,
											"value": "C8607952"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH",
											"source": 0,
											"value": "C95457FF"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH",
											"source": 0,
											"value": "A850673D"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH",
											"source": 0,
											"value": "C3C8CD80"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH",
											"source": 0,
											"value": "9491F94D"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH",
											"source": 0,
											"value": "9491F94D"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH",
											"source": 0,
											"value": "99A7B9BC"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH",
											"source": 0,
											"value": "9D82190F"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH",
											"source": 0,
											"value": "88790A68"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH",
											"source": 0,
											"value": "8E360253"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH",
											"source": 0,
											"value": "39A53C4E"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH",
											"source": 0,
											"value": "6C0A24EB"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH",
											"source": 0,
											"value": "729CB3F2"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH",
											"source": 0,
											"value": "72B2AECC"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH",
											"source": 0,
											"value": "787A08A6"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH",
											"source": 0,
											"value": "6C0A24EB"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH",
											"source": 0,
											"value": "6FC3EAEC"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH",
											"source": 0,
											"value": "437823EC"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH",
											"source": 0,
											"value": "437823EC"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH",
											"source": 0,
											"value": "49BD5A5E"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH",
											"source": 0,
											"value": "5FECD926"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH",
											"source": 0,
											"value": "6AABFF3F"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH",
											"source": 0,
											"value": "39A53C4E"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH",
											"source": 0,
											"value": "3BBAC579"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH",
											"source": 0,
											"value": "3E0F966D"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH",
											"source": 0,
											"value": "248DD232"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH",
											"source": 0,
											"value": "29409395"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH",
											"source": 0,
											"value": "29409395"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH",
											"source": 0,
											"value": "301AD558"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH",
											"source": 0,
											"value": "323BE1C5"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH",
											"source": 0,
											"value": "248DD232"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH",
											"source": 0,
											"value": "27A14FC2"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH",
											"source": 0,
											"value": "2843631D"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH",
											"source": 0,
											"value": "14EB76AC"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH",
											"source": 0,
											"value": "14EB76AC"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH",
											"source": 0,
											"value": "2369BF83"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH",
											"source": 0,
											"value": "1A6C43B"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 29342,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8802,
											"end": 8850,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 8802,
											"end": 8850,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8802,
											"end": 8850,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 8802,
											"end": 8850,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8802,
											"end": 8850,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8802,
											"end": 8850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 8802,
											"end": 8850,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8802,
											"end": 8850,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8802,
											"end": 8850,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8802,
											"end": 8850,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8802,
											"end": 8850,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 8802,
											"end": 8850,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8802,
											"end": 8850,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8802,
											"end": 8850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 8802,
											"end": 8850,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 8802,
											"end": 8850,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8802,
											"end": 8850,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8802,
											"end": 8850,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8802,
											"end": 8850,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 8802,
											"end": 8850,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8802,
											"end": 8850,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8802,
											"end": 8850,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15123,
											"end": 15148,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15123,
											"end": 15148,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15123,
											"end": 15148,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15111,
											"end": 15113,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15096,
											"end": 15114,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8802,
											"end": 8850,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 8802,
											"end": 8850,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8802,
											"end": 8850,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8802,
											"end": 8850,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8802,
											"end": 8850,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8802,
											"end": 8850,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8802,
											"end": 8850,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8802,
											"end": 8850,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8802,
											"end": 8850,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 12438,
											"end": 12530,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12438,
											"end": 12530,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12438,
											"end": 12530,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 12438,
											"end": 12530,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12438,
											"end": 12530,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12438,
											"end": 12530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 12438,
											"end": 12530,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12438,
											"end": 12530,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12438,
											"end": 12530,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12438,
											"end": 12530,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12438,
											"end": 12530,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 12438,
											"end": 12530,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12518,
											"end": 12523,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12518,
											"end": 12523,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12518,
											"end": 12523,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12518,
											"end": 12523,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12518,
											"end": 12523,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12518,
											"end": 12523,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12518,
											"end": 12523,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12518,
											"end": 12523,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12518,
											"end": 12523,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12518,
											"end": 12523,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 12518,
											"end": 12523,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12518,
											"end": 12523,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4761696E5A696C6C61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12518,
											"end": 12523,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12518,
											"end": 12523,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12518,
											"end": 12523,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12518,
											"end": 12523,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12438,
											"end": 12530,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 12438,
											"end": 12530,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12438,
											"end": 12530,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12438,
											"end": 12530,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12438,
											"end": 12530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 12438,
											"end": 12530,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12438,
											"end": 12530,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12438,
											"end": 12530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 12438,
											"end": 12530,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13387,
											"end": 13547,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 13387,
											"end": 13547,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13387,
											"end": 13547,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 13387,
											"end": 13547,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13387,
											"end": 13547,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13387,
											"end": 13547,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 13387,
											"end": 13547,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13387,
											"end": 13547,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13387,
											"end": 13547,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13387,
											"end": 13547,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13387,
											"end": 13547,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 13387,
											"end": 13547,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13387,
											"end": 13547,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 13387,
											"end": 13547,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 13387,
											"end": 13547,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 13387,
											"end": 13547,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13387,
											"end": 13547,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 13387,
											"end": 13547,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13387,
											"end": 13547,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 13387,
											"end": 13547,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13387,
											"end": 13547,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 13387,
											"end": 13547,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13387,
											"end": 13547,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 13387,
											"end": 13547,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13387,
											"end": 13547,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13387,
											"end": 13547,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5685,
											"end": 5699,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5685,
											"end": 5699,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5678,
											"end": 5700,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5701,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5701,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5648,
											"end": 5650,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5633,
											"end": 5651,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13387,
											"end": 13547,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 5615,
											"end": 5707,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 28249,
											"end": 28369,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 28249,
											"end": 28369,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28249,
											"end": 28369,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 28249,
											"end": 28369,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28249,
											"end": 28369,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28249,
											"end": 28369,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 28249,
											"end": 28369,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28249,
											"end": 28369,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28249,
											"end": 28369,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28249,
											"end": 28369,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28249,
											"end": 28369,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 28249,
											"end": 28369,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28249,
											"end": 28369,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 28249,
											"end": 28369,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 28249,
											"end": 28369,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 28249,
											"end": 28369,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28249,
											"end": 28369,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 28249,
											"end": 28369,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28249,
											"end": 28369,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 28249,
											"end": 28369,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28249,
											"end": 28369,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 28249,
											"end": 28369,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28249,
											"end": 28369,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 28249,
											"end": 28369,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28249,
											"end": 28369,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 12736,
											"end": 12831,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 12736,
											"end": 12831,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12736,
											"end": 12831,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 12736,
											"end": 12831,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12736,
											"end": 12831,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12736,
											"end": 12831,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 12736,
											"end": 12831,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12736,
											"end": 12831,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12736,
											"end": 12831,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12736,
											"end": 12831,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12736,
											"end": 12831,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 12736,
											"end": 12831,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8637,
											"end": 8655,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 12736,
											"end": 12831,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 12736,
											"end": 12831,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28099,
											"end": 28239,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 28099,
											"end": 28239,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28099,
											"end": 28239,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 28099,
											"end": 28239,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28099,
											"end": 28239,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28099,
											"end": 28239,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 28099,
											"end": 28239,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28099,
											"end": 28239,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28099,
											"end": 28239,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28099,
											"end": 28239,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28099,
											"end": 28239,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 28099,
											"end": 28239,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28099,
											"end": 28239,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 28099,
											"end": 28239,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 28099,
											"end": 28239,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 28099,
											"end": 28239,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28099,
											"end": 28239,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 28099,
											"end": 28239,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28099,
											"end": 28239,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 28099,
											"end": 28239,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28099,
											"end": 28239,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 28099,
											"end": 28239,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13553,
											"end": 13861,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 13553,
											"end": 13861,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13553,
											"end": 13861,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 13553,
											"end": 13861,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13553,
											"end": 13861,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13553,
											"end": 13861,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 13553,
											"end": 13861,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13553,
											"end": 13861,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13553,
											"end": 13861,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13553,
											"end": 13861,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13553,
											"end": 13861,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 13553,
											"end": 13861,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13553,
											"end": 13861,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 13553,
											"end": 13861,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 13553,
											"end": 13861,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 13553,
											"end": 13861,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13553,
											"end": 13861,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 13553,
											"end": 13861,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13553,
											"end": 13861,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 13553,
											"end": 13861,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13553,
											"end": 13861,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 13553,
											"end": 13861,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9543,
											"end": 9579,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 9543,
											"end": 9579,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9543,
											"end": 9579,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 9543,
											"end": 9579,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9543,
											"end": 9579,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9543,
											"end": 9579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 9543,
											"end": 9579,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9543,
											"end": 9579,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9543,
											"end": 9579,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9543,
											"end": 9579,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9543,
											"end": 9579,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 9543,
											"end": 9579,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9543,
											"end": 9579,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9543,
											"end": 9579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 9543,
											"end": 9579,
											"name": "PUSH",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 9543,
											"end": 9579,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9543,
											"end": 9579,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9543,
											"end": 9579,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25855,
											"end": 26178,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 25855,
											"end": 26178,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25855,
											"end": 26178,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 25855,
											"end": 26178,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25855,
											"end": 26178,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25855,
											"end": 26178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 25855,
											"end": 26178,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25855,
											"end": 26178,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25855,
											"end": 26178,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25855,
											"end": 26178,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 25855,
											"end": 26178,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 25855,
											"end": 26178,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 25855,
											"end": 26178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 25855,
											"end": 26178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 25855,
											"end": 26178,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 25855,
											"end": 26178,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25855,
											"end": 26178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 25855,
											"end": 26178,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25855,
											"end": 26178,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 25855,
											"end": 26178,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25855,
											"end": 26178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 25855,
											"end": 26178,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9037,
											"end": 9072,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 9037,
											"end": 9072,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9037,
											"end": 9072,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 9037,
											"end": 9072,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9037,
											"end": 9072,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9037,
											"end": 9072,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 9037,
											"end": 9072,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9037,
											"end": 9072,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9037,
											"end": 9072,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9037,
											"end": 9072,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9037,
											"end": 9072,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 9037,
											"end": 9072,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9037,
											"end": 9072,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9037,
											"end": 9072,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 9037,
											"end": 9072,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 9037,
											"end": 9072,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9037,
											"end": 9072,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9037,
											"end": 9072,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22762,
											"end": 22944,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 22762,
											"end": 22944,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22762,
											"end": 22944,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 22762,
											"end": 22944,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22762,
											"end": 22944,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22762,
											"end": 22944,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 22762,
											"end": 22944,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22762,
											"end": 22944,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22762,
											"end": 22944,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22762,
											"end": 22944,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22762,
											"end": 22944,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 22762,
											"end": 22944,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 22762,
											"end": 22944,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 22762,
											"end": 22944,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 22762,
											"end": 22944,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 22762,
											"end": 22944,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22762,
											"end": 22944,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 22762,
											"end": 22944,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22762,
											"end": 22944,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 22762,
											"end": 22944,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22762,
											"end": 22944,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 22762,
											"end": 22944,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11182,
											"end": 11213,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 11182,
											"end": 11213,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11182,
											"end": 11213,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 11182,
											"end": 11213,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11182,
											"end": 11213,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11182,
											"end": 11213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 11182,
											"end": 11213,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11182,
											"end": 11213,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11182,
											"end": 11213,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11182,
											"end": 11213,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11182,
											"end": 11213,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 11182,
											"end": 11213,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11182,
											"end": 11213,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 11182,
											"end": 11213,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11182,
											"end": 11213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 11182,
											"end": 11213,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11182,
											"end": 11213,
											"name": "PUSH",
											"source": 0,
											"value": "1000000"
										},
										{
											"begin": 11182,
											"end": 11213,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11182,
											"end": 11213,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 11182,
											"end": 11213,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 11182,
											"end": 11213,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11182,
											"end": 11213,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11182,
											"end": 11213,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12638,
											"end": 12730,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 12638,
											"end": 12730,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12638,
											"end": 12730,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 12638,
											"end": 12730,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12638,
											"end": 12730,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12638,
											"end": 12730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 12638,
											"end": 12730,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12638,
											"end": 12730,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12638,
											"end": 12730,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12638,
											"end": 12730,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12638,
											"end": 12730,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 12638,
											"end": 12730,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12638,
											"end": 12730,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12638,
											"end": 12730,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8413,
											"end": 8414,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 16685,
											"end": 16721,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16685,
											"end": 16721,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16673,
											"end": 16675,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16658,
											"end": 16676,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12638,
											"end": 12730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 16640,
											"end": 16727,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11149,
											"end": 11176,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 11149,
											"end": 11176,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11149,
											"end": 11176,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 11149,
											"end": 11176,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11149,
											"end": 11176,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11149,
											"end": 11176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 11149,
											"end": 11176,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11149,
											"end": 11176,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11149,
											"end": 11176,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11149,
											"end": 11176,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11149,
											"end": 11176,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 11149,
											"end": 11176,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11149,
											"end": 11176,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 11149,
											"end": 11176,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11149,
											"end": 11176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 11149,
											"end": 11176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11149,
											"end": 11176,
											"name": "PUSH",
											"source": 0,
											"value": "10000"
										},
										{
											"begin": 11149,
											"end": 11176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11149,
											"end": 11176,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 11149,
											"end": 11176,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 11149,
											"end": 11176,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11149,
											"end": 11176,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11149,
											"end": 11176,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11219,
											"end": 11250,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 11219,
											"end": 11250,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11219,
											"end": 11250,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 11219,
											"end": 11250,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11219,
											"end": 11250,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11219,
											"end": 11250,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 11219,
											"end": 11250,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11219,
											"end": 11250,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11219,
											"end": 11250,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11219,
											"end": 11250,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11219,
											"end": 11250,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 11219,
											"end": 11250,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11219,
											"end": 11250,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 11219,
											"end": 11250,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11219,
											"end": 11250,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 11219,
											"end": 11250,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11219,
											"end": 11250,
											"name": "PUSH",
											"source": 0,
											"value": "100000000"
										},
										{
											"begin": 11219,
											"end": 11250,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11219,
											"end": 11250,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 11219,
											"end": 11250,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 11219,
											"end": 11250,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11219,
											"end": 11250,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11219,
											"end": 11250,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12960,
											"end": 13056,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 12960,
											"end": 13056,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12960,
											"end": 13056,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 12960,
											"end": 13056,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12960,
											"end": 13056,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12960,
											"end": 13056,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 12960,
											"end": 13056,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12960,
											"end": 13056,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12960,
											"end": 13056,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12960,
											"end": 13056,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12960,
											"end": 13056,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 12960,
											"end": 13056,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12960,
											"end": 13056,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 12960,
											"end": 13056,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 12960,
											"end": 13056,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 12960,
											"end": 13056,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12960,
											"end": 13056,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 12960,
											"end": 13056,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12960,
											"end": 13056,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 12960,
											"end": 13056,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13036,
											"end": 13049,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13013,
											"end": 13017,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13036,
											"end": 13049,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13049,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13049,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13040,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13036,
											"end": 13049,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13049,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13049,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13036,
											"end": 13049,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13049,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13049,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13049,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 13036,
											"end": 13049,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13049,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12960,
											"end": 13056,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22083,
											"end": 22225,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 22083,
											"end": 22225,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22083,
											"end": 22225,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 22083,
											"end": 22225,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22083,
											"end": 22225,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22083,
											"end": 22225,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 22083,
											"end": 22225,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22083,
											"end": 22225,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22083,
											"end": 22225,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22083,
											"end": 22225,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22083,
											"end": 22225,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 22083,
											"end": 22225,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22083,
											"end": 22225,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22083,
											"end": 22225,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 22083,
											"end": 22225,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 22083,
											"end": 22225,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25098,
											"end": 25209,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25098,
											"end": 25209,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25098,
											"end": 25209,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 25098,
											"end": 25209,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25098,
											"end": 25209,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25098,
											"end": 25209,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 25098,
											"end": 25209,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25098,
											"end": 25209,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25098,
											"end": 25209,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25098,
											"end": 25209,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 25098,
											"end": 25209,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 25098,
											"end": 25209,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 25098,
											"end": 25209,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 25098,
											"end": 25209,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 25098,
											"end": 25209,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 25098,
											"end": 25209,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25098,
											"end": 25209,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 25098,
											"end": 25209,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25098,
											"end": 25209,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 25098,
											"end": 25209,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25098,
											"end": 25209,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 25098,
											"end": 25209,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11010,
											"end": 11038,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 11010,
											"end": 11038,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11010,
											"end": 11038,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 11010,
											"end": 11038,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11010,
											"end": 11038,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11010,
											"end": 11038,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 11010,
											"end": 11038,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11010,
											"end": 11038,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11010,
											"end": 11038,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11010,
											"end": 11038,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11010,
											"end": 11038,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 11010,
											"end": 11038,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11010,
											"end": 11038,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 11010,
											"end": 11038,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11010,
											"end": 11038,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 11010,
											"end": 11038,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11010,
											"end": 11038,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11010,
											"end": 11038,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11010,
											"end": 11038,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11010,
											"end": 11038,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 11010,
											"end": 11038,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11010,
											"end": 11038,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11010,
											"end": 11038,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4577,
											"end": 4609,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4577,
											"end": 4609,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4577,
											"end": 4609,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4559,
											"end": 4610,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4559,
											"end": 4610,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4547,
											"end": 4549,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4532,
											"end": 4550,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11010,
											"end": 11038,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 4514,
											"end": 4616,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 25337,
											"end": 25432,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 25337,
											"end": 25432,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25337,
											"end": 25432,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 25337,
											"end": 25432,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25337,
											"end": 25432,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25337,
											"end": 25432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 25337,
											"end": 25432,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25337,
											"end": 25432,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25337,
											"end": 25432,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25337,
											"end": 25432,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 25337,
											"end": 25432,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 25337,
											"end": 25432,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 25337,
											"end": 25432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 25337,
											"end": 25432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 25337,
											"end": 25432,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 25337,
											"end": 25432,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25337,
											"end": 25432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 25337,
											"end": 25432,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25337,
											"end": 25432,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 25337,
											"end": 25432,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25337,
											"end": 25432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 25337,
											"end": 25432,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22231,
											"end": 22316,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 22231,
											"end": 22316,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22231,
											"end": 22316,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 22231,
											"end": 22316,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22231,
											"end": 22316,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22231,
											"end": 22316,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 22231,
											"end": 22316,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22231,
											"end": 22316,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22231,
											"end": 22316,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22231,
											"end": 22316,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22231,
											"end": 22316,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 22231,
											"end": 22316,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22231,
											"end": 22316,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22231,
											"end": 22316,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 22231,
											"end": 22316,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 22231,
											"end": 22316,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8746,
											"end": 8796,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 8746,
											"end": 8796,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8746,
											"end": 8796,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 8746,
											"end": 8796,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8746,
											"end": 8796,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8746,
											"end": 8796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 8746,
											"end": 8796,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8746,
											"end": 8796,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8746,
											"end": 8796,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8746,
											"end": 8796,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8746,
											"end": 8796,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 8746,
											"end": 8796,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8746,
											"end": 8796,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8746,
											"end": 8796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 8746,
											"end": 8796,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 8746,
											"end": 8796,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8746,
											"end": 8796,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8746,
											"end": 8796,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22530,
											"end": 22756,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 22530,
											"end": 22756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22530,
											"end": 22756,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 22530,
											"end": 22756,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22530,
											"end": 22756,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22530,
											"end": 22756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 22530,
											"end": 22756,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22530,
											"end": 22756,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22530,
											"end": 22756,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22530,
											"end": 22756,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22530,
											"end": 22756,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 22530,
											"end": 22756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22530,
											"end": 22756,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22530,
											"end": 22756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 22530,
											"end": 22756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 22530,
											"end": 22756,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12837,
											"end": 12954,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 12837,
											"end": 12954,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12837,
											"end": 12954,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 12837,
											"end": 12954,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12837,
											"end": 12954,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12837,
											"end": 12954,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 12837,
											"end": 12954,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12837,
											"end": 12954,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12837,
											"end": 12954,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12837,
											"end": 12954,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12837,
											"end": 12954,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 12837,
											"end": 12954,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12837,
											"end": 12954,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 12837,
											"end": 12954,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 12837,
											"end": 12954,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 12837,
											"end": 12954,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12837,
											"end": 12954,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 12837,
											"end": 12954,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12837,
											"end": 12954,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 12837,
											"end": 12954,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12929,
											"end": 12947,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12903,
											"end": 12910,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12929,
											"end": 12947,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12929,
											"end": 12947,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12929,
											"end": 12947,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12929,
											"end": 12938,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 12929,
											"end": 12947,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12929,
											"end": 12947,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12929,
											"end": 12947,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12929,
											"end": 12947,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12929,
											"end": 12947,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12929,
											"end": 12947,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12929,
											"end": 12947,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12837,
											"end": 12954,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3851,
											"end": 3998,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 3851,
											"end": 3998,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3851,
											"end": 3998,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3851,
											"end": 3998,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3851,
											"end": 3998,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3851,
											"end": 3998,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 3851,
											"end": 3998,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3851,
											"end": 3998,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3851,
											"end": 3998,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3851,
											"end": 3998,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3851,
											"end": 3998,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 3851,
											"end": 3998,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3851,
											"end": 3998,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3851,
											"end": 3998,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 3851,
											"end": 3998,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 3851,
											"end": 3998,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28623,
											"end": 28796,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 28623,
											"end": 28796,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28623,
											"end": 28796,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 28623,
											"end": 28796,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28623,
											"end": 28796,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28623,
											"end": 28796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 28623,
											"end": 28796,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28623,
											"end": 28796,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28623,
											"end": 28796,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28623,
											"end": 28796,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28623,
											"end": 28796,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 28623,
											"end": 28796,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28623,
											"end": 28796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 28623,
											"end": 28796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 28623,
											"end": 28796,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 28623,
											"end": 28796,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28623,
											"end": 28796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 28623,
											"end": 28796,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28623,
											"end": 28796,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 28623,
											"end": 28796,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28623,
											"end": 28796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 28623,
											"end": 28796,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9912,
											"end": 9956,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 9912,
											"end": 9956,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9912,
											"end": 9956,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 9912,
											"end": 9956,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9912,
											"end": 9956,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9912,
											"end": 9956,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 9912,
											"end": 9956,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9912,
											"end": 9956,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9912,
											"end": 9956,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9912,
											"end": 9956,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9912,
											"end": 9956,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 9912,
											"end": 9956,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9912,
											"end": 9956,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9912,
											"end": 9956,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 9912,
											"end": 9956,
											"name": "PUSH",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 9912,
											"end": 9956,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9912,
											"end": 9956,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9912,
											"end": 9956,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10278,
											"end": 10311,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 10278,
											"end": 10311,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10278,
											"end": 10311,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 10278,
											"end": 10311,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10278,
											"end": 10311,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10278,
											"end": 10311,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 10278,
											"end": 10311,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10278,
											"end": 10311,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10278,
											"end": 10311,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10278,
											"end": 10311,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10278,
											"end": 10311,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 10278,
											"end": 10311,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10278,
											"end": 10311,
											"name": "PUSH",
											"source": 0,
											"value": "1A"
										},
										{
											"begin": 10278,
											"end": 10311,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10278,
											"end": 10311,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 10278,
											"end": 10311,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10278,
											"end": 10311,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 10278,
											"end": 10311,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10278,
											"end": 10311,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10278,
											"end": 10311,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10278,
											"end": 10311,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 10278,
											"end": 10311,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10278,
											"end": 10311,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 10278,
											"end": 10311,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10278,
											"end": 10311,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10278,
											"end": 10311,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10278,
											"end": 10311,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10278,
											"end": 10311,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 10278,
											"end": 10311,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10278,
											"end": 10311,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10278,
											"end": 10311,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10278,
											"end": 10311,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6402,
											"end": 6416,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6402,
											"end": 6416,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6395,
											"end": 6417,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6377,
											"end": 6418,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6377,
											"end": 6418,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6466,
											"end": 6476,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6454,
											"end": 6477,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6454,
											"end": 6477,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6454,
											"end": 6477,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6449,
											"end": 6451,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6434,
											"end": 6452,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6434,
											"end": 6452,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6427,
											"end": 6478,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6350,
											"end": 6368,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10278,
											"end": 10311,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 6332,
											"end": 6484,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9415,
											"end": 9451,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 9415,
											"end": 9451,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9415,
											"end": 9451,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 9415,
											"end": 9451,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9415,
											"end": 9451,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9415,
											"end": 9451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 9415,
											"end": 9451,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9415,
											"end": 9451,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9415,
											"end": 9451,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9415,
											"end": 9451,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9415,
											"end": 9451,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 9415,
											"end": 9451,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9415,
											"end": 9451,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9415,
											"end": 9451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 9415,
											"end": 9451,
											"name": "PUSH",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 9415,
											"end": 9451,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9415,
											"end": 9451,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9415,
											"end": 9451,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 3031,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2954,
											"end": 3031,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 3031,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 3031,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 3031,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 3031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 2954,
											"end": 3031,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 3031,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 3031,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 3031,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 3031,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 2954,
											"end": 3031,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2992,
											"end": 2999,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3018,
											"end": 3024,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3018,
											"end": 3024,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 3031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 2954,
											"end": 3031,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21998,
											"end": 22077,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 21998,
											"end": 22077,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21998,
											"end": 22077,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 21998,
											"end": 22077,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21998,
											"end": 22077,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21998,
											"end": 22077,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 21998,
											"end": 22077,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21998,
											"end": 22077,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21998,
											"end": 22077,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21998,
											"end": 22077,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21998,
											"end": 22077,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 21998,
											"end": 22077,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21998,
											"end": 22077,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21998,
											"end": 22077,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 21998,
											"end": 22077,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 21998,
											"end": 22077,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19677,
											"end": 20093,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 19677,
											"end": 20093,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19677,
											"end": 20093,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 19677,
											"end": 20093,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19677,
											"end": 20093,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19677,
											"end": 20093,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 19677,
											"end": 20093,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19677,
											"end": 20093,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19677,
											"end": 20093,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19677,
											"end": 20093,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19677,
											"end": 20093,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 19677,
											"end": 20093,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19677,
											"end": 20093,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19677,
											"end": 20093,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 19677,
											"end": 20093,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 19677,
											"end": 20093,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12536,
											"end": 12632,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 12536,
											"end": 12632,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12536,
											"end": 12632,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 12536,
											"end": 12632,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12536,
											"end": 12632,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12536,
											"end": 12632,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 12536,
											"end": 12632,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12536,
											"end": 12632,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12536,
											"end": 12632,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12536,
											"end": 12632,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12536,
											"end": 12632,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 12536,
											"end": 12632,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12618,
											"end": 12625,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12618,
											"end": 12625,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12618,
											"end": 12625,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12618,
											"end": 12625,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12618,
											"end": 12625,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12618,
											"end": 12625,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12618,
											"end": 12625,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12618,
											"end": 12625,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12618,
											"end": 12625,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12618,
											"end": 12625,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 12618,
											"end": 12625,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12618,
											"end": 12625,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "47494C4C41"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12618,
											"end": 12625,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12618,
											"end": 12625,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12618,
											"end": 12625,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12618,
											"end": 12625,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12536,
											"end": 12632,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 12536,
											"end": 12632,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27857,
											"end": 27943,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 27857,
											"end": 27943,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27857,
											"end": 27943,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 27857,
											"end": 27943,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27857,
											"end": 27943,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27857,
											"end": 27943,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 27857,
											"end": 27943,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27857,
											"end": 27943,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27857,
											"end": 27943,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27857,
											"end": 27943,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 27857,
											"end": 27943,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 27857,
											"end": 27943,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27857,
											"end": 27943,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27857,
											"end": 27943,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 27857,
											"end": 27943,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 27857,
											"end": 27943,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28802,
											"end": 29340,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 28802,
											"end": 29340,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28802,
											"end": 29340,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 28802,
											"end": 29340,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28802,
											"end": 29340,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28802,
											"end": 29340,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 28802,
											"end": 29340,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28802,
											"end": 29340,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28802,
											"end": 29340,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28802,
											"end": 29340,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28802,
											"end": 29340,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 28802,
											"end": 29340,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28802,
											"end": 29340,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 28802,
											"end": 29340,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 28802,
											"end": 29340,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 28802,
											"end": 29340,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28802,
											"end": 29340,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 28802,
											"end": 29340,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28802,
											"end": 29340,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 28802,
											"end": 29340,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28802,
											"end": 29340,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 28802,
											"end": 29340,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28802,
											"end": 29340,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 28802,
											"end": 29340,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28802,
											"end": 29340,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28802,
											"end": 29340,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28802,
											"end": 29340,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16378,
											"end": 16403,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 16378,
											"end": 16403,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 16378,
											"end": 16403,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16434,
											"end": 16436,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16419,
											"end": 16437,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 16419,
											"end": 16437,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16412,
											"end": 16446,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 16412,
											"end": 16446,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16412,
											"end": 16446,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 16412,
											"end": 16446,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16462,
											"end": 16480,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16462,
											"end": 16480,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16462,
											"end": 16480,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16455,
											"end": 16489,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16520,
											"end": 16522,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 16505,
											"end": 16523,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16505,
											"end": 16523,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16498,
											"end": 16532,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16365,
											"end": 16368,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 16350,
											"end": 16369,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28802,
											"end": 29340,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 16332,
											"end": 16538,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 25709,
											"end": 25849,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 25709,
											"end": 25849,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25709,
											"end": 25849,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 25709,
											"end": 25849,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25709,
											"end": 25849,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25709,
											"end": 25849,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 25709,
											"end": 25849,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25709,
											"end": 25849,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25709,
											"end": 25849,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25709,
											"end": 25849,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 25709,
											"end": 25849,
											"name": "tag",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 25709,
											"end": 25849,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 25709,
											"end": 25849,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 25709,
											"end": 25849,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 25709,
											"end": 25849,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 25709,
											"end": 25849,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25709,
											"end": 25849,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 25709,
											"end": 25849,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25709,
											"end": 25849,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 25709,
											"end": 25849,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25709,
											"end": 25849,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 25709,
											"end": 25849,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13066,
											"end": 13232,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 13066,
											"end": 13232,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13066,
											"end": 13232,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 13066,
											"end": 13232,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13066,
											"end": 13232,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13066,
											"end": 13232,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 13066,
											"end": 13232,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13066,
											"end": 13232,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13066,
											"end": 13232,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13066,
											"end": 13232,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13066,
											"end": 13232,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 13066,
											"end": 13232,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13066,
											"end": 13232,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 13066,
											"end": 13232,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 13066,
											"end": 13232,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 13066,
											"end": 13232,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13066,
											"end": 13232,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 13066,
											"end": 13232,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13066,
											"end": 13232,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 13066,
											"end": 13232,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13066,
											"end": 13232,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 13066,
											"end": 13232,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22322,
											"end": 22524,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22322,
											"end": 22524,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22322,
											"end": 22524,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 22322,
											"end": 22524,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22322,
											"end": 22524,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22322,
											"end": 22524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 22322,
											"end": 22524,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22322,
											"end": 22524,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22322,
											"end": 22524,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22322,
											"end": 22524,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22322,
											"end": 22524,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 22322,
											"end": 22524,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22322,
											"end": 22524,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22322,
											"end": 22524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 22322,
											"end": 22524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 22322,
											"end": 22524,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9287,
											"end": 9317,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 9287,
											"end": 9317,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9287,
											"end": 9317,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 9287,
											"end": 9317,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9287,
											"end": 9317,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9287,
											"end": 9317,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 9287,
											"end": 9317,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9287,
											"end": 9317,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9287,
											"end": 9317,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9287,
											"end": 9317,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9287,
											"end": 9317,
											"name": "tag",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 9287,
											"end": 9317,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9287,
											"end": 9317,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9287,
											"end": 9317,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 9287,
											"end": 9317,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 9287,
											"end": 9317,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9287,
											"end": 9317,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9287,
											"end": 9317,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9162,
											"end": 9197,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 9162,
											"end": 9197,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9162,
											"end": 9197,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 9162,
											"end": 9197,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9162,
											"end": 9197,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9162,
											"end": 9197,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 9162,
											"end": 9197,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9162,
											"end": 9197,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9162,
											"end": 9197,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9162,
											"end": 9197,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9162,
											"end": 9197,
											"name": "tag",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 9162,
											"end": 9197,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9162,
											"end": 9197,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9162,
											"end": 9197,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 9162,
											"end": 9197,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 9162,
											"end": 9197,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9162,
											"end": 9197,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9162,
											"end": 9197,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9671,
											"end": 9707,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 9671,
											"end": 9707,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9671,
											"end": 9707,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 9671,
											"end": 9707,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9671,
											"end": 9707,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9671,
											"end": 9707,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 9671,
											"end": 9707,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9671,
											"end": 9707,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9671,
											"end": 9707,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9671,
											"end": 9707,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9671,
											"end": 9707,
											"name": "tag",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 9671,
											"end": 9707,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9671,
											"end": 9707,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9671,
											"end": 9707,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 9671,
											"end": 9707,
											"name": "PUSH",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 9671,
											"end": 9707,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9671,
											"end": 9707,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9671,
											"end": 9707,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10486,
											"end": 10518,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 10486,
											"end": 10518,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10486,
											"end": 10518,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 10486,
											"end": 10518,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10486,
											"end": 10518,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10486,
											"end": 10518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 10486,
											"end": 10518,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10486,
											"end": 10518,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10486,
											"end": 10518,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10486,
											"end": 10518,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10486,
											"end": 10518,
											"name": "tag",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 10486,
											"end": 10518,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10486,
											"end": 10518,
											"name": "PUSH",
											"source": 0,
											"value": "1C"
										},
										{
											"begin": 10486,
											"end": 10518,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10486,
											"end": 10518,
											"name": "PUSH",
											"source": 0,
											"value": "1D"
										},
										{
											"begin": 10486,
											"end": 10518,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10486,
											"end": 10518,
											"name": "PUSH",
											"source": 0,
											"value": "1E"
										},
										{
											"begin": 10486,
											"end": 10518,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10486,
											"end": 10518,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 10486,
											"end": 10518,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10486,
											"end": 10518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 10486,
											"end": 10518,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 10486,
											"end": 10518,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 10486,
											"end": 10518,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10486,
											"end": 10518,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10486,
											"end": 10518,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10486,
											"end": 10518,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 10486,
											"end": 10518,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 10486,
											"end": 10518,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10486,
											"end": 10518,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10486,
											"end": 10518,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 10486,
											"end": 10518,
											"name": "PUSH",
											"source": 0,
											"value": "FFFF"
										},
										{
											"begin": 10486,
											"end": 10518,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10486,
											"end": 10518,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 10486,
											"end": 10518,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10486,
											"end": 10518,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10486,
											"end": 10518,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10486,
											"end": 10518,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10486,
											"end": 10518,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10486,
											"end": 10518,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10486,
											"end": 10518,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10486,
											"end": 10518,
											"name": "tag",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 10486,
											"end": 10518,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10486,
											"end": 10518,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10486,
											"end": 10518,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10486,
											"end": 10518,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5982,
											"end": 5996,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 5982,
											"end": 5996,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5975,
											"end": 5997,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5957,
											"end": 5998,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5957,
											"end": 5998,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6046,
											"end": 6052,
											"name": "PUSH",
											"source": 1,
											"value": "FFFF"
										},
										{
											"begin": 6034,
											"end": 6053,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6053,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6053,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6029,
											"end": 6031,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6014,
											"end": 6032,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6014,
											"end": 6032,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6007,
											"end": 6054,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6088,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6088,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6088,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6063,
											"end": 6097,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6063,
											"end": 6097,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6063,
											"end": 6097,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6063,
											"end": 6097,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6140,
											"end": 6154,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6133,
											"end": 6155,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6128,
											"end": 6130,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 6113,
											"end": 6131,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6113,
											"end": 6131,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6106,
											"end": 6156,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6187,
											"end": 6190,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 6172,
											"end": 6191,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6172,
											"end": 6191,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6165,
											"end": 6200,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5944,
											"end": 5947,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 5929,
											"end": 5948,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10486,
											"end": 10518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 5911,
											"end": 6206,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9799,
											"end": 9830,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 9799,
											"end": 9830,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9799,
											"end": 9830,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 9799,
											"end": 9830,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9799,
											"end": 9830,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9799,
											"end": 9830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 9799,
											"end": 9830,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9799,
											"end": 9830,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9799,
											"end": 9830,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9799,
											"end": 9830,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9799,
											"end": 9830,
											"name": "tag",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 9799,
											"end": 9830,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9799,
											"end": 9830,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9799,
											"end": 9830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 9799,
											"end": 9830,
											"name": "PUSH",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 9799,
											"end": 9830,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9799,
											"end": 9830,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9799,
											"end": 9830,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28376,
											"end": 28496,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 28376,
											"end": 28496,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28376,
											"end": 28496,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 28376,
											"end": 28496,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28376,
											"end": 28496,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28376,
											"end": 28496,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 28376,
											"end": 28496,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28376,
											"end": 28496,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28376,
											"end": 28496,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28376,
											"end": 28496,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28376,
											"end": 28496,
											"name": "tag",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 28376,
											"end": 28496,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28376,
											"end": 28496,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 28376,
											"end": 28496,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 28376,
											"end": 28496,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 28376,
											"end": 28496,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28376,
											"end": 28496,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 28376,
											"end": 28496,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28376,
											"end": 28496,
											"name": "tag",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 28376,
											"end": 28496,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28376,
											"end": 28496,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 28376,
											"end": 28496,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21825,
											"end": 21992,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 21825,
											"end": 21992,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21825,
											"end": 21992,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 21825,
											"end": 21992,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21825,
											"end": 21992,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21825,
											"end": 21992,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 21825,
											"end": 21992,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21825,
											"end": 21992,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21825,
											"end": 21992,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21825,
											"end": 21992,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21825,
											"end": 21992,
											"name": "tag",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 21825,
											"end": 21992,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 21825,
											"end": 21992,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 21825,
											"end": 21992,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 21825,
											"end": 21992,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 21825,
											"end": 21992,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21825,
											"end": 21992,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 21825,
											"end": 21992,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21825,
											"end": 21992,
											"name": "tag",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 21825,
											"end": 21992,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21825,
											"end": 21992,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 21825,
											"end": 21992,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25610,
											"end": 25699,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 25610,
											"end": 25699,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25610,
											"end": 25699,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 25610,
											"end": 25699,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25610,
											"end": 25699,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25610,
											"end": 25699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 25610,
											"end": 25699,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25610,
											"end": 25699,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25610,
											"end": 25699,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25610,
											"end": 25699,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 25610,
											"end": 25699,
											"name": "tag",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 25610,
											"end": 25699,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25610,
											"end": 25699,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25610,
											"end": 25699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 25610,
											"end": 25699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 25610,
											"end": 25699,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27949,
											"end": 28089,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 27949,
											"end": 28089,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27949,
											"end": 28089,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 27949,
											"end": 28089,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27949,
											"end": 28089,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27949,
											"end": 28089,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 27949,
											"end": 28089,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27949,
											"end": 28089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27949,
											"end": 28089,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27949,
											"end": 28089,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 27949,
											"end": 28089,
											"name": "tag",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 27949,
											"end": 28089,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 27949,
											"end": 28089,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 27949,
											"end": 28089,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 27949,
											"end": 28089,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 27949,
											"end": 28089,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27949,
											"end": 28089,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 27949,
											"end": 28089,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27949,
											"end": 28089,
											"name": "tag",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 27949,
											"end": 28089,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27949,
											"end": 28089,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 27949,
											"end": 28089,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8912,
											"end": 8947,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 8912,
											"end": 8947,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8912,
											"end": 8947,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 8912,
											"end": 8947,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8912,
											"end": 8947,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8912,
											"end": 8947,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 8912,
											"end": 8947,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8912,
											"end": 8947,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8912,
											"end": 8947,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8912,
											"end": 8947,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8912,
											"end": 8947,
											"name": "tag",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 8912,
											"end": 8947,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8912,
											"end": 8947,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8912,
											"end": 8947,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 8912,
											"end": 8947,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 8912,
											"end": 8947,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8912,
											"end": 8947,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8912,
											"end": 8947,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13238,
											"end": 13381,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 13238,
											"end": 13381,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13238,
											"end": 13381,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 13238,
											"end": 13381,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13238,
											"end": 13381,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13238,
											"end": 13381,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 13238,
											"end": 13381,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13238,
											"end": 13381,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13238,
											"end": 13381,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13238,
											"end": 13381,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13238,
											"end": 13381,
											"name": "tag",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 13238,
											"end": 13381,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13238,
											"end": 13381,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 13238,
											"end": 13381,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 13238,
											"end": 13381,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 13238,
											"end": 13381,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13238,
											"end": 13381,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 13238,
											"end": 13381,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13238,
											"end": 13381,
											"name": "tag",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 13238,
											"end": 13381,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13347,
											"end": 13365,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13347,
											"end": 13365,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13347,
											"end": 13365,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13321,
											"end": 13328,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13347,
											"end": 13365,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13347,
											"end": 13365,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13347,
											"end": 13365,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13347,
											"end": 13358,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 13347,
											"end": 13365,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13347,
											"end": 13365,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13347,
											"end": 13365,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13347,
											"end": 13365,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13347,
											"end": 13365,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13347,
											"end": 13365,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13347,
											"end": 13365,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13347,
											"end": 13365,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13347,
											"end": 13374,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 13347,
											"end": 13374,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13347,
											"end": 13374,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 13347,
											"end": 13374,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13347,
											"end": 13374,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13347,
											"end": 13374,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13347,
											"end": 13374,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13347,
											"end": 13374,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13347,
											"end": 13374,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13347,
											"end": 13374,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13347,
											"end": 13374,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13347,
											"end": 13374,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13347,
											"end": 13374,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13238,
											"end": 13381,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28502,
											"end": 28617,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 28502,
											"end": 28617,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28502,
											"end": 28617,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 28502,
											"end": 28617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28502,
											"end": 28617,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28502,
											"end": 28617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 28502,
											"end": 28617,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28502,
											"end": 28617,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28502,
											"end": 28617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28502,
											"end": 28617,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28502,
											"end": 28617,
											"name": "tag",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 28502,
											"end": 28617,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28502,
											"end": 28617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 28502,
											"end": 28617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 28502,
											"end": 28617,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 28502,
											"end": 28617,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28502,
											"end": 28617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 28502,
											"end": 28617,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28502,
											"end": 28617,
											"name": "tag",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 28502,
											"end": 28617,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28502,
											"end": 28617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 28502,
											"end": 28617,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26184,
											"end": 27007,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 26184,
											"end": 27007,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26184,
											"end": 27007,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 26184,
											"end": 27007,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26184,
											"end": 27007,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26184,
											"end": 27007,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 26184,
											"end": 27007,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26184,
											"end": 27007,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26184,
											"end": 27007,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26184,
											"end": 27007,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 26184,
											"end": 27007,
											"name": "tag",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 26184,
											"end": 27007,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 26184,
											"end": 27007,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 26184,
											"end": 27007,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 26184,
											"end": 27007,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 26184,
											"end": 27007,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26184,
											"end": 27007,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 26184,
											"end": 27007,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26184,
											"end": 27007,
											"name": "tag",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 26184,
											"end": 27007,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26184,
											"end": 27007,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 26184,
											"end": 27007,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25215,
											"end": 25327,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 25215,
											"end": 25327,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25215,
											"end": 25327,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 25215,
											"end": 25327,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25215,
											"end": 25327,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25215,
											"end": 25327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 25215,
											"end": 25327,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25215,
											"end": 25327,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25215,
											"end": 25327,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25215,
											"end": 25327,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 25215,
											"end": 25327,
											"name": "tag",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 25215,
											"end": 25327,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 25215,
											"end": 25327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 25215,
											"end": 25327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 25215,
											"end": 25327,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 25215,
											"end": 25327,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25215,
											"end": 25327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 25215,
											"end": 25327,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25215,
											"end": 25327,
											"name": "tag",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 25215,
											"end": 25327,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25215,
											"end": 25327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 25215,
											"end": 25327,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3302,
											"end": 3500,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 3302,
											"end": 3500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3302,
											"end": 3500,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3302,
											"end": 3500,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3302,
											"end": 3500,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3302,
											"end": 3500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 3302,
											"end": 3500,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3302,
											"end": 3500,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3302,
											"end": 3500,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3302,
											"end": 3500,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3302,
											"end": 3500,
											"name": "tag",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 3302,
											"end": 3500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3302,
											"end": 3500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 3302,
											"end": 3500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 3302,
											"end": 3500,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3302,
											"end": 3500,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3302,
											"end": 3500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 3302,
											"end": 3500,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3302,
											"end": 3500,
											"name": "tag",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 3302,
											"end": 3500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3302,
											"end": 3500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "302"
										},
										{
											"begin": 3302,
											"end": 3500,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27013,
											"end": 27851,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 27013,
											"end": 27851,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27013,
											"end": 27851,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 27013,
											"end": 27851,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27013,
											"end": 27851,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27013,
											"end": 27851,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 27013,
											"end": 27851,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27013,
											"end": 27851,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27013,
											"end": 27851,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27013,
											"end": 27851,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 27013,
											"end": 27851,
											"name": "tag",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 27013,
											"end": 27851,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 27013,
											"end": 27851,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 27013,
											"end": 27851,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 27013,
											"end": 27851,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 27013,
											"end": 27851,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27013,
											"end": 27851,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 27013,
											"end": 27851,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27013,
											"end": 27851,
											"name": "tag",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 27013,
											"end": 27851,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27013,
											"end": 27851,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 27013,
											"end": 27851,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11079,
											"end": 11110,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 11079,
											"end": 11110,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11079,
											"end": 11110,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 11079,
											"end": 11110,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11079,
											"end": 11110,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11079,
											"end": 11110,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 11079,
											"end": 11110,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11079,
											"end": 11110,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11079,
											"end": 11110,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11079,
											"end": 11110,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11079,
											"end": 11110,
											"name": "tag",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 11079,
											"end": 11110,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11079,
											"end": 11110,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 11079,
											"end": 11110,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11079,
											"end": 11110,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 11079,
											"end": 11110,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11079,
											"end": 11110,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 11079,
											"end": 11110,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11079,
											"end": 11110,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11079,
											"end": 11110,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25438,
											"end": 25604,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 25438,
											"end": 25604,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25438,
											"end": 25604,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 25438,
											"end": 25604,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25438,
											"end": 25604,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25438,
											"end": 25604,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 25438,
											"end": 25604,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25438,
											"end": 25604,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25438,
											"end": 25604,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25438,
											"end": 25604,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 25438,
											"end": 25604,
											"name": "tag",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 25438,
											"end": 25604,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 25438,
											"end": 25604,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 25438,
											"end": 25604,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 25438,
											"end": 25604,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 25438,
											"end": 25604,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25438,
											"end": 25604,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 25438,
											"end": 25604,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25438,
											"end": 25604,
											"name": "tag",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 25438,
											"end": 25604,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25438,
											"end": 25604,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "314"
										},
										{
											"begin": 25438,
											"end": 25604,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13387,
											"end": 13547,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 13387,
											"end": 13547,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13464,
											"end": 13468,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13480,
											"end": 13519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "317"
										},
										{
											"begin": 818,
											"end": 828,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 13503,
											"end": 13510,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13512,
											"end": 13518,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13480,
											"end": 13488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 13480,
											"end": 13519,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13480,
											"end": 13519,
											"name": "tag",
											"source": 0,
											"value": "317"
										},
										{
											"begin": 13480,
											"end": 13519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13536,
											"end": 13540,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13387,
											"end": 13547,
											"name": "tag",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 13387,
											"end": 13547,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13387,
											"end": 13547,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13387,
											"end": 13547,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13387,
											"end": 13547,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13387,
											"end": 13547,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13387,
											"end": 13547,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 28249,
											"end": 28369,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 28249,
											"end": 28369,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 818,
											"end": 828,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3098,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "tag",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "tag",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28336,
											"end": 28348,
											"name": "PUSH",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 28336,
											"end": 28362,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28336,
											"end": 28362,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 28336,
											"end": 28362,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 28336,
											"end": 28362,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 28336,
											"end": 28362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28336,
											"end": 28362,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 28336,
											"end": 28362,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28336,
											"end": 28362,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28336,
											"end": 28362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28336,
											"end": 28362,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28336,
											"end": 28362,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 28336,
											"end": 28362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28336,
											"end": 28362,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 28249,
											"end": 28369,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 28099,
											"end": 28239,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 28099,
											"end": 28239,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 818,
											"end": 828,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3098,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "tag",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28196,
											"end": 28213,
											"name": "PUSH",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 28196,
											"end": 28232,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28196,
											"end": 28232,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 28196,
											"end": 28232,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 28196,
											"end": 28232,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 28196,
											"end": 28232,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28196,
											"end": 28232,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 28196,
											"end": 28232,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28196,
											"end": 28232,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28196,
											"end": 28232,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28196,
											"end": 28232,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28196,
											"end": 28232,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 28196,
											"end": 28232,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28196,
											"end": 28232,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 28099,
											"end": 28239,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 13553,
											"end": 13861,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 13553,
											"end": 13861,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13653,
											"end": 13657,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13669,
											"end": 13705,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "334"
										},
										{
											"begin": 13679,
											"end": 13685,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13687,
											"end": 13696,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13698,
											"end": 13704,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13669,
											"end": 13678,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "335"
										},
										{
											"begin": 13669,
											"end": 13705,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13669,
											"end": 13705,
											"name": "tag",
											"source": 0,
											"value": "334"
										},
										{
											"begin": 13669,
											"end": 13705,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13715,
											"end": 13833,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 13724,
											"end": 13730,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 818,
											"end": 828,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 13744,
											"end": 13832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "338"
										},
										{
											"begin": 13782,
											"end": 13788,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 13744,
											"end": 13832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13744,
											"end": 13832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13744,
											"end": 13832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13744,
											"end": 13832,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 13744,
											"end": 13832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13744,
											"end": 13832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13744,
											"end": 13832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13744,
											"end": 13832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13744,
											"end": 13832,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 13744,
											"end": 13832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13744,
											"end": 13832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13744,
											"end": 13832,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13744,
											"end": 13832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13744,
											"end": 13832,
											"name": "PUSH data",
											"source": 0,
											"value": "974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330"
										},
										{
											"begin": 13744,
											"end": 13832,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 13744,
											"end": 13832,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13744,
											"end": 13832,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13744,
											"end": 13763,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 13744,
											"end": 13763,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13744,
											"end": 13763,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13744,
											"end": 13763,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13744,
											"end": 13763,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13744,
											"end": 13763,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13744,
											"end": 13755,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 13744,
											"end": 13763,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13744,
											"end": 13763,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13744,
											"end": 13763,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13744,
											"end": 13763,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13744,
											"end": 13763,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13744,
											"end": 13763,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13744,
											"end": 13763,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13744,
											"end": 13763,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 818,
											"end": 828,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 13744,
											"end": 13777,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13744,
											"end": 13777,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13744,
											"end": 13777,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13744,
											"end": 13777,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13744,
											"end": 13777,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13744,
											"end": 13777,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13744,
											"end": 13777,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13744,
											"end": 13777,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13744,
											"end": 13777,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13744,
											"end": 13777,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13744,
											"end": 13781,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "340"
										},
										{
											"begin": 13744,
											"end": 13832,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13744,
											"end": 13832,
											"name": "tag",
											"source": 0,
											"value": "338"
										},
										{
											"begin": 13744,
											"end": 13832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13715,
											"end": 13723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 13715,
											"end": 13833,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13715,
											"end": 13833,
											"name": "tag",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 13715,
											"end": 13833,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13850,
											"end": 13854,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13553,
											"end": 13861,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 13553,
											"end": 13861,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13553,
											"end": 13861,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13553,
											"end": 13861,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13553,
											"end": 13861,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13553,
											"end": 13861,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 25855,
											"end": 26178,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 25855,
											"end": 26178,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 818,
											"end": 828,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3098,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "343"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "tag",
											"source": 0,
											"value": "343"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25966,
											"end": 25983,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "346"
										},
										{
											"begin": 8637,
											"end": 8655,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 25978,
											"end": 25982,
											"name": "PUSH",
											"source": 0,
											"value": "3E8"
										},
										{
											"begin": 25966,
											"end": 25977,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "347"
										},
										{
											"begin": 25966,
											"end": 25983,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25966,
											"end": 25983,
											"name": "tag",
											"source": 0,
											"value": "346"
										},
										{
											"begin": 25966,
											"end": 25983,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25947,
											"end": 25962,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25947,
											"end": 25983,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 25947,
											"end": 25983,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25939,
											"end": 26030,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "348"
										},
										{
											"begin": 25939,
											"end": 26030,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25939,
											"end": 26030,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25939,
											"end": 26030,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 25939,
											"end": 26030,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25939,
											"end": 26030,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11131,
											"end": 11133,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 25939,
											"end": 26030,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25939,
											"end": 26030,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25939,
											"end": 26030,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11113,
											"end": 11134,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11170,
											"end": 11172,
											"name": "PUSH",
											"source": 1,
											"value": "2A"
										},
										{
											"begin": 11150,
											"end": 11168,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 11150,
											"end": 11168,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11150,
											"end": 11168,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11143,
											"end": 11173,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11209,
											"end": 11243,
											"name": "PUSH",
											"source": 1,
											"value": "416D6F756E74206D7573742062652067726561746572207468616E20302E3125"
										},
										{
											"begin": 11189,
											"end": 11207,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 11189,
											"end": 11207,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11189,
											"end": 11207,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11182,
											"end": 11244,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "206F6620737570706C79"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11260,
											"end": 11278,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 11260,
											"end": 11278,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11260,
											"end": 11278,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11253,
											"end": 11293,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11310,
											"end": 11329,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 11310,
											"end": 11329,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25939,
											"end": 26030,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 11103,
											"end": 11335,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 25939,
											"end": 26030,
											"name": "tag",
											"source": 0,
											"value": "348"
										},
										{
											"begin": 25939,
											"end": 26030,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8637,
											"end": 8655,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 26048,
											"end": 26063,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26048,
											"end": 26074,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 26048,
											"end": 26074,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26040,
											"end": 26127,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "351"
										},
										{
											"begin": 26040,
											"end": 26127,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26040,
											"end": 26127,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26040,
											"end": 26127,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 26040,
											"end": 26127,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26040,
											"end": 26127,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13189,
											"end": 13191,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 26040,
											"end": 26127,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26040,
											"end": 26127,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26040,
											"end": 26127,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13171,
											"end": 13192,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13228,
											"end": 13230,
											"name": "PUSH",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 13208,
											"end": 13226,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 13208,
											"end": 13226,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13208,
											"end": 13226,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13201,
											"end": 13231,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13267,
											"end": 13301,
											"name": "PUSH",
											"source": 1,
											"value": "416D6F756E74206D757374206265206C657373207468616E206F722065717561"
										},
										{
											"begin": 13247,
											"end": 13265,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 13247,
											"end": 13265,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13247,
											"end": 13265,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13240,
											"end": 13302,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6C20746F20746F74616C537570706C79"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13318,
											"end": 13336,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 13318,
											"end": 13336,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13318,
											"end": 13336,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13311,
											"end": 13357,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13374,
											"end": 13393,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 13374,
											"end": 13393,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26040,
											"end": 26127,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 13161,
											"end": 13399,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26040,
											"end": 26127,
											"name": "tag",
											"source": 0,
											"value": "351"
										},
										{
											"begin": 26040,
											"end": 26127,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26137,
											"end": 26153,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 26137,
											"end": 26171,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 25855,
											"end": 26178,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 22762,
											"end": 22944,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 22762,
											"end": 22944,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 818,
											"end": 828,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3098,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "tag",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22850,
											"end": 22888,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22850,
											"end": 22888,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 22850,
											"end": 22888,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22850,
											"end": 22888,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22882,
											"end": 22886,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 22850,
											"end": 22888,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22850,
											"end": 22888,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22850,
											"end": 22888,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4559,
											"end": 4610,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 22833,
											"end": 22847,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22833,
											"end": 22847,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22850,
											"end": 22873,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22850,
											"end": 22873,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22850,
											"end": 22873,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22850,
											"end": 22873,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 22850,
											"end": 22873,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4532,
											"end": 4550,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4532,
											"end": 4550,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22850,
											"end": 22888,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22850,
											"end": 22888,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22850,
											"end": 22888,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22850,
											"end": 22888,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22850,
											"end": 22888,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22850,
											"end": 22888,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22850,
											"end": 22888,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22850,
											"end": 22888,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 22850,
											"end": 22888,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22850,
											"end": 22888,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 22850,
											"end": 22888,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22850,
											"end": 22888,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22850,
											"end": 22888,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22850,
											"end": 22888,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "360"
										},
										{
											"begin": 22850,
											"end": 22888,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22850,
											"end": 22888,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22850,
											"end": 22888,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22850,
											"end": 22888,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22850,
											"end": 22888,
											"name": "tag",
											"source": 0,
											"value": "360"
										},
										{
											"begin": 22850,
											"end": 22888,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22850,
											"end": 22888,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22850,
											"end": 22888,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 22850,
											"end": 22888,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 22850,
											"end": 22888,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22850,
											"end": 22888,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22850,
											"end": 22888,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22850,
											"end": 22888,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "362"
										},
										{
											"begin": 22850,
											"end": 22888,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22850,
											"end": 22888,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 22850,
											"end": 22888,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22850,
											"end": 22888,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22850,
											"end": 22888,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 22850,
											"end": 22888,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 22850,
											"end": 22888,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22850,
											"end": 22888,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22850,
											"end": 22888,
											"name": "tag",
											"source": 0,
											"value": "362"
										},
										{
											"begin": 22850,
											"end": 22888,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22850,
											"end": 22888,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22850,
											"end": 22888,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22850,
											"end": 22888,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22850,
											"end": 22888,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22850,
											"end": 22888,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22850,
											"end": 22888,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22850,
											"end": 22888,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 22850,
											"end": 22888,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 22850,
											"end": 22888,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 22850,
											"end": 22888,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 22850,
											"end": 22888,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22850,
											"end": 22888,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22850,
											"end": 22888,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22850,
											"end": 22888,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22850,
											"end": 22888,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22850,
											"end": 22888,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22850,
											"end": 22888,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22850,
											"end": 22888,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22850,
											"end": 22888,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22850,
											"end": 22888,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22850,
											"end": 22888,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22850,
											"end": 22888,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22850,
											"end": 22888,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "363"
										},
										{
											"begin": 22850,
											"end": 22888,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22850,
											"end": 22888,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22850,
											"end": 22888,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "364"
										},
										{
											"begin": 22850,
											"end": 22888,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22850,
											"end": 22888,
											"name": "tag",
											"source": 0,
											"value": "363"
										},
										{
											"begin": 22850,
											"end": 22888,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22833,
											"end": 22888,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22833,
											"end": 22888,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22905,
											"end": 22910,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22898,
											"end": 22920,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22898,
											"end": 22920,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 22921,
											"end": 22928,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "365"
										},
										{
											"begin": 2992,
											"end": 2999,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3018,
											"end": 3024,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3018,
											"end": 3024,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3024,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 3031,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22921,
											"end": 22928,
											"name": "tag",
											"source": 0,
											"value": "365"
										},
										{
											"begin": 22921,
											"end": 22928,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22898,
											"end": 22937,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22898,
											"end": 22937,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 22898,
											"end": 22937,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 22898,
											"end": 22937,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 22898,
											"end": 22937,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22898,
											"end": 22937,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 22898,
											"end": 22937,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22898,
											"end": 22937,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22898,
											"end": 22937,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4813,
											"end": 4845,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4813,
											"end": 4845,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4813,
											"end": 4845,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 22898,
											"end": 22937,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22898,
											"end": 22937,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22898,
											"end": 22937,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4795,
											"end": 4846,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4862,
											"end": 4880,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4862,
											"end": 4880,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4862,
											"end": 4880,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4889,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4889,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4889,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4768,
											"end": 4786,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4768,
											"end": 4786,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22898,
											"end": 22937,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22898,
											"end": 22937,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22898,
											"end": 22937,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22898,
											"end": 22937,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22898,
											"end": 22937,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22898,
											"end": 22937,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22898,
											"end": 22937,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22898,
											"end": 22937,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22898,
											"end": 22937,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 22898,
											"end": 22937,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22898,
											"end": 22937,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 22898,
											"end": 22937,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22898,
											"end": 22937,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22898,
											"end": 22937,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22898,
											"end": 22937,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "368"
										},
										{
											"begin": 22898,
											"end": 22937,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22898,
											"end": 22937,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22898,
											"end": 22937,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22898,
											"end": 22937,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22898,
											"end": 22937,
											"name": "tag",
											"source": 0,
											"value": "368"
										},
										{
											"begin": 22898,
											"end": 22937,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22898,
											"end": 22937,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22898,
											"end": 22937,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 22898,
											"end": 22937,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 22898,
											"end": 22937,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22898,
											"end": 22937,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22898,
											"end": 22937,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22898,
											"end": 22937,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "370"
										},
										{
											"begin": 22898,
											"end": 22937,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22898,
											"end": 22937,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 22898,
											"end": 22937,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22898,
											"end": 22937,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22898,
											"end": 22937,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 22898,
											"end": 22937,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 22898,
											"end": 22937,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22898,
											"end": 22937,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22898,
											"end": 22937,
											"name": "tag",
											"source": 0,
											"value": "370"
										},
										{
											"begin": 22898,
											"end": 22937,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22898,
											"end": 22937,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22898,
											"end": 22937,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22898,
											"end": 22937,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22898,
											"end": 22937,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22898,
											"end": 22937,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22898,
											"end": 22937,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22898,
											"end": 22937,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 22898,
											"end": 22937,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 22898,
											"end": 22937,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 22898,
											"end": 22937,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 22898,
											"end": 22937,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22898,
											"end": 22937,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22898,
											"end": 22937,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22898,
											"end": 22937,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22898,
											"end": 22937,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22898,
											"end": 22937,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22898,
											"end": 22937,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22898,
											"end": 22937,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22898,
											"end": 22937,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22898,
											"end": 22937,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22898,
											"end": 22937,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22898,
											"end": 22937,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22898,
											"end": 22937,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "371"
										},
										{
											"begin": 22898,
											"end": 22937,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22898,
											"end": 22937,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22898,
											"end": 22937,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "372"
										},
										{
											"begin": 22898,
											"end": 22937,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22898,
											"end": 22937,
											"name": "tag",
											"source": 0,
											"value": "371"
										},
										{
											"begin": 22898,
											"end": 22937,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22898,
											"end": 22937,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3145,
											"end": 3146,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22762,
											"end": 22944,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22762,
											"end": 22944,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 22083,
											"end": 22225,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 22083,
											"end": 22225,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 818,
											"end": 828,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3098,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "377"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "tag",
											"source": 0,
											"value": "377"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22146,
											"end": 22154,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 22146,
											"end": 22154,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22146,
											"end": 22154,
											"name": "PUSH",
											"source": 0,
											"value": "10000"
										},
										{
											"begin": 22146,
											"end": 22154,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22146,
											"end": 22154,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 22146,
											"end": 22154,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 22146,
											"end": 22154,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22138,
											"end": 22189,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "380"
										},
										{
											"begin": 22138,
											"end": 22189,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22138,
											"end": 22189,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22138,
											"end": 22189,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 22138,
											"end": 22189,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22138,
											"end": 22189,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7299,
											"end": 7301,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 22138,
											"end": 22189,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22138,
											"end": 22189,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22138,
											"end": 22189,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7281,
											"end": 7302,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7338,
											"end": 7340,
											"name": "PUSH",
											"source": 1,
											"value": "1E"
										},
										{
											"begin": 7318,
											"end": 7336,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7318,
											"end": 7336,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7318,
											"end": 7336,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7311,
											"end": 7341,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7377,
											"end": 7409,
											"name": "PUSH",
											"source": 1,
											"value": "7468697320636F6E74726163742063616E6E6F74206265207061757365640000"
										},
										{
											"begin": 7357,
											"end": 7375,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 7357,
											"end": 7375,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7357,
											"end": 7375,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7350,
											"end": 7410,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7427,
											"end": 7445,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 7427,
											"end": 7445,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22138,
											"end": 22189,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 7271,
											"end": 7451,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22138,
											"end": 22189,
											"name": "tag",
											"source": 0,
											"value": "380"
										},
										{
											"begin": 22138,
											"end": 22189,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22199,
											"end": 22210,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 22199,
											"end": 22218,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22199,
											"end": 22218,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 22199,
											"end": 22218,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22199,
											"end": 22218,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22199,
											"end": 22218,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 22083,
											"end": 22225,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 25098,
											"end": 25209,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 25098,
											"end": 25209,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 818,
											"end": 828,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3098,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "385"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "tag",
											"source": 0,
											"value": "385"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 25168,
											"end": 25195,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25168,
											"end": 25195,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25168,
											"end": 25195,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25168,
											"end": 25195,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25168,
											"end": 25195,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25168,
											"end": 25186,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25168,
											"end": 25195,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25168,
											"end": 25195,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25168,
											"end": 25195,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25168,
											"end": 25195,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25168,
											"end": 25195,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 25168,
											"end": 25202,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25168,
											"end": 25202,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 25168,
											"end": 25202,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25198,
											"end": 25202,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 25168,
											"end": 25202,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 25168,
											"end": 25202,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25168,
											"end": 25202,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 25098,
											"end": 25209,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 25337,
											"end": 25432,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 25337,
											"end": 25432,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 818,
											"end": 828,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3098,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "390"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "tag",
											"source": 0,
											"value": "390"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 25404,
											"end": 25417,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25420,
											"end": 25425,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25404,
											"end": 25417,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25404,
											"end": 25417,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25404,
											"end": 25417,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25404,
											"end": 25408,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25404,
											"end": 25417,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25404,
											"end": 25417,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25404,
											"end": 25417,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25404,
											"end": 25417,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25404,
											"end": 25417,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 25404,
											"end": 25425,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25404,
											"end": 25425,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 25404,
											"end": 25425,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25404,
											"end": 25425,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25404,
											"end": 25425,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 25337,
											"end": 25432,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 22231,
											"end": 22316,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 22231,
											"end": 22316,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 818,
											"end": 828,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3098,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "395"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "tag",
											"source": 0,
											"value": "395"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22293,
											"end": 22301,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 22293,
											"end": 22309,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22293,
											"end": 22309,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF0000"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 22293,
											"end": 22309,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22293,
											"end": 22309,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22293,
											"end": 22309,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 22231,
											"end": 22316,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 22530,
											"end": 22756,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 22530,
											"end": 22756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 818,
											"end": 828,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3098,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "400"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "tag",
											"source": 0,
											"value": "400"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22612,
											"end": 22633,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 22647,
											"end": 22669,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22647,
											"end": 22669,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22643,
											"end": 22750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "403"
										},
										{
											"begin": 22643,
											"end": 22750,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2992,
											"end": 2999,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3018,
											"end": 3024,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3024,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22685,
											"end": 22739,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22685,
											"end": 22739,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3018,
											"end": 3024,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3024,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3024,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3024,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22685,
											"end": 22739,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22685,
											"end": 22739,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22685,
											"end": 22739,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 22685,
											"end": 22739,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 22685,
											"end": 22739,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22720,
											"end": 22738,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 22720,
											"end": 22738,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22685,
											"end": 22739,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2992,
											"end": 2999,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22685,
											"end": 22739,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22720,
											"end": 22738,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3024,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 22685,
											"end": 22739,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 22685,
											"end": 22739,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 22685,
											"end": 22739,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 22685,
											"end": 22739,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22685,
											"end": 22739,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22685,
											"end": 22739,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22685,
											"end": 22739,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22685,
											"end": 22739,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22685,
											"end": 22739,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22685,
											"end": 22739,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22685,
											"end": 22739,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "406"
										},
										{
											"begin": 22685,
											"end": 22739,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22685,
											"end": 22739,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 22685,
											"end": 22739,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22685,
											"end": 22739,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22685,
											"end": 22739,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 22685,
											"end": 22739,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 22685,
											"end": 22739,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22685,
											"end": 22739,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22685,
											"end": 22739,
											"name": "tag",
											"source": 0,
											"value": "406"
										},
										{
											"begin": 22685,
											"end": 22739,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22685,
											"end": 22739,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22643,
											"end": 22750,
											"name": "tag",
											"source": 0,
											"value": "403"
										},
										{
											"begin": 22643,
											"end": 22750,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3145,
											"end": 3146,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22530,
											"end": 22756,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3851,
											"end": 3998,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 3851,
											"end": 3998,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 818,
											"end": 828,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3098,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "410"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "tag",
											"source": 0,
											"value": "410"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3959,
											"end": 3960,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3943,
											"end": 3949,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3943,
											"end": 3949,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3922,
											"end": 3962,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3922,
											"end": 3962,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3943,
											"end": 3949,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3943,
											"end": 3949,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3943,
											"end": 3949,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3943,
											"end": 3949,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3922,
											"end": 3962,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3922,
											"end": 3962,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3959,
											"end": 3960,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3959,
											"end": 3960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3922,
											"end": 3962,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 3989,
											"end": 3990,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3972,
											"end": 3991,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3972,
											"end": 3991,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3972,
											"end": 3991,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3972,
											"end": 3991,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3972,
											"end": 3991,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3851,
											"end": 3998,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 28623,
											"end": 28796,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 28623,
											"end": 28796,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 818,
											"end": 828,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3098,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "415"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "tag",
											"source": 0,
											"value": "415"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28713,
											"end": 28721,
											"name": "PUSH",
											"source": 0,
											"value": "1A"
										},
										{
											"begin": 28713,
											"end": 28739,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28713,
											"end": 28739,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 28713,
											"end": 28739,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28713,
											"end": 28739,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28713,
											"end": 28739,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28713,
											"end": 28739,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28713,
											"end": 28739,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 28713,
											"end": 28739,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28713,
											"end": 28739,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 28769,
											"end": 28789,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "418"
										},
										{
											"begin": 28769,
											"end": 28777,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28780,
											"end": 28789,
											"name": "PUSH",
											"source": 0,
											"value": "3C"
										},
										{
											"begin": 28769,
											"end": 28789,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "419"
										},
										{
											"begin": 28769,
											"end": 28789,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28769,
											"end": 28789,
											"name": "tag",
											"source": 0,
											"value": "418"
										},
										{
											"begin": 28769,
											"end": 28789,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28749,
											"end": 28757,
											"name": "PUSH",
											"source": 0,
											"value": "1A"
										},
										{
											"begin": 28749,
											"end": 28789,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28749,
											"end": 28789,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28749,
											"end": 28789,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 28749,
											"end": 28789,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 28749,
											"end": 28789,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28749,
											"end": 28789,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 28749,
											"end": 28789,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28749,
											"end": 28789,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 28749,
											"end": 28789,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 28749,
											"end": 28789,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28749,
											"end": 28789,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 28749,
											"end": 28789,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28749,
											"end": 28789,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28749,
											"end": 28789,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28749,
											"end": 28789,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28749,
											"end": 28789,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 28749,
											"end": 28789,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28749,
											"end": 28789,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28623,
											"end": 28796,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 21998,
											"end": 22077,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 21998,
											"end": 22077,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 818,
											"end": 828,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3098,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "423"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "tag",
											"source": 0,
											"value": "423"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22052,
											"end": 22063,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 22052,
											"end": 22070,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22052,
											"end": 22070,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 22052,
											"end": 22070,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22066,
											"end": 22070,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 22052,
											"end": 22070,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 22052,
											"end": 22070,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22052,
											"end": 22070,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 21998,
											"end": 22077,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 19677,
											"end": 20093,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 19677,
											"end": 20093,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19719,
											"end": 19726,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19739,
											"end": 19755,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19757,
											"end": 19773,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19793,
											"end": 19806,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 19793,
											"end": 19806,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19793,
											"end": 19806,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19793,
											"end": 19806,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19793,
											"end": 19806,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19793,
											"end": 19806,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 19793,
											"end": 19806,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 19793,
											"end": 19806,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19793,
											"end": 19806,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19793,
											"end": 19806,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19778,
											"end": 19819,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19778,
											"end": 19819,
											"name": "PUSH",
											"source": 0,
											"value": "902F1AC"
										},
										{
											"begin": 19778,
											"end": 19821,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19778,
											"end": 19821,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19778,
											"end": 19821,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19778,
											"end": 19821,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 19778,
											"end": 19821,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19778,
											"end": 19821,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 19778,
											"end": 19821,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 19778,
											"end": 19821,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19778,
											"end": 19821,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19778,
											"end": 19821,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19778,
											"end": 19821,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19778,
											"end": 19821,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 19778,
											"end": 19821,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19778,
											"end": 19821,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19778,
											"end": 19821,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19778,
											"end": 19821,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19778,
											"end": 19821,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19778,
											"end": 19821,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19778,
											"end": 19821,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 19778,
											"end": 19821,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19778,
											"end": 19821,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 19778,
											"end": 19821,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19778,
											"end": 19821,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19778,
											"end": 19821,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19778,
											"end": 19821,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "427"
										},
										{
											"begin": 19778,
											"end": 19821,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19778,
											"end": 19821,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19778,
											"end": 19821,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19778,
											"end": 19821,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19778,
											"end": 19821,
											"name": "tag",
											"source": 0,
											"value": "427"
										},
										{
											"begin": 19778,
											"end": 19821,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19778,
											"end": 19821,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19778,
											"end": 19821,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 19778,
											"end": 19821,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 19778,
											"end": 19821,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19778,
											"end": 19821,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19778,
											"end": 19821,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19778,
											"end": 19821,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "429"
										},
										{
											"begin": 19778,
											"end": 19821,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19778,
											"end": 19821,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 19778,
											"end": 19821,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19778,
											"end": 19821,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19778,
											"end": 19821,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 19778,
											"end": 19821,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 19778,
											"end": 19821,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19778,
											"end": 19821,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19778,
											"end": 19821,
											"name": "tag",
											"source": 0,
											"value": "429"
										},
										{
											"begin": 19778,
											"end": 19821,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19778,
											"end": 19821,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19778,
											"end": 19821,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19778,
											"end": 19821,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19778,
											"end": 19821,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19778,
											"end": 19821,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19778,
											"end": 19821,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19778,
											"end": 19821,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 19778,
											"end": 19821,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 19778,
											"end": 19821,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 19778,
											"end": 19821,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 19778,
											"end": 19821,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19778,
											"end": 19821,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19778,
											"end": 19821,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19778,
											"end": 19821,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19778,
											"end": 19821,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19778,
											"end": 19821,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19778,
											"end": 19821,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19778,
											"end": 19821,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19778,
											"end": 19821,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19778,
											"end": 19821,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19778,
											"end": 19821,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19778,
											"end": 19821,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19778,
											"end": 19821,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "430"
										},
										{
											"begin": 19778,
											"end": 19821,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19778,
											"end": 19821,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19778,
											"end": 19821,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "431"
										},
										{
											"begin": 19778,
											"end": 19821,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19778,
											"end": 19821,
											"name": "tag",
											"source": 0,
											"value": "430"
										},
										{
											"begin": 19778,
											"end": 19821,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19738,
											"end": 19821,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19738,
											"end": 19821,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19738,
											"end": 19821,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19738,
											"end": 19821,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19738,
											"end": 19821,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19835,
											"end": 19843,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19835,
											"end": 19848,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19847,
											"end": 19848,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19835,
											"end": 19848,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19835,
											"end": 19865,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19835,
											"end": 19865,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "432"
										},
										{
											"begin": 19835,
											"end": 19865,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19852,
											"end": 19865,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19852,
											"end": 19865,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19852,
											"end": 19865,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19835,
											"end": 19865,
											"name": "tag",
											"source": 0,
											"value": "432"
										},
										{
											"begin": 19835,
											"end": 19865,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19831,
											"end": 19875,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19831,
											"end": 19875,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "433"
										},
										{
											"begin": 19831,
											"end": 19875,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19874,
											"end": 19875,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19867,
											"end": 19875,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 19867,
											"end": 19875,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19867,
											"end": 19875,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19867,
											"end": 19875,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19677,
											"end": 20093,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19677,
											"end": 20093,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 19831,
											"end": 19875,
											"name": "tag",
											"source": 0,
											"value": "433"
										},
										{
											"begin": 19831,
											"end": 19875,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19916,
											"end": 19929,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 19916,
											"end": 19929,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19901,
											"end": 19939,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19901,
											"end": 19939,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19901,
											"end": 19939,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "DFE1681"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 19901,
											"end": 19939,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19901,
											"end": 19939,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19901,
											"end": 19939,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19901,
											"end": 19939,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19951,
											"end": 19955,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 19951,
											"end": 19955,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19916,
											"end": 19929,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19916,
											"end": 19929,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19901,
											"end": 19937,
											"name": "PUSH",
											"source": 0,
											"value": "DFE1681"
										},
										{
											"begin": 19901,
											"end": 19937,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19901,
											"end": 19939,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19901,
											"end": 19939,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19901,
											"end": 19939,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19901,
											"end": 19939,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19901,
											"end": 19939,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 19901,
											"end": 19939,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19901,
											"end": 19939,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 19901,
											"end": 19939,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19901,
											"end": 19939,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19901,
											"end": 19939,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19901,
											"end": 19939,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19901,
											"end": 19939,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19901,
											"end": 19939,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19901,
											"end": 19939,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19916,
											"end": 19929,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 19901,
											"end": 19939,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19901,
											"end": 19939,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 19901,
											"end": 19939,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19901,
											"end": 19939,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19901,
											"end": 19939,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19901,
											"end": 19939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "434"
										},
										{
											"begin": 19901,
											"end": 19939,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19901,
											"end": 19939,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19901,
											"end": 19939,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19901,
											"end": 19939,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19901,
											"end": 19939,
											"name": "tag",
											"source": 0,
											"value": "434"
										},
										{
											"begin": 19901,
											"end": 19939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19901,
											"end": 19939,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19901,
											"end": 19939,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 19901,
											"end": 19939,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 19901,
											"end": 19939,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19901,
											"end": 19939,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19901,
											"end": 19939,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19901,
											"end": 19939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "436"
										},
										{
											"begin": 19901,
											"end": 19939,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19901,
											"end": 19939,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 19901,
											"end": 19939,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19901,
											"end": 19939,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19901,
											"end": 19939,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 19901,
											"end": 19939,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 19901,
											"end": 19939,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19901,
											"end": 19939,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19901,
											"end": 19939,
											"name": "tag",
											"source": 0,
											"value": "436"
										},
										{
											"begin": 19901,
											"end": 19939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19901,
											"end": 19939,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19901,
											"end": 19939,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19901,
											"end": 19939,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19901,
											"end": 19939,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19901,
											"end": 19939,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19901,
											"end": 19939,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19901,
											"end": 19939,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 19901,
											"end": 19939,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 19901,
											"end": 19939,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 19901,
											"end": 19939,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 19901,
											"end": 19939,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19901,
											"end": 19939,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19901,
											"end": 19939,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19901,
											"end": 19939,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19901,
											"end": 19939,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19901,
											"end": 19939,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19901,
											"end": 19939,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19901,
											"end": 19939,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19901,
											"end": 19939,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19901,
											"end": 19939,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19901,
											"end": 19939,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19901,
											"end": 19939,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19901,
											"end": 19939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "437"
										},
										{
											"begin": 19901,
											"end": 19939,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19901,
											"end": 19939,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19901,
											"end": 19939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "438"
										},
										{
											"begin": 19901,
											"end": 19939,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19901,
											"end": 19939,
											"name": "tag",
											"source": 0,
											"value": "437"
										},
										{
											"begin": 19901,
											"end": 19939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19901,
											"end": 19956,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19901,
											"end": 19956,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19901,
											"end": 20086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "439"
										},
										{
											"begin": 19901,
											"end": 20086,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20036,
											"end": 20086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "440"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20068,
											"end": 20085,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20068,
											"end": 20085,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20068,
											"end": 20085,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20068,
											"end": 20085,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20036,
											"end": 20063,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "441"
										},
										{
											"begin": 20036,
											"end": 20063,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20036,
											"end": 20053,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 20036,
											"end": 20053,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20058,
											"end": 20062,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 20036,
											"end": 20057,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "442"
										},
										{
											"begin": 20036,
											"end": 20063,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20036,
											"end": 20063,
											"name": "tag",
											"source": 0,
											"value": "441"
										},
										{
											"begin": 20036,
											"end": 20063,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20036,
											"end": 20067,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20036,
											"end": 20067,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "347"
										},
										{
											"begin": 20036,
											"end": 20086,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20036,
											"end": 20086,
											"name": "tag",
											"source": 0,
											"value": "440"
										},
										{
											"begin": 20036,
											"end": 20086,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19901,
											"end": 20086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "444"
										},
										{
											"begin": 19901,
											"end": 20086,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19901,
											"end": 20086,
											"name": "tag",
											"source": 0,
											"value": "439"
										},
										{
											"begin": 19901,
											"end": 20086,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19971,
											"end": 20021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "444"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20003,
											"end": 20020,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20003,
											"end": 20020,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20003,
											"end": 20020,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20003,
											"end": 20020,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19971,
											"end": 19998,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "441"
										},
										{
											"begin": 19971,
											"end": 19998,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19971,
											"end": 19988,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 19971,
											"end": 19988,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19993,
											"end": 19997,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 19971,
											"end": 19992,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "442"
										},
										{
											"begin": 19971,
											"end": 19998,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19971,
											"end": 20021,
											"name": "tag",
											"source": 0,
											"value": "444"
										},
										{
											"begin": 19971,
											"end": 20021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19894,
											"end": 20086,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 19894,
											"end": 20086,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19894,
											"end": 20086,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19894,
											"end": 20086,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19677,
											"end": 20093,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19677,
											"end": 20093,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 27857,
											"end": 27943,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 27857,
											"end": 27943,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 818,
											"end": 828,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3098,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "449"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "tag",
											"source": 0,
											"value": "449"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27916,
											"end": 27928,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 27916,
											"end": 27936,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27916,
											"end": 27936,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF00000000"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 27916,
											"end": 27936,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27916,
											"end": 27936,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27916,
											"end": 27936,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27857,
											"end": 27943,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 28802,
											"end": 29340,
											"name": "tag",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 28802,
											"end": 29340,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 29005,
											"end": 29033,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29005,
											"end": 29033,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28876,
											"end": 28889,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29005,
											"end": 29033,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29005,
											"end": 29033,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29005,
											"end": 29033,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29005,
											"end": 29024,
											"name": "PUSH",
											"source": 0,
											"value": "1B"
										},
										{
											"begin": 29005,
											"end": 29033,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29005,
											"end": 29033,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29005,
											"end": 29033,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29005,
											"end": 29033,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29005,
											"end": 29033,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 29005,
											"end": 29033,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28876,
											"end": 28889,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28876,
											"end": 28889,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28876,
											"end": 28889,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28876,
											"end": 28889,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28876,
											"end": 28889,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28876,
											"end": 28889,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28876,
											"end": 28889,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28876,
											"end": 28889,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29036,
											"end": 29051,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 29005,
											"end": 29120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "453"
										},
										{
											"begin": 29005,
											"end": 29120,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29119,
											"end": 29120,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29005,
											"end": 29120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "455"
										},
										{
											"begin": 29005,
											"end": 29120,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29005,
											"end": 29120,
											"name": "tag",
											"source": 0,
											"value": "453"
										},
										{
											"begin": 29005,
											"end": 29120,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 29067,
											"end": 29095,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 29067,
											"end": 29095,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29067,
											"end": 29095,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29067,
											"end": 29095,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29067,
											"end": 29095,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29067,
											"end": 29095,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29067,
											"end": 29086,
											"name": "PUSH",
											"source": 0,
											"value": "1B"
										},
										{
											"begin": 29067,
											"end": 29095,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29067,
											"end": 29095,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29067,
											"end": 29095,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29067,
											"end": 29095,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29067,
											"end": 29095,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 29067,
											"end": 29095,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29067,
											"end": 29116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "455"
										},
										{
											"begin": 29067,
											"end": 29116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29100,
											"end": 29115,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 29067,
											"end": 29099,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "456"
										},
										{
											"begin": 29067,
											"end": 29116,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29067,
											"end": 29116,
											"name": "tag",
											"source": 0,
											"value": "455"
										},
										{
											"begin": 29067,
											"end": 29116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28985,
											"end": 29120,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 29147,
											"end": 29167,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "457"
										},
										{
											"begin": 28985,
											"end": 29120,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29161,
											"end": 29166,
											"name": "PUSH",
											"source": 0,
											"value": "15180"
										},
										{
											"begin": 29147,
											"end": 29160,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "347"
										},
										{
											"begin": 29147,
											"end": 29167,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29147,
											"end": 29167,
											"name": "tag",
											"source": 0,
											"value": "457"
										},
										{
											"begin": 29147,
											"end": 29167,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29139,
											"end": 29167,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 29177,
											"end": 29195,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "458"
										},
										{
											"begin": 29190,
											"end": 29195,
											"name": "PUSH",
											"source": 0,
											"value": "15180"
										},
										{
											"begin": 29177,
											"end": 29195,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29177,
											"end": 29195,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "459"
										},
										{
											"begin": 29177,
											"end": 29195,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29177,
											"end": 29195,
											"name": "tag",
											"source": 0,
											"value": "458"
										},
										{
											"begin": 29177,
											"end": 29195,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29177,
											"end": 29195,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 29214,
											"end": 29233,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "460"
										},
										{
											"begin": 29177,
											"end": 29195,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29228,
											"end": 29232,
											"name": "PUSH",
											"source": 0,
											"value": "E10"
										},
										{
											"begin": 29214,
											"end": 29227,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "347"
										},
										{
											"begin": 29214,
											"end": 29233,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29214,
											"end": 29233,
											"name": "tag",
											"source": 0,
											"value": "460"
										},
										{
											"begin": 29214,
											"end": 29233,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29205,
											"end": 29233,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 29243,
											"end": 29260,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "461"
										},
										{
											"begin": 29256,
											"end": 29260,
											"name": "PUSH",
											"source": 0,
											"value": "E10"
										},
										{
											"begin": 29243,
											"end": 29260,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29243,
											"end": 29260,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "459"
										},
										{
											"begin": 29243,
											"end": 29260,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29243,
											"end": 29260,
											"name": "tag",
											"source": 0,
											"value": "461"
										},
										{
											"begin": 29243,
											"end": 29260,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29243,
											"end": 29260,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 29281,
											"end": 29298,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "462"
										},
										{
											"begin": 29243,
											"end": 29260,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29295,
											"end": 29297,
											"name": "PUSH",
											"source": 0,
											"value": "3C"
										},
										{
											"begin": 29281,
											"end": 29294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "347"
										},
										{
											"begin": 29281,
											"end": 29298,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29281,
											"end": 29298,
											"name": "tag",
											"source": 0,
											"value": "462"
										},
										{
											"begin": 29281,
											"end": 29298,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29270,
											"end": 29298,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 29319,
											"end": 29333,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "463"
										},
										{
											"begin": 29331,
											"end": 29333,
											"name": "PUSH",
											"source": 0,
											"value": "3C"
										},
										{
											"begin": 29319,
											"end": 29328,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29319,
											"end": 29333,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "459"
										},
										{
											"begin": 29319,
											"end": 29333,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29319,
											"end": 29333,
											"name": "tag",
											"source": 0,
											"value": "463"
										},
										{
											"begin": 29319,
											"end": 29333,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29308,
											"end": 29333,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29308,
											"end": 29333,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28802,
											"end": 29340,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28802,
											"end": 29340,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28802,
											"end": 29340,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 28802,
											"end": 29340,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28802,
											"end": 29340,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28802,
											"end": 29340,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 28802,
											"end": 29340,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 25709,
											"end": 25849,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 25709,
											"end": 25849,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 818,
											"end": 828,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3098,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "466"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "tag",
											"source": 0,
											"value": "466"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25803,
											"end": 25828,
											"name": "PUSH",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 25803,
											"end": 25842,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 25709,
											"end": 25849,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 13066,
											"end": 13232,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 13066,
											"end": 13232,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13146,
											"end": 13150,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13162,
											"end": 13204,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "317"
										},
										{
											"begin": 818,
											"end": 828,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 13186,
											"end": 13195,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13197,
											"end": 13203,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13162,
											"end": 13171,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "335"
										},
										{
											"begin": 13162,
											"end": 13204,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22322,
											"end": 22524,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 22322,
											"end": 22524,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 818,
											"end": 828,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3098,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "474"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "tag",
											"source": 0,
											"value": "474"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22419,
											"end": 22423,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 22375,
											"end": 22398,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12929,
											"end": 12947,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12929,
											"end": 12947,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12929,
											"end": 12947,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12929,
											"end": 12938,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 12929,
											"end": 12947,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12929,
											"end": 12947,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12929,
											"end": 12947,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12929,
											"end": 12947,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12929,
											"end": 12947,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12929,
											"end": 12947,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22439,
											"end": 22458,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22439,
											"end": 22458,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22435,
											"end": 22518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "403"
										},
										{
											"begin": 22435,
											"end": 22518,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22474,
											"end": 22507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "403"
										},
										{
											"begin": 22491,
											"end": 22506,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22474,
											"end": 22490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "480"
										},
										{
											"begin": 22474,
											"end": 22507,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28376,
											"end": 28496,
											"name": "tag",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 28376,
											"end": 28496,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 818,
											"end": 828,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3098,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "483"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "tag",
											"source": 0,
											"value": "483"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28463,
											"end": 28475,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 28463,
											"end": 28489,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28463,
											"end": 28489,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 28463,
											"end": 28489,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 28463,
											"end": 28489,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 28463,
											"end": 28489,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28463,
											"end": 28489,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 28463,
											"end": 28489,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28463,
											"end": 28489,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28463,
											"end": 28489,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28463,
											"end": 28489,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28463,
											"end": 28489,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 28463,
											"end": 28489,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28463,
											"end": 28489,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 28376,
											"end": 28496,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 21825,
											"end": 21992,
											"name": "tag",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 21825,
											"end": 21992,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 818,
											"end": 828,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3098,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "488"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "tag",
											"source": 0,
											"value": "488"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21910,
											"end": 21925,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 21896,
											"end": 21907,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 21896,
											"end": 21925,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 21935,
											"end": 21945,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 21935,
											"end": 21957,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 21967,
											"end": 21978,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 21967,
											"end": 21985,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21967,
											"end": 21985,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 21967,
											"end": 21985,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21981,
											"end": 21985,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 21967,
											"end": 21985,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 21967,
											"end": 21985,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21967,
											"end": 21985,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 21825,
											"end": 21992,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 25610,
											"end": 25699,
											"name": "tag",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 25610,
											"end": 25699,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 818,
											"end": 828,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3098,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "493"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "tag",
											"source": 0,
											"value": "493"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25672,
											"end": 25684,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 25672,
											"end": 25692,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25672,
											"end": 25692,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF000000"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 25672,
											"end": 25692,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25672,
											"end": 25692,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25672,
											"end": 25692,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 25610,
											"end": 25699,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 27949,
											"end": 28089,
											"name": "tag",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 27949,
											"end": 28089,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 818,
											"end": 828,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3098,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "498"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "tag",
											"source": 0,
											"value": "498"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28046,
											"end": 28063,
											"name": "PUSH",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 28046,
											"end": 28082,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28046,
											"end": 28082,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 28046,
											"end": 28082,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 28046,
											"end": 28082,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 28046,
											"end": 28082,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28046,
											"end": 28082,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 28046,
											"end": 28082,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28046,
											"end": 28082,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28046,
											"end": 28082,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28046,
											"end": 28082,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28046,
											"end": 28082,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 28046,
											"end": 28082,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28046,
											"end": 28082,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27949,
											"end": 28089,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 28502,
											"end": 28617,
											"name": "tag",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 28502,
											"end": 28617,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 818,
											"end": 828,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3098,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "504"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "tag",
											"source": 0,
											"value": "504"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28583,
											"end": 28598,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 28583,
											"end": 28610,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 28502,
											"end": 28617,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 26184,
											"end": 27007,
											"name": "tag",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 26184,
											"end": 27007,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 818,
											"end": 828,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3098,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "509"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "tag",
											"source": 0,
											"value": "509"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26319,
											"end": 26335,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26338,
											"end": 26399,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "512"
										},
										{
											"begin": 26386,
											"end": 26398,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26338,
											"end": 26381,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "514"
										},
										{
											"begin": 26373,
											"end": 26380,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 26338,
											"end": 26381,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26338,
											"end": 26350,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 26355,
											"end": 26367,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 26338,
											"end": 26354,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "515"
										},
										{
											"begin": 26338,
											"end": 26368,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26338,
											"end": 26368,
											"name": "tag",
											"source": 0,
											"value": "514"
										},
										{
											"begin": 26338,
											"end": 26368,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26338,
											"end": 26372,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26338,
											"end": 26372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "515"
										},
										{
											"begin": 26338,
											"end": 26381,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26338,
											"end": 26399,
											"name": "tag",
											"source": 0,
											"value": "512"
										},
										{
											"begin": 26338,
											"end": 26399,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26319,
											"end": 26399,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26319,
											"end": 26399,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26429,
											"end": 26432,
											"name": "PUSH",
											"source": 0,
											"value": "FA"
										},
										{
											"begin": 26417,
											"end": 26425,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26417,
											"end": 26432,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 26417,
											"end": 26432,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26409,
											"end": 26486,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "516"
										},
										{
											"begin": 26409,
											"end": 26486,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26409,
											"end": 26486,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26409,
											"end": 26486,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 26409,
											"end": 26486,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26409,
											"end": 26486,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8062,
											"end": 8064,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 26409,
											"end": 26486,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26409,
											"end": 26486,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26409,
											"end": 26486,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8044,
											"end": 8065,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8101,
											"end": 8103,
											"name": "PUSH",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 8081,
											"end": 8099,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8081,
											"end": 8099,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8081,
											"end": 8099,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8074,
											"end": 8104,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8140,
											"end": 8174,
											"name": "PUSH",
											"source": 1,
											"value": "53756D206F66206275792066656573206D757374206265206C65737320746861"
										},
										{
											"begin": 8120,
											"end": 8138,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 8120,
											"end": 8138,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8120,
											"end": 8138,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8113,
											"end": 8175,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6E206F7220657175616C20746F20323525"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "78"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8191,
											"end": 8209,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 8191,
											"end": 8209,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8191,
											"end": 8209,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8184,
											"end": 8231,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8248,
											"end": 8267,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 8248,
											"end": 8267,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26409,
											"end": 26486,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 8034,
											"end": 8273,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26409,
											"end": 26486,
											"name": "tag",
											"source": 0,
											"value": "516"
										},
										{
											"begin": 26409,
											"end": 26486,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26504,
											"end": 26516,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 26504,
											"end": 26516,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26504,
											"end": 26516,
											"name": "PUSH",
											"source": 0,
											"value": "100000000"
										},
										{
											"begin": 26504,
											"end": 26516,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26504,
											"end": 26516,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 26504,
											"end": 26516,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 26504,
											"end": 26516,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26496,
											"end": 26545,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "519"
										},
										{
											"begin": 26496,
											"end": 26545,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26496,
											"end": 26545,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26496,
											"end": 26545,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 26496,
											"end": 26545,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26496,
											"end": 26545,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14421,
											"end": 14423,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 26496,
											"end": 26545,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26496,
											"end": 26545,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26496,
											"end": 26545,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14403,
											"end": 14424,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14460,
											"end": 14462,
											"name": "PUSH",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 14440,
											"end": 14458,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 14440,
											"end": 14458,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14440,
											"end": 14458,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14433,
											"end": 14463,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "151A1A5CC8199D5B98DD1A5BDB881A5CC8191A58589B1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "42"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14479,
											"end": 14497,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 14479,
											"end": 14497,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14479,
											"end": 14497,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14472,
											"end": 14526,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14543,
											"end": 14561,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 14543,
											"end": 14561,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26496,
											"end": 26545,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 14393,
											"end": 14567,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26496,
											"end": 26545,
											"name": "tag",
											"source": 0,
											"value": "519"
										},
										{
											"begin": 26496,
											"end": 26545,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26556,
											"end": 26572,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 26556,
											"end": 26587,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 26556,
											"end": 26587,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26556,
											"end": 26587,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 26597,
											"end": 26613,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 26597,
											"end": 26628,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 26597,
											"end": 26628,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26597,
											"end": 26628,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 26638,
											"end": 26649,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 26638,
											"end": 26659,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26638,
											"end": 26659,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26638,
											"end": 26659,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 26669,
											"end": 26685,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 26669,
											"end": 26700,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26669,
											"end": 26700,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26669,
											"end": 26700,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 26719,
											"end": 26743,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 26719,
											"end": 26762,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 26719,
											"end": 26762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26719,
											"end": 26762,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 26772,
											"end": 26796,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 26772,
											"end": 26815,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 26772,
											"end": 26815,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26772,
											"end": 26815,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 26825,
											"end": 26844,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 26825,
											"end": 26858,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26825,
											"end": 26858,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26825,
											"end": 26858,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 26868,
											"end": 26892,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 26868,
											"end": 26911,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26868,
											"end": 26911,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26868,
											"end": 26911,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 26935,
											"end": 27000,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26935,
											"end": 27000,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26935,
											"end": 27000,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16378,
											"end": 16403,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 16378,
											"end": 16403,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16378,
											"end": 16403,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16434,
											"end": 16436,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16419,
											"end": 16437,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16419,
											"end": 16437,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16412,
											"end": 16446,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 16412,
											"end": 16446,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16412,
											"end": 16446,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16462,
											"end": 16480,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16462,
											"end": 16480,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16462,
											"end": 16480,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16455,
											"end": 16489,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 16455,
											"end": 16489,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16455,
											"end": 16489,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16520,
											"end": 16522,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 16505,
											"end": 16523,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16505,
											"end": 16523,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16498,
											"end": 16532,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16498,
											"end": 16532,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16498,
											"end": 16532,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 26935,
											"end": 27000,
											"name": "PUSH",
											"source": 0,
											"value": "892B2CAA2D791BF7B8D9A49C4DB7A4513FF1AE2E0E068ED217F9D5AB4C1A28F0"
										},
										{
											"begin": 26935,
											"end": 27000,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16365,
											"end": 16368,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 16350,
											"end": 16369,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26935,
											"end": 27000,
											"name": "tag",
											"source": 0,
											"value": "522"
										},
										{
											"begin": 26935,
											"end": 27000,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26935,
											"end": 27000,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26935,
											"end": 27000,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26935,
											"end": 27000,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26935,
											"end": 27000,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26935,
											"end": 27000,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26935,
											"end": 27000,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26935,
											"end": 27000,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 3145,
											"end": 3146,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26184,
											"end": 27007,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26184,
											"end": 27007,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26184,
											"end": 27007,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26184,
											"end": 27007,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26184,
											"end": 27007,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 25215,
											"end": 25327,
											"name": "tag",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 25215,
											"end": 25327,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 818,
											"end": 828,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3098,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "525"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "tag",
											"source": 0,
											"value": "525"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 25285,
											"end": 25312,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25315,
											"end": 25320,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25285,
											"end": 25312,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25285,
											"end": 25312,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25285,
											"end": 25312,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25285,
											"end": 25303,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25285,
											"end": 25312,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25285,
											"end": 25312,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25285,
											"end": 25312,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25285,
											"end": 25312,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25285,
											"end": 25312,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 25285,
											"end": 25320,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25285,
											"end": 25320,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 25285,
											"end": 25320,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25285,
											"end": 25320,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25285,
											"end": 25320,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 25215,
											"end": 25327,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3302,
											"end": 3500,
											"name": "tag",
											"source": 0,
											"value": "302"
										},
										{
											"begin": 3302,
											"end": 3500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 818,
											"end": 828,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3098,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "530"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "tag",
											"source": 0,
											"value": "530"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3390,
											"end": 3412,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3390,
											"end": 3412,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "533"
										},
										{
											"begin": 3382,
											"end": 3455,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3455,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3382,
											"end": 3455,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3382,
											"end": 3455,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3455,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8830,
											"end": 8832,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3382,
											"end": 3455,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3382,
											"end": 3455,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3455,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8812,
											"end": 8833,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8869,
											"end": 8871,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 8849,
											"end": 8867,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8849,
											"end": 8867,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8849,
											"end": 8867,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8842,
											"end": 8872,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8908,
											"end": 8942,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 8888,
											"end": 8906,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 8888,
											"end": 8906,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8888,
											"end": 8906,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8881,
											"end": 8943,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8959,
											"end": 8977,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 8959,
											"end": 8977,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8959,
											"end": 8977,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8952,
											"end": 8988,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9005,
											"end": 9024,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 9005,
											"end": 9024,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3382,
											"end": 3455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 8802,
											"end": 9030,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3382,
											"end": 3455,
											"name": "tag",
											"source": 0,
											"value": "533"
										},
										{
											"begin": 3382,
											"end": 3455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3465,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "403"
										},
										{
											"begin": 3484,
											"end": 3492,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3465,
											"end": 3483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "537"
										},
										{
											"begin": 3465,
											"end": 3493,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27013,
											"end": 27851,
											"name": "tag",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 27013,
											"end": 27851,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 818,
											"end": 828,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3098,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "540"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "tag",
											"source": 0,
											"value": "540"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27149,
											"end": 27165,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27168,
											"end": 27229,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "543"
										},
										{
											"begin": 27216,
											"end": 27228,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27168,
											"end": 27211,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "514"
										},
										{
											"begin": 27203,
											"end": 27210,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 27168,
											"end": 27211,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27168,
											"end": 27180,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 27185,
											"end": 27197,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 27168,
											"end": 27184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "515"
										},
										{
											"begin": 27168,
											"end": 27198,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27168,
											"end": 27229,
											"name": "tag",
											"source": 0,
											"value": "543"
										},
										{
											"begin": 27168,
											"end": 27229,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27149,
											"end": 27229,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27149,
											"end": 27229,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27259,
											"end": 27262,
											"name": "PUSH",
											"source": 0,
											"value": "FA"
										},
										{
											"begin": 27247,
											"end": 27255,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27247,
											"end": 27262,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 27247,
											"end": 27262,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27239,
											"end": 27317,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "546"
										},
										{
											"begin": 27239,
											"end": 27317,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27239,
											"end": 27317,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27239,
											"end": 27317,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 27239,
											"end": 27317,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27239,
											"end": 27317,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10712,
											"end": 10714,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 27239,
											"end": 27317,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27239,
											"end": 27317,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27239,
											"end": 27317,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10694,
											"end": 10715,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10751,
											"end": 10753,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 10731,
											"end": 10749,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 10731,
											"end": 10749,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10731,
											"end": 10749,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10724,
											"end": 10754,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10790,
											"end": 10824,
											"name": "PUSH",
											"source": 1,
											"value": "53756D206F662073656C6C2066656573206D757374206265206C657373207468"
										},
										{
											"begin": 10770,
											"end": 10788,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 10770,
											"end": 10788,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10770,
											"end": 10788,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10763,
											"end": 10825,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616E206F7220657175616C20746F20323525"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10841,
											"end": 10859,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 10841,
											"end": 10859,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10841,
											"end": 10859,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10834,
											"end": 10882,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10899,
											"end": 10918,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 10899,
											"end": 10918,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27239,
											"end": 27317,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 10684,
											"end": 10924,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 27239,
											"end": 27317,
											"name": "tag",
											"source": 0,
											"value": "546"
										},
										{
											"begin": 27239,
											"end": 27317,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27335,
											"end": 27347,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 27335,
											"end": 27347,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27335,
											"end": 27347,
											"name": "PUSH",
											"source": 0,
											"value": "100000000"
										},
										{
											"begin": 27335,
											"end": 27347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27335,
											"end": 27347,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 27335,
											"end": 27347,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 27335,
											"end": 27347,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27327,
											"end": 27376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "549"
										},
										{
											"begin": 27327,
											"end": 27376,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27327,
											"end": 27376,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27327,
											"end": 27376,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 27327,
											"end": 27376,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27327,
											"end": 27376,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14421,
											"end": 14423,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 27327,
											"end": 27376,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27327,
											"end": 27376,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27327,
											"end": 27376,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14403,
											"end": 14424,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14460,
											"end": 14462,
											"name": "PUSH",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 14440,
											"end": 14458,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 14440,
											"end": 14458,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14440,
											"end": 14458,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14433,
											"end": 14463,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "151A1A5CC8199D5B98DD1A5BDB881A5CC8191A58589B1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "42"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14479,
											"end": 14497,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 14479,
											"end": 14497,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14479,
											"end": 14497,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14472,
											"end": 14526,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14543,
											"end": 14561,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 14543,
											"end": 14561,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27327,
											"end": 27376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 14393,
											"end": 14567,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 27327,
											"end": 27376,
											"name": "tag",
											"source": 0,
											"value": "549"
										},
										{
											"begin": 27327,
											"end": 27376,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27387,
											"end": 27404,
											"name": "PUSH",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 27387,
											"end": 27419,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 27387,
											"end": 27419,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27387,
											"end": 27419,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27429,
											"end": 27446,
											"name": "PUSH",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 27429,
											"end": 27461,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 27429,
											"end": 27461,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27429,
											"end": 27461,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27471,
											"end": 27483,
											"name": "PUSH",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 27471,
											"end": 27493,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27471,
											"end": 27493,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27471,
											"end": 27493,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27503,
											"end": 27520,
											"name": "PUSH",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 27503,
											"end": 27535,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27503,
											"end": 27535,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27503,
											"end": 27535,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27554,
											"end": 27579,
											"name": "PUSH",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 27554,
											"end": 27599,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 27554,
											"end": 27599,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27554,
											"end": 27599,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27609,
											"end": 27634,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 27609,
											"end": 27654,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 27609,
											"end": 27654,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27609,
											"end": 27654,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27664,
											"end": 27684,
											"name": "PUSH",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 27664,
											"end": 27699,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27664,
											"end": 27699,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27664,
											"end": 27699,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27709,
											"end": 27734,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 27709,
											"end": 27754,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27709,
											"end": 27754,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27709,
											"end": 27754,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27778,
											"end": 27844,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27778,
											"end": 27844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27778,
											"end": 27844,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16378,
											"end": 16403,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 16378,
											"end": 16403,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16378,
											"end": 16403,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16434,
											"end": 16436,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16419,
											"end": 16437,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16419,
											"end": 16437,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16412,
											"end": 16446,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 16412,
											"end": 16446,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16412,
											"end": 16446,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16462,
											"end": 16480,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16462,
											"end": 16480,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16462,
											"end": 16480,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16455,
											"end": 16489,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 16455,
											"end": 16489,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16455,
											"end": 16489,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16520,
											"end": 16522,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 16505,
											"end": 16523,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16505,
											"end": 16523,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16498,
											"end": 16532,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16498,
											"end": 16532,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16498,
											"end": 16532,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 27778,
											"end": 27844,
											"name": "PUSH",
											"source": 0,
											"value": "439932620C72DDDEA29980C098BCA1A482729646D1216B226D723C6D278A30D1"
										},
										{
											"begin": 27778,
											"end": 27844,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16365,
											"end": 16368,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 16350,
											"end": 16369,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27778,
											"end": 27844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "522"
										},
										{
											"begin": 16332,
											"end": 16538,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 25438,
											"end": 25604,
											"name": "tag",
											"source": 0,
											"value": "314"
										},
										{
											"begin": 25438,
											"end": 25604,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 818,
											"end": 828,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3098,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "554"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "tag",
											"source": 0,
											"value": "554"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25510,
											"end": 25522,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 25510,
											"end": 25522,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25510,
											"end": 25522,
											"name": "PUSH",
											"source": 0,
											"value": "1000000"
										},
										{
											"begin": 25510,
											"end": 25522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25510,
											"end": 25522,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 25510,
											"end": 25522,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 25510,
											"end": 25522,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25502,
											"end": 25567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "557"
										},
										{
											"begin": 25502,
											"end": 25567,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25502,
											"end": 25567,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25502,
											"end": 25567,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 25502,
											"end": 25567,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25502,
											"end": 25567,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13606,
											"end": 13608,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 25502,
											"end": 25567,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25502,
											"end": 25567,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25502,
											"end": 25567,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13588,
											"end": 13609,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13645,
											"end": 13647,
											"name": "PUSH",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 13625,
											"end": 13643,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 13625,
											"end": 13643,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13625,
											"end": 13643,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13618,
											"end": 13648,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13718,
											"name": "PUSH",
											"source": 1,
											"value": "7468697320636F6E74726163742063616E6E6F7420626C61636B6C6973742061"
										},
										{
											"begin": 13664,
											"end": 13682,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 13664,
											"end": 13682,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13664,
											"end": 13682,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13657,
											"end": 13719,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6464726573736573"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13735,
											"end": 13753,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 13735,
											"end": 13753,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13735,
											"end": 13753,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13728,
											"end": 13766,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13783,
											"end": 13802,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 13783,
											"end": 13802,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25502,
											"end": 25567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 13578,
											"end": 13808,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 25502,
											"end": 25567,
											"name": "tag",
											"source": 0,
											"value": "557"
										},
										{
											"begin": 25502,
											"end": 25567,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 25577,
											"end": 25590,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25577,
											"end": 25590,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25577,
											"end": 25590,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25577,
											"end": 25590,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25577,
											"end": 25590,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25577,
											"end": 25581,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25577,
											"end": 25590,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25577,
											"end": 25590,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25577,
											"end": 25590,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25577,
											"end": 25590,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25577,
											"end": 25590,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 25577,
											"end": 25597,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25577,
											"end": 25597,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 25577,
											"end": 25597,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25593,
											"end": 25597,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 25577,
											"end": 25597,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 25577,
											"end": 25597,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25577,
											"end": 25597,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 25438,
											"end": 25604,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 15040,
											"end": 15370,
											"name": "tag",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 15040,
											"end": 15370,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15132,
											"end": 15151,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15132,
											"end": 15151,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15124,
											"end": 15192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "562"
										},
										{
											"begin": 15124,
											"end": 15192,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15124,
											"end": 15192,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15124,
											"end": 15192,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15124,
											"end": 15192,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15124,
											"end": 15192,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14774,
											"end": 14776,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15124,
											"end": 15192,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15124,
											"end": 15192,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15124,
											"end": 15192,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14756,
											"end": 14777,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14813,
											"end": 14815,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 14793,
											"end": 14811,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14793,
											"end": 14811,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14793,
											"end": 14811,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14786,
											"end": 14816,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14852,
											"end": 14886,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 14832,
											"end": 14850,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 14832,
											"end": 14850,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14832,
											"end": 14850,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14825,
											"end": 14887,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14903,
											"end": 14921,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 14903,
											"end": 14921,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14903,
											"end": 14921,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14896,
											"end": 14930,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14947,
											"end": 14966,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 14947,
											"end": 14966,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15124,
											"end": 15192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 14746,
											"end": 14972,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15124,
											"end": 15192,
											"name": "tag",
											"source": 0,
											"value": "562"
										},
										{
											"begin": 15124,
											"end": 15192,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15210,
											"end": 15231,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15210,
											"end": 15231,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15202,
											"end": 15270,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "565"
										},
										{
											"begin": 15202,
											"end": 15270,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15202,
											"end": 15270,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15202,
											"end": 15270,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15202,
											"end": 15270,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15202,
											"end": 15270,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9237,
											"end": 9239,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15202,
											"end": 15270,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15202,
											"end": 15270,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15202,
											"end": 15270,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9219,
											"end": 9240,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9276,
											"end": 9278,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 9256,
											"end": 9274,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9256,
											"end": 9274,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9256,
											"end": 9274,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9249,
											"end": 9279,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9315,
											"end": 9349,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 9295,
											"end": 9313,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 9295,
											"end": 9313,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9295,
											"end": 9313,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9288,
											"end": 9350,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9366,
											"end": 9384,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 9366,
											"end": 9384,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9366,
											"end": 9384,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9359,
											"end": 9391,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9408,
											"end": 9427,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 9408,
											"end": 9427,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15202,
											"end": 15270,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 9209,
											"end": 9433,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15202,
											"end": 15270,
											"name": "tag",
											"source": 0,
											"value": "565"
										},
										{
											"begin": 15202,
											"end": 15270,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15280,
											"end": 15298,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15280,
											"end": 15298,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15280,
											"end": 15298,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15280,
											"end": 15298,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15280,
											"end": 15298,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15280,
											"end": 15298,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15280,
											"end": 15298,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15280,
											"end": 15291,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 15280,
											"end": 15298,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15280,
											"end": 15298,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15280,
											"end": 15298,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15280,
											"end": 15298,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15280,
											"end": 15298,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15280,
											"end": 15298,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15280,
											"end": 15298,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15280,
											"end": 15298,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15280,
											"end": 15307,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 15280,
											"end": 15307,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 15280,
											"end": 15307,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15280,
											"end": 15307,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15280,
											"end": 15307,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15280,
											"end": 15307,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15280,
											"end": 15307,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 15280,
											"end": 15307,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15280,
											"end": 15307,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15280,
											"end": 15307,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15280,
											"end": 15307,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15280,
											"end": 15307,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15280,
											"end": 15307,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15280,
											"end": 15316,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15280,
											"end": 15316,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15280,
											"end": 15316,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 15331,
											"end": 15363,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15331,
											"end": 15363,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15123,
											"end": 15148,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15123,
											"end": 15148,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15123,
											"end": 15148,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15331,
											"end": 15363,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 15331,
											"end": 15363,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15096,
											"end": 15114,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15331,
											"end": 15363,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15331,
											"end": 15363,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15331,
											"end": 15363,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15331,
											"end": 15363,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15331,
											"end": 15363,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15331,
											"end": 15363,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15331,
											"end": 15363,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 15040,
											"end": 15370,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15040,
											"end": 15370,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15040,
											"end": 15370,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15040,
											"end": 15370,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 15380,
											"end": 18447,
											"name": "tag",
											"source": 0,
											"value": "335"
										},
										{
											"begin": 15380,
											"end": 18447,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15467,
											"end": 15485,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15467,
											"end": 15485,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15459,
											"end": 15527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "570"
										},
										{
											"begin": 15459,
											"end": 15527,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15459,
											"end": 15527,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15459,
											"end": 15527,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15459,
											"end": 15527,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15459,
											"end": 15527,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14015,
											"end": 14017,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15459,
											"end": 15527,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15459,
											"end": 15527,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15459,
											"end": 15527,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13997,
											"end": 14018,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14054,
											"end": 14056,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 14034,
											"end": 14052,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 14034,
											"end": 14052,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14034,
											"end": 14052,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14027,
											"end": 14057,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14093,
											"end": 14127,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 14073,
											"end": 14091,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 14073,
											"end": 14091,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14073,
											"end": 14091,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14066,
											"end": 14128,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14144,
											"end": 14162,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 14144,
											"end": 14162,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14144,
											"end": 14162,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14137,
											"end": 14172,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14189,
											"end": 14208,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 14189,
											"end": 14208,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15459,
											"end": 15527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 13987,
											"end": 14214,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15459,
											"end": 15527,
											"name": "tag",
											"source": 0,
											"value": "570"
										},
										{
											"begin": 15459,
											"end": 15527,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15545,
											"end": 15561,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15545,
											"end": 15561,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15537,
											"end": 15601,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "573"
										},
										{
											"begin": 15537,
											"end": 15601,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15537,
											"end": 15601,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15537,
											"end": 15601,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15537,
											"end": 15601,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15537,
											"end": 15601,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7658,
											"end": 7660,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15537,
											"end": 15601,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15537,
											"end": 15601,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15537,
											"end": 15601,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7640,
											"end": 7661,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7697,
											"end": 7699,
											"name": "PUSH",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 7677,
											"end": 7695,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7677,
											"end": 7695,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7677,
											"end": 7695,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7670,
											"end": 7700,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7736,
											"end": 7770,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 7716,
											"end": 7734,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 7716,
											"end": 7734,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7716,
											"end": 7734,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7709,
											"end": 7771,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7787,
											"end": 7805,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 7787,
											"end": 7805,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7787,
											"end": 7805,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7780,
											"end": 7813,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7830,
											"end": 7849,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 7830,
											"end": 7849,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15537,
											"end": 15601,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 7630,
											"end": 7855,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15537,
											"end": 15601,
											"name": "tag",
											"source": 0,
											"value": "573"
										},
										{
											"begin": 15537,
											"end": 15601,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15628,
											"end": 15629,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15619,
											"end": 15625,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15619,
											"end": 15629,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 15611,
											"end": 15675,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "576"
										},
										{
											"begin": 15611,
											"end": 15675,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15611,
											"end": 15675,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15611,
											"end": 15675,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15611,
											"end": 15675,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15611,
											"end": 15675,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12779,
											"end": 12781,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15611,
											"end": 15675,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15611,
											"end": 15675,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15611,
											"end": 15675,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12761,
											"end": 12782,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12818,
											"end": 12820,
											"name": "PUSH",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 12798,
											"end": 12816,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 12798,
											"end": 12816,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12798,
											"end": 12816,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12791,
											"end": 12821,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12857,
											"end": 12891,
											"name": "PUSH",
											"source": 1,
											"value": "5472616E7366657220616D6F756E74206D757374206265206772656174657220"
										},
										{
											"begin": 12837,
											"end": 12855,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 12837,
											"end": 12855,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12837,
											"end": 12855,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12830,
											"end": 12892,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7468616E207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12908,
											"end": 12926,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 12908,
											"end": 12926,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 12926,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12901,
											"end": 12940,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12957,
											"end": 12976,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 12957,
											"end": 12976,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15611,
											"end": 15675,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 12751,
											"end": 12982,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15611,
											"end": 15675,
											"name": "tag",
											"source": 0,
											"value": "576"
										},
										{
											"begin": 15611,
											"end": 15675,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15701,
											"end": 15705,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15728,
											"end": 15735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "579"
										},
										{
											"begin": 2992,
											"end": 2999,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3018,
											"end": 3024,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3018,
											"end": 3024,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3024,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 3031,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15728,
											"end": 15735,
											"name": "tag",
											"source": 0,
											"value": "579"
										},
										{
											"begin": 15728,
											"end": 15735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15720,
											"end": 15735,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15720,
											"end": 15724,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15720,
											"end": 15735,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15720,
											"end": 15735,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15720,
											"end": 15735,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15720,
											"end": 15752,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15720,
											"end": 15752,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15720,
											"end": 15752,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "580"
										},
										{
											"begin": 15720,
											"end": 15752,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2992,
											"end": 2999,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3018,
											"end": 3024,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15739,
											"end": 15752,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15739,
											"end": 15752,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15739,
											"end": 15752,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3024,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3024,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15739,
											"end": 15752,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15739,
											"end": 15752,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15720,
											"end": 15752,
											"name": "tag",
											"source": 0,
											"value": "580"
										},
										{
											"begin": 15720,
											"end": 15752,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15720,
											"end": 15777,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15720,
											"end": 15777,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15720,
											"end": 15777,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "582"
										},
										{
											"begin": 15720,
											"end": 15777,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15756,
											"end": 15777,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15756,
											"end": 15777,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15772,
											"end": 15776,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 15756,
											"end": 15777,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15756,
											"end": 15777,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15720,
											"end": 15777,
											"name": "tag",
											"source": 0,
											"value": "582"
										},
										{
											"begin": 15720,
											"end": 15777,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15720,
											"end": 15800,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15720,
											"end": 15800,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15720,
											"end": 15800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "583"
										},
										{
											"begin": 15720,
											"end": 15800,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15781,
											"end": 15800,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15781,
											"end": 15800,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15795,
											"end": 15799,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 15781,
											"end": 15800,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15781,
											"end": 15800,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15720,
											"end": 15800,
											"name": "tag",
											"source": 0,
											"value": "583"
										},
										{
											"begin": 15720,
											"end": 15800,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15716,
											"end": 18275,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15716,
											"end": 18275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "637"
										},
										{
											"begin": 15716,
											"end": 18275,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15824,
											"end": 15835,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 15824,
											"end": 15835,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15824,
											"end": 15835,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 15824,
											"end": 15835,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15816,
											"end": 15861,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "585"
										},
										{
											"begin": 15816,
											"end": 15861,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15816,
											"end": 15861,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15816,
											"end": 15861,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15816,
											"end": 15861,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15816,
											"end": 15861,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8480,
											"end": 8482,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15816,
											"end": 15861,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15816,
											"end": 15861,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15816,
											"end": 15861,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8462,
											"end": 8483,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8519,
											"end": 8521,
											"name": "PUSH",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 8499,
											"end": 8517,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8499,
											"end": 8517,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8499,
											"end": 8517,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8492,
											"end": 8522,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "54726164696E67206973206E6F7420616374697665"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "58"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8538,
											"end": 8556,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 8538,
											"end": 8556,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8538,
											"end": 8556,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8531,
											"end": 8582,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8599,
											"end": 8617,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 8599,
											"end": 8617,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15816,
											"end": 15861,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 8452,
											"end": 8623,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15816,
											"end": 15861,
											"name": "tag",
											"source": 0,
											"value": "585"
										},
										{
											"begin": 15816,
											"end": 15861,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15887,
											"end": 15900,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 15887,
											"end": 15900,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15879,
											"end": 15900,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15879,
											"end": 15900,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15879,
											"end": 15900,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15887,
											"end": 15900,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15887,
											"end": 15900,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15879,
											"end": 15900,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15879,
											"end": 15934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15879,
											"end": 15934,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15879,
											"end": 15934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "588"
										},
										{
											"begin": 15879,
											"end": 15934,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15918,
											"end": 15933,
											"name": "PUSH",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 15918,
											"end": 15933,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15904,
											"end": 15934,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15904,
											"end": 15934,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15904,
											"end": 15934,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15918,
											"end": 15933,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15918,
											"end": 15933,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15904,
											"end": 15934,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15904,
											"end": 15934,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15879,
											"end": 15934,
											"name": "tag",
											"source": 0,
											"value": "588"
										},
										{
											"begin": 15879,
											"end": 15934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15875,
											"end": 16224,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15875,
											"end": 16224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "594"
										},
										{
											"begin": 15875,
											"end": 16224,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16000,
											"end": 16010,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 16000,
											"end": 16010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15984,
											"end": 15995,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 15984,
											"end": 15995,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15984,
											"end": 16011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "590"
										},
										{
											"begin": 15984,
											"end": 16011,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15984,
											"end": 15999,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "515"
										},
										{
											"begin": 15984,
											"end": 16011,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15984,
											"end": 16011,
											"name": "tag",
											"source": 0,
											"value": "590"
										},
										{
											"begin": 15984,
											"end": 16011,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15965,
											"end": 15980,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 15965,
											"end": 16011,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 15961,
											"end": 16069,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "591"
										},
										{
											"begin": 15961,
											"end": 16069,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16035,
											"end": 16043,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16035,
											"end": 16043,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16035,
											"end": 16043,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16035,
											"end": 16043,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16035,
											"end": 16043,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16035,
											"end": 16043,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16035,
											"end": 16039,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16035,
											"end": 16043,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16035,
											"end": 16043,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16035,
											"end": 16043,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16035,
											"end": 16043,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16035,
											"end": 16043,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 16035,
											"end": 16050,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16035,
											"end": 16050,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 16035,
											"end": 16050,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16046,
											"end": 16050,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 16035,
											"end": 16050,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 16035,
											"end": 16050,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16035,
											"end": 16050,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 15961,
											"end": 16069,
											"name": "tag",
											"source": 0,
											"value": "591"
										},
										{
											"begin": 15961,
											"end": 16069,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16123,
											"end": 16139,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 16123,
											"end": 16139,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16094,
											"end": 16119,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "592"
										},
										{
											"begin": 16112,
											"end": 16118,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16094,
											"end": 16107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "514"
										},
										{
											"begin": 16104,
											"end": 16106,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12929,
											"end": 12947,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12903,
											"end": 12910,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12929,
											"end": 12947,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12929,
											"end": 12947,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12929,
											"end": 12947,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12929,
											"end": 12938,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 12929,
											"end": 12947,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12929,
											"end": 12947,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12929,
											"end": 12947,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12929,
											"end": 12947,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12929,
											"end": 12947,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12929,
											"end": 12947,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12929,
											"end": 12947,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12837,
											"end": 12954,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16094,
											"end": 16119,
											"name": "tag",
											"source": 0,
											"value": "592"
										},
										{
											"begin": 16094,
											"end": 16119,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16094,
											"end": 16139,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 16094,
											"end": 16139,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16086,
											"end": 16209,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "594"
										},
										{
											"begin": 16086,
											"end": 16209,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16086,
											"end": 16209,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16086,
											"end": 16209,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16086,
											"end": 16209,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16086,
											"end": 16209,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16086,
											"end": 16209,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16086,
											"end": 16209,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16086,
											"end": 16209,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 16086,
											"end": 16209,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16086,
											"end": 16209,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "596"
										},
										{
											"begin": 16086,
											"end": 16209,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16086,
											"end": 16209,
											"name": "tag",
											"source": 0,
											"value": "594"
										},
										{
											"begin": 16086,
											"end": 16209,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16255,
											"end": 16261,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 16255,
											"end": 16261,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16255,
											"end": 16261,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 16255,
											"end": 16261,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16255,
											"end": 16261,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 16255,
											"end": 16261,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 16255,
											"end": 16261,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16254,
											"end": 16261,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16254,
											"end": 16286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16254,
											"end": 16286,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16254,
											"end": 16286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "597"
										},
										{
											"begin": 16254,
											"end": 16286,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16273,
											"end": 16286,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 16273,
											"end": 16286,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16265,
											"end": 16286,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16265,
											"end": 16286,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16265,
											"end": 16286,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16273,
											"end": 16286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16273,
											"end": 16286,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16265,
											"end": 16286,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 16265,
											"end": 16286,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16254,
											"end": 16286,
											"name": "tag",
											"source": 0,
											"value": "597"
										},
										{
											"begin": 16254,
											"end": 16286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16254,
											"end": 16309,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16254,
											"end": 16309,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16254,
											"end": 16309,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "598"
										},
										{
											"begin": 16254,
											"end": 16309,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16296,
											"end": 16309,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 16296,
											"end": 16309,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16290,
											"end": 16309,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16290,
											"end": 16309,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16290,
											"end": 16309,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16296,
											"end": 16309,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16296,
											"end": 16309,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16290,
											"end": 16309,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 16254,
											"end": 16309,
											"name": "tag",
											"source": 0,
											"value": "598"
										},
										{
											"begin": 16254,
											"end": 16309,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16250,
											"end": 18016,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16250,
											"end": 18016,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "599"
										},
										{
											"begin": 16250,
											"end": 18016,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16346,
											"end": 16356,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16346,
											"end": 16356,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16346,
											"end": 16356,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16346,
											"end": 16356,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16346,
											"end": 16356,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16346,
											"end": 16356,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16346,
											"end": 16350,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16346,
											"end": 16356,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16346,
											"end": 16356,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16346,
											"end": 16356,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16346,
											"end": 16356,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16346,
											"end": 16356,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 16346,
											"end": 16356,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16346,
											"end": 16356,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 16346,
											"end": 16356,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16345,
											"end": 16356,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16345,
											"end": 16369,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16345,
											"end": 16369,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16345,
											"end": 16369,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "600"
										},
										{
											"begin": 16345,
											"end": 16369,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16361,
											"end": 16369,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16361,
											"end": 16369,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16361,
											"end": 16369,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16361,
											"end": 16369,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16361,
											"end": 16369,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16361,
											"end": 16369,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16361,
											"end": 16365,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16361,
											"end": 16369,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16361,
											"end": 16369,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16361,
											"end": 16369,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16361,
											"end": 16369,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16361,
											"end": 16369,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 16361,
											"end": 16369,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16361,
											"end": 16369,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 16361,
											"end": 16369,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16360,
											"end": 16369,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16345,
											"end": 16369,
											"name": "tag",
											"source": 0,
											"value": "600"
										},
										{
											"begin": 16345,
											"end": 16369,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16337,
											"end": 16370,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "601"
										},
										{
											"begin": 16337,
											"end": 16370,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16337,
											"end": 16370,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16337,
											"end": 16370,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16337,
											"end": 16370,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16337,
											"end": 16370,
											"name": "tag",
											"source": 0,
											"value": "601"
										},
										{
											"begin": 16337,
											"end": 16370,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16438,
											"end": 16446,
											"name": "PUSH",
											"source": 0,
											"value": "1A"
										},
										{
											"begin": 16438,
											"end": 16454,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16438,
											"end": 16454,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 16438,
											"end": 16454,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16434,
											"end": 16667,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16434,
											"end": 16667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "602"
										},
										{
											"begin": 16434,
											"end": 16667,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16505,
											"end": 16530,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16505,
											"end": 16530,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16505,
											"end": 16530,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16505,
											"end": 16530,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16505,
											"end": 16530,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16505,
											"end": 16530,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16505,
											"end": 16524,
											"name": "PUSH",
											"source": 0,
											"value": "1B"
										},
										{
											"begin": 16505,
											"end": 16530,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16505,
											"end": 16530,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16505,
											"end": 16530,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16505,
											"end": 16530,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16505,
											"end": 16530,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 16505,
											"end": 16530,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16486,
											"end": 16501,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 16486,
											"end": 16530,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 16486,
											"end": 16530,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16478,
											"end": 16563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "603"
										},
										{
											"begin": 16478,
											"end": 16563,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16478,
											"end": 16563,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16478,
											"end": 16563,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16478,
											"end": 16563,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16478,
											"end": 16563,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9640,
											"end": 9642,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16478,
											"end": 16563,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16478,
											"end": 16563,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16478,
											"end": 16563,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9622,
											"end": 9643,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9679,
											"end": 9681,
											"name": "PUSH",
											"source": 1,
											"value": "1C"
										},
										{
											"begin": 9659,
											"end": 9677,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9659,
											"end": 9677,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9659,
											"end": 9677,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9652,
											"end": 9682,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9718,
											"end": 9748,
											"name": "PUSH",
											"source": 1,
											"value": "5374726F6E672048616E64732050726F746F636F6C2061637469766500000000"
										},
										{
											"begin": 9698,
											"end": 9716,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 9698,
											"end": 9716,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9698,
											"end": 9716,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9691,
											"end": 9749,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9766,
											"end": 9784,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 9766,
											"end": 9784,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16478,
											"end": 16563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 9612,
											"end": 9790,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16478,
											"end": 16563,
											"name": "tag",
											"source": 0,
											"value": "603"
										},
										{
											"begin": 16478,
											"end": 16563,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16631,
											"end": 16639,
											"name": "PUSH",
											"source": 0,
											"value": "1A"
										},
										{
											"begin": 16631,
											"end": 16648,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16613,
											"end": 16648,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "606"
										},
										{
											"begin": 16613,
											"end": 16648,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16631,
											"end": 16648,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 16631,
											"end": 16648,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16631,
											"end": 16648,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 16631,
											"end": 16648,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 16631,
											"end": 16648,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16613,
											"end": 16628,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 16613,
											"end": 16648,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "607"
										},
										{
											"begin": 16613,
											"end": 16648,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16613,
											"end": 16648,
											"name": "tag",
											"source": 0,
											"value": "606"
										},
										{
											"begin": 16613,
											"end": 16648,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16585,
											"end": 16610,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16585,
											"end": 16610,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16585,
											"end": 16610,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16585,
											"end": 16610,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16585,
											"end": 16610,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16585,
											"end": 16610,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16585,
											"end": 16604,
											"name": "PUSH",
											"source": 0,
											"value": "1B"
										},
										{
											"begin": 16585,
											"end": 16610,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16585,
											"end": 16610,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16585,
											"end": 16610,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16585,
											"end": 16610,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16585,
											"end": 16610,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 16585,
											"end": 16648,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 16434,
											"end": 16667,
											"name": "tag",
											"source": 0,
											"value": "602"
										},
										{
											"begin": 16434,
											"end": 16667,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16728,
											"end": 16740,
											"name": "PUSH",
											"source": 0,
											"value": "1C"
										},
										{
											"begin": 16728,
											"end": 16748,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16728,
											"end": 16748,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 16728,
											"end": 16748,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16724,
											"end": 16904,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16724,
											"end": 16904,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "612"
										},
										{
											"begin": 16724,
											"end": 16904,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16781,
											"end": 16805,
											"name": "PUSH",
											"source": 0,
											"value": "1E"
										},
										{
											"begin": 16781,
											"end": 16805,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16781,
											"end": 16805,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 16781,
											"end": 16805,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16780,
											"end": 16805,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16772,
											"end": 16840,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "609"
										},
										{
											"begin": 16772,
											"end": 16840,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16772,
											"end": 16840,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16772,
											"end": 16840,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16772,
											"end": 16840,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16772,
											"end": 16840,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10353,
											"end": 10355,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16772,
											"end": 16840,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16772,
											"end": 16840,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16772,
											"end": 16840,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10335,
											"end": 10356,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10392,
											"end": 10394,
											"name": "PUSH",
											"source": 1,
											"value": "1E"
										},
										{
											"begin": 10372,
											"end": 10390,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 10372,
											"end": 10390,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10372,
											"end": 10390,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10365,
											"end": 10395,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10431,
											"end": 10463,
											"name": "PUSH",
											"source": 1,
											"value": "53656C6C732073746F70706564206279204469616D6F6E6420466C6F6F720000"
										},
										{
											"begin": 10411,
											"end": 10429,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 10411,
											"end": 10429,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10411,
											"end": 10429,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10404,
											"end": 10464,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10481,
											"end": 10499,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 10481,
											"end": 10499,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16772,
											"end": 16840,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 10325,
											"end": 10505,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16772,
											"end": 16840,
											"name": "tag",
											"source": 0,
											"value": "609"
										},
										{
											"begin": 16772,
											"end": 16840,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16862,
											"end": 16885,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "612"
										},
										{
											"begin": 16862,
											"end": 16883,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "613"
										},
										{
											"begin": 16862,
											"end": 16885,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16862,
											"end": 16885,
											"name": "tag",
											"source": 0,
											"value": "612"
										},
										{
											"begin": 16862,
											"end": 16885,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16987,
											"end": 16991,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 16938,
											"end": 16966,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12929,
											"end": 12947,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12929,
											"end": 12947,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12929,
											"end": 12947,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12929,
											"end": 12938,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 12929,
											"end": 12947,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12929,
											"end": 12947,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12929,
											"end": 12947,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12929,
											"end": 12947,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12929,
											"end": 12947,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12929,
											"end": 12947,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17040,
											"end": 17055,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 17040,
											"end": 17055,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17016,
											"end": 17055,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17016,
											"end": 17055,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17012,
											"end": 17981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "615"
										},
										{
											"begin": 17012,
											"end": 17981,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17083,
											"end": 17107,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17083,
											"end": 17107,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17079,
											"end": 17758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "620"
										},
										{
											"begin": 17079,
											"end": 17758,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17223,
											"end": 17224,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17139,
											"end": 17220,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "617"
										},
										{
											"begin": 17202,
											"end": 17219,
											"name": "PUSH",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 17202,
											"end": 17219,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17139,
											"end": 17197,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "514"
										},
										{
											"begin": 17179,
											"end": 17196,
											"name": "PUSH",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 17179,
											"end": 17196,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17139,
											"end": 17174,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "514"
										},
										{
											"begin": 17161,
											"end": 17173,
											"name": "PUSH",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 17161,
											"end": 17173,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17139,
											"end": 17156,
											"name": "PUSH",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 17139,
											"end": 17156,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17139,
											"end": 17160,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "515"
										},
										{
											"begin": 17139,
											"end": 17160,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17139,
											"end": 17174,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17139,
											"end": 17174,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17139,
											"end": 17174,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 17139,
											"end": 17174,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17139,
											"end": 17174,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17139,
											"end": 17220,
											"name": "tag",
											"source": 0,
											"value": "617"
										},
										{
											"begin": 17139,
											"end": 17220,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17139,
											"end": 17224,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 17135,
											"end": 17736,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17135,
											"end": 17736,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "620"
										},
										{
											"begin": 17135,
											"end": 17736,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17256,
											"end": 17276,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17279,
											"end": 17409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "621"
										},
										{
											"begin": 17327,
											"end": 17408,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "622"
										},
										{
											"begin": 17390,
											"end": 17407,
											"name": "PUSH",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 17390,
											"end": 17407,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17327,
											"end": 17385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "514"
										},
										{
											"begin": 17367,
											"end": 17384,
											"name": "PUSH",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 17367,
											"end": 17384,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17327,
											"end": 17362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "514"
										},
										{
											"begin": 17349,
											"end": 17361,
											"name": "PUSH",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 17349,
											"end": 17361,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17327,
											"end": 17344,
											"name": "PUSH",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 17327,
											"end": 17344,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17327,
											"end": 17348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "515"
										},
										{
											"begin": 17327,
											"end": 17348,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17327,
											"end": 17362,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17327,
											"end": 17362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17327,
											"end": 17362,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 17327,
											"end": 17362,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17327,
											"end": 17362,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17327,
											"end": 17408,
											"name": "tag",
											"source": 0,
											"value": "622"
										},
										{
											"begin": 17327,
											"end": 17408,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17279,
											"end": 17296,
											"name": "PUSH",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 17279,
											"end": 17296,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17279,
											"end": 17322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "441"
										},
										{
											"begin": 17279,
											"end": 17322,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17301,
											"end": 17321,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 17279,
											"end": 17300,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "442"
										},
										{
											"begin": 17279,
											"end": 17322,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17279,
											"end": 17409,
											"name": "tag",
											"source": 0,
											"value": "621"
										},
										{
											"begin": 17279,
											"end": 17409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17256,
											"end": 17409,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17256,
											"end": 17409,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17439,
											"end": 17454,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17516,
											"end": 17528,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17492,
											"end": 17512,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17492,
											"end": 17528,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17488,
											"end": 17643,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "626"
										},
										{
											"begin": 17488,
											"end": 17643,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17574,
											"end": 17612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "627"
										},
										{
											"begin": 17574,
											"end": 17594,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17599,
											"end": 17611,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17574,
											"end": 17598,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "456"
										},
										{
											"begin": 17574,
											"end": 17612,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17574,
											"end": 17612,
											"name": "tag",
											"source": 0,
											"value": "627"
										},
										{
											"begin": 17574,
											"end": 17612,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17564,
											"end": 17612,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17564,
											"end": 17612,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17488,
											"end": 17643,
											"name": "tag",
											"source": 0,
											"value": "626"
										},
										{
											"begin": 17488,
											"end": 17643,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17672,
											"end": 17709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "628"
										},
										{
											"begin": 17687,
											"end": 17699,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17701,
											"end": 17708,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17672,
											"end": 17686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "629"
										},
										{
											"begin": 17672,
											"end": 17709,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17672,
											"end": 17709,
											"name": "tag",
											"source": 0,
											"value": "628"
										},
										{
											"begin": 17672,
											"end": 17709,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17135,
											"end": 17736,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17135,
											"end": 17736,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17135,
											"end": 17736,
											"name": "tag",
											"source": 0,
											"value": "620"
										},
										{
											"begin": 17135,
											"end": 17736,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17808,
											"end": 17829,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 17855,
											"end": 17877,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17855,
											"end": 17877,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17851,
											"end": 17963,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "631"
										},
										{
											"begin": 17851,
											"end": 17963,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17905,
											"end": 17940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "631"
										},
										{
											"begin": 17918,
											"end": 17939,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 17905,
											"end": 17917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "632"
										},
										{
											"begin": 17905,
											"end": 17940,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17905,
											"end": 17940,
											"name": "tag",
											"source": 0,
											"value": "631"
										},
										{
											"begin": 17905,
											"end": 17940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17012,
											"end": 17981,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17012,
											"end": 17981,
											"name": "tag",
											"source": 0,
											"value": "615"
										},
										{
											"begin": 17012,
											"end": 17981,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16250,
											"end": 18016,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16250,
											"end": 18016,
											"name": "tag",
											"source": 0,
											"value": "599"
										},
										{
											"begin": 16250,
											"end": 18016,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18041,
											"end": 18054,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 18041,
											"end": 18054,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18033,
											"end": 18054,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 18033,
											"end": 18054,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18033,
											"end": 18054,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18041,
											"end": 18054,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18041,
											"end": 18054,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18033,
											"end": 18054,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 18033,
											"end": 18054,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18033,
											"end": 18054,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18033,
											"end": 18054,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18033,
											"end": 18077,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "633"
										},
										{
											"begin": 18033,
											"end": 18077,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18064,
											"end": 18077,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 18064,
											"end": 18077,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18058,
											"end": 18077,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 18058,
											"end": 18077,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18058,
											"end": 18077,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18064,
											"end": 18077,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18064,
											"end": 18077,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18058,
											"end": 18077,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 18058,
											"end": 18077,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18033,
											"end": 18077,
											"name": "tag",
											"source": 0,
											"value": "633"
										},
										{
											"begin": 18033,
											"end": 18077,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18030,
											"end": 18265,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18030,
											"end": 18265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "637"
										},
										{
											"begin": 18030,
											"end": 18265,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18163,
											"end": 18179,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 18163,
											"end": 18179,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18134,
											"end": 18159,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "635"
										},
										{
											"begin": 18152,
											"end": 18158,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18134,
											"end": 18147,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "514"
										},
										{
											"begin": 18144,
											"end": 18146,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12929,
											"end": 12947,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12903,
											"end": 12910,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12929,
											"end": 12947,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12929,
											"end": 12947,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12929,
											"end": 12947,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12929,
											"end": 12938,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 12929,
											"end": 12947,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12929,
											"end": 12947,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12929,
											"end": 12947,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12929,
											"end": 12947,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12929,
											"end": 12947,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12929,
											"end": 12947,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12929,
											"end": 12947,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12837,
											"end": 12954,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18134,
											"end": 18159,
											"name": "tag",
											"source": 0,
											"value": "635"
										},
										{
											"begin": 18134,
											"end": 18159,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18134,
											"end": 18179,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 18134,
											"end": 18179,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18126,
											"end": 18249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "637"
										},
										{
											"begin": 18126,
											"end": 18249,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18126,
											"end": 18249,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18126,
											"end": 18249,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18126,
											"end": 18249,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18126,
											"end": 18249,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18126,
											"end": 18249,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18126,
											"end": 18249,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18126,
											"end": 18249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 18126,
											"end": 18249,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18126,
											"end": 18249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "596"
										},
										{
											"begin": 18126,
											"end": 18249,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18126,
											"end": 18249,
											"name": "tag",
											"source": 0,
											"value": "637"
										},
										{
											"begin": 18126,
											"end": 18249,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18289,
											"end": 18313,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 18289,
											"end": 18313,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18289,
											"end": 18313,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18289,
											"end": 18313,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18289,
											"end": 18313,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18289,
											"end": 18313,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18289,
											"end": 18307,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18289,
											"end": 18313,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18289,
											"end": 18313,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18289,
											"end": 18313,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18289,
											"end": 18313,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18289,
											"end": 18313,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 18289,
											"end": 18313,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18289,
											"end": 18313,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 18289,
											"end": 18313,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18289,
											"end": 18313,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18289,
											"end": 18339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "639"
										},
										{
											"begin": 18289,
											"end": 18339,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18317,
											"end": 18339,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18317,
											"end": 18339,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18317,
											"end": 18339,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18317,
											"end": 18339,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18317,
											"end": 18339,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18317,
											"end": 18339,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18317,
											"end": 18335,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18317,
											"end": 18339,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18317,
											"end": 18339,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18317,
											"end": 18339,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18317,
											"end": 18339,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18317,
											"end": 18339,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 18317,
											"end": 18339,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18317,
											"end": 18339,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 18317,
											"end": 18339,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18289,
											"end": 18339,
											"name": "tag",
											"source": 0,
											"value": "639"
										},
										{
											"begin": 18289,
											"end": 18339,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18285,
											"end": 18381,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18285,
											"end": 18381,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "640"
										},
										{
											"begin": 18285,
											"end": 18381,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18365,
											"end": 18370,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18285,
											"end": 18381,
											"name": "tag",
											"source": 0,
											"value": "640"
										},
										{
											"begin": 18285,
											"end": 18381,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18399,
											"end": 18440,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "641"
										},
										{
											"begin": 18414,
											"end": 18418,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 18420,
											"end": 18422,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 18424,
											"end": 18430,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 18432,
											"end": 18439,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 18399,
											"end": 18413,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "642"
										},
										{
											"begin": 18399,
											"end": 18440,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18399,
											"end": 18440,
											"name": "tag",
											"source": 0,
											"value": "641"
										},
										{
											"begin": 18399,
											"end": 18440,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15380,
											"end": 18447,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15380,
											"end": 18447,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15380,
											"end": 18447,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15380,
											"end": 18447,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15380,
											"end": 18447,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1849,
											"end": 2035,
											"name": "tag",
											"source": 0,
											"value": "340"
										},
										{
											"begin": 1849,
											"end": 2035,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1935,
											"end": 1942,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1970,
											"end": 1982,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1962,
											"end": 1968,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1962,
											"end": 1968,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1962,
											"end": 1968,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1962,
											"end": 1968,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1954,
											"end": 1983,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "644"
										},
										{
											"begin": 1954,
											"end": 1983,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1954,
											"end": 1983,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1954,
											"end": 1983,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1954,
											"end": 1983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1954,
											"end": 1983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1954,
											"end": 1983,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1954,
											"end": 1983,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1954,
											"end": 1983,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 1954,
											"end": 1983,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1954,
											"end": 1983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1954,
											"end": 1983,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1954,
											"end": 1983,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1954,
											"end": 1983,
											"name": "tag",
											"source": 0,
											"value": "644"
										},
										{
											"begin": 1954,
											"end": 1983,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1993,
											"end": 2002,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2005,
											"end": 2010,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "646"
										},
										{
											"begin": 2009,
											"end": 2010,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2005,
											"end": 2006,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 2005,
											"end": 2010,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "647"
										},
										{
											"begin": 2005,
											"end": 2010,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2005,
											"end": 2010,
											"name": "tag",
											"source": 0,
											"value": "646"
										},
										{
											"begin": 2005,
											"end": 2010,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1993,
											"end": 2010,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 1849,
											"end": 2035,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1849,
											"end": 2035,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2286,
											"end": 2416,
											"name": "tag",
											"source": 0,
											"value": "347"
										},
										{
											"begin": 2286,
											"end": 2416,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2344,
											"end": 2351,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2370,
											"end": 2409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "649"
										},
										{
											"begin": 2374,
											"end": 2375,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2377,
											"end": 2378,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2370,
											"end": 2409,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2370,
											"end": 2409,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2370,
											"end": 2409,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2370,
											"end": 2409,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2370,
											"end": 2409,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2370,
											"end": 2409,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2370,
											"end": 2409,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2370,
											"end": 2409,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2370,
											"end": 2409,
											"name": "PUSH",
											"source": 0,
											"value": "1A"
										},
										{
											"begin": 2370,
											"end": 2409,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2370,
											"end": 2409,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2370,
											"end": 2409,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2370,
											"end": 2409,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2370,
											"end": 2409,
											"name": "PUSH",
											"source": 0,
											"value": "536166654D6174683A206469766973696F6E206279207A65726F000000000000"
										},
										{
											"begin": 2370,
											"end": 2409,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2370,
											"end": 2409,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2370,
											"end": 2409,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2370,
											"end": 2373,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "650"
										},
										{
											"begin": 2370,
											"end": 2409,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2370,
											"end": 2409,
											"name": "tag",
											"source": 0,
											"value": "649"
										},
										{
											"begin": 2370,
											"end": 2409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2363,
											"end": 2409,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2286,
											"end": 2416,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2286,
											"end": 2416,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2041,
											"end": 2280,
											"name": "tag",
											"source": 0,
											"value": "442"
										},
										{
											"begin": 2041,
											"end": 2280,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2099,
											"end": 2106,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2122,
											"end": 2128,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2118,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "652"
										},
										{
											"begin": 2118,
											"end": 2163,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2151,
											"end": 2152,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2152,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 2144,
											"end": 2152,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2118,
											"end": 2163,
											"name": "tag",
											"source": 0,
											"value": "652"
										},
										{
											"begin": 2118,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2172,
											"end": 2181,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2184,
											"end": 2189,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "653"
										},
										{
											"begin": 2188,
											"end": 2189,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2184,
											"end": 2185,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2184,
											"end": 2189,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "654"
										},
										{
											"begin": 2184,
											"end": 2189,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2184,
											"end": 2189,
											"name": "tag",
											"source": 0,
											"value": "653"
										},
										{
											"begin": 2184,
											"end": 2189,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2172,
											"end": 2189,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2216,
											"end": 2217,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2207,
											"end": 2212,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "655"
										},
										{
											"begin": 2211,
											"end": 2212,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2172,
											"end": 2189,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2207,
											"end": 2212,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "656"
										},
										{
											"begin": 2207,
											"end": 2212,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2207,
											"end": 2212,
											"name": "tag",
											"source": 0,
											"value": "655"
										},
										{
											"begin": 2207,
											"end": 2212,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2207,
											"end": 2217,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2199,
											"end": 2255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "649"
										},
										{
											"begin": 2199,
											"end": 2255,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2199,
											"end": 2255,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2199,
											"end": 2255,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2199,
											"end": 2255,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2199,
											"end": 2255,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12016,
											"end": 12018,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2199,
											"end": 2255,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2199,
											"end": 2255,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2199,
											"end": 2255,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11998,
											"end": 12019,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12055,
											"end": 12057,
											"name": "PUSH",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 12035,
											"end": 12053,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 12035,
											"end": 12053,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12035,
											"end": 12053,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12028,
											"end": 12058,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12094,
											"end": 12128,
											"name": "PUSH",
											"source": 1,
											"value": "536166654D6174683A206D756C7469706C69636174696F6E206F766572666C6F"
										},
										{
											"begin": 12074,
											"end": 12092,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 12074,
											"end": 12092,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12074,
											"end": 12092,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12067,
											"end": 12129,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "77"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12145,
											"end": 12163,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 12145,
											"end": 12163,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12145,
											"end": 12163,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12138,
											"end": 12169,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12186,
											"end": 12205,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 12186,
											"end": 12205,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 11988,
											"end": 12211,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1709,
											"end": 1843,
											"name": "tag",
											"source": 0,
											"value": "456"
										},
										{
											"begin": 1709,
											"end": 1843,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1767,
											"end": 1774,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1793,
											"end": 1836,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "649"
										},
										{
											"begin": 1797,
											"end": 1798,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1800,
											"end": 1801,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1793,
											"end": 1836,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1793,
											"end": 1836,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1793,
											"end": 1836,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1793,
											"end": 1836,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1793,
											"end": 1836,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1793,
											"end": 1836,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1793,
											"end": 1836,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1793,
											"end": 1836,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1793,
											"end": 1836,
											"name": "PUSH",
											"source": 0,
											"value": "1E"
										},
										{
											"begin": 1793,
											"end": 1836,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1793,
											"end": 1836,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1793,
											"end": 1836,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1793,
											"end": 1836,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1793,
											"end": 1836,
											"name": "PUSH",
											"source": 0,
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 1793,
											"end": 1836,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1793,
											"end": 1836,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1793,
											"end": 1836,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1793,
											"end": 1796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "340"
										},
										{
											"begin": 1793,
											"end": 1836,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18456,
											"end": 18857,
											"name": "tag",
											"source": 0,
											"value": "480"
										},
										{
											"begin": 18456,
											"end": 18857,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11596,
											"end": 11602,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 11596,
											"end": 11609,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11596,
											"end": 11609,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11596,
											"end": 11609,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11596,
											"end": 11609,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 11596,
											"end": 11609,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 11596,
											"end": 11609,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11596,
											"end": 11609,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 18557,
											"end": 18573,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18557,
											"end": 18573,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18557,
											"end": 18573,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18571,
											"end": 18572,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 18557,
											"end": 18573,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18557,
											"end": 18573,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18557,
											"end": 18573,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18557,
											"end": 18573,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 18557,
											"end": 18573,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18557,
											"end": 18573,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18557,
											"end": 18573,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18557,
											"end": 18573,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 18557,
											"end": 18573,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18557,
											"end": 18573,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18557,
											"end": 18573,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18557,
											"end": 18573,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18557,
											"end": 18573,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18557,
											"end": 18573,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 18557,
											"end": 18573,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18557,
											"end": 18573,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 18557,
											"end": 18573,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18557,
											"end": 18573,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18557,
											"end": 18573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18533,
											"end": 18573,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18533,
											"end": 18573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18601,
											"end": 18605,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 18583,
											"end": 18587,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18588,
											"end": 18589,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18583,
											"end": 18590,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18583,
											"end": 18590,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18583,
											"end": 18590,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18583,
											"end": 18590,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 18583,
											"end": 18590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "666"
										},
										{
											"begin": 18583,
											"end": 18590,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18583,
											"end": 18590,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18583,
											"end": 18590,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18583,
											"end": 18590,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 18583,
											"end": 18590,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18583,
											"end": 18590,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18583,
											"end": 18590,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 18583,
											"end": 18590,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18583,
											"end": 18590,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 18583,
											"end": 18590,
											"name": "tag",
											"source": 0,
											"value": "666"
										},
										{
											"begin": 18583,
											"end": 18590,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18583,
											"end": 18606,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18583,
											"end": 18606,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18583,
											"end": 18606,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18583,
											"end": 18590,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18583,
											"end": 18590,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18583,
											"end": 18590,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18583,
											"end": 18590,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 18583,
											"end": 18590,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18583,
											"end": 18590,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18583,
											"end": 18590,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18583,
											"end": 18590,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18583,
											"end": 18590,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18583,
											"end": 18590,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18583,
											"end": 18606,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18583,
											"end": 18606,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18583,
											"end": 18606,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18583,
											"end": 18606,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18626,
											"end": 18641,
											"name": "PUSH",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 18626,
											"end": 18641,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18626,
											"end": 18648,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18626,
											"end": 18648,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18626,
											"end": 18648,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "15AB88C9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18626,
											"end": 18648,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18626,
											"end": 18648,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18626,
											"end": 18648,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18626,
											"end": 18648,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18626,
											"end": 18641,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18626,
											"end": 18641,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18626,
											"end": 18641,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 18626,
											"end": 18641,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18626,
											"end": 18641,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18626,
											"end": 18646,
											"name": "PUSH",
											"source": 0,
											"value": "AD5C4648"
										},
										{
											"begin": 18626,
											"end": 18646,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18626,
											"end": 18648,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18626,
											"end": 18648,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18626,
											"end": 18648,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18626,
											"end": 18648,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18626,
											"end": 18648,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 18583,
											"end": 18590,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18583,
											"end": 18590,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18626,
											"end": 18648,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18626,
											"end": 18648,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18626,
											"end": 18648,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18626,
											"end": 18648,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18626,
											"end": 18648,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18626,
											"end": 18641,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 18626,
											"end": 18648,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18626,
											"end": 18648,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 18626,
											"end": 18648,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18626,
											"end": 18648,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18626,
											"end": 18648,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18626,
											"end": 18648,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "667"
										},
										{
											"begin": 18626,
											"end": 18648,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18626,
											"end": 18648,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18626,
											"end": 18648,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18626,
											"end": 18648,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 18626,
											"end": 18648,
											"name": "tag",
											"source": 0,
											"value": "667"
										},
										{
											"begin": 18626,
											"end": 18648,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18626,
											"end": 18648,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18626,
											"end": 18648,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 18626,
											"end": 18648,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 18626,
											"end": 18648,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18626,
											"end": 18648,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18626,
											"end": 18648,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18626,
											"end": 18648,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "669"
										},
										{
											"begin": 18626,
											"end": 18648,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18626,
											"end": 18648,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 18626,
											"end": 18648,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18626,
											"end": 18648,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18626,
											"end": 18648,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 18626,
											"end": 18648,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 18626,
											"end": 18648,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18626,
											"end": 18648,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 18626,
											"end": 18648,
											"name": "tag",
											"source": 0,
											"value": "669"
										},
										{
											"begin": 18626,
											"end": 18648,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18626,
											"end": 18648,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18626,
											"end": 18648,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18626,
											"end": 18648,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18626,
											"end": 18648,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18626,
											"end": 18648,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18626,
											"end": 18648,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18626,
											"end": 18648,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 18626,
											"end": 18648,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 18626,
											"end": 18648,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 18626,
											"end": 18648,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 18626,
											"end": 18648,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18626,
											"end": 18648,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18626,
											"end": 18648,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18626,
											"end": 18648,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18626,
											"end": 18648,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18626,
											"end": 18648,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18626,
											"end": 18648,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18626,
											"end": 18648,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18626,
											"end": 18648,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18626,
											"end": 18648,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18626,
											"end": 18648,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18626,
											"end": 18648,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18626,
											"end": 18648,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "670"
										},
										{
											"begin": 18626,
											"end": 18648,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18626,
											"end": 18648,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18626,
											"end": 18648,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "438"
										},
										{
											"begin": 18626,
											"end": 18648,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18626,
											"end": 18648,
											"name": "tag",
											"source": 0,
											"value": "670"
										},
										{
											"begin": 18626,
											"end": 18648,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18616,
											"end": 18620,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18621,
											"end": 18622,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 18616,
											"end": 18623,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18616,
											"end": 18623,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18616,
											"end": 18623,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18616,
											"end": 18623,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 18616,
											"end": 18623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "671"
										},
										{
											"begin": 18616,
											"end": 18623,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18616,
											"end": 18623,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18616,
											"end": 18623,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18616,
											"end": 18623,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 18616,
											"end": 18623,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18616,
											"end": 18623,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18616,
											"end": 18623,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 18616,
											"end": 18623,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18616,
											"end": 18623,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 18616,
											"end": 18623,
											"name": "tag",
											"source": 0,
											"value": "671"
										},
										{
											"begin": 18616,
											"end": 18623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18616,
											"end": 18648,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18616,
											"end": 18648,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18616,
											"end": 18648,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18616,
											"end": 18623,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18616,
											"end": 18623,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18616,
											"end": 18623,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18616,
											"end": 18623,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 18616,
											"end": 18623,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18616,
											"end": 18623,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18616,
											"end": 18623,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18616,
											"end": 18623,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18616,
											"end": 18623,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18616,
											"end": 18648,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18690,
											"end": 18705,
											"name": "PUSH",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 18690,
											"end": 18705,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18658,
											"end": 18720,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "672"
										},
										{
											"begin": 18658,
											"end": 18720,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18675,
											"end": 18679,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 18675,
											"end": 18679,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18690,
											"end": 18705,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18708,
											"end": 18719,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 18658,
											"end": 18666,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 18658,
											"end": 18720,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18658,
											"end": 18720,
											"name": "tag",
											"source": 0,
											"value": "672"
										},
										{
											"begin": 18658,
											"end": 18720,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18730,
											"end": 18745,
											"name": "PUSH",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 18730,
											"end": 18745,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18730,
											"end": 18850,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18730,
											"end": 18850,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "791AC947"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18730,
											"end": 18850,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18730,
											"end": 18850,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18730,
											"end": 18745,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18730,
											"end": 18745,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18730,
											"end": 18745,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18730,
											"end": 18745,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18730,
											"end": 18796,
											"name": "PUSH",
											"source": 0,
											"value": "791AC947"
										},
										{
											"begin": 18730,
											"end": 18796,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18730,
											"end": 18850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "673"
										},
										{
											"begin": 18730,
											"end": 18850,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18797,
											"end": 18808,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 18797,
											"end": 18808,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18730,
											"end": 18745,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18730,
											"end": 18745,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18813,
											"end": 18817,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 18813,
											"end": 18817,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18831,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 18827,
											"end": 18831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18834,
											"end": 18849,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 18834,
											"end": 18849,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18730,
											"end": 18850,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18730,
											"end": 18850,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18730,
											"end": 18850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "674"
										},
										{
											"begin": 18730,
											"end": 18850,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18730,
											"end": 18850,
											"name": "tag",
											"source": 0,
											"value": "673"
										},
										{
											"begin": 18730,
											"end": 18850,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18730,
											"end": 18850,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18730,
											"end": 18850,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18730,
											"end": 18850,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18730,
											"end": 18850,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18730,
											"end": 18850,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18730,
											"end": 18850,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18730,
											"end": 18850,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18730,
											"end": 18850,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18730,
											"end": 18850,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 18730,
											"end": 18850,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18730,
											"end": 18850,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 18730,
											"end": 18850,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18730,
											"end": 18850,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18730,
											"end": 18850,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18730,
											"end": 18850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "675"
										},
										{
											"begin": 18730,
											"end": 18850,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18730,
											"end": 18850,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18730,
											"end": 18850,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18730,
											"end": 18850,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 18730,
											"end": 18850,
											"name": "tag",
											"source": 0,
											"value": "675"
										},
										{
											"begin": 18730,
											"end": 18850,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18730,
											"end": 18850,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18730,
											"end": 18850,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 18730,
											"end": 18850,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 18730,
											"end": 18850,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18730,
											"end": 18850,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18730,
											"end": 18850,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18730,
											"end": 18850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "677"
										},
										{
											"begin": 18730,
											"end": 18850,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18730,
											"end": 18850,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 18730,
											"end": 18850,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18730,
											"end": 18850,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18730,
											"end": 18850,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 18730,
											"end": 18850,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 18730,
											"end": 18850,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18730,
											"end": 18850,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 18730,
											"end": 18850,
											"name": "tag",
											"source": 0,
											"value": "677"
										},
										{
											"begin": 18730,
											"end": 18850,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11630,
											"end": 11636,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 11630,
											"end": 11644,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11630,
											"end": 11644,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11630,
											"end": 11644,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11630,
											"end": 11644,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11630,
											"end": 11644,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18456,
											"end": 18857,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1528,
											"end": 1703,
											"name": "tag",
											"source": 0,
											"value": "515"
										},
										{
											"begin": 1528,
											"end": 1703,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1593,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1586,
											"end": 1593,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1617,
											"end": 1622,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "679"
										},
										{
											"begin": 1621,
											"end": 1622,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1617,
											"end": 1618,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1617,
											"end": 1622,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "607"
										},
										{
											"begin": 1617,
											"end": 1622,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1617,
											"end": 1622,
											"name": "tag",
											"source": 0,
											"value": "679"
										},
										{
											"begin": 1617,
											"end": 1622,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1605,
											"end": 1622,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1605,
											"end": 1622,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1645,
											"end": 1646,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1640,
											"end": 1641,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1640,
											"end": 1646,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1640,
											"end": 1646,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1632,
											"end": 1678,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "649"
										},
										{
											"begin": 1632,
											"end": 1678,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1632,
											"end": 1678,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1632,
											"end": 1678,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1632,
											"end": 1678,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1632,
											"end": 1678,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9997,
											"end": 9999,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1632,
											"end": 1678,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1632,
											"end": 1678,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1632,
											"end": 1678,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9979,
											"end": 10000,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10036,
											"end": 10038,
											"name": "PUSH",
											"source": 1,
											"value": "1B"
										},
										{
											"begin": 10016,
											"end": 10034,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 10016,
											"end": 10034,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10016,
											"end": 10034,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10009,
											"end": 10039,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10075,
											"end": 10104,
											"name": "PUSH",
											"source": 1,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 10055,
											"end": 10073,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 10055,
											"end": 10073,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10055,
											"end": 10073,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10048,
											"end": 10105,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10122,
											"end": 10140,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 10122,
											"end": 10140,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1632,
											"end": 1678,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 9969,
											"end": 10146,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3654,
											"end": 3841,
											"name": "tag",
											"source": 0,
											"value": "537"
										},
										{
											"begin": 3654,
											"end": 3841,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3727,
											"end": 3743,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3746,
											"end": 3752,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3746,
											"end": 3752,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3762,
											"end": 3779,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3779,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3779,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3762,
											"end": 3779,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3779,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3779,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3779,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3779,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3779,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3794,
											"end": 3834,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3794,
											"end": 3834,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3746,
											"end": 3752,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3746,
											"end": 3752,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3746,
											"end": 3752,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3746,
											"end": 3752,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3746,
											"end": 3752,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3746,
											"end": 3752,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3746,
											"end": 3752,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3794,
											"end": 3834,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3794,
											"end": 3834,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3727,
											"end": 3743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3794,
											"end": 3834,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 3654,
											"end": 3841,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3654,
											"end": 3841,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3654,
											"end": 3841,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 18863,
											"end": 19671,
											"name": "tag",
											"source": 0,
											"value": "613"
										},
										{
											"begin": 18863,
											"end": 19671,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18914,
											"end": 18934,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18937,
											"end": 18948,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "685"
										},
										{
											"begin": 18937,
											"end": 18946,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 18937,
											"end": 18948,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18937,
											"end": 18948,
											"name": "tag",
											"source": 0,
											"value": "685"
										},
										{
											"begin": 18937,
											"end": 18948,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18914,
											"end": 18948,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18962,
											"end": 18979,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18958,
											"end": 18988,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "686"
										},
										{
											"begin": 18958,
											"end": 18988,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18981,
											"end": 18988,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18863,
											"end": 19671,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 18958,
											"end": 18988,
											"name": "tag",
											"source": 0,
											"value": "686"
										},
										{
											"begin": 18958,
											"end": 18988,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19017,
											"end": 19038,
											"name": "PUSH",
											"source": 0,
											"value": "1D"
										},
										{
											"begin": 19017,
											"end": 19038,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19002,
											"end": 19038,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19002,
											"end": 19038,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19167,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19167,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "687"
										},
										{
											"begin": 18998,
											"end": 19167,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19054,
											"end": 19075,
											"name": "PUSH",
											"source": 0,
											"value": "1D"
										},
										{
											"begin": 19054,
											"end": 19090,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 19104,
											"end": 19128,
											"name": "PUSH",
											"source": 0,
											"value": "1E"
										},
										{
											"begin": 19104,
											"end": 19136,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19104,
											"end": 19136,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 19104,
											"end": 19136,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19104,
											"end": 19136,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19104,
											"end": 19136,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 18863,
											"end": 19671,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 18998,
											"end": 19167,
											"name": "tag",
											"source": 0,
											"value": "687"
										},
										{
											"begin": 18998,
											"end": 19167,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19251,
											"end": 19263,
											"name": "PUSH",
											"source": 0,
											"value": "1C"
										},
										{
											"begin": 19251,
											"end": 19281,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19202,
											"end": 19223,
											"name": "PUSH",
											"source": 0,
											"value": "1D"
										},
										{
											"begin": 19202,
											"end": 19223,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19177,
											"end": 19199,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19177,
											"end": 19199,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19202,
											"end": 19305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "688"
										},
										{
											"begin": 19202,
											"end": 19305,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19300,
											"end": 19304,
											"name": "PUSH",
											"source": 0,
											"value": "3E8"
										},
										{
											"begin": 19300,
											"end": 19304,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19202,
											"end": 19282,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "441"
										},
										{
											"begin": 19202,
											"end": 19282,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19251,
											"end": 19281,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 19251,
											"end": 19281,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19251,
											"end": 19281,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19251,
											"end": 19281,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 19251,
											"end": 19281,
											"name": "PUSH",
											"source": 0,
											"value": "FFFF"
										},
										{
											"begin": 19251,
											"end": 19281,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19251,
											"end": 19281,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19202,
											"end": 19246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "690"
										},
										{
											"begin": 19202,
											"end": 19246,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19300,
											"end": 19304,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 19202,
											"end": 19240,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "442"
										},
										{
											"begin": 19202,
											"end": 19246,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19202,
											"end": 19246,
											"name": "tag",
											"source": 0,
											"value": "690"
										},
										{
											"begin": 19202,
											"end": 19246,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19202,
											"end": 19250,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19202,
											"end": 19250,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "456"
										},
										{
											"begin": 19202,
											"end": 19282,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19202,
											"end": 19305,
											"name": "tag",
											"source": 0,
											"value": "688"
										},
										{
											"begin": 19202,
											"end": 19305,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19177,
											"end": 19305,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19177,
											"end": 19305,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19335,
											"end": 19349,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19320,
											"end": 19332,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19320,
											"end": 19349,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 19316,
											"end": 19468,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19316,
											"end": 19468,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "691"
										},
										{
											"begin": 19316,
											"end": 19468,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19365,
											"end": 19389,
											"name": "PUSH",
											"source": 0,
											"value": "1E"
										},
										{
											"begin": 19365,
											"end": 19396,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19365,
											"end": 19396,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 19365,
											"end": 19396,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19392,
											"end": 19396,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 19365,
											"end": 19396,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 19365,
											"end": 19396,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19365,
											"end": 19396,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 19436,
											"end": 19457,
											"name": "PUSH",
											"source": 0,
											"value": "1D"
										},
										{
											"begin": 19436,
											"end": 19457,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19410,
											"end": 19433,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 19410,
											"end": 19457,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 19316,
											"end": 19468,
											"name": "tag",
											"source": 0,
											"value": "691"
										},
										{
											"begin": 19316,
											"end": 19468,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19482,
											"end": 19506,
											"name": "PUSH",
											"source": 0,
											"value": "1E"
										},
										{
											"begin": 19482,
											"end": 19506,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19482,
											"end": 19506,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 19482,
											"end": 19506,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19482,
											"end": 19556,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19482,
											"end": 19556,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19482,
											"end": 19556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "692"
										},
										{
											"begin": 19482,
											"end": 19556,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19526,
											"end": 19549,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 19526,
											"end": 19549,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19526,
											"end": 19556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "693"
										},
										{
											"begin": 19526,
											"end": 19556,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19554,
											"end": 19555,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 19526,
											"end": 19553,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "442"
										},
										{
											"begin": 19526,
											"end": 19556,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19526,
											"end": 19556,
											"name": "tag",
											"source": 0,
											"value": "693"
										},
										{
											"begin": 19526,
											"end": 19556,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19510,
											"end": 19522,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19510,
											"end": 19556,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 19510,
											"end": 19556,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19482,
											"end": 19556,
											"name": "tag",
											"source": 0,
											"value": "692"
										},
										{
											"begin": 19482,
											"end": 19556,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19478,
											"end": 19665,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19478,
											"end": 19665,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "406"
										},
										{
											"begin": 19478,
											"end": 19665,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19572,
											"end": 19596,
											"name": "PUSH",
											"source": 0,
											"value": "1E"
										},
										{
											"begin": 19572,
											"end": 19604,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19572,
											"end": 19604,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 19572,
											"end": 19604,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19572,
											"end": 19604,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19572,
											"end": 19604,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 19618,
											"end": 19639,
											"name": "PUSH",
											"source": 0,
											"value": "1D"
										},
										{
											"begin": 19618,
											"end": 19654,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 18863,
											"end": 19671,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 20564,
											"end": 21071,
											"name": "tag",
											"source": 0,
											"value": "629"
										},
										{
											"begin": 20564,
											"end": 21071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11596,
											"end": 11602,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 11596,
											"end": 11609,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11596,
											"end": 11609,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11596,
											"end": 11609,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11596,
											"end": 11609,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 11596,
											"end": 11609,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 11596,
											"end": 11609,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11596,
											"end": 11609,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 11596,
											"end": 11609,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20681,
											"end": 20696,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "697"
										},
										{
											"begin": 20681,
											"end": 20689,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20694,
											"end": 20695,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 20681,
											"end": 20693,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "347"
										},
										{
											"begin": 20681,
											"end": 20696,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20681,
											"end": 20696,
											"name": "tag",
											"source": 0,
											"value": "697"
										},
										{
											"begin": 20681,
											"end": 20696,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20666,
											"end": 20696,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20706,
											"end": 20723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20726,
											"end": 20744,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "698"
										},
										{
											"begin": 20726,
											"end": 20734,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20666,
											"end": 20696,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20726,
											"end": 20738,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "456"
										},
										{
											"begin": 20726,
											"end": 20744,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20726,
											"end": 20744,
											"name": "tag",
											"source": 0,
											"value": "698"
										},
										{
											"begin": 20726,
											"end": 20744,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20706,
											"end": 20744,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20779,
											"end": 20800,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 20810,
											"end": 20858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "699"
										},
										{
											"begin": 20827,
											"end": 20857,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "700"
										},
										{
											"begin": 20827,
											"end": 20847,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 20852,
											"end": 20856,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 20827,
											"end": 20851,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "515"
										},
										{
											"begin": 20827,
											"end": 20857,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20827,
											"end": 20857,
											"name": "tag",
											"source": 0,
											"value": "700"
										},
										{
											"begin": 20827,
											"end": 20857,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20810,
											"end": 20826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "480"
										},
										{
											"begin": 20810,
											"end": 20858,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20810,
											"end": 20858,
											"name": "tag",
											"source": 0,
											"value": "699"
										},
										{
											"begin": 20810,
											"end": 20858,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20868,
											"end": 20886,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20889,
											"end": 20930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "701"
										},
										{
											"begin": 20889,
											"end": 20910,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 20915,
											"end": 20929,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20889,
											"end": 20914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "456"
										},
										{
											"begin": 20889,
											"end": 20930,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20889,
											"end": 20930,
											"name": "tag",
											"source": 0,
											"value": "701"
										},
										{
											"begin": 20889,
											"end": 20930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20868,
											"end": 20930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20944,
											"end": 20957,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20944,
											"end": 20957,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20940,
											"end": 21065,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "677"
										},
										{
											"begin": 20940,
											"end": 21065,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20973,
											"end": 21054,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "677"
										},
										{
											"begin": 20986,
											"end": 20995,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20997,
											"end": 21053,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "704"
										},
										{
											"begin": 21022,
											"end": 21052,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "705"
										},
										{
											"begin": 21022,
											"end": 21042,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 21047,
											"end": 21051,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 21022,
											"end": 21046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "515"
										},
										{
											"begin": 21022,
											"end": 21052,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21022,
											"end": 21052,
											"name": "tag",
											"source": 0,
											"value": "705"
										},
										{
											"begin": 21022,
											"end": 21052,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20997,
											"end": 21017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "441"
										},
										{
											"begin": 20997,
											"end": 21007,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 21012,
											"end": 21016,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 20997,
											"end": 21011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "442"
										},
										{
											"begin": 20997,
											"end": 21017,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20997,
											"end": 21053,
											"name": "tag",
											"source": 0,
											"value": "704"
										},
										{
											"begin": 20997,
											"end": 21053,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20973,
											"end": 20985,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "707"
										},
										{
											"begin": 20973,
											"end": 21054,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21077,
											"end": 21819,
											"name": "tag",
											"source": 0,
											"value": "632"
										},
										{
											"begin": 21077,
											"end": 21819,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21133,
											"end": 21150,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21153,
											"end": 21211,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "709"
										},
										{
											"begin": 21198,
											"end": 21210,
											"name": "PUSH",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 21198,
											"end": 21210,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21153,
											"end": 21193,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "514"
										},
										{
											"begin": 21175,
											"end": 21192,
											"name": "PUSH",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 21175,
											"end": 21192,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21153,
											"end": 21170,
											"name": "PUSH",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 21153,
											"end": 21170,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21153,
											"end": 21174,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "515"
										},
										{
											"begin": 21153,
											"end": 21174,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21153,
											"end": 21193,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21153,
											"end": 21193,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21153,
											"end": 21193,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 21153,
											"end": 21193,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21153,
											"end": 21193,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21153,
											"end": 21211,
											"name": "tag",
											"source": 0,
											"value": "709"
										},
										{
											"begin": 21153,
											"end": 21211,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21133,
											"end": 21211,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 21225,
											"end": 21239,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21225,
											"end": 21239,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21221,
											"end": 21813,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "406"
										},
										{
											"begin": 21221,
											"end": 21813,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21255,
											"end": 21279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21282,
											"end": 21326,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "712"
										},
										{
											"begin": 21316,
											"end": 21325,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21282,
											"end": 21311,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "441"
										},
										{
											"begin": 21293,
											"end": 21310,
											"name": "PUSH",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 21293,
											"end": 21310,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21282,
											"end": 21288,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 21282,
											"end": 21292,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "442"
										},
										{
											"begin": 21282,
											"end": 21292,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21282,
											"end": 21311,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21282,
											"end": 21311,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21282,
											"end": 21311,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 21282,
											"end": 21311,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21282,
											"end": 21311,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21282,
											"end": 21326,
											"name": "tag",
											"source": 0,
											"value": "712"
										},
										{
											"begin": 21282,
											"end": 21326,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21255,
											"end": 21326,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21255,
											"end": 21326,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21340,
											"end": 21359,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21362,
											"end": 21401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "714"
										},
										{
											"begin": 21391,
											"end": 21400,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21362,
											"end": 21386,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "441"
										},
										{
											"begin": 21373,
											"end": 21385,
											"name": "PUSH",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 21373,
											"end": 21385,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21362,
											"end": 21368,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 21362,
											"end": 21372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "442"
										},
										{
											"begin": 21362,
											"end": 21372,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21362,
											"end": 21386,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21362,
											"end": 21386,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21362,
											"end": 21386,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 21362,
											"end": 21386,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21362,
											"end": 21386,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21362,
											"end": 21401,
											"name": "tag",
											"source": 0,
											"value": "714"
										},
										{
											"begin": 21362,
											"end": 21401,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21340,
											"end": 21401,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 21415,
											"end": 21433,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21436,
											"end": 21481,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "716"
										},
										{
											"begin": 21340,
											"end": 21401,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21436,
											"end": 21464,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "690"
										},
										{
											"begin": 21436,
											"end": 21442,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 21447,
											"end": 21463,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 21436,
											"end": 21446,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "456"
										},
										{
											"begin": 21436,
											"end": 21464,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21436,
											"end": 21481,
											"name": "tag",
											"source": 0,
											"value": "716"
										},
										{
											"begin": 21436,
											"end": 21481,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21415,
											"end": 21481,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 21499,
											"end": 21519,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21499,
											"end": 21519,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21495,
											"end": 21598,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "718"
										},
										{
											"begin": 21495,
											"end": 21598,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21539,
											"end": 21556,
											"name": "PUSH",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 21539,
											"end": 21556,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21539,
											"end": 21583,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21539,
											"end": 21583,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21539,
											"end": 21556,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21539,
											"end": 21556,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21539,
											"end": 21556,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21539,
											"end": 21556,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21539,
											"end": 21583,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21539,
											"end": 21583,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21539,
											"end": 21583,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 21539,
											"end": 21583,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 21539,
											"end": 21583,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21566,
											"end": 21582,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 21566,
											"end": 21582,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21539,
											"end": 21556,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21539,
											"end": 21583,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21539,
											"end": 21556,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21539,
											"end": 21583,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21566,
											"end": 21582,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 21539,
											"end": 21556,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 21539,
											"end": 21583,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 21539,
											"end": 21583,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 21539,
											"end": 21583,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 21539,
											"end": 21583,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21539,
											"end": 21583,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21539,
											"end": 21583,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21539,
											"end": 21583,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21539,
											"end": 21583,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21539,
											"end": 21583,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21539,
											"end": 21583,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21539,
											"end": 21583,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "720"
										},
										{
											"begin": 21539,
											"end": 21583,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21539,
											"end": 21583,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 21539,
											"end": 21583,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21539,
											"end": 21583,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21539,
											"end": 21583,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 21539,
											"end": 21583,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 21539,
											"end": 21583,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21539,
											"end": 21583,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21539,
											"end": 21583,
											"name": "tag",
											"source": 0,
											"value": "720"
										},
										{
											"begin": 21539,
											"end": 21583,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21539,
											"end": 21583,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21495,
											"end": 21598,
											"name": "tag",
											"source": 0,
											"value": "718"
										},
										{
											"begin": 21495,
											"end": 21598,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21615,
											"end": 21630,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21615,
											"end": 21630,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21611,
											"end": 21699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "721"
										},
										{
											"begin": 21611,
											"end": 21699,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21650,
											"end": 21662,
											"name": "PUSH",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 21650,
											"end": 21662,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21650,
											"end": 21684,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21650,
											"end": 21684,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21650,
											"end": 21662,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21650,
											"end": 21662,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21650,
											"end": 21662,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21650,
											"end": 21662,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21650,
											"end": 21684,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21650,
											"end": 21684,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21650,
											"end": 21684,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 21650,
											"end": 21684,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 21650,
											"end": 21684,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21672,
											"end": 21683,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21672,
											"end": 21683,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21650,
											"end": 21662,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21650,
											"end": 21684,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21650,
											"end": 21662,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21650,
											"end": 21684,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21672,
											"end": 21683,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 21650,
											"end": 21662,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 21650,
											"end": 21684,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 21650,
											"end": 21684,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 21650,
											"end": 21684,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 21650,
											"end": 21684,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21650,
											"end": 21684,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21650,
											"end": 21684,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21650,
											"end": 21684,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21650,
											"end": 21684,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21650,
											"end": 21684,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21650,
											"end": 21684,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21650,
											"end": 21684,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "723"
										},
										{
											"begin": 21650,
											"end": 21684,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21650,
											"end": 21684,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 21650,
											"end": 21684,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21650,
											"end": 21684,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21650,
											"end": 21684,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 21650,
											"end": 21684,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 21650,
											"end": 21684,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21650,
											"end": 21684,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21650,
											"end": 21684,
											"name": "tag",
											"source": 0,
											"value": "723"
										},
										{
											"begin": 21650,
											"end": 21684,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21650,
											"end": 21684,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21611,
											"end": 21699,
											"name": "tag",
											"source": 0,
											"value": "721"
										},
										{
											"begin": 21611,
											"end": 21699,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21716,
											"end": 21730,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21716,
											"end": 21730,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21712,
											"end": 21803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "724"
										},
										{
											"begin": 21712,
											"end": 21803,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21750,
											"end": 21767,
											"name": "PUSH",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 21750,
											"end": 21767,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21750,
											"end": 21788,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21750,
											"end": 21788,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21750,
											"end": 21767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21750,
											"end": 21767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21750,
											"end": 21767,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21750,
											"end": 21767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21750,
											"end": 21788,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21750,
											"end": 21788,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21750,
											"end": 21788,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 21750,
											"end": 21788,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 21750,
											"end": 21788,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21777,
											"end": 21787,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21777,
											"end": 21787,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21750,
											"end": 21767,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21750,
											"end": 21788,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21750,
											"end": 21767,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21750,
											"end": 21788,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21777,
											"end": 21787,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 21750,
											"end": 21767,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 21750,
											"end": 21788,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 21750,
											"end": 21788,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 21750,
											"end": 21788,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 21750,
											"end": 21788,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21750,
											"end": 21788,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21750,
											"end": 21788,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21750,
											"end": 21788,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21750,
											"end": 21788,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21750,
											"end": 21788,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21750,
											"end": 21788,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21750,
											"end": 21788,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "726"
										},
										{
											"begin": 21750,
											"end": 21788,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21750,
											"end": 21788,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 21750,
											"end": 21788,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21750,
											"end": 21788,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21750,
											"end": 21788,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 21750,
											"end": 21788,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 21750,
											"end": 21788,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21750,
											"end": 21788,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21750,
											"end": 21788,
											"name": "tag",
											"source": 0,
											"value": "726"
										},
										{
											"begin": 21750,
											"end": 21788,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21750,
											"end": 21788,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21712,
											"end": 21803,
											"name": "tag",
											"source": 0,
											"value": "724"
										},
										{
											"begin": 21712,
											"end": 21803,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21221,
											"end": 21813,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21221,
											"end": 21813,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21221,
											"end": 21813,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21077,
											"end": 21819,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21077,
											"end": 21819,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21077,
											"end": 21819,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 22950,
											"end": 23200,
											"name": "tag",
											"source": 0,
											"value": "642"
										},
										{
											"begin": 22950,
											"end": 23200,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23062,
											"end": 23069,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23057,
											"end": 23115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "729"
										},
										{
											"begin": 23057,
											"end": 23115,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23090,
											"end": 23104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "729"
										},
										{
											"begin": 13936,
											"end": 13952,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 13936,
											"end": 13952,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13936,
											"end": 13952,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13909,
											"end": 13933,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 13909,
											"end": 13952,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 13989,
											"end": 14005,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 13989,
											"end": 14005,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13989,
											"end": 14005,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13962,
											"end": 13986,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 13962,
											"end": 14005,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14037,
											"end": 14048,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 14037,
											"end": 14048,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14037,
											"end": 14048,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14015,
											"end": 14034,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 14015,
											"end": 14048,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14085,
											"end": 14101,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 14085,
											"end": 14101,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14085,
											"end": 14101,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14058,
											"end": 14082,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 14058,
											"end": 14101,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 14120,
											"end": 14140,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14140,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14140,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14120,
											"end": 14140,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14150,
											"end": 14170,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14150,
											"end": 14170,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14150,
											"end": 14170,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14150,
											"end": 14170,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14180,
											"end": 14195,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14180,
											"end": 14195,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14180,
											"end": 14195,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14205,
											"end": 14225,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14205,
											"end": 14225,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14205,
											"end": 14225,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14264,
											"end": 14281,
											"name": "PUSH",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 14264,
											"end": 14281,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14264,
											"end": 14281,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14236,
											"end": 14261,
											"name": "PUSH",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 14236,
											"end": 14281,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14319,
											"end": 14336,
											"name": "PUSH",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 14319,
											"end": 14336,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14319,
											"end": 14336,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14291,
											"end": 14316,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 14291,
											"end": 14336,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14369,
											"end": 14381,
											"name": "PUSH",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 14369,
											"end": 14381,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14369,
											"end": 14381,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14346,
											"end": 14366,
											"name": "PUSH",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 14346,
											"end": 14381,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14419,
											"end": 14436,
											"name": "PUSH",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 14419,
											"end": 14436,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14419,
											"end": 14436,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14391,
											"end": 14416,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 14391,
											"end": 14436,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14455,
											"end": 14476,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14455,
											"end": 14476,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14455,
											"end": 14476,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14455,
											"end": 14476,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14486,
											"end": 14507,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14486,
											"end": 14507,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14486,
											"end": 14507,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14486,
											"end": 14507,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14517,
											"end": 14533,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14517,
											"end": 14533,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14517,
											"end": 14533,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14543,
											"end": 14564,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 13867,
											"end": 14571,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23090,
											"end": 23104,
											"name": "tag",
											"source": 0,
											"value": "729"
										},
										{
											"begin": 23090,
											"end": 23104,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23124,
											"end": 23168,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "731"
										},
										{
											"begin": 23142,
											"end": 23148,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 23150,
											"end": 23159,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 23161,
											"end": 23167,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 23124,
											"end": 23141,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "732"
										},
										{
											"begin": 23124,
											"end": 23168,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23124,
											"end": 23168,
											"name": "tag",
											"source": 0,
											"value": "731"
										},
										{
											"begin": 23124,
											"end": 23168,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23178,
											"end": 23193,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "641"
										},
										{
											"begin": 14643,
											"end": 14667,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 14643,
											"end": 14667,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14624,
											"end": 14640,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 14624,
											"end": 14667,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14696,
											"end": 14720,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 14696,
											"end": 14720,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14677,
											"end": 14693,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 14677,
											"end": 14720,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14744,
											"end": 14763,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 14744,
											"end": 14763,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14730,
											"end": 14741,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 14730,
											"end": 14763,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14792,
											"end": 14816,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 14792,
											"end": 14816,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14773,
											"end": 14789,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 14773,
											"end": 14816,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14847,
											"end": 14872,
											"name": "PUSH",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 14847,
											"end": 14872,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14827,
											"end": 14844,
											"name": "PUSH",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 14827,
											"end": 14872,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14902,
											"end": 14927,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 14902,
											"end": 14927,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14882,
											"end": 14899,
											"name": "PUSH",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 14882,
											"end": 14927,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14952,
											"end": 14972,
											"name": "PUSH",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 14952,
											"end": 14972,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14937,
											"end": 14949,
											"name": "PUSH",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 14937,
											"end": 14972,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 15002,
											"end": 15027,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 15002,
											"end": 15027,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14982,
											"end": 14999,
											"name": "PUSH",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 14982,
											"end": 15027,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14581,
											"end": 15034,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2422,
											"end": 2607,
											"name": "tag",
											"source": 0,
											"value": "650"
										},
										{
											"begin": 2422,
											"end": 2607,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2508,
											"end": 2515,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2542,
											"end": 2554,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2535,
											"end": 2540,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2555,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "736"
										},
										{
											"begin": 2527,
											"end": 2555,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2555,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2527,
											"end": 2555,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2527,
											"end": 2555,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2555,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2555,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2527,
											"end": 2555,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2555,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 2527,
											"end": 2555,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2555,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2555,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2527,
											"end": 2555,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2527,
											"end": 2555,
											"name": "tag",
											"source": 0,
											"value": "736"
										},
										{
											"begin": 2527,
											"end": 2555,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2565,
											"end": 2574,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2577,
											"end": 2582,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "646"
										},
										{
											"begin": 2581,
											"end": 2582,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2577,
											"end": 2578,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 2577,
											"end": 2582,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "656"
										},
										{
											"begin": 2577,
											"end": 2582,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20103,
											"end": 20556,
											"name": "tag",
											"source": 0,
											"value": "707"
										},
										{
											"begin": 20103,
											"end": 20556,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20215,
											"end": 20230,
											"name": "PUSH",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 20215,
											"end": 20230,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20183,
											"end": 20245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "740"
										},
										{
											"begin": 20183,
											"end": 20245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20200,
											"end": 20204,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 20200,
											"end": 20204,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20215,
											"end": 20230,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20233,
											"end": 20244,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20183,
											"end": 20191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 20183,
											"end": 20245,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20183,
											"end": 20245,
											"name": "tag",
											"source": 0,
											"value": "740"
										},
										{
											"begin": 20183,
											"end": 20245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20285,
											"end": 20300,
											"name": "PUSH",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 20285,
											"end": 20300,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20494,
											"end": 20506,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 20494,
											"end": 20506,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20494,
											"end": 20506,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20285,
											"end": 20549,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20285,
											"end": 20549,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F305D719"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 20285,
											"end": 20549,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20285,
											"end": 20549,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20358,
											"end": 20362,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 20285,
											"end": 20549,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20285,
											"end": 20549,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20285,
											"end": 20549,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5249,
											"end": 5283,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5299,
											"end": 5317,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5299,
											"end": 5317,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5299,
											"end": 5317,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5292,
											"end": 5326,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5292,
											"end": 5326,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5292,
											"end": 5326,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20285,
											"end": 20300,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5342,
											"end": 5360,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5342,
											"end": 5360,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5342,
											"end": 5360,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5335,
											"end": 5369,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5335,
											"end": 5369,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5335,
											"end": 5369,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5385,
											"end": 5403,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5385,
											"end": 5403,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5385,
											"end": 5403,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5378,
											"end": 5412,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20494,
											"end": 20506,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20494,
											"end": 20506,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20494,
											"end": 20506,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 5447,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5428,
											"end": 5447,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5428,
											"end": 5447,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5421,
											"end": 5465,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20522,
											"end": 20537,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 5481,
											"end": 5500,
											"name": "PUSH",
											"source": 1,
											"value": "A4"
										},
										{
											"begin": 5481,
											"end": 5500,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5481,
											"end": 5500,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5474,
											"end": 5509,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20285,
											"end": 20300,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20285,
											"end": 20300,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20285,
											"end": 20300,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20285,
											"end": 20300,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20285,
											"end": 20316,
											"name": "PUSH",
											"source": 0,
											"value": "F305D719"
										},
										{
											"begin": 20285,
											"end": 20316,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20324,
											"end": 20333,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20324,
											"end": 20333,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5183,
											"end": 5202,
											"name": "PUSH",
											"source": 1,
											"value": "C4"
										},
										{
											"begin": 5183,
											"end": 5202,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20285,
											"end": 20549,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 20285,
											"end": 20549,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20285,
											"end": 20549,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20285,
											"end": 20549,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20285,
											"end": 20549,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20285,
											"end": 20549,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20285,
											"end": 20549,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20285,
											"end": 20549,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 20285,
											"end": 20549,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 20285,
											"end": 20549,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20285,
											"end": 20549,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 20285,
											"end": 20549,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20285,
											"end": 20549,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20285,
											"end": 20549,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20285,
											"end": 20549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "743"
										},
										{
											"begin": 20285,
											"end": 20549,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20285,
											"end": 20549,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20285,
											"end": 20549,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20285,
											"end": 20549,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20285,
											"end": 20549,
											"name": "tag",
											"source": 0,
											"value": "743"
										},
										{
											"begin": 20285,
											"end": 20549,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20285,
											"end": 20549,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20285,
											"end": 20549,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 20285,
											"end": 20549,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 20285,
											"end": 20549,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20285,
											"end": 20549,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20285,
											"end": 20549,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20285,
											"end": 20549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "745"
										},
										{
											"begin": 20285,
											"end": 20549,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20285,
											"end": 20549,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 20285,
											"end": 20549,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20285,
											"end": 20549,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20285,
											"end": 20549,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 20285,
											"end": 20549,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 20285,
											"end": 20549,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20285,
											"end": 20549,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20285,
											"end": 20549,
											"name": "tag",
											"source": 0,
											"value": "745"
										},
										{
											"begin": 20285,
											"end": 20549,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20285,
											"end": 20549,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20285,
											"end": 20549,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20285,
											"end": 20549,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20285,
											"end": 20549,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20285,
											"end": 20549,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20285,
											"end": 20549,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20285,
											"end": 20549,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20285,
											"end": 20549,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 20285,
											"end": 20549,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 20285,
											"end": 20549,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 20285,
											"end": 20549,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 20285,
											"end": 20549,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20285,
											"end": 20549,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20285,
											"end": 20549,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20285,
											"end": 20549,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20285,
											"end": 20549,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20285,
											"end": 20549,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20285,
											"end": 20549,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20285,
											"end": 20549,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20285,
											"end": 20549,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20285,
											"end": 20549,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20285,
											"end": 20549,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20285,
											"end": 20549,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20285,
											"end": 20549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "724"
										},
										{
											"begin": 20285,
											"end": 20549,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20285,
											"end": 20549,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20285,
											"end": 20549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "747"
										},
										{
											"begin": 20285,
											"end": 20549,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23206,
											"end": 25053,
											"name": "tag",
											"source": 0,
											"value": "732"
										},
										{
											"begin": 23206,
											"end": 25053,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23302,
											"end": 23326,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "750"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 23302,
											"end": 23326,
											"name": "tag",
											"source": 0,
											"value": "750"
										},
										{
											"begin": 23302,
											"end": 23326,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23350,
											"end": 23363,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 23350,
											"end": 23363,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 23340,
											"end": 23363,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 23340,
											"end": 23363,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23340,
											"end": 23363,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23350,
											"end": 23363,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23350,
											"end": 23363,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23340,
											"end": 23363,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23340,
											"end": 23404,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23340,
											"end": 23404,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23340,
											"end": 23404,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "752"
										},
										{
											"begin": 23340,
											"end": 23404,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 23388,
											"end": 23403,
											"name": "PUSH",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 23388,
											"end": 23403,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 23367,
											"end": 23404,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 23367,
											"end": 23404,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23367,
											"end": 23404,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23388,
											"end": 23403,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23388,
											"end": 23403,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23367,
											"end": 23404,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23367,
											"end": 23404,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23340,
											"end": 23404,
											"name": "tag",
											"source": 0,
											"value": "752"
										},
										{
											"begin": 23340,
											"end": 23404,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23336,
											"end": 23693,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23336,
											"end": 23693,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "753"
										},
										{
											"begin": 23336,
											"end": 23693,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23444,
											"end": 23482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "754"
										},
										{
											"begin": 23477,
											"end": 23481,
											"name": "PUSH",
											"source": 0,
											"value": "3E8"
										},
										{
											"begin": 23444,
											"end": 23472,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "441"
										},
										{
											"begin": 23455,
											"end": 23471,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 23455,
											"end": 23471,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23444,
											"end": 23450,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 23444,
											"end": 23454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "442"
										},
										{
											"begin": 23444,
											"end": 23454,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23444,
											"end": 23472,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23444,
											"end": 23472,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23444,
											"end": 23472,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 23444,
											"end": 23472,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23444,
											"end": 23472,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23444,
											"end": 23482,
											"name": "tag",
											"source": 0,
											"value": "754"
										},
										{
											"begin": 23444,
											"end": 23482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23426,
											"end": 23441,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23426,
											"end": 23441,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23426,
											"end": 23441,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23426,
											"end": 23482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23525,
											"end": 23541,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 23525,
											"end": 23541,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23514,
											"end": 23552,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "756"
										},
										{
											"begin": 23514,
											"end": 23552,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23547,
											"end": 23551,
											"name": "PUSH",
											"source": 0,
											"value": "3E8"
										},
										{
											"begin": 23547,
											"end": 23551,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23514,
											"end": 23542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "441"
										},
										{
											"begin": 23514,
											"end": 23542,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23514,
											"end": 23520,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 23514,
											"end": 23520,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23514,
											"end": 23524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "442"
										},
										{
											"begin": 23514,
											"end": 23542,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23514,
											"end": 23552,
											"name": "tag",
											"source": 0,
											"value": "756"
										},
										{
											"begin": 23514,
											"end": 23552,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23496,
											"end": 23552,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23496,
											"end": 23552,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23590,
											"end": 23601,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 23590,
											"end": 23601,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23579,
											"end": 23612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "758"
										},
										{
											"begin": 23579,
											"end": 23612,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23607,
											"end": 23611,
											"name": "PUSH",
											"source": 0,
											"value": "3E8"
										},
										{
											"begin": 23607,
											"end": 23611,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23579,
											"end": 23602,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "441"
										},
										{
											"begin": 23579,
											"end": 23602,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23579,
											"end": 23585,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 23579,
											"end": 23585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23579,
											"end": 23589,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "442"
										},
										{
											"begin": 23579,
											"end": 23602,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23579,
											"end": 23612,
											"name": "tag",
											"source": 0,
											"value": "758"
										},
										{
											"begin": 23579,
											"end": 23612,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23566,
											"end": 23576,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23566,
											"end": 23576,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23566,
											"end": 23576,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23566,
											"end": 23612,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23655,
											"end": 23671,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 23655,
											"end": 23671,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23644,
											"end": 23682,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "760"
										},
										{
											"begin": 23644,
											"end": 23682,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23677,
											"end": 23681,
											"name": "PUSH",
											"source": 0,
											"value": "3E8"
										},
										{
											"begin": 23677,
											"end": 23681,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23644,
											"end": 23672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "441"
										},
										{
											"begin": 23644,
											"end": 23672,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23644,
											"end": 23650,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 23644,
											"end": 23650,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23644,
											"end": 23654,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "442"
										},
										{
											"begin": 23644,
											"end": 23672,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23644,
											"end": 23682,
											"name": "tag",
											"source": 0,
											"value": "760"
										},
										{
											"begin": 23644,
											"end": 23682,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23626,
											"end": 23641,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 23626,
											"end": 23641,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23626,
											"end": 23641,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23626,
											"end": 23682,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23336,
											"end": 23693,
											"name": "tag",
											"source": 0,
											"value": "753"
										},
										{
											"begin": 23336,
											"end": 23693,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23716,
											"end": 23729,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 23716,
											"end": 23729,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 23706,
											"end": 23729,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 23706,
											"end": 23729,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23706,
											"end": 23729,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23716,
											"end": 23729,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23716,
											"end": 23729,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23706,
											"end": 23729,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23706,
											"end": 23729,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23706,
											"end": 23729,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23706,
											"end": 23729,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23706,
											"end": 23759,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "762"
										},
										{
											"begin": 23706,
											"end": 23759,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 23746,
											"end": 23759,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 23746,
											"end": 23759,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 23733,
											"end": 23759,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 23733,
											"end": 23759,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23733,
											"end": 23759,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23746,
											"end": 23759,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23746,
											"end": 23759,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23733,
											"end": 23759,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23706,
											"end": 23759,
											"name": "tag",
											"source": 0,
											"value": "762"
										},
										{
											"begin": 23706,
											"end": 23759,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23702,
											"end": 24053,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23702,
											"end": 24053,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "763"
										},
										{
											"begin": 23702,
											"end": 24053,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23800,
											"end": 23839,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "764"
										},
										{
											"begin": 23834,
											"end": 23838,
											"name": "PUSH",
											"source": 0,
											"value": "3E8"
										},
										{
											"begin": 23800,
											"end": 23829,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "441"
										},
										{
											"begin": 23811,
											"end": 23828,
											"name": "PUSH",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 23811,
											"end": 23828,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23800,
											"end": 23806,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 23800,
											"end": 23810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "442"
										},
										{
											"begin": 23800,
											"end": 23810,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23800,
											"end": 23829,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23800,
											"end": 23829,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23800,
											"end": 23829,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 23800,
											"end": 23829,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23800,
											"end": 23829,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23800,
											"end": 23839,
											"name": "tag",
											"source": 0,
											"value": "764"
										},
										{
											"begin": 23800,
											"end": 23839,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23782,
											"end": 23797,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23782,
											"end": 23797,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23782,
											"end": 23797,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23782,
											"end": 23839,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23882,
											"end": 23899,
											"name": "PUSH",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 23882,
											"end": 23899,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23871,
											"end": 23910,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "766"
										},
										{
											"begin": 23871,
											"end": 23910,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23905,
											"end": 23909,
											"name": "PUSH",
											"source": 0,
											"value": "3E8"
										},
										{
											"begin": 23905,
											"end": 23909,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23871,
											"end": 23900,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "441"
										},
										{
											"begin": 23871,
											"end": 23900,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23871,
											"end": 23877,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 23871,
											"end": 23877,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23871,
											"end": 23881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "442"
										},
										{
											"begin": 23871,
											"end": 23900,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23871,
											"end": 23910,
											"name": "tag",
											"source": 0,
											"value": "766"
										},
										{
											"begin": 23871,
											"end": 23910,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23853,
											"end": 23910,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23853,
											"end": 23910,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23948,
											"end": 23960,
											"name": "PUSH",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 23948,
											"end": 23960,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23937,
											"end": 23971,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "768"
										},
										{
											"begin": 23937,
											"end": 23971,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23966,
											"end": 23970,
											"name": "PUSH",
											"source": 0,
											"value": "3E8"
										},
										{
											"begin": 23966,
											"end": 23970,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23937,
											"end": 23961,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "441"
										},
										{
											"begin": 23937,
											"end": 23961,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23937,
											"end": 23943,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 23937,
											"end": 23943,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23937,
											"end": 23947,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "442"
										},
										{
											"begin": 23937,
											"end": 23961,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23937,
											"end": 23971,
											"name": "tag",
											"source": 0,
											"value": "768"
										},
										{
											"begin": 23937,
											"end": 23971,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23924,
											"end": 23934,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23924,
											"end": 23934,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23924,
											"end": 23934,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23924,
											"end": 23971,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24014,
											"end": 24031,
											"name": "PUSH",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 24014,
											"end": 24031,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24003,
											"end": 24042,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "770"
										},
										{
											"begin": 24003,
											"end": 24042,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24037,
											"end": 24041,
											"name": "PUSH",
											"source": 0,
											"value": "3E8"
										},
										{
											"begin": 24037,
											"end": 24041,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24003,
											"end": 24032,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "441"
										},
										{
											"begin": 24003,
											"end": 24032,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24003,
											"end": 24009,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 24003,
											"end": 24009,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24003,
											"end": 24013,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "442"
										},
										{
											"begin": 24003,
											"end": 24032,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24003,
											"end": 24042,
											"name": "tag",
											"source": 0,
											"value": "770"
										},
										{
											"begin": 24003,
											"end": 24042,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23985,
											"end": 24000,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 23985,
											"end": 24000,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23985,
											"end": 24000,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23985,
											"end": 24042,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23702,
											"end": 24053,
											"name": "tag",
											"source": 0,
											"value": "763"
										},
										{
											"begin": 23702,
											"end": 24053,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24076,
											"end": 24089,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 24076,
											"end": 24089,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24066,
											"end": 24089,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 24066,
											"end": 24089,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24066,
											"end": 24089,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24076,
											"end": 24089,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24076,
											"end": 24089,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24066,
											"end": 24089,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24066,
											"end": 24089,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24066,
											"end": 24089,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 24066,
											"end": 24089,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24066,
											"end": 24119,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "772"
										},
										{
											"begin": 24066,
											"end": 24119,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 24106,
											"end": 24119,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 24106,
											"end": 24119,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24093,
											"end": 24119,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 24093,
											"end": 24119,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24093,
											"end": 24119,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24106,
											"end": 24119,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24106,
											"end": 24119,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24093,
											"end": 24119,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24093,
											"end": 24119,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 24066,
											"end": 24119,
											"name": "tag",
											"source": 0,
											"value": "772"
										},
										{
											"begin": 24066,
											"end": 24119,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24062,
											"end": 24584,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 24062,
											"end": 24584,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "773"
										},
										{
											"begin": 24062,
											"end": 24584,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24163,
											"end": 24244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "774"
										},
										{
											"begin": 24240,
											"end": 24243,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 24163,
											"end": 24235,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "441"
										},
										{
											"begin": 24209,
											"end": 24234,
											"name": "PUSH",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 24209,
											"end": 24234,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24164,
											"end": 24203,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "776"
										},
										{
											"begin": 24198,
											"end": 24202,
											"name": "PUSH",
											"source": 0,
											"value": "3E8"
										},
										{
											"begin": 24164,
											"end": 24193,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "441"
										},
										{
											"begin": 24175,
											"end": 24192,
											"name": "PUSH",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 24175,
											"end": 24192,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24164,
											"end": 24170,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 24164,
											"end": 24174,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "442"
										},
										{
											"begin": 24164,
											"end": 24174,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24164,
											"end": 24193,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24164,
											"end": 24193,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24164,
											"end": 24193,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 24164,
											"end": 24193,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24164,
											"end": 24193,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24164,
											"end": 24203,
											"name": "tag",
											"source": 0,
											"value": "776"
										},
										{
											"begin": 24164,
											"end": 24203,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24163,
											"end": 24208,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24163,
											"end": 24208,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "442"
										},
										{
											"begin": 24163,
											"end": 24235,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24163,
											"end": 24244,
											"name": "tag",
											"source": 0,
											"value": "774"
										},
										{
											"begin": 24163,
											"end": 24244,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24145,
											"end": 24149,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24145,
											"end": 24160,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24145,
											"end": 24160,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24145,
											"end": 24244,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24145,
											"end": 24244,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24145,
											"end": 24244,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24145,
											"end": 24244,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24145,
											"end": 24244,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24276,
											"end": 24357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "778"
										},
										{
											"begin": 24353,
											"end": 24356,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 24276,
											"end": 24348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "441"
										},
										{
											"begin": 24322,
											"end": 24347,
											"name": "PUSH",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 24322,
											"end": 24347,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24277,
											"end": 24316,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "776"
										},
										{
											"begin": 24311,
											"end": 24315,
											"name": "PUSH",
											"source": 0,
											"value": "3E8"
										},
										{
											"begin": 24277,
											"end": 24306,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "441"
										},
										{
											"begin": 24288,
											"end": 24305,
											"name": "PUSH",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 24288,
											"end": 24305,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24277,
											"end": 24283,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 24277,
											"end": 24287,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "442"
										},
										{
											"begin": 24277,
											"end": 24287,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24277,
											"end": 24306,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24277,
											"end": 24306,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24277,
											"end": 24306,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 24277,
											"end": 24306,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24277,
											"end": 24306,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24276,
											"end": 24357,
											"name": "tag",
											"source": 0,
											"value": "778"
										},
										{
											"begin": 24276,
											"end": 24357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24258,
											"end": 24357,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24258,
											"end": 24357,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24425,
											"end": 24450,
											"name": "PUSH",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 24425,
											"end": 24450,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24396,
											"end": 24408,
											"name": "PUSH",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 24396,
											"end": 24408,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24384,
											"end": 24460,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "782"
										},
										{
											"begin": 24384,
											"end": 24460,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24456,
											"end": 24459,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 24456,
											"end": 24459,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24384,
											"end": 24451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "441"
										},
										{
											"begin": 24384,
											"end": 24451,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24425,
											"end": 24450,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24385,
											"end": 24419,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "776"
										},
										{
											"begin": 24385,
											"end": 24419,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24414,
											"end": 24418,
											"name": "PUSH",
											"source": 0,
											"value": "3E8"
										},
										{
											"begin": 24414,
											"end": 24418,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24384,
											"end": 24451,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 24384,
											"end": 24451,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24385,
											"end": 24391,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 24385,
											"end": 24391,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24385,
											"end": 24395,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "442"
										},
										{
											"begin": 24385,
											"end": 24409,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24384,
											"end": 24460,
											"name": "tag",
											"source": 0,
											"value": "782"
										},
										{
											"begin": 24384,
											"end": 24460,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24371,
											"end": 24375,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24371,
											"end": 24381,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24371,
											"end": 24381,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24371,
											"end": 24460,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24371,
											"end": 24460,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24371,
											"end": 24460,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24371,
											"end": 24460,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24371,
											"end": 24460,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24492,
											"end": 24573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "786"
										},
										{
											"begin": 24569,
											"end": 24572,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 24492,
											"end": 24564,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "441"
										},
										{
											"begin": 24538,
											"end": 24563,
											"name": "PUSH",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 24538,
											"end": 24563,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24493,
											"end": 24532,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "776"
										},
										{
											"begin": 24527,
											"end": 24531,
											"name": "PUSH",
											"source": 0,
											"value": "3E8"
										},
										{
											"begin": 24493,
											"end": 24522,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "441"
										},
										{
											"begin": 24504,
											"end": 24521,
											"name": "PUSH",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 24504,
											"end": 24521,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24493,
											"end": 24499,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 24493,
											"end": 24503,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "442"
										},
										{
											"begin": 24493,
											"end": 24503,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24493,
											"end": 24522,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24493,
											"end": 24522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24493,
											"end": 24522,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 24493,
											"end": 24522,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24493,
											"end": 24522,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24492,
											"end": 24573,
											"name": "tag",
											"source": 0,
											"value": "786"
										},
										{
											"begin": 24492,
											"end": 24573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24474,
											"end": 24489,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 24474,
											"end": 24489,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24474,
											"end": 24489,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24474,
											"end": 24573,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24062,
											"end": 24584,
											"name": "tag",
											"source": 0,
											"value": "773"
										},
										{
											"begin": 24062,
											"end": 24584,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24617,
											"end": 24702,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "790"
										},
										{
											"begin": 24686,
											"end": 24690,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24686,
											"end": 24701,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 24686,
											"end": 24701,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24686,
											"end": 24701,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24617,
											"end": 24681,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "690"
										},
										{
											"begin": 24670,
											"end": 24674,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24670,
											"end": 24680,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24670,
											"end": 24680,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24670,
											"end": 24680,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24617,
											"end": 24665,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "690"
										},
										{
											"begin": 24649,
											"end": 24653,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 24649,
											"end": 24664,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24649,
											"end": 24664,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24649,
											"end": 24664,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24617,
											"end": 24644,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "690"
										},
										{
											"begin": 24628,
											"end": 24632,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 24628,
											"end": 24643,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24628,
											"end": 24643,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24628,
											"end": 24643,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24617,
											"end": 24623,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 24617,
											"end": 24627,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "456"
										},
										{
											"begin": 24617,
											"end": 24627,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24617,
											"end": 24644,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24617,
											"end": 24644,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24617,
											"end": 24644,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 24617,
											"end": 24644,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24617,
											"end": 24644,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24617,
											"end": 24702,
											"name": "tag",
											"source": 0,
											"value": "790"
										},
										{
											"begin": 24617,
											"end": 24702,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24602,
											"end": 24614,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 24602,
											"end": 24614,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24602,
											"end": 24614,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24602,
											"end": 24702,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24741,
											"end": 24758,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 24741,
											"end": 24758,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24741,
											"end": 24758,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24741,
											"end": 24758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24741,
											"end": 24758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24741,
											"end": 24758,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24741,
											"end": 24750,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 24741,
											"end": 24758,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24741,
											"end": 24758,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24741,
											"end": 24758,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24741,
											"end": 24758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24741,
											"end": 24758,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 24741,
											"end": 24758,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24741,
											"end": 24770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "794"
										},
										{
											"begin": 24741,
											"end": 24770,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24763,
											"end": 24769,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24741,
											"end": 24762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "456"
										},
										{
											"begin": 24741,
											"end": 24770,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24741,
											"end": 24770,
											"name": "tag",
											"source": 0,
											"value": "794"
										},
										{
											"begin": 24741,
											"end": 24770,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24721,
											"end": 24738,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24721,
											"end": 24738,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 24721,
											"end": 24738,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24721,
											"end": 24738,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24721,
											"end": 24738,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24721,
											"end": 24738,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24721,
											"end": 24738,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24721,
											"end": 24730,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 24721,
											"end": 24738,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24721,
											"end": 24738,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24721,
											"end": 24738,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24721,
											"end": 24738,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24721,
											"end": 24738,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24721,
											"end": 24738,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 24721,
											"end": 24770,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 24721,
											"end": 24770,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24721,
											"end": 24770,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 24721,
											"end": 24770,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 24828,
											"end": 24840,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 24828,
											"end": 24840,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 24828,
											"end": 24840,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24828,
											"end": 24840,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24803,
											"end": 24823,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24803,
											"end": 24823,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 24803,
											"end": 24823,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24803,
											"end": 24823,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24803,
											"end": 24823,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24803,
											"end": 24823,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24803,
											"end": 24823,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24803,
											"end": 24823,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24803,
											"end": 24823,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 24803,
											"end": 24823,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24803,
											"end": 24841,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "795"
										},
										{
											"begin": 24803,
											"end": 24841,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24803,
											"end": 24827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "515"
										},
										{
											"begin": 24803,
											"end": 24841,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24803,
											"end": 24841,
											"name": "tag",
											"source": 0,
											"value": "795"
										},
										{
											"begin": 24803,
											"end": 24841,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24780,
											"end": 24789,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 24780,
											"end": 24800,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24790,
											"end": 24799,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24780,
											"end": 24800,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24780,
											"end": 24800,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24780,
											"end": 24800,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24780,
											"end": 24800,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24780,
											"end": 24800,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24780,
											"end": 24800,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24780,
											"end": 24800,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24780,
											"end": 24800,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24780,
											"end": 24800,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24780,
											"end": 24800,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24780,
											"end": 24800,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24780,
											"end": 24800,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24780,
											"end": 24800,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 24780,
											"end": 24841,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24780,
											"end": 24841,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24780,
											"end": 24841,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 24780,
											"end": 24841,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24878,
											"end": 24981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "796"
										},
										{
											"begin": 24907,
											"end": 24980,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "797"
										},
										{
											"begin": 24964,
											"end": 24968,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24964,
											"end": 24979,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 24964,
											"end": 24979,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24964,
											"end": 24979,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24907,
											"end": 24959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "514"
										},
										{
											"begin": 24948,
											"end": 24952,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 24948,
											"end": 24958,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24948,
											"end": 24958,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24948,
											"end": 24958,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24907,
											"end": 24943,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "514"
										},
										{
											"begin": 24927,
											"end": 24931,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 24927,
											"end": 24942,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24927,
											"end": 24942,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24927,
											"end": 24942,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24907,
											"end": 24911,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 24907,
											"end": 24922,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24907,
											"end": 24922,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24907,
											"end": 24922,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24907,
											"end": 24926,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "515"
										},
										{
											"begin": 24907,
											"end": 24926,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24907,
											"end": 24943,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24907,
											"end": 24943,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24907,
											"end": 24943,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 24907,
											"end": 24943,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24907,
											"end": 24943,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24907,
											"end": 24980,
											"name": "tag",
											"source": 0,
											"value": "797"
										},
										{
											"begin": 24907,
											"end": 24980,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24896,
											"end": 24900,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 24878,
											"end": 24902,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24878,
											"end": 24902,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24878,
											"end": 24902,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24878,
											"end": 24902,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24878,
											"end": 24887,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 24878,
											"end": 24902,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24878,
											"end": 24902,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24878,
											"end": 24902,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24878,
											"end": 24902,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24878,
											"end": 24902,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 24878,
											"end": 24902,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24878,
											"end": 24902,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24878,
											"end": 24906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "515"
										},
										{
											"begin": 24878,
											"end": 24981,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24878,
											"end": 24981,
											"name": "tag",
											"source": 0,
											"value": "796"
										},
										{
											"begin": 24878,
											"end": 24981,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24869,
											"end": 24873,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 24851,
											"end": 24875,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24851,
											"end": 24875,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24851,
											"end": 24875,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24851,
											"end": 24875,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24851,
											"end": 24860,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 24851,
											"end": 24875,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24851,
											"end": 24875,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24851,
											"end": 24875,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24851,
											"end": 24875,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24851,
											"end": 24875,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24851,
											"end": 24875,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24851,
											"end": 24875,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24851,
											"end": 24875,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24851,
											"end": 24875,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 24851,
											"end": 24981,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 24851,
											"end": 24981,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24851,
											"end": 24981,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 24851,
											"end": 24981,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 25033,
											"end": 25045,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 25033,
											"end": 25045,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25033,
											"end": 25045,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25033,
											"end": 25045,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25005,
											"end": 25046,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25005,
											"end": 25046,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15123,
											"end": 15148,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15123,
											"end": 15148,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15123,
											"end": 15148,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 25005,
											"end": 25046,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 25005,
											"end": 25046,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25005,
											"end": 25046,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25005,
											"end": 25046,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 25005,
											"end": 25046,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25005,
											"end": 25046,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 25005,
											"end": 25046,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25005,
											"end": 25046,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25005,
											"end": 25046,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 25005,
											"end": 25046,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15096,
											"end": 15114,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25005,
											"end": 25046,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25005,
											"end": 25046,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25005,
											"end": 25046,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25005,
											"end": 25046,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25005,
											"end": 25046,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25005,
											"end": 25046,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25005,
											"end": 25046,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 23206,
											"end": 25053,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23206,
											"end": 25053,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23206,
											"end": 25053,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23206,
											"end": 25053,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23206,
											"end": 25053,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 202,
											"name": "tag",
											"source": 1,
											"value": "803"
										},
										{
											"begin": 14,
											"end": 202,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 93,
											"end": 106,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 93,
											"end": 106,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 135,
											"end": 177,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 135,
											"end": 177,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 125,
											"end": 178,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 125,
											"end": 178,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 115,
											"end": 117,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "805"
										},
										{
											"begin": 115,
											"end": 117,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 192,
											"end": 193,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 189,
											"end": 190,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 182,
											"end": 194,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 115,
											"end": 117,
											"name": "tag",
											"source": 1,
											"value": "805"
										},
										{
											"begin": 115,
											"end": 117,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 74,
											"end": 202,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 74,
											"end": 202,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 74,
											"end": 202,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 74,
											"end": 202,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 207,
											"end": 464,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 207,
											"end": 464,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 266,
											"end": 272,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 319,
											"end": 321,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 307,
											"end": 316,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 298,
											"end": 305,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 294,
											"end": 317,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 290,
											"end": 322,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 287,
											"end": 289,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 287,
											"end": 289,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "807"
										},
										{
											"begin": 287,
											"end": 289,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 340,
											"end": 346,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 332,
											"end": 338,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 325,
											"end": 347,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 287,
											"end": 289,
											"name": "tag",
											"source": 1,
											"value": "807"
										},
										{
											"begin": 287,
											"end": 289,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 384,
											"end": 393,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 371,
											"end": 394,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 403,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "649"
										},
										{
											"begin": 428,
											"end": 433,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 403,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "809"
										},
										{
											"begin": 403,
											"end": 434,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 469,
											"end": 730,
											"name": "tag",
											"source": 1,
											"value": "438"
										},
										{
											"begin": 469,
											"end": 730,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 539,
											"end": 545,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 592,
											"end": 594,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 580,
											"end": 589,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 571,
											"end": 578,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 567,
											"end": 590,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 563,
											"end": 595,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 560,
											"end": 562,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 560,
											"end": 562,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "811"
										},
										{
											"begin": 560,
											"end": 562,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 613,
											"end": 619,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 605,
											"end": 611,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 598,
											"end": 620,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 560,
											"end": 562,
											"name": "tag",
											"source": 1,
											"value": "811"
										},
										{
											"begin": 560,
											"end": 562,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 650,
											"end": 659,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 644,
											"end": 660,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 669,
											"end": 700,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "649"
										},
										{
											"begin": 694,
											"end": 699,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 669,
											"end": 700,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "809"
										},
										{
											"begin": 669,
											"end": 700,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1005,
											"end": 1403,
											"name": "tag",
											"source": 1,
											"value": "283"
										},
										{
											"begin": 1005,
											"end": 1403,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1073,
											"end": 1079,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1081,
											"end": 1087,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1134,
											"end": 1136,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1122,
											"end": 1131,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1113,
											"end": 1120,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1109,
											"end": 1132,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1105,
											"end": 1137,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1102,
											"end": 1104,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1102,
											"end": 1104,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "817"
										},
										{
											"begin": 1102,
											"end": 1104,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1155,
											"end": 1161,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1147,
											"end": 1153,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1140,
											"end": 1162,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1102,
											"end": 1104,
											"name": "tag",
											"source": 1,
											"value": "817"
										},
										{
											"begin": 1102,
											"end": 1104,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1199,
											"end": 1208,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1186,
											"end": 1209,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1218,
											"end": 1249,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "818"
										},
										{
											"begin": 1243,
											"end": 1248,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1218,
											"end": 1249,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "809"
										},
										{
											"begin": 1218,
											"end": 1249,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1218,
											"end": 1249,
											"name": "tag",
											"source": 1,
											"value": "818"
										},
										{
											"begin": 1218,
											"end": 1249,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1268,
											"end": 1273,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1325,
											"end": 1327,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1310,
											"end": 1328,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1310,
											"end": 1328,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1329,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1338,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "819"
										},
										{
											"begin": 1297,
											"end": 1329,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1338,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "809"
										},
										{
											"begin": 1338,
											"end": 1371,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1338,
											"end": 1371,
											"name": "tag",
											"source": 1,
											"value": "819"
										},
										{
											"begin": 1338,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1390,
											"end": 1397,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1397,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1397,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1397,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1092,
											"end": 1403,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1092,
											"end": 1403,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1092,
											"end": 1403,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1092,
											"end": 1403,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1092,
											"end": 1403,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1092,
											"end": 1403,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1408,
											"end": 1874,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 1408,
											"end": 1874,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1485,
											"end": 1491,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1493,
											"end": 1499,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1501,
											"end": 1507,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1554,
											"end": 1556,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1542,
											"end": 1551,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1533,
											"end": 1540,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1529,
											"end": 1552,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1525,
											"end": 1557,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1522,
											"end": 1524,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1522,
											"end": 1524,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "821"
										},
										{
											"begin": 1522,
											"end": 1524,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1575,
											"end": 1581,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1567,
											"end": 1573,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1560,
											"end": 1582,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1522,
											"end": 1524,
											"name": "tag",
											"source": 1,
											"value": "821"
										},
										{
											"begin": 1522,
											"end": 1524,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1619,
											"end": 1628,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1606,
											"end": 1629,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1669,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "822"
										},
										{
											"begin": 1663,
											"end": 1668,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1669,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "809"
										},
										{
											"begin": 1638,
											"end": 1669,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1638,
											"end": 1669,
											"name": "tag",
											"source": 1,
											"value": "822"
										},
										{
											"begin": 1638,
											"end": 1669,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1688,
											"end": 1693,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1745,
											"end": 1747,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1730,
											"end": 1748,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 1748,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1749,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1758,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "823"
										},
										{
											"begin": 1717,
											"end": 1749,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1758,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "809"
										},
										{
											"begin": 1758,
											"end": 1791,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1758,
											"end": 1791,
											"name": "tag",
											"source": 1,
											"value": "823"
										},
										{
											"begin": 1758,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1512,
											"end": 1874,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1512,
											"end": 1874,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 1810,
											"end": 1817,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1810,
											"end": 1817,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1864,
											"end": 1866,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1867,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1867,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1867,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1867,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1836,
											"end": 1868,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1836,
											"end": 1868,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1512,
											"end": 1874,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1879,
											"end": 2204,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 1879,
											"end": 2204,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1947,
											"end": 1953,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1955,
											"end": 1961,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2008,
											"end": 2010,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1996,
											"end": 2005,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1987,
											"end": 1994,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 2006,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1979,
											"end": 2011,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1976,
											"end": 1978,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1976,
											"end": 1978,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "825"
										},
										{
											"begin": 1976,
											"end": 1978,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2029,
											"end": 2035,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2021,
											"end": 2027,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2014,
											"end": 2036,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1976,
											"end": 1978,
											"name": "tag",
											"source": 1,
											"value": "825"
										},
										{
											"begin": 1976,
											"end": 1978,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2073,
											"end": 2082,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2060,
											"end": 2083,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2092,
											"end": 2123,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "826"
										},
										{
											"begin": 2117,
											"end": 2122,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2092,
											"end": 2123,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "809"
										},
										{
											"begin": 2092,
											"end": 2123,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2092,
											"end": 2123,
											"name": "tag",
											"source": 1,
											"value": "826"
										},
										{
											"begin": 2092,
											"end": 2123,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2142,
											"end": 2147,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 2194,
											"end": 2196,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2179,
											"end": 2197,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2179,
											"end": 2197,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2179,
											"end": 2197,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2179,
											"end": 2197,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2166,
											"end": 2198,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2166,
											"end": 2198,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1966,
											"end": 2204,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2209,
											"end": 2464,
											"name": "tag",
											"source": 1,
											"value": "372"
										},
										{
											"begin": 2209,
											"end": 2464,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2282,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2329,
											"end": 2331,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2317,
											"end": 2326,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2308,
											"end": 2315,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2304,
											"end": 2327,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2300,
											"end": 2332,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2297,
											"end": 2299,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2297,
											"end": 2299,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "828"
										},
										{
											"begin": 2297,
											"end": 2299,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2356,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2342,
											"end": 2348,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2335,
											"end": 2357,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2297,
											"end": 2299,
											"name": "tag",
											"source": 1,
											"value": "828"
										},
										{
											"begin": 2297,
											"end": 2299,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2387,
											"end": 2396,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2381,
											"end": 2397,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2406,
											"end": 2434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "649"
										},
										{
											"begin": 2428,
											"end": 2433,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2406,
											"end": 2434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "830"
										},
										{
											"begin": 2406,
											"end": 2434,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2469,
											"end": 2859,
											"name": "tag",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 2469,
											"end": 2859,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2533,
											"end": 2539,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2541,
											"end": 2547,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2594,
											"end": 2596,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2582,
											"end": 2591,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2573,
											"end": 2580,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2569,
											"end": 2592,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2597,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2562,
											"end": 2564,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2562,
											"end": 2564,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "832"
										},
										{
											"begin": 2562,
											"end": 2564,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2615,
											"end": 2621,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2607,
											"end": 2613,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2600,
											"end": 2622,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2562,
											"end": 2564,
											"name": "tag",
											"source": 1,
											"value": "832"
										},
										{
											"begin": 2562,
											"end": 2564,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2659,
											"end": 2668,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2646,
											"end": 2669,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2678,
											"end": 2706,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "833"
										},
										{
											"begin": 2700,
											"end": 2705,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2678,
											"end": 2706,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "830"
										},
										{
											"begin": 2678,
											"end": 2706,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2678,
											"end": 2706,
											"name": "tag",
											"source": 1,
											"value": "833"
										},
										{
											"begin": 2678,
											"end": 2706,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2725,
											"end": 2730,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2782,
											"end": 2784,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2767,
											"end": 2785,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2767,
											"end": 2785,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2754,
											"end": 2786,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2795,
											"end": 2827,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "819"
										},
										{
											"begin": 2754,
											"end": 2786,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2795,
											"end": 2827,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "835"
										},
										{
											"begin": 2795,
											"end": 2827,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2864,
											"end": 3293,
											"name": "tag",
											"source": 1,
											"value": "431"
										},
										{
											"begin": 2864,
											"end": 3293,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2951,
											"end": 2957,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2959,
											"end": 2965,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2967,
											"end": 2973,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3022,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3008,
											"end": 3017,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2999,
											"end": 3006,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2995,
											"end": 3018,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2991,
											"end": 3023,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2988,
											"end": 2990,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2988,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "837"
										},
										{
											"begin": 2988,
											"end": 2990,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3041,
											"end": 3047,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3033,
											"end": 3039,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3026,
											"end": 3048,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2988,
											"end": 2990,
											"name": "tag",
											"source": 1,
											"value": "837"
										},
										{
											"begin": 2988,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3069,
											"end": 3109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "838"
										},
										{
											"begin": 3099,
											"end": 3108,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3069,
											"end": 3109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "803"
										},
										{
											"begin": 3069,
											"end": 3109,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3069,
											"end": 3109,
											"name": "tag",
											"source": 1,
											"value": "838"
										},
										{
											"begin": 3069,
											"end": 3109,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3059,
											"end": 3109,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3059,
											"end": 3109,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3128,
											"end": 3177,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "839"
										},
										{
											"begin": 3173,
											"end": 3175,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3162,
											"end": 3171,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3158,
											"end": 3176,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3128,
											"end": 3177,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "803"
										},
										{
											"begin": 3128,
											"end": 3177,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3128,
											"end": 3177,
											"name": "tag",
											"source": 1,
											"value": "839"
										},
										{
											"begin": 3128,
											"end": 3177,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3118,
											"end": 3177,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3118,
											"end": 3177,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3220,
											"end": 3222,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3209,
											"end": 3218,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3205,
											"end": 3223,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3224,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3233,
											"end": 3263,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "840"
										},
										{
											"begin": 3257,
											"end": 3262,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3233,
											"end": 3263,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "835"
										},
										{
											"begin": 3233,
											"end": 3263,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3233,
											"end": 3263,
											"name": "tag",
											"source": 1,
											"value": "840"
										},
										{
											"begin": 3233,
											"end": 3263,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3282,
											"end": 3287,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3272,
											"end": 3287,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3272,
											"end": 3287,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3272,
											"end": 3287,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2978,
											"end": 3293,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2978,
											"end": 3293,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2978,
											"end": 3293,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2978,
											"end": 3293,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2978,
											"end": 3293,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2978,
											"end": 3293,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3298,
											"end": 3488,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 3298,
											"end": 3488,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3357,
											"end": 3363,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3410,
											"end": 3412,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3398,
											"end": 3407,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3389,
											"end": 3396,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3385,
											"end": 3408,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3381,
											"end": 3413,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3378,
											"end": 3380,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3378,
											"end": 3380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "842"
										},
										{
											"begin": 3378,
											"end": 3380,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3431,
											"end": 3437,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3423,
											"end": 3429,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3416,
											"end": 3438,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3378,
											"end": 3380,
											"name": "tag",
											"source": 1,
											"value": "842"
										},
										{
											"begin": 3378,
											"end": 3380,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3459,
											"end": 3482,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3459,
											"end": 3482,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3368,
											"end": 3488,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3368,
											"end": 3488,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3493,
											"end": 3687,
											"name": "tag",
											"source": 1,
											"value": "364"
										},
										{
											"begin": 3493,
											"end": 3687,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3563,
											"end": 3569,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3616,
											"end": 3618,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3604,
											"end": 3613,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3595,
											"end": 3602,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3614,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3587,
											"end": 3619,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3584,
											"end": 3586,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3584,
											"end": 3586,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "844"
										},
										{
											"begin": 3584,
											"end": 3586,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3637,
											"end": 3643,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3629,
											"end": 3635,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3622,
											"end": 3644,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3584,
											"end": 3586,
											"name": "tag",
											"source": 1,
											"value": "844"
										},
										{
											"begin": 3584,
											"end": 3586,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3665,
											"end": 3681,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3665,
											"end": 3681,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3574,
											"end": 3687,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3574,
											"end": 3687,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3692,
											"end": 4008,
											"name": "tag",
											"source": 1,
											"value": "747"
										},
										{
											"begin": 3692,
											"end": 4008,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3780,
											"end": 3786,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3788,
											"end": 3794,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3796,
											"end": 3802,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3849,
											"end": 3851,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3837,
											"end": 3846,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3828,
											"end": 3835,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3824,
											"end": 3847,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3817,
											"end": 3819,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3817,
											"end": 3819,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "846"
										},
										{
											"begin": 3817,
											"end": 3819,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3870,
											"end": 3876,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3862,
											"end": 3868,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3855,
											"end": 3877,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3817,
											"end": 3819,
											"name": "tag",
											"source": 1,
											"value": "846"
										},
										{
											"begin": 3817,
											"end": 3819,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3904,
											"end": 3913,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3898,
											"end": 3914,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3888,
											"end": 3914,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3888,
											"end": 3914,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3954,
											"end": 3956,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3943,
											"end": 3952,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3939,
											"end": 3957,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3933,
											"end": 3958,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3923,
											"end": 3958,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3923,
											"end": 3958,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4000,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3987,
											"end": 3996,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3983,
											"end": 4001,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3977,
											"end": 4002,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3967,
											"end": 4002,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3967,
											"end": 4002,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3807,
											"end": 4008,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3807,
											"end": 4008,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3807,
											"end": 4008,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3807,
											"end": 4008,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3807,
											"end": 4008,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3807,
											"end": 4008,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4013,
											"end": 4408,
											"name": "tag",
											"source": 1,
											"value": "293"
										},
										{
											"begin": 4013,
											"end": 4408,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4099,
											"end": 4105,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4107,
											"end": 4113,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4115,
											"end": 4121,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4123,
											"end": 4129,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4176,
											"end": 4179,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 4164,
											"end": 4173,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4155,
											"end": 4162,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4151,
											"end": 4174,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4147,
											"end": 4180,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 4144,
											"end": 4146,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4144,
											"end": 4146,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "848"
										},
										{
											"begin": 4144,
											"end": 4146,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4198,
											"end": 4204,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4190,
											"end": 4196,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4183,
											"end": 4205,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4144,
											"end": 4146,
											"name": "tag",
											"source": 1,
											"value": "848"
										},
										{
											"begin": 4144,
											"end": 4146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4226,
											"end": 4249,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4226,
											"end": 4249,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4226,
											"end": 4249,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 4296,
											"end": 4298,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4281,
											"end": 4299,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4281,
											"end": 4299,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4268,
											"end": 4300,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4268,
											"end": 4300,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4347,
											"end": 4349,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4332,
											"end": 4350,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4332,
											"end": 4350,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4319,
											"end": 4351,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4319,
											"end": 4351,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4398,
											"end": 4400,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 4383,
											"end": 4401,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4370,
											"end": 4402,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4370,
											"end": 4402,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4134,
											"end": 4408,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4134,
											"end": 4408,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6489,
											"end": 7092,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 6489,
											"end": 7092,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6601,
											"end": 6605,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6630,
											"end": 6632,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6659,
											"end": 6661,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6648,
											"end": 6657,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6641,
											"end": 6662,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6691,
											"end": 6697,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6685,
											"end": 6698,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6734,
											"end": 6740,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6729,
											"end": 6731,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6718,
											"end": 6727,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6714,
											"end": 6732,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6707,
											"end": 6741,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6759,
											"end": 6763,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6772,
											"end": 6912,
											"name": "tag",
											"source": 1,
											"value": "856"
										},
										{
											"begin": 6772,
											"end": 6912,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6786,
											"end": 6792,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6783,
											"end": 6784,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6780,
											"end": 6793,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6772,
											"end": 6912,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6772,
											"end": 6912,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "858"
										},
										{
											"begin": 6772,
											"end": 6912,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6881,
											"end": 6895,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6881,
											"end": 6895,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6881,
											"end": 6895,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6877,
											"end": 6900,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6877,
											"end": 6900,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6871,
											"end": 6901,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6847,
											"end": 6864,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6847,
											"end": 6864,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6847,
											"end": 6864,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6868,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6843,
											"end": 6869,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6836,
											"end": 6902,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6801,
											"end": 6811,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6801,
											"end": 6811,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6772,
											"end": 6912,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "856"
										},
										{
											"begin": 6772,
											"end": 6912,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6772,
											"end": 6912,
											"name": "tag",
											"source": 1,
											"value": "858"
										},
										{
											"begin": 6772,
											"end": 6912,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6930,
											"end": 6936,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6927,
											"end": 6928,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6924,
											"end": 6937,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 6921,
											"end": 6923,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6921,
											"end": 6923,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "859"
										},
										{
											"begin": 6921,
											"end": 6923,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7000,
											"end": 7004,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6995,
											"end": 6997,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6986,
											"end": 6992,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6975,
											"end": 6984,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 6971,
											"end": 6993,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6967,
											"end": 6998,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6960,
											"end": 7005,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6921,
											"end": 6923,
											"name": "tag",
											"source": 1,
											"value": "859"
										},
										{
											"begin": 6921,
											"end": 6923,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7076,
											"end": 7078,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 7055,
											"end": 7070,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7051,
											"end": 7080,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7036,
											"end": 7081,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7036,
											"end": 7081,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7036,
											"end": 7081,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7036,
											"end": 7081,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7085,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7032,
											"end": 7086,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7032,
											"end": 7086,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 6610,
											"end": 7092,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6610,
											"end": 7092,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11340,
											"end": 11809,
											"name": "tag",
											"source": 1,
											"value": "596"
										},
										{
											"begin": 11340,
											"end": 11809,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11542,
											"end": 11544,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11524,
											"end": 11545,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11524,
											"end": 11545,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11524,
											"end": 11545,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11581,
											"end": 11583,
											"name": "PUSH",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 11561,
											"end": 11579,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11561,
											"end": 11579,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11561,
											"end": 11579,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11554,
											"end": 11584,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11620,
											"end": 11654,
											"name": "PUSH",
											"source": 1,
											"value": "77616C6C65742062616C616E6365206166746572207472616E73666572206D75"
										},
										{
											"begin": 11615,
											"end": 11617,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11600,
											"end": 11618,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11600,
											"end": 11618,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11593,
											"end": 11655,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11691,
											"end": 11725,
											"name": "PUSH",
											"source": 1,
											"value": "7374206265206C657373207468616E206D61782077616C6C657420616D6F756E"
										},
										{
											"begin": 11686,
											"end": 11688,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 11671,
											"end": 11689,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11671,
											"end": 11689,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11664,
											"end": 11726,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11757,
											"end": 11760,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 11742,
											"end": 11761,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11742,
											"end": 11761,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11735,
											"end": 11767,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11799,
											"end": 11802,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 11784,
											"end": 11803,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11784,
											"end": 11803,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11514,
											"end": 11809,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 12216,
											"end": 12572,
											"name": "tag",
											"source": 1,
											"value": "325"
										},
										{
											"begin": 12216,
											"end": 12572,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12418,
											"end": 12420,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12400,
											"end": 12421,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12400,
											"end": 12421,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12400,
											"end": 12421,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12437,
											"end": 12455,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12437,
											"end": 12455,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12437,
											"end": 12455,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12430,
											"end": 12460,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12496,
											"end": 12530,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 12491,
											"end": 12493,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12476,
											"end": 12494,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12476,
											"end": 12494,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12469,
											"end": 12531,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12563,
											"end": 12565,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 12548,
											"end": 12566,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12548,
											"end": 12566,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12390,
											"end": 12572,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 15159,
											"end": 16142,
											"name": "tag",
											"source": 1,
											"value": "674"
										},
										{
											"begin": 15159,
											"end": 16142,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15421,
											"end": 15425,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15469,
											"end": 15472,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 15458,
											"end": 15467,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15454,
											"end": 15473,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15500,
											"end": 15506,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 15489,
											"end": 15498,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15482,
											"end": 15507,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15526,
											"end": 15528,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15564,
											"end": 15570,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 15559,
											"end": 15561,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15548,
											"end": 15557,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 15544,
											"end": 15562,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15537,
											"end": 15571,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15607,
											"end": 15610,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 15602,
											"end": 15604,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15591,
											"end": 15600,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 15587,
											"end": 15605,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15580,
											"end": 15611,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15631,
											"end": 15637,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15666,
											"end": 15672,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 15660,
											"end": 15673,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15697,
											"end": 15703,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15689,
											"end": 15695,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15682,
											"end": 15704,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15735,
											"end": 15738,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 15724,
											"end": 15733,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 15720,
											"end": 15739,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15713,
											"end": 15739,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15713,
											"end": 15739,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15774,
											"end": 15776,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15766,
											"end": 15772,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 15762,
											"end": 15777,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15748,
											"end": 15777,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 15748,
											"end": 15777,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15795,
											"end": 15799,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15808,
											"end": 16003,
											"name": "tag",
											"source": 1,
											"value": "882"
										},
										{
											"begin": 15808,
											"end": 16003,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15822,
											"end": 15828,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15819,
											"end": 15820,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15816,
											"end": 15829,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 15808,
											"end": 16003,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15808,
											"end": 16003,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "884"
										},
										{
											"begin": 15808,
											"end": 16003,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15887,
											"end": 15900,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15887,
											"end": 15900,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15883,
											"end": 15922,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15871,
											"end": 15923,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15871,
											"end": 15923,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15978,
											"end": 15993,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 15978,
											"end": 15993,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15978,
											"end": 15993,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15978,
											"end": 15993,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 15943,
											"end": 15955,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15943,
											"end": 15955,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15943,
											"end": 15955,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15943,
											"end": 15955,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15919,
											"end": 15920,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 15837,
											"end": 15846,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15808,
											"end": 16003,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "882"
										},
										{
											"begin": 15808,
											"end": 16003,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15808,
											"end": 16003,
											"name": "tag",
											"source": 1,
											"value": "884"
										},
										{
											"begin": 15808,
											"end": 16003,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16059,
											"end": 16091,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 16059,
											"end": 16091,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16059,
											"end": 16091,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 16059,
											"end": 16091,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16054,
											"end": 16056,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 16039,
											"end": 16057,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 16039,
											"end": 16057,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16032,
											"end": 16092,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16123,
											"end": 16126,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 16108,
											"end": 16127,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16101,
											"end": 16136,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16020,
											"end": 16023,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 15430,
											"end": 16142,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15430,
											"end": 16142,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 16732,
											"end": 16860,
											"name": "tag",
											"source": 1,
											"value": "607"
										},
										{
											"begin": 16732,
											"end": 16860,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16772,
											"end": 16775,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16803,
											"end": 16804,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16799,
											"end": 16805,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 16796,
											"end": 16797,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16793,
											"end": 16806,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 16790,
											"end": 16792,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 16790,
											"end": 16792,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "889"
										},
										{
											"begin": 16790,
											"end": 16792,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 16809,
											"end": 16827,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "889"
										},
										{
											"begin": 16809,
											"end": 16827,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "890"
										},
										{
											"begin": 16809,
											"end": 16827,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 16809,
											"end": 16827,
											"name": "tag",
											"source": 1,
											"value": "889"
										},
										{
											"begin": 16809,
											"end": 16827,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16845,
											"end": 16854,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16845,
											"end": 16854,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16780,
											"end": 16860,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 16865,
											"end": 16985,
											"name": "tag",
											"source": 1,
											"value": "656"
										},
										{
											"begin": 16865,
											"end": 16985,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16905,
											"end": 16906,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16931,
											"end": 16932,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16921,
											"end": 16923,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "893"
										},
										{
											"begin": 16921,
											"end": 16923,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 16936,
											"end": 16954,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "893"
										},
										{
											"begin": 16936,
											"end": 16954,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "894"
										},
										{
											"begin": 16936,
											"end": 16954,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 16936,
											"end": 16954,
											"name": "tag",
											"source": 1,
											"value": "893"
										},
										{
											"begin": 16936,
											"end": 16954,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16970,
											"end": 16979,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 16970,
											"end": 16979,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16911,
											"end": 16985,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 16990,
											"end": 17158,
											"name": "tag",
											"source": 1,
											"value": "654"
										},
										{
											"begin": 16990,
											"end": 17158,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17030,
											"end": 17037,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17096,
											"end": 17097,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17092,
											"end": 17093,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17088,
											"end": 17094,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 17084,
											"end": 17098,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 17081,
											"end": 17082,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17078,
											"end": 17099,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 17073,
											"end": 17074,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17066,
											"end": 17075,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 17059,
											"end": 17076,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 17055,
											"end": 17100,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17052,
											"end": 17054,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 17052,
											"end": 17054,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "897"
										},
										{
											"begin": 17052,
											"end": 17054,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17103,
											"end": 17121,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "897"
										},
										{
											"begin": 17103,
											"end": 17121,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "890"
										},
										{
											"begin": 17103,
											"end": 17121,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 17103,
											"end": 17121,
											"name": "tag",
											"source": 1,
											"value": "897"
										},
										{
											"begin": 17103,
											"end": 17121,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17143,
											"end": 17152,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 17143,
											"end": 17152,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17042,
											"end": 17158,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 17163,
											"end": 17425,
											"name": "tag",
											"source": 1,
											"value": "419"
										},
										{
											"begin": 17163,
											"end": 17425,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17202,
											"end": 17209,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17234,
											"end": 17244,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 17271,
											"end": 17273,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17268,
											"end": 17269,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17264,
											"end": 17274,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17301,
											"end": 17303,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17298,
											"end": 17299,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 17294,
											"end": 17304,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17357,
											"end": 17360,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17353,
											"end": 17355,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17349,
											"end": 17361,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 17344,
											"end": 17347,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17341,
											"end": 17362,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 17334,
											"end": 17337,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17327,
											"end": 17338,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 17320,
											"end": 17339,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 17316,
											"end": 17363,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17313,
											"end": 17315,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 17313,
											"end": 17315,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "900"
										},
										{
											"begin": 17313,
											"end": 17315,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17366,
											"end": 17384,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "900"
										},
										{
											"begin": 17366,
											"end": 17384,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "890"
										},
										{
											"begin": 17366,
											"end": 17384,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 17366,
											"end": 17384,
											"name": "tag",
											"source": 1,
											"value": "900"
										},
										{
											"begin": 17366,
											"end": 17384,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17406,
											"end": 17419,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 17406,
											"end": 17419,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 17214,
											"end": 17425,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17214,
											"end": 17425,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 17430,
											"end": 17555,
											"name": "tag",
											"source": 1,
											"value": "647"
										},
										{
											"begin": 17430,
											"end": 17555,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17470,
											"end": 17474,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17498,
											"end": 17499,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17495,
											"end": 17496,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17492,
											"end": 17500,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 17489,
											"end": 17491,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 17489,
											"end": 17491,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "903"
										},
										{
											"begin": 17489,
											"end": 17491,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17503,
											"end": 17521,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "903"
										},
										{
											"begin": 17503,
											"end": 17521,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "890"
										},
										{
											"begin": 17503,
											"end": 17521,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 17503,
											"end": 17521,
											"name": "tag",
											"source": 1,
											"value": "903"
										},
										{
											"begin": 17503,
											"end": 17521,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17540,
											"end": 17549,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 17540,
											"end": 17549,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17479,
											"end": 17555,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 17560,
											"end": 17672,
											"name": "tag",
											"source": 1,
											"value": "459"
										},
										{
											"begin": 17560,
											"end": 17672,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17592,
											"end": 17593,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17618,
											"end": 17619,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17608,
											"end": 17610,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "906"
										},
										{
											"begin": 17608,
											"end": 17610,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17623,
											"end": 17641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "906"
										},
										{
											"begin": 17623,
											"end": 17641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "894"
										},
										{
											"begin": 17623,
											"end": 17641,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 17623,
											"end": 17641,
											"name": "tag",
											"source": 1,
											"value": "906"
										},
										{
											"begin": 17623,
											"end": 17641,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17657,
											"end": 17666,
											"name": "MOD",
											"source": 1
										},
										{
											"begin": 17657,
											"end": 17666,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17598,
											"end": 17672,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 17677,
											"end": 17804,
											"name": "tag",
											"source": 1,
											"value": "890"
										},
										{
											"begin": 17677,
											"end": 17804,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17738,
											"end": 17748,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 17733,
											"end": 17736,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 17729,
											"end": 17749,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 17726,
											"end": 17727,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17719,
											"end": 17750,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17769,
											"end": 17773,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 17766,
											"end": 17767,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 17759,
											"end": 17774,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17793,
											"end": 17797,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 17790,
											"end": 17791,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17783,
											"end": 17798,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 17809,
											"end": 17936,
											"name": "tag",
											"source": 1,
											"value": "894"
										},
										{
											"begin": 17809,
											"end": 17936,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17870,
											"end": 17880,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 17865,
											"end": 17868,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 17861,
											"end": 17881,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 17858,
											"end": 17859,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17851,
											"end": 17882,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17901,
											"end": 17905,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 17898,
											"end": 17899,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 17891,
											"end": 17906,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17925,
											"end": 17929,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 17922,
											"end": 17923,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17915,
											"end": 17930,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 17941,
											"end": 18072,
											"name": "tag",
											"source": 1,
											"value": "809"
										},
										{
											"begin": 17941,
											"end": 18072,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18016,
											"end": 18047,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18016,
											"end": 18047,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 18006,
											"end": 18048,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18006,
											"end": 18048,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 17996,
											"end": 17998,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "403"
										},
										{
											"begin": 17996,
											"end": 17998,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 18062,
											"end": 18063,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18059,
											"end": 18060,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18052,
											"end": 18064,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 18077,
											"end": 18195,
											"name": "tag",
											"source": 1,
											"value": "830"
										},
										{
											"begin": 18077,
											"end": 18195,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18163,
											"end": 18168,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18156,
											"end": 18169,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 18149,
											"end": 18170,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 18142,
											"end": 18147,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18139,
											"end": 18171,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 18129,
											"end": 18131,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "403"
										},
										{
											"begin": 18129,
											"end": 18131,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 18185,
											"end": 18186,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18182,
											"end": 18183,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18175,
											"end": 18187,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 18200,
											"end": 18321,
											"name": "tag",
											"source": 1,
											"value": "835"
										},
										{
											"begin": 18200,
											"end": 18321,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18285,
											"end": 18295,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 18278,
											"end": 18283,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18274,
											"end": 18296,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 18267,
											"end": 18272,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18264,
											"end": 18297,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 18254,
											"end": 18256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "403"
										},
										{
											"begin": 18254,
											"end": 18256,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 18311,
											"end": 18312,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18308,
											"end": 18309,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18301,
											"end": 18313,
											"name": "REVERT",
											"source": 1
										}
									],
									".data": {
										"974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365"
									}
								}
							}
						},
						"methodIdentifiers": {
							"_buyEcosystemFee()": "2843631d",
							"_buyLiquidityFee()": "dc44b6a0",
							"_buyMarketingFee()": "c5d24189",
							"_buyTeamFee()": "c469b6dd",
							"_maxWalletAmount()": "6c0a24eb",
							"_sellEcosystemFee()": "248dd232",
							"_sellLiquidityFee()": "88790a68",
							"_sellMarketingFee()": "c8607952",
							"_sellTeamFee()": "cab03471",
							"addBot(address)": "ffecf516",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"canBlackList()": "301ad558",
							"canChangeTax()": "39a53c4e",
							"canPause()": "323be1c5",
							"configureStrongHands(bool,uint32)": "729cb3f2",
							"cooldown()": "787a08a6",
							"cooldownRemaining(address)": "9d82190f",
							"decimals()": "313ce567",
							"diamondFloor()": "c95457ff",
							"disableBlackListing()": "d55cb78a",
							"disablePauseAbility()": "6aabff3f",
							"disableTaxChange()": "99a7b9bc",
							"disableToken()": "3e0f966d",
							"enableToken()": "8e360253",
							"excludeFromFee(address)": "437823ec",
							"includeInFee(address)": "ea2f0b37",
							"isBot(address)": "3bbac579",
							"manualSendToken(address)": "29409395",
							"manualsend()": "6fc3eaec",
							"manualswap()": "c3c8cd80",
							"name()": "06fdde03",
							"numTokensToSwap()": "01a6c43b",
							"openTrading(uint256)": "d1633649",
							"owner()": "8da5cb5b",
							"pairPrice()": "9491f94d",
							"removeBot(address)": "5fecd926",
							"renounceOwnership()": "715018a6",
							"setBuyTaxes(uint256,uint256,uint256,uint256)": "e4bf1bed",
							"setMaxWalletAmount(uint256)": "27a14fc2",
							"setSellTaxes(uint256,uint256,uint256,uint256)": "f480fec2",
							"setTransferTransactionMultiplier(uint256)": "a850673d",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"tradingOpen()": "ffb54a99",
							"transfer(address,uint256)": "a9059cbb",
							"transferFeeIncreaseFactor()": "72b2aecc",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"uniswapV2Pair()": "49bd5a5e",
							"updateEcosystemAddress(address)": "db0045ec",
							"updateLpRecipient(address)": "cdb3858f",
							"updateMarketingAddress(address)": "2369bf83",
							"updateNumTokensToSwap(uint256)": "e315a6da",
							"updateTeamAddress(address)": "14eb76ac"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_buyMarketingFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_buyLiquidityFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_buyTeamFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_buyEcosystemFee\",\"type\":\"uint256\"}],\"name\":\"BuyFeesUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_maxTxAmount\",\"type\":\"uint256\"}],\"name\":\"MaxTxAmountUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_sellMarketingFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_sellLiquidityFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_sellTeamFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_sellEcosystemFee\",\"type\":\"uint256\"}],\"name\":\"SellFeesUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_buyEcosystemFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_buyLiquidityFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_buyMarketingFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_buyTeamFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_maxWalletAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_sellEcosystemFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_sellLiquidityFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_sellMarketingFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_sellTeamFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addBot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"canBlackList\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"canChangeTax\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"canPause\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"},{\"internalType\":\"uint32\",\"name\":\"duration\",\"type\":\"uint32\"}],\"name\":\"configureStrongHands\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cooldown\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"},{\"internalType\":\"uint32\",\"name\":\"duration\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"cooldownRemaining\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"days_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"hours_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minutes_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"seconds_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"diamondFloor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"},{\"internalType\":\"uint16\",\"name\":\"triggerPercentage\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"athPrice\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"sellStopped\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"blockedAth\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"disableBlackListing\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"disablePauseAbility\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"disableTaxChange\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"disableToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"excludeFromFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"includeInFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isBot\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"manualSendToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"manualsend\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"manualswap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"numTokensToSwap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"botBlocks\",\"type\":\"uint256\"}],\"name\":\"openTrading\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pairPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"removeBot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"marketingFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidityFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"teamFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ecosystemFee\",\"type\":\"uint256\"}],\"name\":\"setBuyTaxes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"maxWalletAmount\",\"type\":\"uint256\"}],\"name\":\"setMaxWalletAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"marketingFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidityFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"teamFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ecosystemFee\",\"type\":\"uint256\"}],\"name\":\"setSellTaxes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_multiplier\",\"type\":\"uint256\"}],\"name\":\"setTransferTransactionMultiplier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tradingOpen\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"transferFeeIncreaseFactor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapV2Pair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"ecosystemAddress\",\"type\":\"address\"}],\"name\":\"updateEcosystemAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"lpRecipient\",\"type\":\"address\"}],\"name\":\"updateLpRecipient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"marketingAddress\",\"type\":\"address\"}],\"name\":\"updateMarketingAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"numTokens\",\"type\":\"uint256\"}],\"name\":\"updateNumTokensToSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"teamAddress\",\"type\":\"address\"}],\"name\":\"updateTeamAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/reference.sol\":\"gainZilla\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/reference.sol\":{\"keccak256\":\"0x95615f79915ca5daa2e116c5604720125a710ae75d77e980be056b03df3154ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d33e5b82c7d961caab180b01316340ca188290ae04b9b75cffa08c74065f6b41\",\"dweb:/ipfs/QmUtqSQjf9mAWCrR4qsmPomLhBeXVAgpshYiWGgkXAbNua\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 228,
								"contract": "contracts/reference.sol:gainZilla",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 230,
								"contract": "contracts/reference.sol:gainZilla",
								"label": "_previousOwner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 749,
								"contract": "contracts/reference.sol:gainZilla",
								"label": "_balances",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 755,
								"contract": "contracts/reference.sol:gainZilla",
								"label": "_allowances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 759,
								"contract": "contracts/reference.sol:gainZilla",
								"label": "_isExcludedFromFee",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 768,
								"contract": "contracts/reference.sol:gainZilla",
								"label": "_firstBlock",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 770,
								"contract": "contracts/reference.sol:gainZilla",
								"label": "_botBlocks",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 777,
								"contract": "contracts/reference.sol:gainZilla",
								"label": "_maxWalletAmount",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 784,
								"contract": "contracts/reference.sol:gainZilla",
								"label": "numTokensToSwap",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 787,
								"contract": "contracts/reference.sol:gainZilla",
								"label": "_buyLiquidityFee",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 790,
								"contract": "contracts/reference.sol:gainZilla",
								"label": "_previousBuyLiquidityFee",
								"offset": 0,
								"slot": "10",
								"type": "t_uint256"
							},
							{
								"astId": 793,
								"contract": "contracts/reference.sol:gainZilla",
								"label": "_buyEcosystemFee",
								"offset": 0,
								"slot": "11",
								"type": "t_uint256"
							},
							{
								"astId": 796,
								"contract": "contracts/reference.sol:gainZilla",
								"label": "_previousBuyEcosystemFee",
								"offset": 0,
								"slot": "12",
								"type": "t_uint256"
							},
							{
								"astId": 799,
								"contract": "contracts/reference.sol:gainZilla",
								"label": "_buyMarketingFee",
								"offset": 0,
								"slot": "13",
								"type": "t_uint256"
							},
							{
								"astId": 802,
								"contract": "contracts/reference.sol:gainZilla",
								"label": "_previousBuyMarketingFee",
								"offset": 0,
								"slot": "14",
								"type": "t_uint256"
							},
							{
								"astId": 805,
								"contract": "contracts/reference.sol:gainZilla",
								"label": "_buyTeamFee",
								"offset": 0,
								"slot": "15",
								"type": "t_uint256"
							},
							{
								"astId": 808,
								"contract": "contracts/reference.sol:gainZilla",
								"label": "_previousBuyTeamFee",
								"offset": 0,
								"slot": "16",
								"type": "t_uint256"
							},
							{
								"astId": 811,
								"contract": "contracts/reference.sol:gainZilla",
								"label": "_sellLiquidityFee",
								"offset": 0,
								"slot": "17",
								"type": "t_uint256"
							},
							{
								"astId": 814,
								"contract": "contracts/reference.sol:gainZilla",
								"label": "_previousSellLiquidityFee",
								"offset": 0,
								"slot": "18",
								"type": "t_uint256"
							},
							{
								"astId": 817,
								"contract": "contracts/reference.sol:gainZilla",
								"label": "_sellEcosystemFee",
								"offset": 0,
								"slot": "19",
								"type": "t_uint256"
							},
							{
								"astId": 820,
								"contract": "contracts/reference.sol:gainZilla",
								"label": "_previousSellEcosystemFee",
								"offset": 0,
								"slot": "20",
								"type": "t_uint256"
							},
							{
								"astId": 823,
								"contract": "contracts/reference.sol:gainZilla",
								"label": "_sellMarketingFee",
								"offset": 0,
								"slot": "21",
								"type": "t_uint256"
							},
							{
								"astId": 826,
								"contract": "contracts/reference.sol:gainZilla",
								"label": "_previousSellMarketingFee",
								"offset": 0,
								"slot": "22",
								"type": "t_uint256"
							},
							{
								"astId": 829,
								"contract": "contracts/reference.sol:gainZilla",
								"label": "_sellTeamFee",
								"offset": 0,
								"slot": "23",
								"type": "t_uint256"
							},
							{
								"astId": 832,
								"contract": "contracts/reference.sol:gainZilla",
								"label": "_previousSellTeamFee",
								"offset": 0,
								"slot": "24",
								"type": "t_uint256"
							},
							{
								"astId": 835,
								"contract": "contracts/reference.sol:gainZilla",
								"label": "transferFeeIncreaseFactor",
								"offset": 0,
								"slot": "25",
								"type": "t_uint256"
							},
							{
								"astId": 858,
								"contract": "contracts/reference.sol:gainZilla",
								"label": "cooldown",
								"offset": 0,
								"slot": "26",
								"type": "t_struct(StrongHandsConfig)855_storage"
							},
							{
								"astId": 872,
								"contract": "contracts/reference.sol:gainZilla",
								"label": "diamondFloor",
								"offset": 0,
								"slot": "28",
								"type": "t_struct(DiamondFloor)869_storage"
							},
							{
								"astId": 876,
								"contract": "contracts/reference.sol:gainZilla",
								"label": "bots",
								"offset": 0,
								"slot": "32",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 882,
								"contract": "contracts/reference.sol:gainZilla",
								"label": "_marketingAddress",
								"offset": 0,
								"slot": "33",
								"type": "t_address_payable"
							},
							{
								"astId": 888,
								"contract": "contracts/reference.sol:gainZilla",
								"label": "_teamAddress",
								"offset": 0,
								"slot": "34",
								"type": "t_address_payable"
							},
							{
								"astId": 894,
								"contract": "contracts/reference.sol:gainZilla",
								"label": "_ecosystemAddress",
								"offset": 0,
								"slot": "35",
								"type": "t_address_payable"
							},
							{
								"astId": 900,
								"contract": "contracts/reference.sol:gainZilla",
								"label": "_lpRecipient",
								"offset": 0,
								"slot": "36",
								"type": "t_address_payable"
							},
							{
								"astId": 903,
								"contract": "contracts/reference.sol:gainZilla",
								"label": "uniswapV2Router",
								"offset": 0,
								"slot": "37",
								"type": "t_contract(IUniswapV2Router02)707"
							},
							{
								"astId": 905,
								"contract": "contracts/reference.sol:gainZilla",
								"label": "uniswapV2Pair",
								"offset": 0,
								"slot": "38",
								"type": "t_address"
							},
							{
								"astId": 907,
								"contract": "contracts/reference.sol:gainZilla",
								"label": "_maxTxAmount",
								"offset": 0,
								"slot": "39",
								"type": "t_uint256"
							},
							{
								"astId": 910,
								"contract": "contracts/reference.sol:gainZilla",
								"label": "tradingOpen",
								"offset": 0,
								"slot": "40",
								"type": "t_bool"
							},
							{
								"astId": 913,
								"contract": "contracts/reference.sol:gainZilla",
								"label": "inSwap",
								"offset": 1,
								"slot": "40",
								"type": "t_bool"
							},
							{
								"astId": 916,
								"contract": "contracts/reference.sol:gainZilla",
								"label": "canPause",
								"offset": 2,
								"slot": "40",
								"type": "t_bool"
							},
							{
								"astId": 919,
								"contract": "contracts/reference.sol:gainZilla",
								"label": "canBlackList",
								"offset": 3,
								"slot": "40",
								"type": "t_bool"
							},
							{
								"astId": 922,
								"contract": "contracts/reference.sol:gainZilla",
								"label": "canChangeTax",
								"offset": 4,
								"slot": "40",
								"type": "t_bool"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IUniswapV2Router02)707": {
								"encoding": "inplace",
								"label": "contract IUniswapV2Router02",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(DiamondFloor)869_storage": {
								"encoding": "inplace",
								"label": "struct gainZilla.DiamondFloor",
								"members": [
									{
										"astId": 860,
										"contract": "contracts/reference.sol:gainZilla",
										"label": "enabled",
										"offset": 0,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 862,
										"contract": "contracts/reference.sol:gainZilla",
										"label": "triggerPercentage",
										"offset": 1,
										"slot": "0",
										"type": "t_uint16"
									},
									{
										"astId": 864,
										"contract": "contracts/reference.sol:gainZilla",
										"label": "athPrice",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 866,
										"contract": "contracts/reference.sol:gainZilla",
										"label": "sellStopped",
										"offset": 0,
										"slot": "2",
										"type": "t_bool"
									},
									{
										"astId": 868,
										"contract": "contracts/reference.sol:gainZilla",
										"label": "blockedAth",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "128"
							},
							"t_struct(StrongHandsConfig)855_storage": {
								"encoding": "inplace",
								"label": "struct gainZilla.StrongHandsConfig",
								"members": [
									{
										"astId": 848,
										"contract": "contracts/reference.sol:gainZilla",
										"label": "enabled",
										"offset": 0,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 850,
										"contract": "contracts/reference.sol:gainZilla",
										"label": "duration",
										"offset": 1,
										"slot": "0",
										"type": "t_uint32"
									},
									{
										"astId": 854,
										"contract": "contracts/reference.sol:gainZilla",
										"label": "walletList",
										"offset": 0,
										"slot": "1",
										"type": "t_mapping(t_address,t_uint256)"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint16": {
								"encoding": "inplace",
								"label": "uint16",
								"numberOfBytes": "2"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint32": {
								"encoding": "inplace",
								"label": "uint32",
								"numberOfBytes": "4"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/reference.sol": {
				"ast": {
					"absolutePath": "contracts/reference.sol",
					"exportedSymbols": {
						"Context": [
							11
						],
						"IERC20": [
							78
						],
						"IERC20Extented": [
							725
						],
						"IUniswapV2Factory": [
							592
						],
						"IUniswapV2Pair": [
							582
						],
						"IUniswapV2Router02": [
							707
						],
						"Ownable": [
							342
						],
						"SafeMath": [
							224
						],
						"gainZilla": [
							2979
						]
					},
					"id": 2980,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "682:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 11,
							"linearizedBaseContracts": [
								11
							],
							"name": "Context",
							"nameLocation": "725:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 9,
										"nodeType": "Block",
										"src": "801:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 6,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "818:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 7,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "818:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 5,
												"id": 8,
												"nodeType": "Return",
												"src": "811:17:0"
											}
										]
									},
									"id": 10,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "748:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "758:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 10,
												"src": "792:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "792:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "791:9:0"
									},
									"scope": 11,
									"src": "739:96:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2980,
							"src": "707:130:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 78,
							"linearizedBaseContracts": [
								78
							],
							"name": "IERC20",
							"nameLocation": "849:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "18160ddd",
									"id": 16,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "871:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "882:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "908:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "908:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "907:9:0"
									},
									"scope": 78,
									"src": "862:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "70a08231",
									"id": 23,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "931:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "949:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "941:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 17,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "941:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "940:17:0"
									},
									"returnParameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "981:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 20,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "981:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "980:9:0"
									},
									"scope": 78,
									"src": "922:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a9059cbb",
									"id": 32,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1004:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1021:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "1013:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 24,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1013:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1040:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "1032:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 26,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1032:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1012:35:0"
									},
									"returnParameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "1066:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 29,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1066:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1065:6:0"
									},
									"scope": 78,
									"src": "995:77:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "dd62ed3e",
									"id": 41,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1086:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1104:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "1096:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 33,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1096:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1119:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "1111:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 35,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1111:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1095:32:0"
									},
									"returnParameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "1151:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1151:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1150:9:0"
									},
									"scope": 78,
									"src": "1077:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "095ea7b3",
									"id": 50,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1174:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1190:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1182:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 42,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1182:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1207:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1199:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 44,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1199:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1181:33:0"
									},
									"returnParameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 48,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1233:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 47,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1233:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1232:6:0"
									},
									"scope": 78,
									"src": "1165:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "23b872dd",
									"id": 61,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "1253:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1274:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "1266:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 51,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1266:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 54,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1290:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "1282:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 53,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1282:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1309:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "1301:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 55,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1301:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:51:0"
									},
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "1335:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 58,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1335:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1334:6:0"
									},
									"scope": 78,
									"src": "1244:97:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"id": 69,
									"name": "Transfer",
									"nameLocation": "1352:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1377:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "1361:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1361:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 65,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1399:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "1383:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 64,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1383:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1411:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "1403:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 66,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1403:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1360:57:0"
									},
									"src": "1346:72:0"
								},
								{
									"anonymous": false,
									"id": 77,
									"name": "Approval",
									"nameLocation": "1429:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1454:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 77,
												"src": "1438:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1438:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 73,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1477:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 77,
												"src": "1461:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 72,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1461:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1494:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 77,
												"src": "1486:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 74,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1486:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1437:63:0"
									},
									"src": "1423:78:0"
								}
							],
							"scope": 2980,
							"src": "839:664:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 224,
							"linearizedBaseContracts": [
								224
							],
							"name": "SafeMath",
							"nameLocation": "1513:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 102,
										"nodeType": "Block",
										"src": "1595:108:0",
										"statements": [
											{
												"assignments": [
													88
												],
												"declarations": [
													{
														"constant": false,
														"id": 88,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "1613:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 102,
														"src": "1605:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 87,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1605:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 92,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 91,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 89,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 80,
														"src": "1617:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 90,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 82,
														"src": "1621:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1617:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1605:17:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 96,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 94,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 88,
																"src": "1640:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 95,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 80,
																"src": "1645:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1640:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 97,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1648:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 93,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1632:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 98,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1632:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 99,
												"nodeType": "ExpressionStatement",
												"src": "1632:46:0"
											},
											{
												"expression": {
													"id": 100,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 88,
													"src": "1695:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 86,
												"id": 101,
												"nodeType": "Return",
												"src": "1688:8:0"
											}
										]
									},
									"id": 103,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "1537:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 80,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1549:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "1541:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 79,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1541:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1560:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "1552:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 81,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1552:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1540:22:0"
									},
									"returnParameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "1586:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 84,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1586:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1585:9:0"
									},
									"scope": 224,
									"src": "1528:175:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 118,
										"nodeType": "Block",
										"src": "1776:67:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 113,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 105,
															"src": "1797:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 114,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 107,
															"src": "1800:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 115,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1803:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 112,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															119,
															146
														],
														"referencedDeclaration": 146,
														"src": "1793:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1793:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 111,
												"id": 117,
												"nodeType": "Return",
												"src": "1786:50:0"
											}
										]
									},
									"id": 119,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "1718:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1730:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "1722:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 104,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1722:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1741:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "1733:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1733:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1721:22:0"
									},
									"returnParameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "1767:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 109,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1767:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1766:9:0"
									},
									"scope": 224,
									"src": "1709:134:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "1944:91:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 133,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 131,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 123,
																"src": "1962:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 132,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 121,
																"src": "1967:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1962:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 134,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 125,
															"src": "1970:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 130,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1954:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1954:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 136,
												"nodeType": "ExpressionStatement",
												"src": "1954:29:0"
											},
											{
												"assignments": [
													138
												],
												"declarations": [
													{
														"constant": false,
														"id": 138,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "2001:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "1993:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 137,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1993:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 142,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 139,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 121,
														"src": "2005:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 140,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "2009:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2005:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1993:17:0"
											},
											{
												"expression": {
													"id": 143,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 138,
													"src": "2027:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 129,
												"id": 144,
												"nodeType": "Return",
												"src": "2020:8:0"
											}
										]
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "1858:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1870:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "1862:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 120,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1862:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 123,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1881:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "1873:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 122,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1873:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 125,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "1898:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "1884:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 124,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1884:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1861:50:0"
									},
									"returnParameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "1935:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 127,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1935:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1934:9:0"
									},
									"scope": 224,
									"src": "1849:186:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 179,
										"nodeType": "Block",
										"src": "2108:172:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 155,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 148,
														"src": "2122:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 156,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2127:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2122:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 161,
												"nodeType": "IfStatement",
												"src": "2118:45:0",
												"trueBody": {
													"id": 160,
													"nodeType": "Block",
													"src": "2130:33:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 158,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2151:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 154,
															"id": 159,
															"nodeType": "Return",
															"src": "2144:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													163
												],
												"declarations": [
													{
														"constant": false,
														"id": 163,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "2180:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 179,
														"src": "2172:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 162,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2172:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 167,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 164,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 148,
														"src": "2184:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 165,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 150,
														"src": "2188:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2184:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2172:17:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 173,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 171,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 169,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 163,
																	"src": "2207:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 170,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 148,
																	"src": "2211:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2207:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 172,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 150,
																"src": "2216:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2207:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 174,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2219:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 168,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2199:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2199:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 176,
												"nodeType": "ExpressionStatement",
												"src": "2199:56:0"
											},
											{
												"expression": {
													"id": 177,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 163,
													"src": "2272:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 154,
												"id": 178,
												"nodeType": "Return",
												"src": "2265:8:0"
											}
										]
									},
									"id": 180,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "2050:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2062:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2054:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 147,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2054:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2073:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2065:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 149,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2065:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2053:22:0"
									},
									"returnParameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2099:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 152,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2099:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2098:9:0"
									},
									"scope": 224,
									"src": "2041:239:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 195,
										"nodeType": "Block",
										"src": "2353:63:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 190,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 182,
															"src": "2374:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 191,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 184,
															"src": "2377:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 192,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2380:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 189,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															196,
															223
														],
														"referencedDeclaration": 223,
														"src": "2370:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2370:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 188,
												"id": 194,
												"nodeType": "Return",
												"src": "2363:46:0"
											}
										]
									},
									"id": 196,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "2295:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2307:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "2299:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 181,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2299:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2318:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "2310:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2310:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2298:22:0"
									},
									"returnParameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "2344:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2344:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2343:9:0"
									},
									"scope": 224,
									"src": "2286:130:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 222,
										"nodeType": "Block",
										"src": "2517:90:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 210,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 208,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 200,
																"src": "2535:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 209,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2539:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2535:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 211,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 202,
															"src": "2542:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 207,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2527:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2527:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 213,
												"nodeType": "ExpressionStatement",
												"src": "2527:28:0"
											},
											{
												"assignments": [
													215
												],
												"declarations": [
													{
														"constant": false,
														"id": 215,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "2573:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 222,
														"src": "2565:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 214,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2565:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 219,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 216,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 198,
														"src": "2577:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 217,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 200,
														"src": "2581:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2577:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2565:17:0"
											},
											{
												"expression": {
													"id": 220,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 215,
													"src": "2599:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 206,
												"id": 221,
												"nodeType": "Return",
												"src": "2592:8:0"
											}
										]
									},
									"id": 223,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "2431:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2443:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "2435:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2435:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2454:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "2446:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2446:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "2471:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "2457:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 201,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2457:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2434:50:0"
									},
									"returnParameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "2508:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2508:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2507:9:0"
									},
									"scope": 224,
									"src": "2422:185:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2980,
							"src": "1505:1104:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 225,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 11,
										"src": "2631:7:0"
									},
									"id": 226,
									"nodeType": "InheritanceSpecifier",
									"src": "2631:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 342,
							"linearizedBaseContracts": [
								342,
								11
							],
							"name": "Ownable",
							"nameLocation": "2620:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 228,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "2661:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 342,
									"src": "2645:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 227,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2645:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 230,
									"mutability": "mutable",
									"name": "_previousOwner",
									"nameLocation": "2689:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 342,
									"src": "2673:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 229,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2673:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 236,
									"name": "OwnershipTransferred",
									"nameLocation": "2715:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 232,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "2752:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "2736:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 231,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2736:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 234,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2783:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "2767:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2767:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2735:57:0"
									},
									"src": "2709:84:0"
								},
								{
									"body": {
										"id": 256,
										"nodeType": "Block",
										"src": "2813:135:0",
										"statements": [
											{
												"assignments": [
													240
												],
												"declarations": [
													{
														"constant": false,
														"id": 240,
														"mutability": "mutable",
														"name": "msgSender",
														"nameLocation": "2831:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 256,
														"src": "2823:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 239,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2823:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 243,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 241,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "2843:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2843:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2823:32:0"
											},
											{
												"expression": {
													"id": 246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 244,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 228,
														"src": "2865:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 245,
														"name": "msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 240,
														"src": "2874:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2865:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 247,
												"nodeType": "ExpressionStatement",
												"src": "2865:18:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 251,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2927:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 250,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2919:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 249,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2919:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 252,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2919:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 253,
															"name": "msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "2931:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 248,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 236,
														"src": "2898:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2898:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 255,
												"nodeType": "EmitStatement",
												"src": "2893:48:0"
											}
										]
									},
									"id": 257,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2810:2:0"
									},
									"returnParameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2813:0:0"
									},
									"scope": 342,
									"src": "2799:149:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 264,
										"nodeType": "Block",
										"src": "3001:30:0",
										"statements": [
											{
												"expression": {
													"id": 262,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 228,
													"src": "3018:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 261,
												"id": 263,
												"nodeType": "Return",
												"src": "3011:13:0"
											}
										]
									},
									"functionSelector": "8da5cb5b",
									"id": 265,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "2963:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2968:2:0"
									},
									"returnParameters": {
										"id": 261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "2992:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 259,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2992:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2991:9:0"
									},
									"scope": 342,
									"src": "2954:77:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 276,
										"nodeType": "Block",
										"src": "3058:95:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 271,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 268,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 228,
																"src": "3076:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 269,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 10,
																	"src": "3086:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 270,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3086:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3076:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 272,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3100:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 267,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3068:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3068:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 274,
												"nodeType": "ExpressionStatement",
												"src": "3068:67:0"
											},
											{
												"id": 275,
												"nodeType": "PlaceholderStatement",
												"src": "3145:1:0"
											}
										]
									},
									"id": 277,
									"name": "onlyOwner",
									"nameLocation": "3046:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3055:2:0"
									},
									"src": "3037:116:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 299,
										"nodeType": "Block",
										"src": "3372:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 291,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 286,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 280,
																"src": "3390:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 289,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3410:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 288,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3402:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 287,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3402:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 290,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3402:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3390:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 292,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3414:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 285,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3382:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3382:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 294,
												"nodeType": "ExpressionStatement",
												"src": "3382:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 296,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 280,
															"src": "3484:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 295,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 320,
														"src": "3465:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3465:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "3465:28:0"
											}
										]
									},
									"documentation": {
										"id": 278,
										"nodeType": "StructuredDocumentation",
										"src": "3159:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 300,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 283,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 282,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 277,
												"src": "3362:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3362:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "3311:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3337:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 300,
												"src": "3329:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 279,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3329:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3328:18:0"
									},
									"returnParameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3372:0:0"
									},
									"scope": 342,
									"src": "3302:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 319,
										"nodeType": "Block",
										"src": "3717:124:0",
										"statements": [
											{
												"assignments": [
													307
												],
												"declarations": [
													{
														"constant": false,
														"id": 307,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "3735:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 319,
														"src": "3727:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 306,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3727:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 309,
												"initialValue": {
													"id": 308,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 228,
													"src": "3746:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3727:25:0"
											},
											{
												"expression": {
													"id": 312,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 310,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 228,
														"src": "3762:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 311,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 303,
														"src": "3771:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3762:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 313,
												"nodeType": "ExpressionStatement",
												"src": "3762:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 315,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 307,
															"src": "3815:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 316,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 303,
															"src": "3825:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 314,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 236,
														"src": "3794:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3794:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 318,
												"nodeType": "EmitStatement",
												"src": "3789:45:0"
											}
										]
									},
									"documentation": {
										"id": 301,
										"nodeType": "StructuredDocumentation",
										"src": "3506:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 320,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "3663:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3690:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 320,
												"src": "3682:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 302,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3682:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3681:18:0"
									},
									"returnParameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3717:0:0"
									},
									"scope": 342,
									"src": "3654:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 340,
										"nodeType": "Block",
										"src": "3907:91:0",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"id": 326,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 228,
															"src": "3943:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 329,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3959:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 328,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3951:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 327,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3951:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 330,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3951:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 325,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 236,
														"src": "3922:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3922:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 332,
												"nodeType": "EmitStatement",
												"src": "3917:45:0"
											},
											{
												"expression": {
													"id": 338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 333,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 228,
														"src": "3972:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 336,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3989:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 335,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3981:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 334,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3981:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 337,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3981:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3972:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 339,
												"nodeType": "ExpressionStatement",
												"src": "3972:19:0"
											}
										]
									},
									"functionSelector": "715018a6",
									"id": 341,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [],
											"id": 323,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 322,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 277,
												"src": "3895:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3895:11:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "3860:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3877:2:0"
									},
									"returnParameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3907:0:0"
									},
									"scope": 342,
									"src": "3851:147:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 2980,
							"src": "2611:1389:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 582,
							"linearizedBaseContracts": [
								582
							],
							"name": "IUniswapV2Pair",
							"nameLocation": "4012:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"id": 350,
									"name": "Approval",
									"nameLocation": "4039:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4064:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "4048:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 343,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4048:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 346,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4087:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "4071:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 345,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4071:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 348,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4101:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "4096:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 347,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4096:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4047:60:0"
									},
									"src": "4033:75:0"
								},
								{
									"anonymous": false,
									"id": 358,
									"name": "Transfer",
									"nameLocation": "4119:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 352,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4144:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "4128:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 351,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4128:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 354,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4166:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "4150:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 353,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4150:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 356,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4175:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "4170:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 355,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4170:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4127:54:0"
									},
									"src": "4113:69:0"
								},
								{
									"functionSelector": "06fdde03",
									"id": 363,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "4197:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4201:2:0"
									},
									"returnParameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "4227:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 360,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4227:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4226:15:0"
									},
									"scope": 582,
									"src": "4188:54:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "95d89b41",
									"id": 368,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "4256:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4262:2:0"
									},
									"returnParameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 368,
												"src": "4288:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 365,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4288:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4287:15:0"
									},
									"scope": 582,
									"src": "4247:56:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "313ce567",
									"id": 373,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "4317:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4325:2:0"
									},
									"returnParameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 373,
												"src": "4351:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 370,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4351:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4350:7:0"
									},
									"scope": 582,
									"src": "4308:50:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "18160ddd",
									"id": 378,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "4372:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4383:2:0"
									},
									"returnParameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 376,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "4409:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 375,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4409:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4408:6:0"
									},
									"scope": 582,
									"src": "4363:52:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "70a08231",
									"id": 385,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "4429:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 380,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4447:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "4439:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 379,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4439:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4438:15:0"
									},
									"returnParameters": {
										"id": 384,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 383,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "4477:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 382,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4477:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4476:6:0"
									},
									"scope": 582,
									"src": "4420:63:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "dd62ed3e",
									"id": 394,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "4497:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4515:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "4507:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 386,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4507:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4530:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "4522:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 388,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4522:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4506:32:0"
									},
									"returnParameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "4562:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 391,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4562:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4561:6:0"
									},
									"scope": 582,
									"src": "4488:80:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "095ea7b3",
									"id": 403,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4583:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 396,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4599:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "4591:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 395,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4591:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4613:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "4608:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 397,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4608:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4590:29:0"
									},
									"returnParameters": {
										"id": 402,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 401,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "4638:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 400,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4638:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4637:6:0"
									},
									"scope": 582,
									"src": "4574:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a9059cbb",
									"id": 412,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "4658:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4675:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "4667:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 404,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4667:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4684:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "4679:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 406,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4679:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4666:24:0"
									},
									"returnParameters": {
										"id": 411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 410,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "4709:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 409,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4709:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4708:6:0"
									},
									"scope": 582,
									"src": "4649:66:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "23b872dd",
									"id": 423,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4729:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4750:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "4742:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4742:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4764:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "4756:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 415,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4756:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4773:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "4768:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 417,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4768:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4741:38:0"
									},
									"returnParameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "4798:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 420,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4798:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4797:6:0"
									},
									"scope": 582,
									"src": "4720:84:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "3644e515",
									"id": 428,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "4819:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4835:2:0"
									},
									"returnParameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "4861:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 425,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4861:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4860:9:0"
									},
									"scope": 582,
									"src": "4810:60:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "30adf81f",
									"id": 433,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "PERMIT_TYPEHASH",
									"nameLocation": "4884:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4899:2:0"
									},
									"returnParameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "4925:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 430,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4925:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4924:9:0"
									},
									"scope": 582,
									"src": "4875:59:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7ecebe00",
									"id": 440,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "4948:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4963:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "4955:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 434,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4955:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4954:15:0"
									},
									"returnParameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 438,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "4993:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 437,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4993:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4992:6:0"
									},
									"scope": 582,
									"src": "4939:60:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d505accf",
									"id": 457,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "5014:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 442,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5029:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "5021:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 441,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5021:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 444,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5044:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "5036:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 443,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5036:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5058:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "5053:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 445,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5053:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "5070:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "5065:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 447,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5065:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "5086:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "5080:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 449,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5080:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "5097:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "5089:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 451,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5089:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 454,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "5108:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "5100:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 453,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5100:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5020:90:0"
									},
									"returnParameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5119:0:0"
									},
									"scope": 582,
									"src": "5005:115:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"id": 465,
									"name": "Mint",
									"nameLocation": "5132:4:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 459,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5153:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "5137:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 458,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5137:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 461,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "5166:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "5161:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 460,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5161:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "5180:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "5175:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 462,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5175:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5136:52:0"
									},
									"src": "5126:63:0"
								},
								{
									"anonymous": false,
									"id": 475,
									"name": "Burn",
									"nameLocation": "5200:4:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 467,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5221:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "5205:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 466,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5205:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 469,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "5234:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "5229:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 468,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5229:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 471,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "5248:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "5243:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 470,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5243:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 473,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5273:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "5257:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 472,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5257:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5204:72:0"
									},
									"src": "5194:83:0"
								},
								{
									"anonymous": false,
									"id": 489,
									"name": "Swap",
									"nameLocation": "5288:4:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 477,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5318:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "5302:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 476,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5302:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 479,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0In",
												"nameLocation": "5339:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "5334:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 478,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5334:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 481,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1In",
												"nameLocation": "5363:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "5358:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 480,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5358:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 483,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0Out",
												"nameLocation": "5387:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "5382:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 482,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5382:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 485,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1Out",
												"nameLocation": "5412:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "5407:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 484,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5407:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5448:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "5432:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5432:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5292:164:0"
									},
									"src": "5282:175:0"
								},
								{
									"anonymous": false,
									"id": 495,
									"name": "Sync",
									"nameLocation": "5468:4:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 491,
												"indexed": false,
												"mutability": "mutable",
												"name": "reserve0",
												"nameLocation": "5481:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 495,
												"src": "5473:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 490,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "5473:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 493,
												"indexed": false,
												"mutability": "mutable",
												"name": "reserve1",
												"nameLocation": "5499:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 495,
												"src": "5491:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 492,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "5491:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5472:36:0"
									},
									"src": "5462:47:0"
								},
								{
									"functionSelector": "ba9a7a56",
									"id": 500,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "MINIMUM_LIQUIDITY",
									"nameLocation": "5524:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5541:2:0"
									},
									"returnParameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 498,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "5567:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 497,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5567:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5566:6:0"
									},
									"scope": 582,
									"src": "5515:58:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c45a0155",
									"id": 505,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nameLocation": "5587:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5594:2:0"
									},
									"returnParameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "5620:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 502,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5620:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5619:9:0"
									},
									"scope": 582,
									"src": "5578:51:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0dfe1681",
									"id": 510,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token0",
									"nameLocation": "5643:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5649:2:0"
									},
									"returnParameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 510,
												"src": "5675:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 507,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5675:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5674:9:0"
									},
									"scope": 582,
									"src": "5634:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d21220a7",
									"id": 515,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token1",
									"nameLocation": "5698:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5704:2:0"
									},
									"returnParameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 513,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "5730:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 512,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5730:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5729:9:0"
									},
									"scope": 582,
									"src": "5689:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0902f1ac",
									"id": 524,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getReserves",
									"nameLocation": "5753:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 516,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5764:2:0"
									},
									"returnParameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "reserve0",
												"nameLocation": "5798:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "5790:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 517,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "5790:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "reserve1",
												"nameLocation": "5816:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "5808:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 519,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "5808:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "blockTimestampLast",
												"nameLocation": "5833:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "5826:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 521,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "5826:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5789:63:0"
									},
									"scope": 582,
									"src": "5744:109:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5909c0d5",
									"id": 529,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "price0CumulativeLast",
									"nameLocation": "5867:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 525,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5887:2:0"
									},
									"returnParameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5913:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 526,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5913:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5912:6:0"
									},
									"scope": 582,
									"src": "5858:61:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5a3d5493",
									"id": 534,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "price1CumulativeLast",
									"nameLocation": "5933:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 530,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5953:2:0"
									},
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "5979:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 531,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5979:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5978:6:0"
									},
									"scope": 582,
									"src": "5924:61:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7464fc3d",
									"id": 539,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "kLast",
									"nameLocation": "5999:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 535,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6004:2:0"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "6030:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 536,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6030:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6029:6:0"
									},
									"scope": 582,
									"src": "5990:46:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "6a627842",
									"id": 546,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "6051:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 542,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 541,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6064:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "6056:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 540,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6056:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6055:12:0"
									},
									"returnParameters": {
										"id": 545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 544,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "6091:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "6086:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 543,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6086:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6085:16:0"
									},
									"scope": 582,
									"src": "6042:60:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "89afcb44",
									"id": 555,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "6116:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 548,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6129:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "6121:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 547,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6121:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6120:12:0"
									},
									"returnParameters": {
										"id": 554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "6156:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "6151:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 550,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6151:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 553,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "6170:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "6165:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 552,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6165:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6150:28:0"
									},
									"scope": 582,
									"src": "6107:72:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "022c0d9f",
									"id": 566,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swap",
									"nameLocation": "6193:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "amount0Out",
												"nameLocation": "6203:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 566,
												"src": "6198:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 556,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6198:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 559,
												"mutability": "mutable",
												"name": "amount1Out",
												"nameLocation": "6220:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 566,
												"src": "6215:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 558,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6215:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6240:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 566,
												"src": "6232:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 560,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6232:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6259:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 566,
												"src": "6244:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 562,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6244:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6197:67:0"
									},
									"returnParameters": {
										"id": 565,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6273:0:0"
									},
									"scope": 582,
									"src": "6184:90:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "bc25cf77",
									"id": 571,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "skim",
									"nameLocation": "6288:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6301:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 571,
												"src": "6293:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 567,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6293:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6292:12:0"
									},
									"returnParameters": {
										"id": 570,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6313:0:0"
									},
									"scope": 582,
									"src": "6279:35:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "fff6cae9",
									"id": 574,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "sync",
									"nameLocation": "6328:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 572,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6332:2:0"
									},
									"returnParameters": {
										"id": 573,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6343:0:0"
									},
									"scope": 582,
									"src": "6319:25:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "485cc955",
									"id": 581,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nameLocation": "6359:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "6370:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 575,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6370:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "6379:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6379:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6369:18:0"
									},
									"returnParameters": {
										"id": 580,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6396:0:0"
									},
									"scope": 582,
									"src": "6350:47:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2980,
							"src": "4002:2397:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 592,
							"linearizedBaseContracts": [
								592
							],
							"name": "IUniswapV2Factory",
							"nameLocation": "6411:17:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "c9c65396",
									"id": 591,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createPair",
									"nameLocation": "6444:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 584,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "6463:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 591,
												"src": "6455:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 583,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6455:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 586,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "6479:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 591,
												"src": "6471:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 585,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6471:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6454:32:0"
									},
									"returnParameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 589,
												"mutability": "mutable",
												"name": "pair",
												"nameLocation": "6513:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 591,
												"src": "6505:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 588,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6505:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6504:14:0"
									},
									"scope": 592,
									"src": "6435:84:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2980,
							"src": "6401:120:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 707,
							"linearizedBaseContracts": [
								707
							],
							"name": "IUniswapV2Router02",
							"nameLocation": "6533:18:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "791ac947",
									"id": 606,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForETHSupportingFeeOnTransferTokens",
									"nameLocation": "6567:50:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 594,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "6635:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6627:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 593,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6627:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 596,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "6661:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6653:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 595,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6653:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 599,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "6702:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6683:23:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 597,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "6683:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 598,
													"nodeType": "ArrayTypeName",
													"src": "6683:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 601,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6724:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6716:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 600,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6716:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 603,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "6744:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6736:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 602,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6736:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6617:141:0"
									},
									"returnParameters": {
										"id": 605,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6767:0:0"
									},
									"scope": 707,
									"src": "6558:210:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5c11d795",
									"id": 620,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForTokensSupportingFeeOnTransferTokens",
									"nameLocation": "6782:53:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "6850:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "6845:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 607,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6845:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "6873:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "6868:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 609,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6868:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "6914:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "6895:23:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 611,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "6895:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 612,
													"nodeType": "ArrayTypeName",
													"src": "6895:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6936:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "6928:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 614,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6928:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 617,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "6953:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "6948:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 616,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6948:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6835:132:0"
									},
									"returnParameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6976:0:0"
									},
									"scope": 707,
									"src": "6773:204:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c45a0155",
									"id": 625,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nameLocation": "6991:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 621,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6998:2:0"
									},
									"returnParameters": {
										"id": 624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 623,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 625,
												"src": "7024:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 622,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7024:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7023:9:0"
									},
									"scope": 707,
									"src": "6982:51:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ad5c4648",
									"id": 630,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "WETH",
									"nameLocation": "7047:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 626,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7051:2:0"
									},
									"returnParameters": {
										"id": 629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "7077:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 627,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7077:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7076:9:0"
									},
									"scope": 707,
									"src": "7038:48:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f305d719",
									"id": 651,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidityETH",
									"nameLocation": "7100:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 643,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7133:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "7125:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 631,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7125:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 634,
												"mutability": "mutable",
												"name": "amountTokenDesired",
												"nameLocation": "7156:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "7148:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 633,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7148:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "7192:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "7184:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 635,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7184:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nameLocation": "7224:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "7216:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 637,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7216:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7254:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "7246:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 639,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7246:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "7274:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "7266:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 641,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7266:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7115:173:0"
									},
									"returnParameters": {
										"id": 650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "amountToken",
												"nameLocation": "7323:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "7315:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 644,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7315:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "7344:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "7336:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 646,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7336:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "7363:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "7355:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 648,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7355:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7314:59:0"
									},
									"scope": 707,
									"src": "7091:283:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ad615dec",
									"id": 662,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "quote",
									"nameLocation": "7388:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 653,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "7399:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "7394:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 652,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7394:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 655,
												"mutability": "mutable",
												"name": "reserveA",
												"nameLocation": "7413:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "7408:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 654,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7408:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 657,
												"mutability": "mutable",
												"name": "reserveB",
												"nameLocation": "7428:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "7423:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 656,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7423:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7393:44:0"
									},
									"returnParameters": {
										"id": 661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "7466:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "7461:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 659,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7461:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7460:14:0"
									},
									"scope": 707,
									"src": "7379:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "054d50d4",
									"id": 673,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountOut",
									"nameLocation": "7489:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 664,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "7507:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 673,
												"src": "7502:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 663,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7502:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 666,
												"mutability": "mutable",
												"name": "reserveIn",
												"nameLocation": "7522:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 673,
												"src": "7517:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 665,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7517:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 668,
												"mutability": "mutable",
												"name": "reserveOut",
												"nameLocation": "7538:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 673,
												"src": "7533:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 667,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7533:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7501:48:0"
									},
									"returnParameters": {
										"id": 672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "7578:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 673,
												"src": "7573:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 670,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7573:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7572:16:0"
									},
									"scope": 707,
									"src": "7480:109:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "85f8c259",
									"id": 684,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountIn",
									"nameLocation": "7603:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "7620:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 684,
												"src": "7615:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 674,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7615:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "reserveIn",
												"nameLocation": "7636:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 684,
												"src": "7631:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 676,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7631:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "reserveOut",
												"nameLocation": "7652:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 684,
												"src": "7647:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7647:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7614:49:0"
									},
									"returnParameters": {
										"id": 683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 682,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "7692:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 684,
												"src": "7687:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 681,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7687:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7686:15:0"
									},
									"scope": 707,
									"src": "7594:108:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d06ca61f",
									"id": 695,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountsOut",
									"nameLocation": "7716:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 686,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "7735:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 695,
												"src": "7730:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 685,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7730:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "7764:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 695,
												"src": "7745:23:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 687,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "7745:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 688,
													"nodeType": "ArrayTypeName",
													"src": "7745:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7729:40:0"
									},
									"returnParameters": {
										"id": 694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "7807:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 695,
												"src": "7793:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 691,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "7793:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 692,
													"nodeType": "ArrayTypeName",
													"src": "7793:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7792:23:0"
									},
									"scope": 707,
									"src": "7707:109:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1f00ca74",
									"id": 706,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountsIn",
									"nameLocation": "7830:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "7848:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "7843:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7843:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 700,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "7878:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "7859:23:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 698,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "7859:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 699,
													"nodeType": "ArrayTypeName",
													"src": "7859:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7842:41:0"
									},
									"returnParameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "7921:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "7907:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 702,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "7907:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 703,
													"nodeType": "ArrayTypeName",
													"src": "7907:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7906:23:0"
									},
									"scope": 707,
									"src": "7821:109:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2980,
							"src": "6523:1409:0",
							"usedErrors": []
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 708,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 78,
										"src": "7970:6:0"
									},
									"id": 709,
									"nodeType": "InheritanceSpecifier",
									"src": "7970:6:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": false,
							"id": 725,
							"linearizedBaseContracts": [
								725,
								78
							],
							"name": "IERC20Extented",
							"nameLocation": "7952:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "313ce567",
									"id": 714,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "7992:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8000:2:0"
									},
									"returnParameters": {
										"id": 713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 712,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 714,
												"src": "8034:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 711,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "8034:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8033:7:0"
									},
									"scope": 725,
									"src": "7983:58:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								},
								{
									"functionSelector": "06fdde03",
									"id": 719,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "8055:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8059:2:0"
									},
									"returnParameters": {
										"id": 718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 717,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 719,
												"src": "8093:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 716,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8093:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8092:15:0"
									},
									"scope": 725,
									"src": "8046:62:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								},
								{
									"functionSelector": "95d89b41",
									"id": 724,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "8122:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 720,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8128:2:0"
									},
									"returnParameters": {
										"id": 723,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 722,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 724,
												"src": "8162:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 721,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8162:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8161:15:0"
									},
									"scope": 725,
									"src": "8113:64:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								}
							],
							"scope": 2980,
							"src": "7934:245:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 726,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 11,
										"src": "8203:7:0"
									},
									"id": 727,
									"nodeType": "InheritanceSpecifier",
									"src": "8203:7:0"
								},
								{
									"baseName": {
										"id": 728,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 78,
										"src": "8212:6:0"
									},
									"id": 729,
									"nodeType": "InheritanceSpecifier",
									"src": "8212:6:0"
								},
								{
									"baseName": {
										"id": 730,
										"name": "IERC20Extented",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 725,
										"src": "8220:14:0"
									},
									"id": 731,
									"nodeType": "InheritanceSpecifier",
									"src": "8220:14:0"
								},
								{
									"baseName": {
										"id": 732,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 342,
										"src": "8236:7:0"
									},
									"id": 733,
									"nodeType": "InheritanceSpecifier",
									"src": "8236:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2979,
							"linearizedBaseContracts": [
								2979,
								342,
								725,
								78,
								11
							],
							"name": "gainZilla",
							"nameLocation": "8190:9:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 736,
									"libraryName": {
										"id": 734,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 224,
										"src": "8256:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "8250:27:0",
									"typeName": {
										"id": 735,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "8269:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": true,
									"id": 739,
									"mutability": "constant",
									"name": "_name",
									"nameLocation": "8306:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 2979,
									"src": "8282:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 737,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "8282:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "4761696e5a696c6c61",
										"id": 738,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "8314:11:0",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_76c7d08d60375d458ae30b00b7f48f4f268c447e43e697dcd4947d8191392be5",
											"typeString": "literal_string \"GainZilla\""
										},
										"value": "GainZilla"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 742,
									"mutability": "constant",
									"name": "_symbol",
									"nameLocation": "8355:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 2979,
									"src": "8331:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 740,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "8331:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "47494c4c41",
										"id": 741,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "8365:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_9c2c535d5e2c045895cabaaa38a9bd87e29271192d34b15335245de3537a5b31",
											"typeString": "literal_string \"GILLA\""
										},
										"value": "GILLA"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 745,
									"mutability": "constant",
									"name": "_decimals",
									"nameLocation": "8401:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 2979,
									"src": "8378:36:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 743,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "8378:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "39",
										"id": 744,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "8413:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_9_by_1",
											"typeString": "int_const 9"
										},
										"value": "9"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 749,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "8456:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 2979,
									"src": "8420:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 748,
										"keyType": {
											"id": 746,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "8428:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "8420:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 747,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "8439:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 755,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "8528:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 2979,
									"src": "8472:67:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 754,
										"keyType": {
											"id": 750,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "8480:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "8472:47:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 753,
											"keyType": {
												"id": 751,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "8499:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "8491:27:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 752,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "8510:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 759,
									"mutability": "mutable",
									"name": "_isExcludedFromFee",
									"nameLocation": "8578:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 2979,
									"src": "8545:51:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 758,
										"keyType": {
											"id": 756,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "8553:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "8545:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 757,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "8564:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 766,
									"mutability": "constant",
									"name": "_tTotal",
									"nameLocation": "8627:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 2979,
									"src": "8602:53:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 760,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "8602:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_1000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000"
										},
										"id": 765,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31303030303030303030",
											"id": 761,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "8637:10:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000_by_1",
												"typeString": "int_const 1000000000"
											},
											"value": "1000000000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000_by_1",
												"typeString": "int_const 1000000000"
											},
											"id": 764,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 762,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "8650:2:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "39",
												"id": 763,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "8654:1:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_9_by_1",
													"typeString": "int_const 9"
												},
												"value": "9"
											},
											"src": "8650:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000_by_1",
												"typeString": "int_const 1000000000"
											}
										},
										"src": "8637:18:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 768,
									"mutability": "mutable",
									"name": "_firstBlock",
									"nameLocation": "8697:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 2979,
									"src": "8681:27:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 767,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "8681:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 770,
									"mutability": "mutable",
									"name": "_botBlocks",
									"nameLocation": "8730:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 2979,
									"src": "8714:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 769,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "8714:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "6c0a24eb",
									"id": 777,
									"mutability": "mutable",
									"name": "_maxWalletAmount",
									"nameLocation": "8761:16:0",
									"nodeType": "VariableDeclaration",
									"scope": 2979,
									"src": "8746:50:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 771,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "8746:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_10000001000000000_by_1",
											"typeString": "int_const 10000001000000000"
										},
										"id": 776,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "3130303030303031",
											"id": 772,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "8780:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_10000001_by_1",
												"typeString": "int_const 10000001"
											},
											"value": "10000001"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000_by_1",
												"typeString": "int_const 1000000000"
											},
											"id": 775,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 773,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "8791:2:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "39",
												"id": 774,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "8795:1:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_9_by_1",
													"typeString": "int_const 9"
												},
												"value": "9"
											},
											"src": "8791:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000_by_1",
												"typeString": "int_const 1000000000"
											}
										},
										"src": "8780:16:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10000001000000000_by_1",
											"typeString": "int_const 10000001000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "01a6c43b",
									"id": 784,
									"mutability": "mutable",
									"name": "numTokensToSwap",
									"nameLocation": "8817:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 2979,
									"src": "8802:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 778,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "8802:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_1000000000000000_by_1",
											"typeString": "int_const 1000000000000000"
										},
										"id": 783,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31303030303030",
											"id": 779,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "8835:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000_by_1",
												"typeString": "int_const 1000000"
											},
											"value": "1000000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000_by_1",
												"typeString": "int_const 1000000000"
											},
											"id": 782,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 780,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "8845:2:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "39",
												"id": 781,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "8849:1:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_9_by_1",
													"typeString": "int_const 9"
												},
												"value": "9"
											},
											"src": "8845:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000_by_1",
												"typeString": "int_const 1000000000"
											}
										},
										"src": "8835:15:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000_by_1",
											"typeString": "int_const 1000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "dc44b6a0",
									"id": 787,
									"mutability": "mutable",
									"name": "_buyLiquidityFee",
									"nameLocation": "8927:16:0",
									"nodeType": "VariableDeclaration",
									"scope": 2979,
									"src": "8912:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 785,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "8912:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 786,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "8946:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 790,
									"mutability": "mutable",
									"name": "_previousBuyLiquidityFee",
									"nameLocation": "8988:24:0",
									"nodeType": "VariableDeclaration",
									"scope": 2979,
									"src": "8972:59:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 788,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "8972:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"id": 789,
										"name": "_buyLiquidityFee",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 787,
										"src": "9015:16:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "2843631d",
									"id": 793,
									"mutability": "mutable",
									"name": "_buyEcosystemFee",
									"nameLocation": "9052:16:0",
									"nodeType": "VariableDeclaration",
									"scope": 2979,
									"src": "9037:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 791,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "9037:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 792,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "9071:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 796,
									"mutability": "mutable",
									"name": "_previousBuyEcosystemFee",
									"nameLocation": "9113:24:0",
									"nodeType": "VariableDeclaration",
									"scope": 2979,
									"src": "9097:59:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 794,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "9097:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"id": 795,
										"name": "_buyEcosystemFee",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 793,
										"src": "9140:16:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "c5d24189",
									"id": 799,
									"mutability": "mutable",
									"name": "_buyMarketingFee",
									"nameLocation": "9177:16:0",
									"nodeType": "VariableDeclaration",
									"scope": 2979,
									"src": "9162:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 797,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "9162:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 798,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "9196:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 802,
									"mutability": "mutable",
									"name": "_previousBuyMarketingFee",
									"nameLocation": "9238:24:0",
									"nodeType": "VariableDeclaration",
									"scope": 2979,
									"src": "9222:59:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 800,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "9222:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"id": 801,
										"name": "_buyMarketingFee",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 799,
										"src": "9265:16:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "c469b6dd",
									"id": 805,
									"mutability": "mutable",
									"name": "_buyTeamFee",
									"nameLocation": "9302:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 2979,
									"src": "9287:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 803,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "9287:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 804,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "9316:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 808,
									"mutability": "mutable",
									"name": "_previousBuyTeamFee",
									"nameLocation": "9358:19:0",
									"nodeType": "VariableDeclaration",
									"scope": 2979,
									"src": "9342:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 806,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "9342:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"id": 807,
										"name": "_buyTeamFee",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 805,
										"src": "9380:11:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "88790a68",
									"id": 811,
									"mutability": "mutable",
									"name": "_sellLiquidityFee",
									"nameLocation": "9430:17:0",
									"nodeType": "VariableDeclaration",
									"scope": 2979,
									"src": "9415:36:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 809,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "9415:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 810,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "9450:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 814,
									"mutability": "mutable",
									"name": "_previousSellLiquidityFee",
									"nameLocation": "9492:25:0",
									"nodeType": "VariableDeclaration",
									"scope": 2979,
									"src": "9476:61:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 812,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "9476:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"id": 813,
										"name": "_sellLiquidityFee",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 811,
										"src": "9520:17:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "248dd232",
									"id": 817,
									"mutability": "mutable",
									"name": "_sellEcosystemFee",
									"nameLocation": "9558:17:0",
									"nodeType": "VariableDeclaration",
									"scope": 2979,
									"src": "9543:36:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 815,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "9543:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 816,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "9578:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 820,
									"mutability": "mutable",
									"name": "_previousSellEcosystemFee",
									"nameLocation": "9620:25:0",
									"nodeType": "VariableDeclaration",
									"scope": 2979,
									"src": "9604:61:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 818,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "9604:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"id": 819,
										"name": "_sellEcosystemFee",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 817,
										"src": "9648:17:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "c8607952",
									"id": 823,
									"mutability": "mutable",
									"name": "_sellMarketingFee",
									"nameLocation": "9686:17:0",
									"nodeType": "VariableDeclaration",
									"scope": 2979,
									"src": "9671:36:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 821,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "9671:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 822,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "9706:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 826,
									"mutability": "mutable",
									"name": "_previousSellMarketingFee",
									"nameLocation": "9748:25:0",
									"nodeType": "VariableDeclaration",
									"scope": 2979,
									"src": "9732:61:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 824,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "9732:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"id": 825,
										"name": "_sellMarketingFee",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 823,
										"src": "9776:17:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "cab03471",
									"id": 829,
									"mutability": "mutable",
									"name": "_sellTeamFee",
									"nameLocation": "9814:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 2979,
									"src": "9799:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 827,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "9799:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 828,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "9829:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 832,
									"mutability": "mutable",
									"name": "_previousSellTeamFee",
									"nameLocation": "9871:20:0",
									"nodeType": "VariableDeclaration",
									"scope": 2979,
									"src": "9855:51:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 830,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "9855:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"id": 831,
										"name": "_sellTeamFee",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 829,
										"src": "9894:12:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "72b2aecc",
									"id": 835,
									"mutability": "mutable",
									"name": "transferFeeIncreaseFactor",
									"nameLocation": "9927:25:0",
									"nodeType": "VariableDeclaration",
									"scope": 2979,
									"src": "9912:44:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 833,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "9912:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 834,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "9955:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"canonicalName": "gainZilla.FeeBreakdown",
									"id": 846,
									"members": [
										{
											"constant": false,
											"id": 837,
											"mutability": "mutable",
											"name": "tLiquidity",
											"nameLocation": "10019:10:0",
											"nodeType": "VariableDeclaration",
											"scope": 846,
											"src": "10011:18:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 836,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "10011:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 839,
											"mutability": "mutable",
											"name": "tMarketing",
											"nameLocation": "10047:10:0",
											"nodeType": "VariableDeclaration",
											"scope": 846,
											"src": "10039:18:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 838,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "10039:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 841,
											"mutability": "mutable",
											"name": "tTeam",
											"nameLocation": "10075:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 846,
											"src": "10067:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 840,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "10067:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 843,
											"mutability": "mutable",
											"name": "tEcosystem",
											"nameLocation": "10098:10:0",
											"nodeType": "VariableDeclaration",
											"scope": 846,
											"src": "10090:18:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 842,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "10090:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 845,
											"mutability": "mutable",
											"name": "tAmount",
											"nameLocation": "10126:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 846,
											"src": "10118:15:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 844,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "10118:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "FeeBreakdown",
									"nameLocation": "9988:12:0",
									"nodeType": "StructDefinition",
									"scope": 2979,
									"src": "9981:159:0",
									"visibility": "public"
								},
								{
									"canonicalName": "gainZilla.StrongHandsConfig",
									"id": 855,
									"members": [
										{
											"constant": false,
											"id": 848,
											"mutability": "mutable",
											"name": "enabled",
											"nameLocation": "10186:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 855,
											"src": "10181:12:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 847,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "10181:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 850,
											"mutability": "mutable",
											"name": "duration",
											"nameLocation": "10210:8:0",
											"nodeType": "VariableDeclaration",
											"scope": 855,
											"src": "10203:15:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 849,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "10203:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 854,
											"mutability": "mutable",
											"name": "walletList",
											"nameLocation": "10256:10:0",
											"nodeType": "VariableDeclaration",
											"scope": 855,
											"src": "10228:38:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"typeName": {
												"id": 853,
												"keyType": {
													"id": 851,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10236:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "10228:27:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
													"typeString": "mapping(address => uint256)"
												},
												"valueType": {
													"id": 852,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10247:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StrongHandsConfig",
									"nameLocation": "10153:17:0",
									"nodeType": "StructDefinition",
									"scope": 2979,
									"src": "10146:127:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "787a08a6",
									"id": 858,
									"mutability": "mutable",
									"name": "cooldown",
									"nameLocation": "10303:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 2979,
									"src": "10278:33:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_StrongHandsConfig_$855_storage",
										"typeString": "struct gainZilla.StrongHandsConfig"
									},
									"typeName": {
										"id": 857,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 856,
											"name": "StrongHandsConfig",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 855,
											"src": "10278:17:0"
										},
										"referencedDeclaration": 855,
										"src": "10278:17:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_StrongHandsConfig_$855_storage_ptr",
											"typeString": "struct gainZilla.StrongHandsConfig"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "gainZilla.DiamondFloor",
									"id": 869,
									"members": [
										{
											"constant": false,
											"id": 860,
											"mutability": "mutable",
											"name": "enabled",
											"nameLocation": "10353:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 869,
											"src": "10348:12:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 859,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "10348:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 862,
											"mutability": "mutable",
											"name": "triggerPercentage",
											"nameLocation": "10377:17:0",
											"nodeType": "VariableDeclaration",
											"scope": 869,
											"src": "10370:24:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 861,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "10370:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 864,
											"mutability": "mutable",
											"name": "athPrice",
											"nameLocation": "10412:8:0",
											"nodeType": "VariableDeclaration",
											"scope": 869,
											"src": "10404:16:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 863,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "10404:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 866,
											"mutability": "mutable",
											"name": "sellStopped",
											"nameLocation": "10435:11:0",
											"nodeType": "VariableDeclaration",
											"scope": 869,
											"src": "10430:16:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 865,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "10430:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 868,
											"mutability": "mutable",
											"name": "blockedAth",
											"nameLocation": "10464:10:0",
											"nodeType": "VariableDeclaration",
											"scope": 869,
											"src": "10456:18:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 867,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "10456:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "DiamondFloor",
									"nameLocation": "10325:12:0",
									"nodeType": "StructDefinition",
									"scope": 2979,
									"src": "10318:163:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c95457ff",
									"id": 872,
									"mutability": "mutable",
									"name": "diamondFloor",
									"nameLocation": "10506:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 2979,
									"src": "10486:32:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_DiamondFloor_$869_storage",
										"typeString": "struct gainZilla.DiamondFloor"
									},
									"typeName": {
										"id": 871,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 870,
											"name": "DiamondFloor",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 869,
											"src": "10486:12:0"
										},
										"referencedDeclaration": 869,
										"src": "10486:12:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_DiamondFloor_$869_storage_ptr",
											"typeString": "struct gainZilla.DiamondFloor"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 876,
									"mutability": "mutable",
									"name": "bots",
									"nameLocation": "10558:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 2979,
									"src": "10525:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 875,
										"keyType": {
											"id": 873,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "10533:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "10525:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 874,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "10544:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 882,
									"mutability": "mutable",
									"name": "_marketingAddress",
									"nameLocation": "10592:17:0",
									"nodeType": "VariableDeclaration",
									"scope": 2979,
									"src": "10568:95:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 877,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "10568:15:0",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303064456144",
												"id": 880,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "10620:42:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"value": "0x000000000000000000000000000000000000dEaD"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 879,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "10612:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_payable_$",
												"typeString": "type(address payable)"
											},
											"typeName": {
												"id": 878,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "10612:8:0",
												"stateMutability": "payable",
												"typeDescriptions": {}
											}
										},
										"id": 881,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "10612:51:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 888,
									"mutability": "mutable",
									"name": "_teamAddress",
									"nameLocation": "10693:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 2979,
									"src": "10669:90:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 883,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "10669:15:0",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303064456144",
												"id": 886,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "10716:42:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"value": "0x000000000000000000000000000000000000dEaD"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 885,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "10708:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_payable_$",
												"typeString": "type(address payable)"
											},
											"typeName": {
												"id": 884,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "10708:8:0",
												"stateMutability": "payable",
												"typeDescriptions": {}
											}
										},
										"id": 887,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "10708:51:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 894,
									"mutability": "mutable",
									"name": "_ecosystemAddress",
									"nameLocation": "10789:17:0",
									"nodeType": "VariableDeclaration",
									"scope": 2979,
									"src": "10765:95:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 889,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "10765:15:0",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303064456144",
												"id": 892,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "10817:42:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"value": "0x000000000000000000000000000000000000dEaD"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 891,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "10809:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_payable_$",
												"typeString": "type(address payable)"
											},
											"typeName": {
												"id": 890,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "10809:8:0",
												"stateMutability": "payable",
												"typeDescriptions": {}
											}
										},
										"id": 893,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "10809:51:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 900,
									"mutability": "mutable",
									"name": "_lpRecipient",
									"nameLocation": "10890:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 2979,
									"src": "10866:90:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 895,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "10866:15:0",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303064456144",
												"id": 898,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "10913:42:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"value": "0x000000000000000000000000000000000000dEaD"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 897,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "10905:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_payable_$",
												"typeString": "type(address payable)"
											},
											"typeName": {
												"id": 896,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "10905:8:0",
												"stateMutability": "payable",
												"typeDescriptions": {}
											}
										},
										"id": 899,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "10905:51:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 903,
									"mutability": "mutable",
									"name": "uniswapV2Router",
									"nameLocation": "10989:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 2979,
									"src": "10962:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IUniswapV2Router02_$707",
										"typeString": "contract IUniswapV2Router02"
									},
									"typeName": {
										"id": 902,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 901,
											"name": "IUniswapV2Router02",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 707,
											"src": "10962:18:0"
										},
										"referencedDeclaration": 707,
										"src": "10962:18:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IUniswapV2Router02_$707",
											"typeString": "contract IUniswapV2Router02"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "49bd5a5e",
									"id": 905,
									"mutability": "mutable",
									"name": "uniswapV2Pair",
									"nameLocation": "11025:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 2979,
									"src": "11010:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 904,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "11010:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 907,
									"mutability": "mutable",
									"name": "_maxTxAmount",
									"nameLocation": "11060:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 2979,
									"src": "11044:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 906,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "11044:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "ffb54a99",
									"id": 910,
									"mutability": "mutable",
									"name": "tradingOpen",
									"nameLocation": "11091:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 2979,
									"src": "11079:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 908,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "11079:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "66616c7365",
										"id": 909,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "11105:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "false"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 913,
									"mutability": "mutable",
									"name": "inSwap",
									"nameLocation": "11129:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 2979,
									"src": "11116:27:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 911,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "11116:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "66616c7365",
										"id": 912,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "11138:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "false"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "323be1c5",
									"id": 916,
									"mutability": "mutable",
									"name": "canPause",
									"nameLocation": "11161:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 2979,
									"src": "11149:27:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 914,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "11149:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "74727565",
										"id": 915,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "11172:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "true"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "301ad558",
									"id": 919,
									"mutability": "mutable",
									"name": "canBlackList",
									"nameLocation": "11194:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 2979,
									"src": "11182:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 917,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "11182:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "74727565",
										"id": 918,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "11209:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "true"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "39a53c4e",
									"id": 922,
									"mutability": "mutable",
									"name": "canChangeTax",
									"nameLocation": "11231:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 2979,
									"src": "11219:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 920,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "11219:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "74727565",
										"id": 921,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "11246:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "true"
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 926,
									"name": "MaxTxAmountUpdated",
									"nameLocation": "11263:18:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 924,
												"indexed": false,
												"mutability": "mutable",
												"name": "_maxTxAmount",
												"nameLocation": "11290:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 926,
												"src": "11282:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 923,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11282:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11281:22:0"
									},
									"src": "11257:47:0"
								},
								{
									"anonymous": false,
									"id": 936,
									"name": "BuyFeesUpdated",
									"nameLocation": "11315:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 935,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 928,
												"indexed": false,
												"mutability": "mutable",
												"name": "_buyMarketingFee",
												"nameLocation": "11338:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "11330:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 927,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11330:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 930,
												"indexed": false,
												"mutability": "mutable",
												"name": "_buyLiquidityFee",
												"nameLocation": "11364:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "11356:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 929,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11356:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 932,
												"indexed": false,
												"mutability": "mutable",
												"name": "_buyTeamFee",
												"nameLocation": "11390:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "11382:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 931,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11382:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 934,
												"indexed": false,
												"mutability": "mutable",
												"name": "_buyEcosystemFee",
												"nameLocation": "11411:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "11403:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 933,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11403:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11329:99:0"
									},
									"src": "11309:120:0"
								},
								{
									"anonymous": false,
									"id": 946,
									"name": "SellFeesUpdated",
									"nameLocation": "11440:15:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 945,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 938,
												"indexed": false,
												"mutability": "mutable",
												"name": "_sellMarketingFee",
												"nameLocation": "11464:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "11456:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 937,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11456:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 940,
												"indexed": false,
												"mutability": "mutable",
												"name": "_sellLiquidityFee",
												"nameLocation": "11491:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "11483:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 939,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11483:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 942,
												"indexed": false,
												"mutability": "mutable",
												"name": "_sellTeamFee",
												"nameLocation": "11518:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "11510:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 941,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11510:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 944,
												"indexed": false,
												"mutability": "mutable",
												"name": "_sellEcosystemFee",
												"nameLocation": "11540:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "11532:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 943,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11532:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11455:103:0"
									},
									"src": "11434:125:0"
								},
								{
									"body": {
										"id": 957,
										"nodeType": "Block",
										"src": "11586:65:0",
										"statements": [
											{
												"expression": {
													"id": 950,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 948,
														"name": "inSwap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 913,
														"src": "11596:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 949,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11605:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "11596:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 951,
												"nodeType": "ExpressionStatement",
												"src": "11596:13:0"
											},
											{
												"id": 952,
												"nodeType": "PlaceholderStatement",
												"src": "11619:1:0"
											},
											{
												"expression": {
													"id": 955,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 953,
														"name": "inSwap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 913,
														"src": "11630:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 954,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11639:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "11630:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 956,
												"nodeType": "ExpressionStatement",
												"src": "11630:14:0"
											}
										]
									},
									"id": 958,
									"name": "lockTheSwap",
									"nameLocation": "11574:11:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 947,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11586:0:0"
									},
									"src": "11565:86:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1057,
										"nodeType": "Block",
										"src": "11670:762:0",
										"statements": [
											{
												"assignments": [
													963
												],
												"declarations": [
													{
														"constant": false,
														"id": 963,
														"mutability": "mutable",
														"name": "_uniswapV2Router",
														"nameLocation": "11699:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 1057,
														"src": "11680:35:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV2Router02_$707",
															"typeString": "contract IUniswapV2Router02"
														},
														"typeName": {
															"id": 962,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 961,
																"name": "IUniswapV2Router02",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 707,
																"src": "11680:18:0"
															},
															"referencedDeclaration": 707,
															"src": "11680:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV2Router02_$707",
																"typeString": "contract IUniswapV2Router02"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 967,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "307831304544343343373138373134656236336435614135374237384235343730344532353630323445",
															"id": 965,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11737:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"value": "0x10ED43C718714eb63d5aA57B78B54704E256024E"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 964,
														"name": "IUniswapV2Router02",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 707,
														"src": "11718:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IUniswapV2Router02_$707_$",
															"typeString": "type(contract IUniswapV2Router02)"
														}
													},
													"id": 966,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11718:62:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV2Router02_$707",
														"typeString": "contract IUniswapV2Router02"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11680:100:0"
											},
											{
												"expression": {
													"id": 970,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 968,
														"name": "uniswapV2Router",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 903,
														"src": "11790:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV2Router02_$707",
															"typeString": "contract IUniswapV2Router02"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 969,
														"name": "_uniswapV2Router",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 963,
														"src": "11808:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV2Router02_$707",
															"typeString": "contract IUniswapV2Router02"
														}
													},
													"src": "11790:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV2Router02_$707",
														"typeString": "contract IUniswapV2Router02"
													}
												},
												"id": 971,
												"nodeType": "ExpressionStatement",
												"src": "11790:34:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 975,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "11851:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_gainZilla_$2979",
																		"typeString": "contract gainZilla"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_gainZilla_$2979",
																		"typeString": "contract gainZilla"
																	}
																],
																"id": 974,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11843:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 973,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11843:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 976,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11843:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 979,
																	"name": "uniswapV2Router",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 903,
																	"src": "11866:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IUniswapV2Router02_$707",
																		"typeString": "contract IUniswapV2Router02"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IUniswapV2Router02_$707",
																		"typeString": "contract IUniswapV2Router02"
																	}
																],
																"id": 978,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11858:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 977,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11858:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 980,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11858:24:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 981,
															"name": "_tTotal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 766,
															"src": "11884:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 972,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1361,
														"src": "11834:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 982,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11834:58:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 983,
												"nodeType": "ExpressionStatement",
												"src": "11834:58:0"
											},
											{
												"expression": {
													"id": 999,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 984,
														"name": "uniswapV2Pair",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 905,
														"src": "11902:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 993,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "11983:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_gainZilla_$2979",
																			"typeString": "contract gainZilla"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_gainZilla_$2979",
																			"typeString": "contract gainZilla"
																		}
																	],
																	"id": 992,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11975:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 991,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11975:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 994,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11975:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 995,
																		"name": "_uniswapV2Router",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 963,
																		"src": "11990:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IUniswapV2Router02_$707",
																			"typeString": "contract IUniswapV2Router02"
																		}
																	},
																	"id": 996,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "WETH",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 630,
																	"src": "11990:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
																		"typeString": "function () pure external returns (address)"
																	}
																},
																"id": 997,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11990:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"id": 986,
																				"name": "_uniswapV2Router",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 963,
																				"src": "11936:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IUniswapV2Router02_$707",
																					"typeString": "contract IUniswapV2Router02"
																				}
																			},
																			"id": 987,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "factory",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 625,
																			"src": "11936:24:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
																				"typeString": "function () pure external returns (address)"
																			}
																		},
																		"id": 988,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11936:26:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 985,
																	"name": "IUniswapV2Factory",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 592,
																	"src": "11918:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IUniswapV2Factory_$592_$",
																		"typeString": "type(contract IUniswapV2Factory)"
																	}
																},
																"id": 989,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11918:45:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IUniswapV2Factory_$592",
																	"typeString": "contract IUniswapV2Factory"
																}
															},
															"id": 990,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "createPair",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 591,
															"src": "11918:56:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$_t_address_$",
																"typeString": "function (address,address) external returns (address)"
															}
														},
														"id": 998,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11918:96:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11902:112:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1000,
												"nodeType": "ExpressionStatement",
												"src": "11902:112:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1007,
																	"name": "uniswapV2Router",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 903,
																	"src": "12062:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IUniswapV2Router02_$707",
																		"typeString": "contract IUniswapV2Router02"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IUniswapV2Router02_$707",
																		"typeString": "contract IUniswapV2Router02"
																	}
																],
																"id": 1006,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12054:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1005,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12054:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1008,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12054:24:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1011,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "12084:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1010,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "12084:7:0",
																			"typeDescriptions": {}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		}
																	],
																	"id": 1009,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "12079:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1012,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12079:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint256",
																	"typeString": "type(uint256)"
																}
															},
															"id": 1013,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "max",
															"nodeType": "MemberAccess",
															"src": "12079:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1002,
																	"name": "uniswapV2Pair",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 905,
																	"src": "12031:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1001,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 78,
																"src": "12024:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$78_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1003,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12024:21:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$78",
																"typeString": "contract IERC20"
															}
														},
														"id": 1004,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 50,
														"src": "12024:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1014,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12024:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1015,
												"nodeType": "ExpressionStatement",
												"src": "12024:73:0"
											},
											{
												"expression": {
													"id": 1018,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1016,
														"name": "_maxTxAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 907,
														"src": "12108:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1017,
														"name": "_tTotal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 766,
														"src": "12123:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12108:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1019,
												"nodeType": "ExpressionStatement",
												"src": "12108:22:0"
											},
											{
												"expression": {
													"id": 1022,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1020,
														"name": "_maxWalletAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 777,
														"src": "12195:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1021,
														"name": "_tTotal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 766,
														"src": "12214:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12195:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1023,
												"nodeType": "ExpressionStatement",
												"src": "12195:26:0"
											},
											{
												"expression": {
													"id": 1029,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1024,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 749,
															"src": "12240:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1027,
														"indexExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1025,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "12250:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1026,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12250:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12240:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1028,
														"name": "_tTotal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 766,
														"src": "12266:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12240:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1030,
												"nodeType": "ExpressionStatement",
												"src": "12240:33:0"
											},
											{
												"expression": {
													"id": 1036,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1031,
															"name": "_isExcludedFromFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 759,
															"src": "12283:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1034,
														"indexExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1032,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 265,
																"src": "12302:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1033,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12302:7:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12283:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1035,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12313:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "12283:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1037,
												"nodeType": "ExpressionStatement",
												"src": "12283:34:0"
											},
											{
												"expression": {
													"id": 1045,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1038,
															"name": "_isExcludedFromFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 759,
															"src": "12327:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1043,
														"indexExpression": {
															"arguments": [
																{
																	"id": 1041,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "12354:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_gainZilla_$2979",
																		"typeString": "contract gainZilla"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_gainZilla_$2979",
																		"typeString": "contract gainZilla"
																	}
																],
																"id": 1040,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12346:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1039,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12346:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1042,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12346:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12327:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1044,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12363:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "12327:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1046,
												"nodeType": "ExpressionStatement",
												"src": "12327:40:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1050,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12399:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1049,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12391:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1048,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12391:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1051,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12391:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1052,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "12403:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1053,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12403:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1054,
															"name": "_tTotal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 766,
															"src": "12417:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1047,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 69,
														"src": "12382:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1055,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12382:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1056,
												"nodeType": "EmitStatement",
												"src": "12377:48:0"
											}
										]
									},
									"id": 1058,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 959,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11667:2:0"
									},
									"returnParameters": {
										"id": 960,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11670:0:0"
									},
									"scope": 2979,
									"src": "11656:776:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										719
									],
									"body": {
										"id": 1066,
										"nodeType": "Block",
										"src": "12501:29:0",
										"statements": [
											{
												"expression": {
													"id": 1064,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 739,
													"src": "12518:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1063,
												"id": 1065,
												"nodeType": "Return",
												"src": "12511:12:0"
											}
										]
									},
									"functionSelector": "06fdde03",
									"id": 1067,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "12447:4:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1060,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "12454:8:0"
									},
									"parameters": {
										"id": 1059,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12451:2:0"
									},
									"returnParameters": {
										"id": 1063,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1062,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1067,
												"src": "12486:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1061,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12486:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12485:15:0"
									},
									"scope": 2979,
									"src": "12438:92:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										724
									],
									"body": {
										"id": 1075,
										"nodeType": "Block",
										"src": "12601:31:0",
										"statements": [
											{
												"expression": {
													"id": 1073,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 742,
													"src": "12618:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1072,
												"id": 1074,
												"nodeType": "Return",
												"src": "12611:14:0"
											}
										]
									},
									"functionSelector": "95d89b41",
									"id": 1076,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "12545:6:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1069,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "12554:8:0"
									},
									"parameters": {
										"id": 1068,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12551:2:0"
									},
									"returnParameters": {
										"id": 1072,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1071,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1076,
												"src": "12586:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1070,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12586:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12585:15:0"
									},
									"scope": 2979,
									"src": "12536:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										714
									],
									"body": {
										"id": 1084,
										"nodeType": "Block",
										"src": "12697:33:0",
										"statements": [
											{
												"expression": {
													"id": 1082,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 745,
													"src": "12714:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 1081,
												"id": 1083,
												"nodeType": "Return",
												"src": "12707:16:0"
											}
										]
									},
									"functionSelector": "313ce567",
									"id": 1085,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "12647:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1078,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "12658:8:0"
									},
									"parameters": {
										"id": 1077,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12655:2:0"
									},
									"returnParameters": {
										"id": 1081,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1080,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "12690:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1079,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "12690:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12689:7:0"
									},
									"scope": 2979,
									"src": "12638:92:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										16
									],
									"body": {
										"id": 1093,
										"nodeType": "Block",
										"src": "12800:31:0",
										"statements": [
											{
												"expression": {
													"id": 1091,
													"name": "_tTotal",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 766,
													"src": "12817:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1090,
												"id": 1092,
												"nodeType": "Return",
												"src": "12810:14:0"
											}
										]
									},
									"functionSelector": "18160ddd",
									"id": 1094,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "12745:11:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1087,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "12773:8:0"
									},
									"parameters": {
										"id": 1086,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12756:2:0"
									},
									"returnParameters": {
										"id": 1090,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1089,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1094,
												"src": "12791:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1088,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12791:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12790:9:0"
									},
									"scope": 2979,
									"src": "12736:95:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										23
									],
									"body": {
										"id": 1106,
										"nodeType": "Block",
										"src": "12912:42:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1102,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 749,
														"src": "12929:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1104,
													"indexExpression": {
														"id": 1103,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1096,
														"src": "12939:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "12929:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1101,
												"id": 1105,
												"nodeType": "Return",
												"src": "12922:25:0"
											}
										]
									},
									"functionSelector": "70a08231",
									"id": 1107,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "12846:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1098,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "12885:8:0"
									},
									"parameters": {
										"id": 1097,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1096,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "12864:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "12856:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1095,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12856:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12855:17:0"
									},
									"returnParameters": {
										"id": 1101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1100,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "12903:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1099,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12903:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12902:9:0"
									},
									"scope": 2979,
									"src": "12837:117:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1118,
										"nodeType": "Block",
										"src": "13019:37:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1114,
														"name": "bots",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 876,
														"src": "13036:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 1116,
													"indexExpression": {
														"id": 1115,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1109,
														"src": "13041:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "13036:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1113,
												"id": 1117,
												"nodeType": "Return",
												"src": "13029:20:0"
											}
										]
									},
									"functionSelector": "3bbac579",
									"id": 1119,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isBot",
									"nameLocation": "12969:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1109,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "12983:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1119,
												"src": "12975:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12975:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12974:17:0"
									},
									"returnParameters": {
										"id": 1113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1112,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1119,
												"src": "13013:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1111,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13013:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13012:6:0"
									},
									"scope": 2979,
									"src": "12960:96:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										32
									],
									"body": {
										"id": 1138,
										"nodeType": "Block",
										"src": "13152:80:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1130,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "13172:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1131,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13172:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1132,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1121,
															"src": "13186:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1133,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1123,
															"src": "13197:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1129,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1671,
														"src": "13162:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13162:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1135,
												"nodeType": "ExpressionStatement",
												"src": "13162:42:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1136,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13221:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1128,
												"id": 1137,
												"nodeType": "Return",
												"src": "13214:11:0"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 1139,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "13075:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1125,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "13128:8:0"
									},
									"parameters": {
										"id": 1124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1121,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "13092:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1139,
												"src": "13084:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13084:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1123,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "13111:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1139,
												"src": "13103:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1122,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13103:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13083:35:0"
									},
									"returnParameters": {
										"id": 1128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1127,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1139,
												"src": "13146:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1126,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13146:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13145:6:0"
									},
									"scope": 2979,
									"src": "13066:166:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										41
									],
									"body": {
										"id": 1155,
										"nodeType": "Block",
										"src": "13330:51:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 1149,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "13347:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 1151,
														"indexExpression": {
															"id": 1150,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1141,
															"src": "13359:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "13347:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1153,
													"indexExpression": {
														"id": 1152,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1143,
														"src": "13366:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "13347:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1148,
												"id": 1154,
												"nodeType": "Return",
												"src": "13340:34:0"
											}
										]
									},
									"functionSelector": "dd62ed3e",
									"id": 1156,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "13247:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1145,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "13303:8:0"
									},
									"parameters": {
										"id": 1144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1141,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "13265:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "13257:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1140,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13257:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1143,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "13280:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "13272:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1142,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13272:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13256:32:0"
									},
									"returnParameters": {
										"id": 1148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1147,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "13321:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1146,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13321:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13320:9:0"
									},
									"scope": 2979,
									"src": "13238:143:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										50
									],
									"body": {
										"id": 1175,
										"nodeType": "Block",
										"src": "13470:77:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1167,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "13489:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1168,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13489:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1169,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1158,
															"src": "13503:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1170,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1160,
															"src": "13512:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1166,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1361,
														"src": "13480:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13480:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1172,
												"nodeType": "ExpressionStatement",
												"src": "13480:39:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1173,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13536:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1165,
												"id": 1174,
												"nodeType": "Return",
												"src": "13529:11:0"
											}
										]
									},
									"functionSelector": "095ea7b3",
									"id": 1176,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "13396:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1162,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "13446:8:0"
									},
									"parameters": {
										"id": 1161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1158,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "13412:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "13404:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1157,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13404:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1160,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "13429:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "13421:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1159,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13421:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13403:33:0"
									},
									"returnParameters": {
										"id": 1165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1164,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "13464:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1163,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13464:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13463:6:0"
									},
									"scope": 2979,
									"src": "13387:160:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										61
									],
									"body": {
										"id": 1212,
										"nodeType": "Block",
										"src": "13659:202:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1189,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1178,
															"src": "13679:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1190,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1180,
															"src": "13687:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1191,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1182,
															"src": "13698:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1188,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1671,
														"src": "13669:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13669:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1193,
												"nodeType": "ExpressionStatement",
												"src": "13669:36:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1195,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1178,
															"src": "13724:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1196,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "13731:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1197,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13731:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1205,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1182,
																	"src": "13782:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 1206,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13789:42:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																		"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
																	},
																	"value": "ERC20: transfer amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																		"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1198,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 755,
																			"src": "13744:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 1200,
																		"indexExpression": {
																			"id": 1199,
																			"name": "sender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1178,
																			"src": "13756:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "13744:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1203,
																	"indexExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1201,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 10,
																			"src": "13764:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1202,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "13764:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "13744:33:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1204,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 146,
																"src": "13744:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 1207,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13744:88:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1194,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1361,
														"src": "13715:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13715:118:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1209,
												"nodeType": "ExpressionStatement",
												"src": "13715:118:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1210,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13850:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1187,
												"id": 1211,
												"nodeType": "Return",
												"src": "13843:11:0"
											}
										]
									},
									"functionSelector": "23b872dd",
									"id": 1213,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "13562:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1184,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "13635:8:0"
									},
									"parameters": {
										"id": 1183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1178,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "13583:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1213,
												"src": "13575:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1177,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13575:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1180,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "13599:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1213,
												"src": "13591:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1179,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13591:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1182,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "13618:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1213,
												"src": "13610:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1181,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13610:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13574:51:0"
									},
									"returnParameters": {
										"id": 1187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1186,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1213,
												"src": "13653:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1185,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13653:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13652:6:0"
									},
									"scope": 2979,
									"src": "13553:308:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1280,
										"nodeType": "Block",
										"src": "13899:672:0",
										"statements": [
											{
												"expression": {
													"id": 1218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1216,
														"name": "_previousBuyMarketingFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 802,
														"src": "13909:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1217,
														"name": "_buyMarketingFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 799,
														"src": "13936:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13909:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1219,
												"nodeType": "ExpressionStatement",
												"src": "13909:43:0"
											},
											{
												"expression": {
													"id": 1222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1220,
														"name": "_previousBuyLiquidityFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 790,
														"src": "13962:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1221,
														"name": "_buyLiquidityFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 787,
														"src": "13989:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13962:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1223,
												"nodeType": "ExpressionStatement",
												"src": "13962:43:0"
											},
											{
												"expression": {
													"id": 1226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1224,
														"name": "_previousBuyTeamFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 808,
														"src": "14015:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1225,
														"name": "_buyTeamFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 805,
														"src": "14037:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14015:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1227,
												"nodeType": "ExpressionStatement",
												"src": "14015:33:0"
											},
											{
												"expression": {
													"id": 1230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1228,
														"name": "_previousBuyEcosystemFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 796,
														"src": "14058:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1229,
														"name": "_buyEcosystemFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 793,
														"src": "14085:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14058:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1231,
												"nodeType": "ExpressionStatement",
												"src": "14058:43:0"
											},
											{
												"expression": {
													"id": 1234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1232,
														"name": "_buyMarketingFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 799,
														"src": "14120:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1233,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14139:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "14120:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1235,
												"nodeType": "ExpressionStatement",
												"src": "14120:20:0"
											},
											{
												"expression": {
													"id": 1238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1236,
														"name": "_buyLiquidityFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 787,
														"src": "14150:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1237,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14169:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "14150:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1239,
												"nodeType": "ExpressionStatement",
												"src": "14150:20:0"
											},
											{
												"expression": {
													"id": 1242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1240,
														"name": "_buyTeamFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 805,
														"src": "14180:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1241,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14194:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "14180:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1243,
												"nodeType": "ExpressionStatement",
												"src": "14180:15:0"
											},
											{
												"expression": {
													"id": 1246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1244,
														"name": "_buyEcosystemFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 793,
														"src": "14205:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1245,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14224:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "14205:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1247,
												"nodeType": "ExpressionStatement",
												"src": "14205:20:0"
											},
											{
												"expression": {
													"id": 1250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1248,
														"name": "_previousSellMarketingFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 826,
														"src": "14236:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1249,
														"name": "_sellMarketingFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 823,
														"src": "14264:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14236:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1251,
												"nodeType": "ExpressionStatement",
												"src": "14236:45:0"
											},
											{
												"expression": {
													"id": 1254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1252,
														"name": "_previousSellLiquidityFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 814,
														"src": "14291:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1253,
														"name": "_sellLiquidityFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "14319:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14291:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1255,
												"nodeType": "ExpressionStatement",
												"src": "14291:45:0"
											},
											{
												"expression": {
													"id": 1258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1256,
														"name": "_previousSellTeamFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 832,
														"src": "14346:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1257,
														"name": "_sellTeamFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 829,
														"src": "14369:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14346:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1259,
												"nodeType": "ExpressionStatement",
												"src": "14346:35:0"
											},
											{
												"expression": {
													"id": 1262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1260,
														"name": "_previousSellEcosystemFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 820,
														"src": "14391:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1261,
														"name": "_sellEcosystemFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 817,
														"src": "14419:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14391:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1263,
												"nodeType": "ExpressionStatement",
												"src": "14391:45:0"
											},
											{
												"expression": {
													"id": 1266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1264,
														"name": "_sellMarketingFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 823,
														"src": "14455:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1265,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14475:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "14455:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1267,
												"nodeType": "ExpressionStatement",
												"src": "14455:21:0"
											},
											{
												"expression": {
													"id": 1270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1268,
														"name": "_sellLiquidityFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "14486:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1269,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14506:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "14486:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1271,
												"nodeType": "ExpressionStatement",
												"src": "14486:21:0"
											},
											{
												"expression": {
													"id": 1274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1272,
														"name": "_sellTeamFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 829,
														"src": "14517:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1273,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14532:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "14517:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1275,
												"nodeType": "ExpressionStatement",
												"src": "14517:16:0"
											},
											{
												"expression": {
													"id": 1278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1276,
														"name": "_sellEcosystemFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 817,
														"src": "14543:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1277,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14563:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "14543:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1279,
												"nodeType": "ExpressionStatement",
												"src": "14543:21:0"
											}
										]
									},
									"id": 1281,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "removeAllFee",
									"nameLocation": "13876:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1214,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13888:2:0"
									},
									"returnParameters": {
										"id": 1215,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13899:0:0"
									},
									"scope": 2979,
									"src": "13867:704:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1316,
										"nodeType": "Block",
										"src": "14614:420:0",
										"statements": [
											{
												"expression": {
													"id": 1286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1284,
														"name": "_buyMarketingFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 799,
														"src": "14624:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1285,
														"name": "_previousBuyMarketingFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 802,
														"src": "14643:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14624:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1287,
												"nodeType": "ExpressionStatement",
												"src": "14624:43:0"
											},
											{
												"expression": {
													"id": 1290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1288,
														"name": "_buyLiquidityFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 787,
														"src": "14677:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1289,
														"name": "_previousBuyLiquidityFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 790,
														"src": "14696:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14677:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1291,
												"nodeType": "ExpressionStatement",
												"src": "14677:43:0"
											},
											{
												"expression": {
													"id": 1294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1292,
														"name": "_buyTeamFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 805,
														"src": "14730:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1293,
														"name": "_previousBuyTeamFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 808,
														"src": "14744:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14730:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1295,
												"nodeType": "ExpressionStatement",
												"src": "14730:33:0"
											},
											{
												"expression": {
													"id": 1298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1296,
														"name": "_buyEcosystemFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 793,
														"src": "14773:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1297,
														"name": "_previousBuyEcosystemFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 796,
														"src": "14792:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14773:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1299,
												"nodeType": "ExpressionStatement",
												"src": "14773:43:0"
											},
											{
												"expression": {
													"id": 1302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1300,
														"name": "_sellMarketingFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 823,
														"src": "14827:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1301,
														"name": "_previousSellMarketingFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 826,
														"src": "14847:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14827:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1303,
												"nodeType": "ExpressionStatement",
												"src": "14827:45:0"
											},
											{
												"expression": {
													"id": 1306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1304,
														"name": "_sellLiquidityFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "14882:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1305,
														"name": "_previousSellLiquidityFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 814,
														"src": "14902:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14882:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1307,
												"nodeType": "ExpressionStatement",
												"src": "14882:45:0"
											},
											{
												"expression": {
													"id": 1310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1308,
														"name": "_sellTeamFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 829,
														"src": "14937:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1309,
														"name": "_previousSellTeamFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 832,
														"src": "14952:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14937:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1311,
												"nodeType": "ExpressionStatement",
												"src": "14937:35:0"
											},
											{
												"expression": {
													"id": 1314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1312,
														"name": "_sellEcosystemFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 817,
														"src": "14982:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1313,
														"name": "_previousSellEcosystemFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 820,
														"src": "15002:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14982:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1315,
												"nodeType": "ExpressionStatement",
												"src": "14982:45:0"
											}
										]
									},
									"id": 1317,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "restoreAllFee",
									"nameLocation": "14590:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1282,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14603:2:0"
									},
									"returnParameters": {
										"id": 1283,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14614:0:0"
									},
									"scope": 2979,
									"src": "14581:453:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1360,
										"nodeType": "Block",
										"src": "15114:256:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1332,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1327,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1319,
																"src": "15132:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1330,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15149:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1329,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "15141:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1328,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "15141:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1331,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15141:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "15132:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 1333,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15153:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 1326,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "15124:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15124:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1335,
												"nodeType": "ExpressionStatement",
												"src": "15124:68:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1342,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1337,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1321,
																"src": "15210:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1340,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15229:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1339,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "15221:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1338,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "15221:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1341,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15221:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "15210:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 1343,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15233:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 1336,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "15202:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15202:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1345,
												"nodeType": "ExpressionStatement",
												"src": "15202:68:0"
											},
											{
												"expression": {
													"id": 1352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1346,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 755,
																"src": "15280:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1349,
															"indexExpression": {
																"id": 1347,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1319,
																"src": "15292:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15280:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1350,
														"indexExpression": {
															"id": 1348,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1321,
															"src": "15299:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15280:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1351,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1323,
														"src": "15310:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15280:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1353,
												"nodeType": "ExpressionStatement",
												"src": "15280:36:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1355,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1319,
															"src": "15340:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1356,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1321,
															"src": "15347:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1357,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1323,
															"src": "15356:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1354,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 77,
														"src": "15331:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15331:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1359,
												"nodeType": "EmitStatement",
												"src": "15326:37:0"
											}
										]
									},
									"id": 1361,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "15049:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1319,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "15066:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1361,
												"src": "15058:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1318,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15058:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1321,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "15081:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1361,
												"src": "15073:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1320,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1323,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "15098:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1361,
												"src": "15090:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1322,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15090:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15057:48:0"
									},
									"returnParameters": {
										"id": 1325,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15114:0:0"
									},
									"scope": 2979,
									"src": "15040:330:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1670,
										"nodeType": "Block",
										"src": "15449:2998:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1376,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1371,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1363,
																"src": "15467:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1374,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15483:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1373,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "15475:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1372,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "15475:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1375,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15475:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "15467:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 1377,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15487:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 1370,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "15459:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15459:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1379,
												"nodeType": "ExpressionStatement",
												"src": "15459:68:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1386,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1381,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1365,
																"src": "15545:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1384,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15559:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1383,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "15551:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1382,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "15551:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1385,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15551:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "15545:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 1387,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15563:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 1380,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "15537:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15537:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1389,
												"nodeType": "ExpressionStatement",
												"src": "15537:64:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1393,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1391,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1367,
																"src": "15619:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1392,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15628:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "15619:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e7366657220616d6f756e74206d7573742062652067726561746572207468616e207a65726f",
															"id": 1394,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15631:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9edb5ab58321f35d2386ea65721c9b107daa2c273610fc16d394af2a320ba785",
																"typeString": "literal_string \"Transfer amount must be greater than zero\""
															},
															"value": "Transfer amount must be greater than zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9edb5ab58321f35d2386ea65721c9b107daa2c273610fc16d394af2a320ba785",
																"typeString": "literal_string \"Transfer amount must be greater than zero\""
															}
														],
														"id": 1390,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "15611:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1395,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15611:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1396,
												"nodeType": "ExpressionStatement",
												"src": "15611:64:0"
											},
											{
												"assignments": [
													1398
												],
												"declarations": [
													{
														"constant": false,
														"id": 1398,
														"mutability": "mutable",
														"name": "takeFee",
														"nameLocation": "15691:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1670,
														"src": "15686:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1397,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "15686:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1400,
												"initialValue": {
													"hexValue": "74727565",
													"id": 1399,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "15701:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15686:19:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1416,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1409,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1404,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1401,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1363,
																	"src": "15720:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1402,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 265,
																		"src": "15728:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1403,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "15728:7:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "15720:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1408,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1405,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1365,
																	"src": "15739:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1406,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 265,
																		"src": "15745:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1407,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "15745:7:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "15739:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "15720:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1415,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1410,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1363,
																"src": "15756:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 1413,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "15772:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_gainZilla_$2979",
																			"typeString": "contract gainZilla"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_gainZilla_$2979",
																			"typeString": "contract gainZilla"
																		}
																	],
																	"id": 1412,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "15764:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1411,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "15764:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1414,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15764:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "15756:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "15720:57:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1422,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1417,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1365,
															"src": "15781:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"id": 1420,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "15795:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_gainZilla_$2979",
																		"typeString": "contract gainZilla"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_gainZilla_$2979",
																		"typeString": "contract gainZilla"
																	}
																],
																"id": 1419,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15787:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1418,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "15787:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1421,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15787:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "15781:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "15720:80:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1649,
												"nodeType": "IfStatement",
												"src": "15716:2559:0",
												"trueBody": {
													"id": 1648,
													"nodeType": "Block",
													"src": "15802:2473:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1425,
																		"name": "tradingOpen",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 910,
																		"src": "15824:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "54726164696e67206973206e6f7420616374697665",
																		"id": 1426,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15837:23:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_1e00c61f0a7b721724fe214bc791e509089379e5d75afe66b9a59ad6bee5002b",
																			"typeString": "literal_string \"Trading is not active\""
																		},
																		"value": "Trading is not active"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_1e00c61f0a7b721724fe214bc791e509089379e5d75afe66b9a59ad6bee5002b",
																			"typeString": "literal_string \"Trading is not active\""
																		}
																	],
																	"id": 1424,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "15816:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1427,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15816:45:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1428,
															"nodeType": "ExpressionStatement",
															"src": "15816:45:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1438,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 1431,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1429,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1363,
																		"src": "15879:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 1430,
																		"name": "uniswapV2Pair",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 905,
																		"src": "15887:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "15879:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 1437,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1432,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1365,
																		"src": "15904:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "!=",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 1435,
																				"name": "uniswapV2Router",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 903,
																				"src": "15918:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IUniswapV2Router02_$707",
																					"typeString": "contract IUniswapV2Router02"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IUniswapV2Router02_$707",
																					"typeString": "contract IUniswapV2Router02"
																				}
																			],
																			"id": 1434,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "15910:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1433,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "15910:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1436,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15910:24:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "15904:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "15879:55:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1467,
															"nodeType": "IfStatement",
															"src": "15875:349:0",
															"trueBody": {
																"id": 1466,
																"nodeType": "Block",
																"src": "15936:288:0",
																"statements": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1445,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 1439,
																					"name": "block",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967292,
																					"src": "15965:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_block",
																						"typeString": "block"
																					}
																				},
																				"id": 1440,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "timestamp",
																				"nodeType": "MemberAccess",
																				"src": "15965:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<=",
																			"rightExpression": {
																				"arguments": [
																					{
																						"id": 1443,
																						"name": "_botBlocks",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 770,
																						"src": "16000:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"id": 1441,
																						"name": "_firstBlock",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 768,
																						"src": "15984:11:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1442,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "add",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 103,
																					"src": "15984:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1444,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "15984:27:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "15965:46:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1453,
																		"nodeType": "IfStatement",
																		"src": "15961:108:0",
																		"trueBody": {
																			"id": 1452,
																			"nodeType": "Block",
																			"src": "16013:56:0",
																			"statements": [
																				{
																					"expression": {
																						"id": 1450,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"baseExpression": {
																								"id": 1446,
																								"name": "bots",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 876,
																								"src": "16035:4:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																									"typeString": "mapping(address => bool)"
																								}
																							},
																							"id": 1448,
																							"indexExpression": {
																								"id": 1447,
																								"name": "to",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1365,
																								"src": "16040:2:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": true,
																							"nodeType": "IndexAccess",
																							"src": "16035:8:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"hexValue": "74727565",
																							"id": 1449,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "bool",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "16046:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							},
																							"value": "true"
																						},
																						"src": "16035:15:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"id": 1451,
																					"nodeType": "ExpressionStatement",
																					"src": "16035:15:0"
																				}
																			]
																		}
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1462,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"arguments": [
																							{
																								"id": 1459,
																								"name": "amount",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1367,
																								"src": "16112:6:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"arguments": [
																									{
																										"id": 1456,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1365,
																										"src": "16104:2:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1455,
																									"name": "balanceOf",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1107,
																									"src": "16094:9:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																										"typeString": "function (address) view returns (uint256)"
																									}
																								},
																								"id": 1457,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "16094:13:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 1458,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "add",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 103,
																							"src": "16094:17:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																								"typeString": "function (uint256,uint256) pure returns (uint256)"
																							}
																						},
																						"id": 1460,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "16094:25:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<=",
																					"rightExpression": {
																						"id": 1461,
																						"name": "_maxWalletAmount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 777,
																						"src": "16123:16:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "16094:45:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "77616c6c65742062616c616e6365206166746572207472616e73666572206d757374206265206c657373207468616e206d61782077616c6c657420616d6f756e74",
																					"id": 1463,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "16141:67:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_731e86e0f4debbbebee6a0dcbb3d6dc5cdb0fbd7e578469b1b568c260565d3dc",
																						"typeString": "literal_string \"wallet balance after transfer must be less than max wallet amount\""
																					},
																					"value": "wallet balance after transfer must be less than max wallet amount"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_731e86e0f4debbbebee6a0dcbb3d6dc5cdb0fbd7e578469b1b568c260565d3dc",
																						"typeString": "literal_string \"wallet balance after transfer must be less than max wallet amount\""
																					}
																				],
																				"id": 1454,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "16086:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 1464,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "16086:123:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1465,
																		"nodeType": "ExpressionStatement",
																		"src": "16086:123:0"
																	}
																]
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1477,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1473,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1469,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "!",
																		"prefix": true,
																		"src": "16254:7:0",
																		"subExpression": {
																			"id": 1468,
																			"name": "inSwap",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 913,
																			"src": "16255:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1472,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1470,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1363,
																			"src": "16265:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 1471,
																			"name": "uniswapV2Pair",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 905,
																			"src": "16273:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "16265:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "16254:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 1476,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1474,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1365,
																		"src": "16290:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 1475,
																		"name": "uniswapV2Pair",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 905,
																		"src": "16296:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "16290:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "16254:55:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1626,
															"nodeType": "IfStatement",
															"src": "16250:1766:0",
															"trueBody": {
																"id": 1625,
																"nodeType": "Block",
																"src": "16311:1705:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					"id": 1487,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1482,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "UnaryOperation",
																						"operator": "!",
																						"prefix": true,
																						"src": "16345:11:0",
																						"subExpression": {
																							"baseExpression": {
																								"id": 1479,
																								"name": "bots",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 876,
																								"src": "16346:4:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																									"typeString": "mapping(address => bool)"
																								}
																							},
																							"id": 1481,
																							"indexExpression": {
																								"id": 1480,
																								"name": "from",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1363,
																								"src": "16351:4:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "16346:10:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						},
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "&&",
																					"rightExpression": {
																						"id": 1486,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "UnaryOperation",
																						"operator": "!",
																						"prefix": true,
																						"src": "16360:9:0",
																						"subExpression": {
																							"baseExpression": {
																								"id": 1483,
																								"name": "bots",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 876,
																								"src": "16361:4:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																									"typeString": "mapping(address => bool)"
																								}
																							},
																							"id": 1485,
																							"indexExpression": {
																								"id": 1484,
																								"name": "to",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1365,
																								"src": "16366:2:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "16361:8:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						},
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"src": "16345:24:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				],
																				"id": 1478,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "16337:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																					"typeString": "function (bool) pure"
																				}
																			},
																			"id": 1488,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "16337:33:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1489,
																		"nodeType": "ExpressionStatement",
																		"src": "16337:33:0"
																	},
																	{
																		"condition": {
																			"expression": {
																				"id": 1490,
																				"name": "cooldown",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 858,
																				"src": "16438:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_StrongHandsConfig_$855_storage",
																					"typeString": "struct gainZilla.StrongHandsConfig storage ref"
																				}
																			},
																			"id": 1491,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "enabled",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 848,
																			"src": "16438:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1516,
																		"nodeType": "IfStatement",
																		"src": "16434:233:0",
																		"trueBody": {
																			"id": 1515,
																			"nodeType": "Block",
																			"src": "16456:211:0",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1499,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"expression": {
																										"id": 1493,
																										"name": "block",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 4294967292,
																										"src": "16486:5:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_magic_block",
																											"typeString": "block"
																										}
																									},
																									"id": 1494,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "timestamp",
																									"nodeType": "MemberAccess",
																									"src": "16486:15:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": ">=",
																								"rightExpression": {
																									"baseExpression": {
																										"expression": {
																											"id": 1495,
																											"name": "cooldown",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 858,
																											"src": "16505:8:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_struct$_StrongHandsConfig_$855_storage",
																												"typeString": "struct gainZilla.StrongHandsConfig storage ref"
																											}
																										},
																										"id": 1496,
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberName": "walletList",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 854,
																										"src": "16505:19:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																											"typeString": "mapping(address => uint256)"
																										}
																									},
																									"id": 1498,
																									"indexExpression": {
																										"id": 1497,
																										"name": "from",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1363,
																										"src": "16525:4:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "IndexAccess",
																									"src": "16505:25:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "16486:44:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bool",
																									"typeString": "bool"
																								}
																							},
																							{
																								"hexValue": "5374726f6e672048616e64732050726f746f636f6c20616374697665",
																								"id": 1500,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "string",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "16532:30:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_stringliteral_268446f78394810523a9d9ab5dfb456a808e6d969331d3363f26d133e00f8a00",
																									"typeString": "literal_string \"Strong Hands Protocol active\""
																								},
																								"value": "Strong Hands Protocol active"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_bool",
																									"typeString": "bool"
																								},
																								{
																									"typeIdentifier": "t_stringliteral_268446f78394810523a9d9ab5dfb456a808e6d969331d3363f26d133e00f8a00",
																									"typeString": "literal_string \"Strong Hands Protocol active\""
																								}
																							],
																							"id": 1492,
																							"name": "require",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [
																								4294967278,
																								4294967278
																							],
																							"referencedDeclaration": 4294967278,
																							"src": "16478:7:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																								"typeString": "function (bool,string memory) pure"
																							}
																						},
																						"id": 1501,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "16478:85:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$__$",
																							"typeString": "tuple()"
																						}
																					},
																					"id": 1502,
																					"nodeType": "ExpressionStatement",
																					"src": "16478:85:0"
																				},
																				{
																					"expression": {
																						"id": 1513,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"baseExpression": {
																								"expression": {
																									"id": 1503,
																									"name": "cooldown",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 858,
																									"src": "16585:8:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_StrongHandsConfig_$855_storage",
																										"typeString": "struct gainZilla.StrongHandsConfig storage ref"
																									}
																								},
																								"id": 1506,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "walletList",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 854,
																								"src": "16585:19:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																									"typeString": "mapping(address => uint256)"
																								}
																							},
																							"id": 1507,
																							"indexExpression": {
																								"id": 1505,
																								"name": "from",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1363,
																								"src": "16605:4:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": true,
																							"nodeType": "IndexAccess",
																							"src": "16585:25:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 1512,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"expression": {
																									"id": 1508,
																									"name": "block",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 4294967292,
																									"src": "16613:5:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_magic_block",
																										"typeString": "block"
																									}
																								},
																								"id": 1509,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "timestamp",
																								"nodeType": "MemberAccess",
																								"src": "16613:15:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "+",
																							"rightExpression": {
																								"expression": {
																									"id": 1510,
																									"name": "cooldown",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 858,
																									"src": "16631:8:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_StrongHandsConfig_$855_storage",
																										"typeString": "struct gainZilla.StrongHandsConfig storage ref"
																									}
																								},
																								"id": 1511,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "duration",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 850,
																								"src": "16631:17:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint32",
																									"typeString": "uint32"
																								}
																							},
																							"src": "16613:35:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "16585:63:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1514,
																					"nodeType": "ExpressionStatement",
																					"src": "16585:63:0"
																				}
																			]
																		}
																	},
																	{
																		"condition": {
																			"expression": {
																				"id": 1517,
																				"name": "diamondFloor",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 872,
																				"src": "16728:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_DiamondFloor_$869_storage",
																					"typeString": "struct gainZilla.DiamondFloor storage ref"
																				}
																			},
																			"id": 1518,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "enabled",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 860,
																			"src": "16728:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1530,
																		"nodeType": "IfStatement",
																		"src": "16724:180:0",
																		"trueBody": {
																			"id": 1529,
																			"nodeType": "Block",
																			"src": "16750:154:0",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"id": 1522,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "UnaryOperation",
																								"operator": "!",
																								"prefix": true,
																								"src": "16780:25:0",
																								"subExpression": {
																									"expression": {
																										"id": 1520,
																										"name": "diamondFloor",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 872,
																										"src": "16781:12:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_struct$_DiamondFloor_$869_storage",
																											"typeString": "struct gainZilla.DiamondFloor storage ref"
																										}
																									},
																									"id": 1521,
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "sellStopped",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 866,
																									"src": "16781:24:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_bool",
																										"typeString": "bool"
																									}
																								},
																								"typeDescriptions": {
																									"typeIdentifier": "t_bool",
																									"typeString": "bool"
																								}
																							},
																							{
																								"hexValue": "53656c6c732073746f70706564206279204469616d6f6e6420466c6f6f72",
																								"id": 1523,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "string",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "16807:32:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_stringliteral_30dd4f997a6ca09c24570e16af51c4dd5e70cd227c7036b9ebf2853f38eba550",
																									"typeString": "literal_string \"Sells stopped by Diamond Floor\""
																								},
																								"value": "Sells stopped by Diamond Floor"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_bool",
																									"typeString": "bool"
																								},
																								{
																									"typeIdentifier": "t_stringliteral_30dd4f997a6ca09c24570e16af51c4dd5e70cd227c7036b9ebf2853f38eba550",
																									"typeString": "literal_string \"Sells stopped by Diamond Floor\""
																								}
																							],
																							"id": 1519,
																							"name": "require",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [
																								4294967278,
																								4294967278
																							],
																							"referencedDeclaration": 4294967278,
																							"src": "16772:7:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																								"typeString": "function (bool,string memory) pure"
																							}
																						},
																						"id": 1524,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "16772:68:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$__$",
																							"typeString": "tuple()"
																						}
																					},
																					"id": 1525,
																					"nodeType": "ExpressionStatement",
																					"src": "16772:68:0"
																				},
																				{
																					"expression": {
																						"arguments": [],
																						"expression": {
																							"argumentTypes": [],
																							"id": 1526,
																							"name": "_checkPriceConditions",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1823,
																							"src": "16862:21:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																								"typeString": "function ()"
																							}
																						},
																						"id": 1527,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "16862:23:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$__$",
																							"typeString": "tuple()"
																						}
																					},
																					"id": 1528,
																					"nodeType": "ExpressionStatement",
																					"src": "16862:23:0"
																				}
																			]
																		}
																	},
																	{
																		"assignments": [
																			1532
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1532,
																				"mutability": "mutable",
																				"name": "contractTokenBalance",
																				"nameLocation": "16946:20:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 1625,
																				"src": "16938:28:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1531,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "16938:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1539,
																		"initialValue": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 1536,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "16987:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_gainZilla_$2979",
																								"typeString": "contract gainZilla"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_gainZilla_$2979",
																								"typeString": "contract gainZilla"
																							}
																						],
																						"id": 1535,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "16979:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1534,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "16979:7:0",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1537,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "16979:13:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1533,
																				"name": "balanceOf",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1107,
																				"src": "16969:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address) view returns (uint256)"
																				}
																			},
																			"id": 1538,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "16969:24:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "16938:55:0"
																	},
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1542,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1540,
																				"name": "contractTokenBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1532,
																				"src": "17016:20:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">=",
																			"rightExpression": {
																				"id": 1541,
																				"name": "numTokensToSwap",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 784,
																				"src": "17040:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "17016:39:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1624,
																		"nodeType": "IfStatement",
																		"src": "17012:969:0",
																		"trueBody": {
																			"id": 1623,
																			"nodeType": "Block",
																			"src": "17057:924:0",
																			"statements": [
																				{
																					"condition": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1545,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 1543,
																							"name": "contractTokenBalance",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1532,
																							"src": "17083:20:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": ">",
																						"rightExpression": {
																							"hexValue": "30",
																							"id": 1544,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "17106:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						},
																						"src": "17083:24:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"id": 1601,
																					"nodeType": "IfStatement",
																					"src": "17079:679:0",
																					"trueBody": {
																						"id": 1600,
																						"nodeType": "Block",
																						"src": "17109:649:0",
																						"statements": [
																							{
																								"condition": {
																									"commonType": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									"id": 1557,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftExpression": {
																										"arguments": [
																											{
																												"id": 1554,
																												"name": "_sellLiquidityFee",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 811,
																												"src": "17202:17:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											}
																										],
																										"expression": {
																											"argumentTypes": [
																												{
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											],
																											"expression": {
																												"arguments": [
																													{
																														"id": 1551,
																														"name": "_sellEcosystemFee",
																														"nodeType": "Identifier",
																														"overloadedDeclarations": [],
																														"referencedDeclaration": 817,
																														"src": "17179:17:0",
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													}
																												],
																												"expression": {
																													"argumentTypes": [
																														{
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													],
																													"expression": {
																														"arguments": [
																															{
																																"id": 1548,
																																"name": "_sellTeamFee",
																																"nodeType": "Identifier",
																																"overloadedDeclarations": [],
																																"referencedDeclaration": 829,
																																"src": "17161:12:0",
																																"typeDescriptions": {
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															}
																														],
																														"expression": {
																															"argumentTypes": [
																																{
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															],
																															"expression": {
																																"id": 1546,
																																"name": "_sellMarketingFee",
																																"nodeType": "Identifier",
																																"overloadedDeclarations": [],
																																"referencedDeclaration": 823,
																																"src": "17139:17:0",
																																"typeDescriptions": {
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															},
																															"id": 1547,
																															"isConstant": false,
																															"isLValue": false,
																															"isPure": false,
																															"lValueRequested": false,
																															"memberName": "add",
																															"nodeType": "MemberAccess",
																															"referencedDeclaration": 103,
																															"src": "17139:21:0",
																															"typeDescriptions": {
																																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																																"typeString": "function (uint256,uint256) pure returns (uint256)"
																															}
																														},
																														"id": 1549,
																														"isConstant": false,
																														"isLValue": false,
																														"isPure": false,
																														"kind": "functionCall",
																														"lValueRequested": false,
																														"names": [],
																														"nodeType": "FunctionCall",
																														"src": "17139:35:0",
																														"tryCall": false,
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													},
																													"id": 1550,
																													"isConstant": false,
																													"isLValue": false,
																													"isPure": false,
																													"lValueRequested": false,
																													"memberName": "add",
																													"nodeType": "MemberAccess",
																													"referencedDeclaration": 103,
																													"src": "17139:39:0",
																													"typeDescriptions": {
																														"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																														"typeString": "function (uint256,uint256) pure returns (uint256)"
																													}
																												},
																												"id": 1552,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"kind": "functionCall",
																												"lValueRequested": false,
																												"names": [],
																												"nodeType": "FunctionCall",
																												"src": "17139:58:0",
																												"tryCall": false,
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"id": 1553,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"memberName": "add",
																											"nodeType": "MemberAccess",
																											"referencedDeclaration": 103,
																											"src": "17139:62:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																												"typeString": "function (uint256,uint256) pure returns (uint256)"
																											}
																										},
																										"id": 1555,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"kind": "functionCall",
																										"lValueRequested": false,
																										"names": [],
																										"nodeType": "FunctionCall",
																										"src": "17139:81:0",
																										"tryCall": false,
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "BinaryOperation",
																									"operator": ">",
																									"rightExpression": {
																										"hexValue": "30",
																										"id": 1556,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "17223:1:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_0_by_1",
																											"typeString": "int_const 0"
																										},
																										"value": "0"
																									},
																									"src": "17139:85:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_bool",
																										"typeString": "bool"
																									}
																								},
																								"id": 1599,
																								"nodeType": "IfStatement",
																								"src": "17135:601:0",
																								"trueBody": {
																									"id": 1598,
																									"nodeType": "Block",
																									"src": "17226:510:0",
																									"statements": [
																										{
																											"assignments": [
																												1559
																											],
																											"declarations": [
																												{
																													"constant": false,
																													"id": 1559,
																													"mutability": "mutable",
																													"name": "autoLPamount",
																													"nameLocation": "17264:12:0",
																													"nodeType": "VariableDeclaration",
																													"scope": 1598,
																													"src": "17256:20:0",
																													"stateVariable": false,
																													"storageLocation": "default",
																													"typeDescriptions": {
																														"typeIdentifier": "t_uint256",
																														"typeString": "uint256"
																													},
																													"typeName": {
																														"id": 1558,
																														"name": "uint256",
																														"nodeType": "ElementaryTypeName",
																														"src": "17256:7:0",
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													},
																													"visibility": "internal"
																												}
																											],
																											"id": 1576,
																											"initialValue": {
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"id": 1573,
																																"name": "_sellLiquidityFee",
																																"nodeType": "Identifier",
																																"overloadedDeclarations": [],
																																"referencedDeclaration": 811,
																																"src": "17390:17:0",
																																"typeDescriptions": {
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															}
																														],
																														"expression": {
																															"argumentTypes": [
																																{
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															],
																															"expression": {
																																"arguments": [
																																	{
																																		"id": 1570,
																																		"name": "_sellEcosystemFee",
																																		"nodeType": "Identifier",
																																		"overloadedDeclarations": [],
																																		"referencedDeclaration": 817,
																																		"src": "17367:17:0",
																																		"typeDescriptions": {
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		}
																																	}
																																],
																																"expression": {
																																	"argumentTypes": [
																																		{
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		}
																																	],
																																	"expression": {
																																		"arguments": [
																																			{
																																				"id": 1567,
																																				"name": "_sellTeamFee",
																																				"nodeType": "Identifier",
																																				"overloadedDeclarations": [],
																																				"referencedDeclaration": 829,
																																				"src": "17349:12:0",
																																				"typeDescriptions": {
																																					"typeIdentifier": "t_uint256",
																																					"typeString": "uint256"
																																				}
																																			}
																																		],
																																		"expression": {
																																			"argumentTypes": [
																																				{
																																					"typeIdentifier": "t_uint256",
																																					"typeString": "uint256"
																																				}
																																			],
																																			"expression": {
																																				"id": 1565,
																																				"name": "_sellMarketingFee",
																																				"nodeType": "Identifier",
																																				"overloadedDeclarations": [],
																																				"referencedDeclaration": 823,
																																				"src": "17327:17:0",
																																				"typeDescriptions": {
																																					"typeIdentifier": "t_uint256",
																																					"typeString": "uint256"
																																				}
																																			},
																																			"id": 1566,
																																			"isConstant": false,
																																			"isLValue": false,
																																			"isPure": false,
																																			"lValueRequested": false,
																																			"memberName": "add",
																																			"nodeType": "MemberAccess",
																																			"referencedDeclaration": 103,
																																			"src": "17327:21:0",
																																			"typeDescriptions": {
																																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																																			}
																																		},
																																		"id": 1568,
																																		"isConstant": false,
																																		"isLValue": false,
																																		"isPure": false,
																																		"kind": "functionCall",
																																		"lValueRequested": false,
																																		"names": [],
																																		"nodeType": "FunctionCall",
																																		"src": "17327:35:0",
																																		"tryCall": false,
																																		"typeDescriptions": {
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		}
																																	},
																																	"id": 1569,
																																	"isConstant": false,
																																	"isLValue": false,
																																	"isPure": false,
																																	"lValueRequested": false,
																																	"memberName": "add",
																																	"nodeType": "MemberAccess",
																																	"referencedDeclaration": 103,
																																	"src": "17327:39:0",
																																	"typeDescriptions": {
																																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																																	}
																																},
																																"id": 1571,
																																"isConstant": false,
																																"isLValue": false,
																																"isPure": false,
																																"kind": "functionCall",
																																"lValueRequested": false,
																																"names": [],
																																"nodeType": "FunctionCall",
																																"src": "17327:58:0",
																																"tryCall": false,
																																"typeDescriptions": {
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															},
																															"id": 1572,
																															"isConstant": false,
																															"isLValue": false,
																															"isPure": false,
																															"lValueRequested": false,
																															"memberName": "add",
																															"nodeType": "MemberAccess",
																															"referencedDeclaration": 103,
																															"src": "17327:62:0",
																															"typeDescriptions": {
																																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																																"typeString": "function (uint256,uint256) pure returns (uint256)"
																															}
																														},
																														"id": 1574,
																														"isConstant": false,
																														"isLValue": false,
																														"isPure": false,
																														"kind": "functionCall",
																														"lValueRequested": false,
																														"names": [],
																														"nodeType": "FunctionCall",
																														"src": "17327:81:0",
																														"tryCall": false,
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													}
																												],
																												"expression": {
																													"argumentTypes": [
																														{
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													],
																													"expression": {
																														"arguments": [
																															{
																																"id": 1562,
																																"name": "contractTokenBalance",
																																"nodeType": "Identifier",
																																"overloadedDeclarations": [],
																																"referencedDeclaration": 1532,
																																"src": "17301:20:0",
																																"typeDescriptions": {
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															}
																														],
																														"expression": {
																															"argumentTypes": [
																																{
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															],
																															"expression": {
																																"id": 1560,
																																"name": "_sellLiquidityFee",
																																"nodeType": "Identifier",
																																"overloadedDeclarations": [],
																																"referencedDeclaration": 811,
																																"src": "17279:17:0",
																																"typeDescriptions": {
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															},
																															"id": 1561,
																															"isConstant": false,
																															"isLValue": false,
																															"isPure": false,
																															"lValueRequested": false,
																															"memberName": "mul",
																															"nodeType": "MemberAccess",
																															"referencedDeclaration": 180,
																															"src": "17279:21:0",
																															"typeDescriptions": {
																																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																																"typeString": "function (uint256,uint256) pure returns (uint256)"
																															}
																														},
																														"id": 1563,
																														"isConstant": false,
																														"isLValue": false,
																														"isPure": false,
																														"kind": "functionCall",
																														"lValueRequested": false,
																														"names": [],
																														"nodeType": "FunctionCall",
																														"src": "17279:43:0",
																														"tryCall": false,
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													},
																													"id": 1564,
																													"isConstant": false,
																													"isLValue": false,
																													"isPure": false,
																													"lValueRequested": false,
																													"memberName": "div",
																													"nodeType": "MemberAccess",
																													"referencedDeclaration": 196,
																													"src": "17279:47:0",
																													"typeDescriptions": {
																														"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																														"typeString": "function (uint256,uint256) pure returns (uint256)"
																													}
																												},
																												"id": 1575,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"kind": "functionCall",
																												"lValueRequested": false,
																												"names": [],
																												"nodeType": "FunctionCall",
																												"src": "17279:130:0",
																												"tryCall": false,
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"nodeType": "VariableDeclarationStatement",
																											"src": "17256:153:0"
																										},
																										{
																											"assignments": [
																												1578
																											],
																											"declarations": [
																												{
																													"constant": false,
																													"id": 1578,
																													"mutability": "mutable",
																													"name": "minusLP",
																													"nameLocation": "17447:7:0",
																													"nodeType": "VariableDeclaration",
																													"scope": 1598,
																													"src": "17439:15:0",
																													"stateVariable": false,
																													"storageLocation": "default",
																													"typeDescriptions": {
																														"typeIdentifier": "t_uint256",
																														"typeString": "uint256"
																													},
																													"typeName": {
																														"id": 1577,
																														"name": "uint256",
																														"nodeType": "ElementaryTypeName",
																														"src": "17439:7:0",
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													},
																													"visibility": "internal"
																												}
																											],
																											"id": 1580,
																											"initialValue": {
																												"hexValue": "30",
																												"id": 1579,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": true,
																												"kind": "number",
																												"lValueRequested": false,
																												"nodeType": "Literal",
																												"src": "17457:1:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_rational_0_by_1",
																													"typeString": "int_const 0"
																												},
																												"value": "0"
																											},
																											"nodeType": "VariableDeclarationStatement",
																											"src": "17439:19:0"
																										},
																										{
																											"condition": {
																												"commonType": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												},
																												"id": 1583,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"lValueRequested": false,
																												"leftExpression": {
																													"id": 1581,
																													"name": "contractTokenBalance",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 1532,
																													"src": "17492:20:0",
																													"typeDescriptions": {
																														"typeIdentifier": "t_uint256",
																														"typeString": "uint256"
																													}
																												},
																												"nodeType": "BinaryOperation",
																												"operator": ">=",
																												"rightExpression": {
																													"id": 1582,
																													"name": "autoLPamount",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 1559,
																													"src": "17516:12:0",
																													"typeDescriptions": {
																														"typeIdentifier": "t_uint256",
																														"typeString": "uint256"
																													}
																												},
																												"src": "17492:36:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_bool",
																													"typeString": "bool"
																												}
																											},
																											"id": 1592,
																											"nodeType": "IfStatement",
																											"src": "17488:155:0",
																											"trueBody": {
																												"id": 1591,
																												"nodeType": "Block",
																												"src": "17530:113:0",
																												"statements": [
																													{
																														"expression": {
																															"id": 1589,
																															"isConstant": false,
																															"isLValue": false,
																															"isPure": false,
																															"lValueRequested": false,
																															"leftHandSide": {
																																"id": 1584,
																																"name": "minusLP",
																																"nodeType": "Identifier",
																																"overloadedDeclarations": [],
																																"referencedDeclaration": 1578,
																																"src": "17564:7:0",
																																"typeDescriptions": {
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															},
																															"nodeType": "Assignment",
																															"operator": "=",
																															"rightHandSide": {
																																"arguments": [
																																	{
																																		"id": 1587,
																																		"name": "autoLPamount",
																																		"nodeType": "Identifier",
																																		"overloadedDeclarations": [],
																																		"referencedDeclaration": 1559,
																																		"src": "17599:12:0",
																																		"typeDescriptions": {
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		}
																																	}
																																],
																																"expression": {
																																	"argumentTypes": [
																																		{
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		}
																																	],
																																	"expression": {
																																		"id": 1585,
																																		"name": "contractTokenBalance",
																																		"nodeType": "Identifier",
																																		"overloadedDeclarations": [],
																																		"referencedDeclaration": 1532,
																																		"src": "17574:20:0",
																																		"typeDescriptions": {
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		}
																																	},
																																	"id": 1586,
																																	"isConstant": false,
																																	"isLValue": false,
																																	"isPure": false,
																																	"lValueRequested": false,
																																	"memberName": "sub",
																																	"nodeType": "MemberAccess",
																																	"referencedDeclaration": 119,
																																	"src": "17574:24:0",
																																	"typeDescriptions": {
																																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																																	}
																																},
																																"id": 1588,
																																"isConstant": false,
																																"isLValue": false,
																																"isPure": false,
																																"kind": "functionCall",
																																"lValueRequested": false,
																																"names": [],
																																"nodeType": "FunctionCall",
																																"src": "17574:38:0",
																																"tryCall": false,
																																"typeDescriptions": {
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															},
																															"src": "17564:48:0",
																															"typeDescriptions": {
																																"typeIdentifier": "t_uint256",
																																"typeString": "uint256"
																															}
																														},
																														"id": 1590,
																														"nodeType": "ExpressionStatement",
																														"src": "17564:48:0"
																													}
																												]
																											}
																										},
																										{
																											"expression": {
																												"arguments": [
																													{
																														"id": 1594,
																														"name": "autoLPamount",
																														"nodeType": "Identifier",
																														"overloadedDeclarations": [],
																														"referencedDeclaration": 1559,
																														"src": "17687:12:0",
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													},
																													{
																														"id": 1595,
																														"name": "minusLP",
																														"nodeType": "Identifier",
																														"overloadedDeclarations": [],
																														"referencedDeclaration": 1578,
																														"src": "17701:7:0",
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													}
																												],
																												"expression": {
																													"argumentTypes": [
																														{
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														},
																														{
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													],
																													"id": 1593,
																													"name": "swapAndLiquify",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 1993,
																													"src": "17672:14:0",
																													"typeDescriptions": {
																														"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
																														"typeString": "function (uint256,uint256)"
																													}
																												},
																												"id": 1596,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"kind": "functionCall",
																												"lValueRequested": false,
																												"names": [],
																												"nodeType": "FunctionCall",
																												"src": "17672:37:0",
																												"tryCall": false,
																												"typeDescriptions": {
																													"typeIdentifier": "t_tuple$__$",
																													"typeString": "tuple()"
																												}
																											},
																											"id": 1597,
																											"nodeType": "ExpressionStatement",
																											"src": "17672:37:0"
																										}
																									]
																								}
																							}
																						]
																					}
																				},
																				{
																					"assignments": [
																						1603
																					],
																					"declarations": [
																						{
																							"constant": false,
																							"id": 1603,
																							"mutability": "mutable",
																							"name": "contractETHBalance",
																							"nameLocation": "17787:18:0",
																							"nodeType": "VariableDeclaration",
																							"scope": 1623,
																							"src": "17779:26:0",
																							"stateVariable": false,
																							"storageLocation": "default",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"typeName": {
																								"id": 1602,
																								"name": "uint256",
																								"nodeType": "ElementaryTypeName",
																								"src": "17779:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"visibility": "internal"
																						}
																					],
																					"id": 1609,
																					"initialValue": {
																						"expression": {
																							"arguments": [
																								{
																									"id": 1606,
																									"name": "this",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 4294967268,
																									"src": "17816:4:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_contract$_gainZilla_$2979",
																										"typeString": "contract gainZilla"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_contract$_gainZilla_$2979",
																										"typeString": "contract gainZilla"
																									}
																								],
																								"id": 1605,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "ElementaryTypeNameExpression",
																								"src": "17808:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_address_$",
																									"typeString": "type(address)"
																								},
																								"typeName": {
																									"id": 1604,
																									"name": "address",
																									"nodeType": "ElementaryTypeName",
																									"src": "17808:7:0",
																									"typeDescriptions": {}
																								}
																							},
																							"id": 1607,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "typeConversion",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "17808:13:0",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"id": 1608,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "balance",
																						"nodeType": "MemberAccess",
																						"src": "17808:21:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "VariableDeclarationStatement",
																					"src": "17779:50:0"
																				},
																				{
																					"condition": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1612,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 1610,
																							"name": "contractETHBalance",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1603,
																							"src": "17855:18:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": ">",
																						"rightExpression": {
																							"hexValue": "30",
																							"id": 1611,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "17876:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						},
																						"src": "17855:22:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"id": 1622,
																					"nodeType": "IfStatement",
																					"src": "17851:112:0",
																					"trueBody": {
																						"id": 1621,
																						"nodeType": "Block",
																						"src": "17879:84:0",
																						"statements": [
																							{
																								"expression": {
																									"arguments": [
																										{
																											"expression": {
																												"arguments": [
																													{
																														"id": 1616,
																														"name": "this",
																														"nodeType": "Identifier",
																														"overloadedDeclarations": [],
																														"referencedDeclaration": 4294967268,
																														"src": "17926:4:0",
																														"typeDescriptions": {
																															"typeIdentifier": "t_contract$_gainZilla_$2979",
																															"typeString": "contract gainZilla"
																														}
																													}
																												],
																												"expression": {
																													"argumentTypes": [
																														{
																															"typeIdentifier": "t_contract$_gainZilla_$2979",
																															"typeString": "contract gainZilla"
																														}
																													],
																													"id": 1615,
																													"isConstant": false,
																													"isLValue": false,
																													"isPure": true,
																													"lValueRequested": false,
																													"nodeType": "ElementaryTypeNameExpression",
																													"src": "17918:7:0",
																													"typeDescriptions": {
																														"typeIdentifier": "t_type$_t_address_$",
																														"typeString": "type(address)"
																													},
																													"typeName": {
																														"id": 1614,
																														"name": "address",
																														"nodeType": "ElementaryTypeName",
																														"src": "17918:7:0",
																														"typeDescriptions": {}
																													}
																												},
																												"id": 1617,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"kind": "typeConversion",
																												"lValueRequested": false,
																												"names": [],
																												"nodeType": "FunctionCall",
																												"src": "17918:13:0",
																												"tryCall": false,
																												"typeDescriptions": {
																													"typeIdentifier": "t_address",
																													"typeString": "address"
																												}
																											},
																											"id": 1618,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"memberName": "balance",
																											"nodeType": "MemberAccess",
																											"src": "17918:21:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										}
																									],
																									"expression": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										],
																										"id": 1613,
																										"name": "sendETHToFee",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2077,
																										"src": "17905:12:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																											"typeString": "function (uint256)"
																										}
																									},
																									"id": 1619,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"kind": "functionCall",
																									"lValueRequested": false,
																									"names": [],
																									"nodeType": "FunctionCall",
																									"src": "17905:35:0",
																									"tryCall": false,
																									"typeDescriptions": {
																										"typeIdentifier": "t_tuple$__$",
																										"typeString": "tuple()"
																									}
																								},
																								"id": 1620,
																								"nodeType": "ExpressionStatement",
																								"src": "17905:35:0"
																							}
																						]
																					}
																				}
																			]
																		}
																	}
																]
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1633,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 1629,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1627,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1363,
																		"src": "18033:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "!=",
																	"rightExpression": {
																		"id": 1628,
																		"name": "uniswapV2Pair",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 905,
																		"src": "18041:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "18033:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 1632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1630,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1365,
																		"src": "18058:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "!=",
																	"rightExpression": {
																		"id": 1631,
																		"name": "uniswapV2Pair",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 905,
																		"src": "18064:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "18058:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "18033:44:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1647,
															"nodeType": "IfStatement",
															"src": "18030:235:0",
															"trueBody": {
																"id": 1646,
																"nodeType": "Block",
																"src": "18079:186:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1642,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"arguments": [
																							{
																								"id": 1639,
																								"name": "amount",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1367,
																								"src": "18152:6:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"arguments": [
																									{
																										"id": 1636,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1365,
																										"src": "18144:2:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1635,
																									"name": "balanceOf",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1107,
																									"src": "18134:9:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																										"typeString": "function (address) view returns (uint256)"
																									}
																								},
																								"id": 1637,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "18134:13:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 1638,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "add",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 103,
																							"src": "18134:17:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																								"typeString": "function (uint256,uint256) pure returns (uint256)"
																							}
																						},
																						"id": 1640,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "18134:25:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<=",
																					"rightExpression": {
																						"id": 1641,
																						"name": "_maxWalletAmount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 777,
																						"src": "18163:16:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "18134:45:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "77616c6c65742062616c616e6365206166746572207472616e73666572206d757374206265206c657373207468616e206d61782077616c6c657420616d6f756e74",
																					"id": 1643,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "18181:67:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_731e86e0f4debbbebee6a0dcbb3d6dc5cdb0fbd7e578469b1b568c260565d3dc",
																						"typeString": "literal_string \"wallet balance after transfer must be less than max wallet amount\""
																					},
																					"value": "wallet balance after transfer must be less than max wallet amount"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_731e86e0f4debbbebee6a0dcbb3d6dc5cdb0fbd7e578469b1b568c260565d3dc",
																						"typeString": "literal_string \"wallet balance after transfer must be less than max wallet amount\""
																					}
																				],
																				"id": 1634,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "18126:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 1644,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "18126:123:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1645,
																		"nodeType": "ExpressionStatement",
																		"src": "18126:123:0"
																	}
																]
															}
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1656,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 1650,
															"name": "_isExcludedFromFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 759,
															"src": "18289:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1652,
														"indexExpression": {
															"id": 1651,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1363,
															"src": "18308:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "18289:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"baseExpression": {
															"id": 1653,
															"name": "_isExcludedFromFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 759,
															"src": "18317:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1655,
														"indexExpression": {
															"id": 1654,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1365,
															"src": "18336:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "18317:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "18289:50:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1662,
												"nodeType": "IfStatement",
												"src": "18285:96:0",
												"trueBody": {
													"id": 1661,
													"nodeType": "Block",
													"src": "18341:40:0",
													"statements": [
														{
															"expression": {
																"id": 1659,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1657,
																	"name": "takeFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1398,
																	"src": "18355:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 1658,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18365:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "18355:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1660,
															"nodeType": "ExpressionStatement",
															"src": "18355:15:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1664,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1363,
															"src": "18414:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1665,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1365,
															"src": "18420:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1666,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1367,
															"src": "18424:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1667,
															"name": "takeFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1398,
															"src": "18432:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1663,
														"name": "_tokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2245,
														"src": "18399:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 1668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18399:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1669,
												"nodeType": "ExpressionStatement",
												"src": "18399:41:0"
											}
										]
									},
									"id": 1671,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "15389:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1363,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15407:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1671,
												"src": "15399:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1362,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15399:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1365,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15421:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1671,
												"src": "15413:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1364,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15413:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1367,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "15433:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1671,
												"src": "15425:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15425:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15398:42:0"
									},
									"returnParameters": {
										"id": 1369,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15449:0:0"
									},
									"scope": 2979,
									"src": "15380:3067:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1732,
										"nodeType": "Block",
										"src": "18523:334:0",
										"statements": [
											{
												"assignments": [
													1682
												],
												"declarations": [
													{
														"constant": false,
														"id": 1682,
														"mutability": "mutable",
														"name": "path",
														"nameLocation": "18550:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1732,
														"src": "18533:21:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 1680,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "18533:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1681,
															"nodeType": "ArrayTypeName",
															"src": "18533:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1688,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "32",
															"id": 1686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18571:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															}
														],
														"id": 1685,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "18557:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (address[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1683,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "18561:7:0",
																"stateMutability": "nonpayable",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1684,
															"nodeType": "ArrayTypeName",
															"src": "18561:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														}
													},
													"id": 1687,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18557:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18533:40:0"
											},
											{
												"expression": {
													"id": 1696,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1689,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1682,
															"src": "18583:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 1691,
														"indexExpression": {
															"hexValue": "30",
															"id": 1690,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18588:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "18583:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1694,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "18601:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_gainZilla_$2979",
																	"typeString": "contract gainZilla"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_gainZilla_$2979",
																	"typeString": "contract gainZilla"
																}
															],
															"id": 1693,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "18593:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1692,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "18593:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1695,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18593:13:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "18583:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1697,
												"nodeType": "ExpressionStatement",
												"src": "18583:23:0"
											},
											{
												"expression": {
													"id": 1704,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1698,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1682,
															"src": "18616:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 1700,
														"indexExpression": {
															"hexValue": "31",
															"id": 1699,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18621:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "18616:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 1701,
																"name": "uniswapV2Router",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 903,
																"src": "18626:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IUniswapV2Router02_$707",
																	"typeString": "contract IUniswapV2Router02"
																}
															},
															"id": 1702,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "WETH",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 630,
															"src": "18626:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
																"typeString": "function () pure external returns (address)"
															}
														},
														"id": 1703,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18626:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "18616:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1705,
												"nodeType": "ExpressionStatement",
												"src": "18616:32:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1709,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "18675:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_gainZilla_$2979",
																		"typeString": "contract gainZilla"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_gainZilla_$2979",
																		"typeString": "contract gainZilla"
																	}
																],
																"id": 1708,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "18667:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1707,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "18667:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1710,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18667:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1713,
																	"name": "uniswapV2Router",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 903,
																	"src": "18690:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IUniswapV2Router02_$707",
																		"typeString": "contract IUniswapV2Router02"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IUniswapV2Router02_$707",
																		"typeString": "contract IUniswapV2Router02"
																	}
																],
																"id": 1712,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "18682:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1711,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "18682:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1714,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18682:24:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1715,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1673,
															"src": "18708:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1706,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1361,
														"src": "18658:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1716,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18658:62:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1717,
												"nodeType": "ExpressionStatement",
												"src": "18658:62:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1721,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1673,
															"src": "18797:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 1722,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18810:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1723,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1682,
															"src": "18813:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														{
															"arguments": [
																{
																	"id": 1726,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "18827:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_gainZilla_$2979",
																		"typeString": "contract gainZilla"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_gainZilla_$2979",
																		"typeString": "contract gainZilla"
																	}
																],
																"id": 1725,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "18819:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1724,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "18819:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1727,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18819:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1728,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "18834:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1729,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "18834:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1718,
															"name": "uniswapV2Router",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 903,
															"src": "18730:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV2Router02_$707",
																"typeString": "contract IUniswapV2Router02"
															}
														},
														"id": 1720,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "swapExactTokensForETHSupportingFeeOnTransferTokens",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 606,
														"src": "18730:66:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,address[] memory,address,uint256) external"
														}
													},
													"id": 1730,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18730:120:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1731,
												"nodeType": "ExpressionStatement",
												"src": "18730:120:0"
											}
										]
									},
									"id": 1733,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1676,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1675,
												"name": "lockTheSwap",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 958,
												"src": "18511:11:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "18511:11:0"
										}
									],
									"name": "swapTokensForEth",
									"nameLocation": "18465:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1673,
												"mutability": "mutable",
												"name": "tokenAmount",
												"nameLocation": "18490:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1733,
												"src": "18482:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1672,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18482:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18481:21:0"
									},
									"returnParameters": {
										"id": 1677,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18523:0:0"
									},
									"scope": 2979,
									"src": "18456:401:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1822,
										"nodeType": "Block",
										"src": "18904:767:0",
										"statements": [
											{
												"assignments": [
													1737
												],
												"declarations": [
													{
														"constant": false,
														"id": 1737,
														"mutability": "mutable",
														"name": "currentPrice",
														"nameLocation": "18922:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 1822,
														"src": "18914:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1736,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "18914:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1740,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1738,
														"name": "pairPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1887,
														"src": "18937:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 1739,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18937:11:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18914:34:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1743,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1741,
														"name": "currentPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1737,
														"src": "18962:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1742,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "18978:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "18962:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1745,
												"nodeType": "IfStatement",
												"src": "18958:30:0",
												"trueBody": {
													"functionReturnParameters": 1735,
													"id": 1744,
													"nodeType": "Return",
													"src": "18981:7:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1749,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1746,
														"name": "currentPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1737,
														"src": "19002:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"id": 1747,
															"name": "diamondFloor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 872,
															"src": "19017:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_DiamondFloor_$869_storage",
																"typeString": "struct gainZilla.DiamondFloor storage ref"
															}
														},
														"id": 1748,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "athPrice",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 864,
														"src": "19017:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "19002:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1764,
												"nodeType": "IfStatement",
												"src": "18998:169:0",
												"trueBody": {
													"id": 1763,
													"nodeType": "Block",
													"src": "19040:127:0",
													"statements": [
														{
															"expression": {
																"id": 1754,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1750,
																		"name": "diamondFloor",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 872,
																		"src": "19054:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_DiamondFloor_$869_storage",
																			"typeString": "struct gainZilla.DiamondFloor storage ref"
																		}
																	},
																	"id": 1752,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "athPrice",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 864,
																	"src": "19054:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1753,
																	"name": "currentPrice",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1737,
																	"src": "19078:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "19054:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1755,
															"nodeType": "ExpressionStatement",
															"src": "19054:36:0"
														},
														{
															"expression": {
																"id": 1760,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1756,
																		"name": "diamondFloor",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 872,
																		"src": "19104:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_DiamondFloor_$869_storage",
																			"typeString": "struct gainZilla.DiamondFloor storage ref"
																		}
																	},
																	"id": 1758,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "sellStopped",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 866,
																	"src": "19104:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 1759,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19131:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "19104:32:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1761,
															"nodeType": "ExpressionStatement",
															"src": "19104:32:0"
														},
														{
															"functionReturnParameters": 1735,
															"id": 1762,
															"nodeType": "Return",
															"src": "19150:7:0"
														}
													]
												}
											},
											{
												"assignments": [
													1766
												],
												"declarations": [
													{
														"constant": false,
														"id": 1766,
														"mutability": "mutable",
														"name": "thresholdPrice",
														"nameLocation": "19185:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 1822,
														"src": "19177:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1765,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "19177:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1779,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "31303030",
															"id": 1777,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19300:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000_by_1",
																"typeString": "int_const 1000"
															},
															"value": "1000"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1000_by_1",
																"typeString": "int_const 1000"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 1773,
																		"name": "diamondFloor",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 872,
																		"src": "19251:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_DiamondFloor_$869_storage",
																			"typeString": "struct gainZilla.DiamondFloor storage ref"
																		}
																	},
																	"id": 1774,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "triggerPercentage",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 862,
																	"src": "19251:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"hexValue": "31303030",
																			"id": 1770,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19241:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1000_by_1",
																				"typeString": "int_const 1000"
																			},
																			"value": "1000"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_1000_by_1",
																				"typeString": "int_const 1000"
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 1767,
																				"name": "diamondFloor",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 872,
																				"src": "19202:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_DiamondFloor_$869_storage",
																					"typeString": "struct gainZilla.DiamondFloor storage ref"
																				}
																			},
																			"id": 1768,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "athPrice",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 864,
																			"src": "19202:21:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1769,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 180,
																		"src": "19202:38:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1771,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "19202:44:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1772,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 119,
																"src": "19202:48:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1775,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19202:80:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1776,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 196,
														"src": "19202:97:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1778,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19202:103:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19177:128:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1782,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1780,
														"name": "currentPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1737,
														"src": "19320:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1781,
														"name": "thresholdPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1766,
														"src": "19335:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "19320:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1797,
												"nodeType": "IfStatement",
												"src": "19316:152:0",
												"trueBody": {
													"id": 1796,
													"nodeType": "Block",
													"src": "19351:117:0",
													"statements": [
														{
															"expression": {
																"id": 1787,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1783,
																		"name": "diamondFloor",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 872,
																		"src": "19365:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_DiamondFloor_$869_storage",
																			"typeString": "struct gainZilla.DiamondFloor storage ref"
																		}
																	},
																	"id": 1785,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "sellStopped",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 866,
																	"src": "19365:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 1786,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19392:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "19365:31:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1788,
															"nodeType": "ExpressionStatement",
															"src": "19365:31:0"
														},
														{
															"expression": {
																"id": 1794,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1789,
																		"name": "diamondFloor",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 872,
																		"src": "19410:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_DiamondFloor_$869_storage",
																			"typeString": "struct gainZilla.DiamondFloor storage ref"
																		}
																	},
																	"id": 1791,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "blockedAth",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 868,
																	"src": "19410:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 1792,
																		"name": "diamondFloor",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 872,
																		"src": "19436:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_DiamondFloor_$869_storage",
																			"typeString": "struct gainZilla.DiamondFloor storage ref"
																		}
																	},
																	"id": 1793,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "athPrice",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 864,
																	"src": "19436:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "19410:47:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1795,
															"nodeType": "ExpressionStatement",
															"src": "19410:47:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1807,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1798,
															"name": "diamondFloor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 872,
															"src": "19482:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_DiamondFloor_$869_storage",
																"typeString": "struct gainZilla.DiamondFloor storage ref"
															}
														},
														"id": 1799,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sellStopped",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 866,
														"src": "19482:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1806,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1800,
															"name": "currentPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1737,
															"src": "19510:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "32",
																	"id": 1804,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19554:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	}
																],
																"expression": {
																	"expression": {
																		"id": 1801,
																		"name": "diamondFloor",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 872,
																		"src": "19526:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_DiamondFloor_$869_storage",
																			"typeString": "struct gainZilla.DiamondFloor storage ref"
																		}
																	},
																	"id": 1802,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "blockedAth",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 868,
																	"src": "19526:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1803,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 180,
																"src": "19526:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1805,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19526:30:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "19510:46:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "19482:74:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1821,
												"nodeType": "IfStatement",
												"src": "19478:187:0",
												"trueBody": {
													"id": 1820,
													"nodeType": "Block",
													"src": "19558:107:0",
													"statements": [
														{
															"expression": {
																"id": 1812,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1808,
																		"name": "diamondFloor",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 872,
																		"src": "19572:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_DiamondFloor_$869_storage",
																			"typeString": "struct gainZilla.DiamondFloor storage ref"
																		}
																	},
																	"id": 1810,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "sellStopped",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 866,
																	"src": "19572:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 1811,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19599:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "19572:32:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1813,
															"nodeType": "ExpressionStatement",
															"src": "19572:32:0"
														},
														{
															"expression": {
																"id": 1818,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1814,
																		"name": "diamondFloor",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 872,
																		"src": "19618:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_DiamondFloor_$869_storage",
																			"typeString": "struct gainZilla.DiamondFloor storage ref"
																		}
																	},
																	"id": 1816,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "athPrice",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 864,
																	"src": "19618:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1817,
																	"name": "currentPrice",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1737,
																	"src": "19642:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "19618:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1819,
															"nodeType": "ExpressionStatement",
															"src": "19618:36:0"
														}
													]
												}
											}
										]
									},
									"id": 1823,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkPriceConditions",
									"nameLocation": "18872:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1734,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18893:2:0"
									},
									"returnParameters": {
										"id": 1735,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18904:0:0"
									},
									"scope": 2979,
									"src": "18863:808:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1886,
										"nodeType": "Block",
										"src": "19728:365:0",
										"statements": [
											{
												"assignments": [
													1829,
													1831,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1829,
														"mutability": "mutable",
														"name": "reserve0",
														"nameLocation": "19747:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 1886,
														"src": "19739:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														},
														"typeName": {
															"id": 1828,
															"name": "uint112",
															"nodeType": "ElementaryTypeName",
															"src": "19739:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1831,
														"mutability": "mutable",
														"name": "reserve1",
														"nameLocation": "19765:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 1886,
														"src": "19757:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														},
														"typeName": {
															"id": 1830,
															"name": "uint112",
															"nodeType": "ElementaryTypeName",
															"src": "19757:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1837,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 1833,
																	"name": "uniswapV2Pair",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 905,
																	"src": "19793:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1832,
																"name": "IUniswapV2Pair",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 582,
																"src": "19778:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IUniswapV2Pair_$582_$",
																	"typeString": "type(contract IUniswapV2Pair)"
																}
															},
															"id": 1834,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19778:29:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV2Pair_$582",
																"typeString": "contract IUniswapV2Pair"
															}
														},
														"id": 1835,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "getReserves",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 524,
														"src": "19778:41:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint112_$_t_uint112_$_t_uint32_$",
															"typeString": "function () view external returns (uint112,uint112,uint32)"
														}
													},
													"id": 1836,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19778:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$_t_uint32_$",
														"typeString": "tuple(uint112,uint112,uint32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19738:83:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1844,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														},
														"id": 1840,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1838,
															"name": "reserve0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1829,
															"src": "19835:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1839,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19847:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "19835:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														},
														"id": 1843,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1841,
															"name": "reserve1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1831,
															"src": "19852:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1842,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19864:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "19852:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "19835:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1847,
												"nodeType": "IfStatement",
												"src": "19831:44:0",
												"trueBody": {
													"expression": {
														"hexValue": "30",
														"id": 1845,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "19874:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 1827,
													"id": 1846,
													"nodeType": "Return",
													"src": "19867:8:0"
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1857,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"arguments": [
																		{
																			"id": 1849,
																			"name": "uniswapV2Pair",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 905,
																			"src": "19916:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1848,
																		"name": "IUniswapV2Pair",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 582,
																		"src": "19901:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IUniswapV2Pair_$582_$",
																			"typeString": "type(contract IUniswapV2Pair)"
																		}
																	},
																	"id": 1850,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "19901:29:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IUniswapV2Pair_$582",
																		"typeString": "contract IUniswapV2Pair"
																	}
																},
																"id": 1851,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "token0",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 510,
																"src": "19901:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																	"typeString": "function () view external returns (address)"
																}
															},
															"id": 1852,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19901:38:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"id": 1855,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "19951:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_gainZilla_$2979",
																		"typeString": "contract gainZilla"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_gainZilla_$2979",
																		"typeString": "contract gainZilla"
																	}
																],
																"id": 1854,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "19943:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1853,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "19943:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1856,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19943:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "19901:55:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1881,
																		"name": "reserve1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1831,
																		"src": "20076:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint112",
																			"typeString": "uint112"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint112",
																			"typeString": "uint112"
																		}
																	],
																	"id": 1880,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "20068:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1879,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "20068:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1882,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20068:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"hexValue": "31653138",
																		"id": 1876,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "20058:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1000000000000000000_by_1",
																			"typeString": "int_const 1000000000000000000"
																		},
																		"value": "1e18"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1000000000000000000_by_1",
																			"typeString": "int_const 1000000000000000000"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1873,
																				"name": "reserve0",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1829,
																				"src": "20044:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint112",
																					"typeString": "uint112"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint112",
																					"typeString": "uint112"
																				}
																			],
																			"id": 1872,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "20036:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 1871,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "20036:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1874,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "20036:17:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1875,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 180,
																	"src": "20036:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1877,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20036:27:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1878,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 196,
															"src": "20036:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1883,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20036:50:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1884,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "19901:185:0",
													"trueExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1868,
																		"name": "reserve0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1829,
																		"src": "20011:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint112",
																			"typeString": "uint112"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint112",
																			"typeString": "uint112"
																		}
																	],
																	"id": 1867,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "20003:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1866,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "20003:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1869,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20003:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"hexValue": "31653138",
																		"id": 1863,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "19993:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1000000000000000000_by_1",
																			"typeString": "int_const 1000000000000000000"
																		},
																		"value": "1e18"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1000000000000000000_by_1",
																			"typeString": "int_const 1000000000000000000"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1860,
																				"name": "reserve1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1831,
																				"src": "19979:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint112",
																					"typeString": "uint112"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint112",
																					"typeString": "uint112"
																				}
																			],
																			"id": 1859,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "19971:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 1858,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "19971:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1861,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "19971:17:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1862,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 180,
																	"src": "19971:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1864,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19971:27:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1865,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 196,
															"src": "19971:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1870,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19971:50:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1827,
												"id": 1885,
												"nodeType": "Return",
												"src": "19894:192:0"
											}
										]
									},
									"functionSelector": "9491f94d",
									"id": 1887,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "pairPrice",
									"nameLocation": "19686:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1824,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19695:2:0"
									},
									"returnParameters": {
										"id": 1827,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1826,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1887,
												"src": "19719:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1825,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19719:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19718:9:0"
									},
									"scope": 2979,
									"src": "19677:416:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1923,
										"nodeType": "Block",
										"src": "20173:383:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1897,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "20200:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_gainZilla_$2979",
																		"typeString": "contract gainZilla"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_gainZilla_$2979",
																		"typeString": "contract gainZilla"
																	}
																],
																"id": 1896,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "20192:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1895,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "20192:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1898,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20192:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1901,
																	"name": "uniswapV2Router",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 903,
																	"src": "20215:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IUniswapV2Router02_$707",
																		"typeString": "contract IUniswapV2Router02"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IUniswapV2Router02_$707",
																		"typeString": "contract IUniswapV2Router02"
																	}
																],
																"id": 1900,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "20207:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1899,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "20207:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1902,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20207:24:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1903,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1889,
															"src": "20233:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1894,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1361,
														"src": "20183:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1904,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20183:62:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1905,
												"nodeType": "ExpressionStatement",
												"src": "20183:62:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1913,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "20358:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_gainZilla_$2979",
																		"typeString": "contract gainZilla"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_gainZilla_$2979",
																		"typeString": "contract gainZilla"
																	}
																],
																"id": 1912,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "20350:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1911,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "20350:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1914,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20350:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1915,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1889,
															"src": "20379:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 1916,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20406:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "30",
															"id": 1917,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20450:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1918,
															"name": "_lpRecipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 900,
															"src": "20494:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"expression": {
																"id": 1919,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "20522:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1920,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "20522:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1906,
																"name": "uniswapV2Router",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 903,
																"src": "20285:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IUniswapV2Router02_$707",
																	"typeString": "contract IUniswapV2Router02"
																}
															},
															"id": 1908,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "addLiquidityETH",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 651,
															"src": "20285:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
																"typeString": "function (address,uint256,uint256,uint256,address,uint256) payable external returns (uint256,uint256,uint256)"
															}
														},
														"id": 1910,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1909,
																"name": "ethAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1891,
																"src": "20324:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "20285:49:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$value",
															"typeString": "function (address,uint256,uint256,uint256,address,uint256) payable external returns (uint256,uint256,uint256)"
														}
													},
													"id": 1921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20285:264:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256)"
													}
												},
												"id": 1922,
												"nodeType": "ExpressionStatement",
												"src": "20285:264:0"
											}
										]
									},
									"id": 1924,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidity",
									"nameLocation": "20112:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1889,
												"mutability": "mutable",
												"name": "tokenAmount",
												"nameLocation": "20133:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1924,
												"src": "20125:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1888,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20125:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1891,
												"mutability": "mutable",
												"name": "ethAmount",
												"nameLocation": "20154:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1924,
												"src": "20146:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1890,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20146:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20124:40:0"
									},
									"returnParameters": {
										"id": 1893,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20173:0:0"
									},
									"scope": 2979,
									"src": "20103:453:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1992,
										"nodeType": "Block",
										"src": "20656:415:0",
										"statements": [
											{
												"assignments": [
													1934
												],
												"declarations": [
													{
														"constant": false,
														"id": 1934,
														"mutability": "mutable",
														"name": "half",
														"nameLocation": "20674:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1992,
														"src": "20666:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1933,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "20666:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1939,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "32",
															"id": 1937,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20694:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															}
														],
														"expression": {
															"id": 1935,
															"name": "lpAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1926,
															"src": "20681:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1936,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 196,
														"src": "20681:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20681:15:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20666:30:0"
											},
											{
												"assignments": [
													1941
												],
												"declarations": [
													{
														"constant": false,
														"id": 1941,
														"mutability": "mutable",
														"name": "otherHalf",
														"nameLocation": "20714:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 1992,
														"src": "20706:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1940,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "20706:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1946,
												"initialValue": {
													"arguments": [
														{
															"id": 1944,
															"name": "half",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1934,
															"src": "20739:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1942,
															"name": "lpAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1926,
															"src": "20726:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1943,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 119,
														"src": "20726:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1945,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20726:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20706:38:0"
											},
											{
												"assignments": [
													1948
												],
												"declarations": [
													{
														"constant": false,
														"id": 1948,
														"mutability": "mutable",
														"name": "initialBalance",
														"nameLocation": "20762:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 1992,
														"src": "20754:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1947,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "20754:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1954,
												"initialValue": {
													"expression": {
														"arguments": [
															{
																"id": 1951,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "20787:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_gainZilla_$2979",
																	"typeString": "contract gainZilla"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_gainZilla_$2979",
																	"typeString": "contract gainZilla"
																}
															],
															"id": 1950,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "20779:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1949,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "20779:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1952,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20779:13:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1953,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "20779:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20754:46:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1958,
																	"name": "half",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1934,
																	"src": "20852:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1956,
																	"name": "contractTokenBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1928,
																	"src": "20827:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1957,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 103,
																"src": "20827:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1959,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20827:30:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1955,
														"name": "swapTokensForEth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1733,
														"src": "20810:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1960,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20810:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1961,
												"nodeType": "ExpressionStatement",
												"src": "20810:48:0"
											},
											{
												"assignments": [
													1963
												],
												"declarations": [
													{
														"constant": false,
														"id": 1963,
														"mutability": "mutable",
														"name": "newBalance",
														"nameLocation": "20876:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 1992,
														"src": "20868:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1962,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "20868:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1972,
												"initialValue": {
													"arguments": [
														{
															"id": 1970,
															"name": "initialBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1948,
															"src": "20915:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1966,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "20897:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_gainZilla_$2979",
																			"typeString": "contract gainZilla"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_gainZilla_$2979",
																			"typeString": "contract gainZilla"
																		}
																	],
																	"id": 1965,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "20889:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1964,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "20889:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1967,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20889:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1968,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"src": "20889:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1969,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 119,
														"src": "20889:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1971,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20889:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20868:62:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1975,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1973,
														"name": "otherHalf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1941,
														"src": "20944:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1974,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "20956:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "20944:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1991,
												"nodeType": "IfStatement",
												"src": "20940:125:0",
												"trueBody": {
													"id": 1990,
													"nodeType": "Block",
													"src": "20959:106:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1977,
																		"name": "otherHalf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1941,
																		"src": "20986:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"id": 1985,
																						"name": "half",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1934,
																						"src": "21047:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"id": 1983,
																						"name": "contractTokenBalance",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1928,
																						"src": "21022:20:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1984,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "add",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 103,
																					"src": "21022:24:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1986,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "21022:30:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"id": 1980,
																						"name": "half",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1934,
																						"src": "21012:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"id": 1978,
																						"name": "newBalance",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1963,
																						"src": "20997:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1979,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 180,
																					"src": "20997:14:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1981,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "20997:20:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1982,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "div",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 196,
																			"src": "20997:24:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1987,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "20997:56:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1976,
																	"name": "addLiquidity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1924,
																	"src": "20973:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256)"
																	}
																},
																"id": 1988,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20973:81:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1989,
															"nodeType": "ExpressionStatement",
															"src": "20973:81:0"
														}
													]
												}
											}
										]
									},
									"id": 1993,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1931,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1930,
												"name": "lockTheSwap",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 958,
												"src": "20644:11:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "20644:11:0"
										}
									],
									"name": "swapAndLiquify",
									"nameLocation": "20573:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1929,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1926,
												"mutability": "mutable",
												"name": "lpAmount",
												"nameLocation": "20596:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1993,
												"src": "20588:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1925,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20588:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1928,
												"mutability": "mutable",
												"name": "contractTokenBalance",
												"nameLocation": "20614:20:0",
												"nodeType": "VariableDeclaration",
												"scope": 1993,
												"src": "20606:28:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1927,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20606:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20587:48:0"
									},
									"returnParameters": {
										"id": 1932,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20656:0:0"
									},
									"scope": 2979,
									"src": "20564:507:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2076,
										"nodeType": "Block",
										"src": "21123:696:0",
										"statements": [
											{
												"assignments": [
													1999
												],
												"declarations": [
													{
														"constant": false,
														"id": 1999,
														"mutability": "mutable",
														"name": "totalFees",
														"nameLocation": "21141:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 2076,
														"src": "21133:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1998,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "21133:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2007,
												"initialValue": {
													"arguments": [
														{
															"id": 2005,
															"name": "_sellTeamFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 829,
															"src": "21198:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2002,
																	"name": "_sellEcosystemFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 817,
																	"src": "21175:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2000,
																	"name": "_sellMarketingFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 823,
																	"src": "21153:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2001,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 103,
																"src": "21153:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2003,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21153:40:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2004,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 103,
														"src": "21153:44:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2006,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21153:58:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21133:78:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2010,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2008,
														"name": "totalFees",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1999,
														"src": "21225:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2009,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "21238:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "21225:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2075,
												"nodeType": "IfStatement",
												"src": "21221:592:0",
												"trueBody": {
													"id": 2074,
													"nodeType": "Block",
													"src": "21241:572:0",
													"statements": [
														{
															"assignments": [
																2012
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2012,
																	"mutability": "mutable",
																	"name": "marketingPortion",
																	"nameLocation": "21263:16:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 2074,
																	"src": "21255:24:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2011,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "21255:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2020,
															"initialValue": {
																"arguments": [
																	{
																		"id": 2018,
																		"name": "totalFees",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1999,
																		"src": "21316:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 2015,
																				"name": "_sellMarketingFee",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 823,
																				"src": "21293:17:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 2013,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1995,
																				"src": "21282:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 2014,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 180,
																			"src": "21282:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 2016,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "21282:29:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2017,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 196,
																	"src": "21282:33:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 2019,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21282:44:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "21255:71:0"
														},
														{
															"assignments": [
																2022
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2022,
																	"mutability": "mutable",
																	"name": "teamPortion",
																	"nameLocation": "21348:11:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 2074,
																	"src": "21340:19:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2021,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "21340:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2030,
															"initialValue": {
																"arguments": [
																	{
																		"id": 2028,
																		"name": "totalFees",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1999,
																		"src": "21391:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 2025,
																				"name": "_sellTeamFee",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 829,
																				"src": "21373:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 2023,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1995,
																				"src": "21362:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 2024,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 180,
																			"src": "21362:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 2026,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "21362:24:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2027,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 196,
																	"src": "21362:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 2029,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21362:39:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "21340:61:0"
														},
														{
															"assignments": [
																2032
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2032,
																	"mutability": "mutable",
																	"name": "ecoPortion",
																	"nameLocation": "21423:10:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 2074,
																	"src": "21415:18:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2031,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "21415:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2040,
															"initialValue": {
																"arguments": [
																	{
																		"id": 2038,
																		"name": "teamPortion",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2022,
																		"src": "21469:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 2035,
																				"name": "marketingPortion",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2012,
																				"src": "21447:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 2033,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1995,
																				"src": "21436:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 2034,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sub",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 119,
																			"src": "21436:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 2036,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "21436:28:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2037,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 119,
																	"src": "21436:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 2039,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21436:45:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "21415:66:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2043,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2041,
																	"name": "marketingPortion",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2012,
																	"src": "21499:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2042,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21518:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "21499:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2051,
															"nodeType": "IfStatement",
															"src": "21495:103:0",
															"trueBody": {
																"id": 2050,
																"nodeType": "Block",
																"src": "21521:77:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 2047,
																					"name": "marketingPortion",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2012,
																					"src": "21566:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 2044,
																					"name": "_marketingAddress",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 882,
																					"src": "21539:17:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address_payable",
																						"typeString": "address payable"
																					}
																				},
																				"id": 2046,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "transfer",
																				"nodeType": "MemberAccess",
																				"src": "21539:26:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																					"typeString": "function (uint256)"
																				}
																			},
																			"id": 2048,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "21539:44:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2049,
																		"nodeType": "ExpressionStatement",
																		"src": "21539:44:0"
																	}
																]
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2054,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2052,
																	"name": "teamPortion",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2022,
																	"src": "21615:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2053,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21629:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "21615:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2062,
															"nodeType": "IfStatement",
															"src": "21611:88:0",
															"trueBody": {
																"id": 2061,
																"nodeType": "Block",
																"src": "21632:67:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 2058,
																					"name": "teamPortion",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2022,
																					"src": "21672:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 2055,
																					"name": "_teamAddress",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 888,
																					"src": "21650:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address_payable",
																						"typeString": "address payable"
																					}
																				},
																				"id": 2057,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "transfer",
																				"nodeType": "MemberAccess",
																				"src": "21650:21:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																					"typeString": "function (uint256)"
																				}
																			},
																			"id": 2059,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "21650:34:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2060,
																		"nodeType": "ExpressionStatement",
																		"src": "21650:34:0"
																	}
																]
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2065,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2063,
																	"name": "ecoPortion",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2032,
																	"src": "21716:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2064,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21729:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "21716:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2073,
															"nodeType": "IfStatement",
															"src": "21712:91:0",
															"trueBody": {
																"id": 2072,
																"nodeType": "Block",
																"src": "21732:71:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 2069,
																					"name": "ecoPortion",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2032,
																					"src": "21777:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 2066,
																					"name": "_ecosystemAddress",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 894,
																					"src": "21750:17:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address_payable",
																						"typeString": "address payable"
																					}
																				},
																				"id": 2068,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "transfer",
																				"nodeType": "MemberAccess",
																				"src": "21750:26:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																					"typeString": "function (uint256)"
																				}
																			},
																			"id": 2070,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "21750:38:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2071,
																		"nodeType": "ExpressionStatement",
																		"src": "21750:38:0"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"id": 2077,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendETHToFee",
									"nameLocation": "21086:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1996,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1995,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "21107:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2077,
												"src": "21099:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1994,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21099:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21098:16:0"
									},
									"returnParameters": {
										"id": 1997,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21123:0:0"
									},
									"scope": 2979,
									"src": "21077:742:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2097,
										"nodeType": "Block",
										"src": "21886:106:0",
										"statements": [
											{
												"expression": {
													"id": 2087,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2084,
														"name": "_firstBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 768,
														"src": "21896:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 2085,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "21910:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 2086,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "21910:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21896:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2088,
												"nodeType": "ExpressionStatement",
												"src": "21896:29:0"
											},
											{
												"expression": {
													"id": 2091,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2089,
														"name": "_botBlocks",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 770,
														"src": "21935:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2090,
														"name": "botBlocks",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2079,
														"src": "21948:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21935:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2092,
												"nodeType": "ExpressionStatement",
												"src": "21935:22:0"
											},
											{
												"expression": {
													"id": 2095,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2093,
														"name": "tradingOpen",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 910,
														"src": "21967:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 2094,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "21981:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "21967:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2096,
												"nodeType": "ExpressionStatement",
												"src": "21967:18:0"
											}
										]
									},
									"functionSelector": "d1633649",
									"id": 2098,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [],
											"id": 2082,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2081,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 277,
												"src": "21874:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "21874:11:0"
										}
									],
									"name": "openTrading",
									"nameLocation": "21834:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2080,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2079,
												"mutability": "mutable",
												"name": "botBlocks",
												"nameLocation": "21854:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 2098,
												"src": "21846:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2078,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21846:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21845:19:0"
									},
									"returnParameters": {
										"id": 2083,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21886:0:0"
									},
									"scope": 2979,
									"src": "21825:167:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2107,
										"nodeType": "Block",
										"src": "22042:35:0",
										"statements": [
											{
												"expression": {
													"id": 2105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2103,
														"name": "tradingOpen",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 910,
														"src": "22052:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 2104,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "22066:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "22052:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2106,
												"nodeType": "ExpressionStatement",
												"src": "22052:18:0"
											}
										]
									},
									"functionSelector": "8e360253",
									"id": 2108,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [],
											"id": 2101,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2100,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 277,
												"src": "22030:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "22030:11:0"
										}
									],
									"name": "enableToken",
									"nameLocation": "22007:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2099,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22018:2:0"
									},
									"returnParameters": {
										"id": 2102,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22042:0:0"
									},
									"scope": 2979,
									"src": "21998:79:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2122,
										"nodeType": "Block",
										"src": "22128:97:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2114,
															"name": "canPause",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 916,
															"src": "22146:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "7468697320636f6e74726163742063616e6e6f7420626520706175736564",
															"id": 2115,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "22156:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_046a8fc234c98369d46f45f5bed63e994dab3910bdaebfe1ca0cd49f568245a6",
																"typeString": "literal_string \"this contract cannot be paused\""
															},
															"value": "this contract cannot be paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_046a8fc234c98369d46f45f5bed63e994dab3910bdaebfe1ca0cd49f568245a6",
																"typeString": "literal_string \"this contract cannot be paused\""
															}
														],
														"id": 2113,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "22138:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22138:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2117,
												"nodeType": "ExpressionStatement",
												"src": "22138:51:0"
											},
											{
												"expression": {
													"id": 2120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2118,
														"name": "tradingOpen",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 910,
														"src": "22199:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 2119,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "22213:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "22199:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2121,
												"nodeType": "ExpressionStatement",
												"src": "22199:19:0"
											}
										]
									},
									"functionSelector": "3e0f966d",
									"id": 2123,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [],
											"id": 2111,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2110,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 277,
												"src": "22116:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "22116:11:0"
										}
									],
									"name": "disableToken",
									"nameLocation": "22092:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2109,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22104:2:0"
									},
									"returnParameters": {
										"id": 2112,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22128:0:0"
									},
									"scope": 2979,
									"src": "22083:142:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2132,
										"nodeType": "Block",
										"src": "22283:33:0",
										"statements": [
											{
												"expression": {
													"id": 2130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2128,
														"name": "canPause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 916,
														"src": "22293:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 2129,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "22304:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "22293:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2131,
												"nodeType": "ExpressionStatement",
												"src": "22293:16:0"
											}
										]
									},
									"functionSelector": "6aabff3f",
									"id": 2133,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [],
											"id": 2126,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2125,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 277,
												"src": "22262:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "22262:11:0"
										}
									],
									"name": "disablePauseAbility",
									"nameLocation": "22240:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2124,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22259:2:0"
									},
									"returnParameters": {
										"id": 2127,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22283:0:0"
									},
									"scope": 2979,
									"src": "22231:85:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2156,
										"nodeType": "Block",
										"src": "22365:159:0",
										"statements": [
											{
												"assignments": [
													2139
												],
												"declarations": [
													{
														"constant": false,
														"id": 2139,
														"mutability": "mutable",
														"name": "contractBalance",
														"nameLocation": "22383:15:0",
														"nodeType": "VariableDeclaration",
														"scope": 2156,
														"src": "22375:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2138,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "22375:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2146,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2143,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "22419:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_gainZilla_$2979",
																		"typeString": "contract gainZilla"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_gainZilla_$2979",
																		"typeString": "contract gainZilla"
																	}
																],
																"id": 2142,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "22411:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2141,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "22411:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2144,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22411:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2140,
														"name": "balanceOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1107,
														"src": "22401:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 2145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22401:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "22375:50:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2147,
														"name": "contractBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2139,
														"src": "22439:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2148,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "22457:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "22439:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2155,
												"nodeType": "IfStatement",
												"src": "22435:83:0",
												"trueBody": {
													"id": 2154,
													"nodeType": "Block",
													"src": "22460:58:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2151,
																		"name": "contractBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2139,
																		"src": "22491:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2150,
																	"name": "swapTokensForEth",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1733,
																	"src": "22474:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 2152,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "22474:33:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2153,
															"nodeType": "ExpressionStatement",
															"src": "22474:33:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "c3c8cd80",
									"id": 2157,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [],
											"id": 2136,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2135,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 277,
												"src": "22353:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "22353:11:0"
										}
									],
									"name": "manualswap",
									"nameLocation": "22331:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2134,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22341:2:0"
									},
									"returnParameters": {
										"id": 2137,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22365:0:0"
									},
									"scope": 2979,
									"src": "22322:202:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2187,
										"nodeType": "Block",
										"src": "22573:183:0",
										"statements": [
											{
												"assignments": [
													2163
												],
												"declarations": [
													{
														"constant": false,
														"id": 2163,
														"mutability": "mutable",
														"name": "contractETHBalance",
														"nameLocation": "22591:18:0",
														"nodeType": "VariableDeclaration",
														"scope": 2187,
														"src": "22583:26:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2162,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "22583:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2169,
												"initialValue": {
													"expression": {
														"arguments": [
															{
																"id": 2166,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "22620:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_gainZilla_$2979",
																	"typeString": "contract gainZilla"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_gainZilla_$2979",
																	"typeString": "contract gainZilla"
																}
															],
															"id": 2165,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "22612:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2164,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "22612:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2167,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "22612:13:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "22612:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "22583:50:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2170,
														"name": "contractETHBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2163,
														"src": "22647:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2171,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "22668:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "22647:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2186,
												"nodeType": "IfStatement",
												"src": "22643:107:0",
												"trueBody": {
													"id": 2185,
													"nodeType": "Block",
													"src": "22671:79:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2182,
																		"name": "contractETHBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2163,
																		"src": "22720:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [],
																						"expression": {
																							"argumentTypes": [],
																							"id": 2177,
																							"name": "owner",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 265,
																							"src": "22701:5:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																								"typeString": "function () view returns (address)"
																							}
																						},
																						"id": 2178,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "22701:7:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 2176,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "22693:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 2175,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "22693:7:0",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 2179,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "22693:16:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 2174,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "22685:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_payable_$",
																				"typeString": "type(address payable)"
																			},
																			"typeName": {
																				"id": 2173,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "22685:8:0",
																				"stateMutability": "payable",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2180,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "22685:25:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"id": 2181,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"src": "22685:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 2183,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "22685:54:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2184,
															"nodeType": "ExpressionStatement",
															"src": "22685:54:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "6fc3eaec",
									"id": 2188,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [],
											"id": 2160,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2159,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 277,
												"src": "22561:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "22561:11:0"
										}
									],
									"name": "manualsend",
									"nameLocation": "22539:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2158,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22549:2:0"
									},
									"returnParameters": {
										"id": 2161,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22573:0:0"
									},
									"scope": 2979,
									"src": "22530:226:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2216,
										"nodeType": "Block",
										"src": "22823:121:0",
										"statements": [
											{
												"assignments": [
													2196
												],
												"declarations": [
													{
														"constant": false,
														"id": 2196,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "22841:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 2216,
														"src": "22833:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2195,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "22833:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2206,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2203,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "22882:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_gainZilla_$2979",
																		"typeString": "contract gainZilla"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_gainZilla_$2979",
																		"typeString": "contract gainZilla"
																	}
																],
																"id": 2202,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "22874:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2201,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "22874:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2204,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22874:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2198,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2190,
																	"src": "22857:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2197,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 78,
																"src": "22850:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$78_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 2199,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22850:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$78",
																"typeString": "contract IERC20"
															}
														},
														"id": 2200,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 23,
														"src": "22850:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 2205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22850:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "22833:55:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2211,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 265,
																"src": "22921:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2212,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22921:7:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2213,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2196,
															"src": "22930:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2208,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2190,
																	"src": "22905:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2207,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 78,
																"src": "22898:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$78_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 2209,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22898:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$78",
																"typeString": "contract IERC20"
															}
														},
														"id": 2210,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 32,
														"src": "22898:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 2214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22898:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2215,
												"nodeType": "ExpressionStatement",
												"src": "22898:39:0"
											}
										]
									},
									"functionSelector": "29409395",
									"id": 2217,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [],
											"id": 2193,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2192,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 277,
												"src": "22811:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "22811:11:0"
										}
									],
									"name": "manualSendToken",
									"nameLocation": "22771:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2190,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "22795:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2217,
												"src": "22787:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2189,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22787:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22786:15:0"
									},
									"returnParameters": {
										"id": 2194,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22823:0:0"
									},
									"scope": 2979,
									"src": "22762:182:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2244,
										"nodeType": "Block",
										"src": "23047:153:0",
										"statements": [
											{
												"condition": {
													"id": 2229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "23061:8:0",
													"subExpression": {
														"id": 2228,
														"name": "takeFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2225,
														"src": "23062:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2234,
												"nodeType": "IfStatement",
												"src": "23057:58:0",
												"trueBody": {
													"id": 2233,
													"nodeType": "Block",
													"src": "23071:44:0",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2230,
																	"name": "removeAllFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1281,
																	"src": "23090:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 2231,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23090:14:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2232,
															"nodeType": "ExpressionStatement",
															"src": "23090:14:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2236,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2219,
															"src": "23142:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2237,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2221,
															"src": "23150:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2238,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2223,
															"src": "23161:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2235,
														"name": "_transferStandard",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2543,
														"src": "23124:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23124:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2240,
												"nodeType": "ExpressionStatement",
												"src": "23124:44:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2241,
														"name": "restoreAllFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1317,
														"src": "23178:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23178:15:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2243,
												"nodeType": "ExpressionStatement",
												"src": "23178:15:0"
											}
										]
									},
									"id": 2245,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_tokenTransfer",
									"nameLocation": "22959:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2219,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "22982:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2245,
												"src": "22974:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22974:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2221,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "22998:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 2245,
												"src": "22990:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2220,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22990:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2223,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "23017:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2245,
												"src": "23009:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23009:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2225,
												"mutability": "mutable",
												"name": "takeFee",
												"nameLocation": "23030:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2245,
												"src": "23025:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2224,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "23025:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22973:65:0"
									},
									"returnParameters": {
										"id": 2227,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23047:0:0"
									},
									"scope": 2979,
									"src": "22950:250:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2542,
										"nodeType": "Block",
										"src": "23292:1761:0",
										"statements": [
											{
												"assignments": [
													2256
												],
												"declarations": [
													{
														"constant": false,
														"id": 2256,
														"mutability": "mutable",
														"name": "fees",
														"nameLocation": "23322:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 2542,
														"src": "23302:24:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FeeBreakdown_$846_memory_ptr",
															"typeString": "struct gainZilla.FeeBreakdown"
														},
														"typeName": {
															"id": 2255,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2254,
																"name": "FeeBreakdown",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 846,
																"src": "23302:12:0"
															},
															"referencedDeclaration": 846,
															"src": "23302:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FeeBreakdown_$846_storage_ptr",
																"typeString": "struct gainZilla.FeeBreakdown"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2257,
												"nodeType": "VariableDeclarationStatement",
												"src": "23302:24:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 2260,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2258,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2247,
															"src": "23340:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 2259,
															"name": "uniswapV2Pair",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 905,
															"src": "23350:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "23340:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 2266,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2261,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2249,
															"src": "23367:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"id": 2264,
																	"name": "uniswapV2Router",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 903,
																	"src": "23388:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IUniswapV2Router02_$707",
																		"typeString": "contract IUniswapV2Router02"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IUniswapV2Router02_$707",
																		"typeString": "contract IUniswapV2Router02"
																	}
																],
																"id": 2263,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "23380:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2262,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "23380:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2265,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "23380:24:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "23367:37:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "23340:64:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2317,
												"nodeType": "IfStatement",
												"src": "23336:357:0",
												"trueBody": {
													"id": 2316,
													"nodeType": "Block",
													"src": "23406:287:0",
													"statements": [
														{
															"expression": {
																"id": 2278,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 2268,
																		"name": "fees",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2256,
																		"src": "23426:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_FeeBreakdown_$846_memory_ptr",
																			"typeString": "struct gainZilla.FeeBreakdown memory"
																		}
																	},
																	"id": 2270,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "tMarketing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 839,
																	"src": "23426:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"hexValue": "31303030",
																			"id": 2276,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "23477:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1000_by_1",
																				"typeString": "int_const 1000"
																			},
																			"value": "1000"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_1000_by_1",
																				"typeString": "int_const 1000"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"id": 2273,
																					"name": "_buyMarketingFee",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 799,
																					"src": "23455:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 2271,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2251,
																					"src": "23444:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2272,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 180,
																				"src": "23444:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 2274,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "23444:28:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2275,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 196,
																		"src": "23444:32:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2277,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "23444:38:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "23426:56:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2279,
															"nodeType": "ExpressionStatement",
															"src": "23426:56:0"
														},
														{
															"expression": {
																"id": 2290,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 2280,
																		"name": "fees",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2256,
																		"src": "23496:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_FeeBreakdown_$846_memory_ptr",
																			"typeString": "struct gainZilla.FeeBreakdown memory"
																		}
																	},
																	"id": 2282,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "tLiquidity",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 837,
																	"src": "23496:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"hexValue": "31303030",
																			"id": 2288,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "23547:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1000_by_1",
																				"typeString": "int_const 1000"
																			},
																			"value": "1000"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_1000_by_1",
																				"typeString": "int_const 1000"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"id": 2285,
																					"name": "_buyLiquidityFee",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 787,
																					"src": "23525:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 2283,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2251,
																					"src": "23514:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2284,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 180,
																				"src": "23514:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 2286,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "23514:28:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2287,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 196,
																		"src": "23514:32:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2289,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "23514:38:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "23496:56:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2291,
															"nodeType": "ExpressionStatement",
															"src": "23496:56:0"
														},
														{
															"expression": {
																"id": 2302,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 2292,
																		"name": "fees",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2256,
																		"src": "23566:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_FeeBreakdown_$846_memory_ptr",
																			"typeString": "struct gainZilla.FeeBreakdown memory"
																		}
																	},
																	"id": 2294,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "tTeam",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 841,
																	"src": "23566:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"hexValue": "31303030",
																			"id": 2300,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "23607:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1000_by_1",
																				"typeString": "int_const 1000"
																			},
																			"value": "1000"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_1000_by_1",
																				"typeString": "int_const 1000"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"id": 2297,
																					"name": "_buyTeamFee",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 805,
																					"src": "23590:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 2295,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2251,
																					"src": "23579:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2296,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 180,
																				"src": "23579:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 2298,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "23579:23:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2299,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 196,
																		"src": "23579:27:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2301,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "23579:33:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "23566:46:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2303,
															"nodeType": "ExpressionStatement",
															"src": "23566:46:0"
														},
														{
															"expression": {
																"id": 2314,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 2304,
																		"name": "fees",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2256,
																		"src": "23626:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_FeeBreakdown_$846_memory_ptr",
																			"typeString": "struct gainZilla.FeeBreakdown memory"
																		}
																	},
																	"id": 2306,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "tEcosystem",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 843,
																	"src": "23626:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"hexValue": "31303030",
																			"id": 2312,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "23677:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1000_by_1",
																				"typeString": "int_const 1000"
																			},
																			"value": "1000"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_1000_by_1",
																				"typeString": "int_const 1000"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"id": 2309,
																					"name": "_buyEcosystemFee",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 793,
																					"src": "23655:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 2307,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2251,
																					"src": "23644:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2308,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 180,
																				"src": "23644:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 2310,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "23644:28:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2311,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 196,
																		"src": "23644:32:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2313,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "23644:38:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "23626:56:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2315,
															"nodeType": "ExpressionStatement",
															"src": "23626:56:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 2320,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2318,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2247,
															"src": "23706:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 2319,
															"name": "uniswapV2Pair",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 905,
															"src": "23716:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "23706:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 2323,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2321,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2249,
															"src": "23733:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 2322,
															"name": "uniswapV2Pair",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 905,
															"src": "23746:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "23733:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "23706:53:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2374,
												"nodeType": "IfStatement",
												"src": "23702:351:0",
												"trueBody": {
													"id": 2373,
													"nodeType": "Block",
													"src": "23761:292:0",
													"statements": [
														{
															"expression": {
																"id": 2335,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 2325,
																		"name": "fees",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2256,
																		"src": "23782:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_FeeBreakdown_$846_memory_ptr",
																			"typeString": "struct gainZilla.FeeBreakdown memory"
																		}
																	},
																	"id": 2327,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "tMarketing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 839,
																	"src": "23782:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"hexValue": "31303030",
																			"id": 2333,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "23834:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1000_by_1",
																				"typeString": "int_const 1000"
																			},
																			"value": "1000"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_1000_by_1",
																				"typeString": "int_const 1000"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"id": 2330,
																					"name": "_sellMarketingFee",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 823,
																					"src": "23811:17:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 2328,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2251,
																					"src": "23800:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2329,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 180,
																				"src": "23800:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 2331,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "23800:29:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2332,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 196,
																		"src": "23800:33:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2334,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "23800:39:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "23782:57:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2336,
															"nodeType": "ExpressionStatement",
															"src": "23782:57:0"
														},
														{
															"expression": {
																"id": 2347,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 2337,
																		"name": "fees",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2256,
																		"src": "23853:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_FeeBreakdown_$846_memory_ptr",
																			"typeString": "struct gainZilla.FeeBreakdown memory"
																		}
																	},
																	"id": 2339,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "tLiquidity",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 837,
																	"src": "23853:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"hexValue": "31303030",
																			"id": 2345,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "23905:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1000_by_1",
																				"typeString": "int_const 1000"
																			},
																			"value": "1000"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_1000_by_1",
																				"typeString": "int_const 1000"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"id": 2342,
																					"name": "_sellLiquidityFee",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 811,
																					"src": "23882:17:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 2340,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2251,
																					"src": "23871:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2341,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 180,
																				"src": "23871:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 2343,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "23871:29:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2344,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 196,
																		"src": "23871:33:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2346,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "23871:39:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "23853:57:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2348,
															"nodeType": "ExpressionStatement",
															"src": "23853:57:0"
														},
														{
															"expression": {
																"id": 2359,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 2349,
																		"name": "fees",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2256,
																		"src": "23924:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_FeeBreakdown_$846_memory_ptr",
																			"typeString": "struct gainZilla.FeeBreakdown memory"
																		}
																	},
																	"id": 2351,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "tTeam",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 841,
																	"src": "23924:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"hexValue": "31303030",
																			"id": 2357,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "23966:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1000_by_1",
																				"typeString": "int_const 1000"
																			},
																			"value": "1000"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_1000_by_1",
																				"typeString": "int_const 1000"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"id": 2354,
																					"name": "_sellTeamFee",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 829,
																					"src": "23948:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 2352,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2251,
																					"src": "23937:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2353,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 180,
																				"src": "23937:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 2355,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "23937:24:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2356,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 196,
																		"src": "23937:28:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2358,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "23937:34:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "23924:47:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2360,
															"nodeType": "ExpressionStatement",
															"src": "23924:47:0"
														},
														{
															"expression": {
																"id": 2371,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 2361,
																		"name": "fees",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2256,
																		"src": "23985:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_FeeBreakdown_$846_memory_ptr",
																			"typeString": "struct gainZilla.FeeBreakdown memory"
																		}
																	},
																	"id": 2363,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "tEcosystem",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 843,
																	"src": "23985:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"hexValue": "31303030",
																			"id": 2369,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "24037:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1000_by_1",
																				"typeString": "int_const 1000"
																			},
																			"value": "1000"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_1000_by_1",
																				"typeString": "int_const 1000"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"id": 2366,
																					"name": "_sellEcosystemFee",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 817,
																					"src": "24014:17:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 2364,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2251,
																					"src": "24003:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2365,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 180,
																				"src": "24003:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 2367,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "24003:29:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2368,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 196,
																		"src": "24003:33:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2370,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "24003:39:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "23985:57:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2372,
															"nodeType": "ExpressionStatement",
															"src": "23985:57:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 2377,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2375,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2247,
															"src": "24066:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 2376,
															"name": "uniswapV2Pair",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 905,
															"src": "24076:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "24066:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 2380,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2378,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2249,
															"src": "24093:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 2379,
															"name": "uniswapV2Pair",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 905,
															"src": "24106:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "24093:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "24066:53:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2459,
												"nodeType": "IfStatement",
												"src": "24062:522:0",
												"trueBody": {
													"id": 2458,
													"nodeType": "Block",
													"src": "24121:463:0",
													"statements": [
														{
															"expression": {
																"id": 2399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 2382,
																		"name": "fees",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2256,
																		"src": "24145:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_FeeBreakdown_$846_memory_ptr",
																			"typeString": "struct gainZilla.FeeBreakdown memory"
																		}
																	},
																	"id": 2384,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "tMarketing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 839,
																	"src": "24145:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"hexValue": "313030",
																			"id": 2397,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "24240:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"value": "100"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"id": 2394,
																					"name": "transferFeeIncreaseFactor",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 835,
																					"src": "24209:25:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"components": [
																						{
																							"arguments": [
																								{
																									"hexValue": "31303030",
																									"id": 2390,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "24198:4:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_1000_by_1",
																										"typeString": "int_const 1000"
																									},
																									"value": "1000"
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_rational_1000_by_1",
																										"typeString": "int_const 1000"
																									}
																								],
																								"expression": {
																									"arguments": [
																										{
																											"id": 2387,
																											"name": "_sellMarketingFee",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 823,
																											"src": "24175:17:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										}
																									],
																									"expression": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										],
																										"expression": {
																											"id": 2385,
																											"name": "amount",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 2251,
																											"src": "24164:6:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"id": 2386,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberName": "mul",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 180,
																										"src": "24164:10:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																											"typeString": "function (uint256,uint256) pure returns (uint256)"
																										}
																									},
																									"id": 2388,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"kind": "functionCall",
																									"lValueRequested": false,
																									"names": [],
																									"nodeType": "FunctionCall",
																									"src": "24164:29:0",
																									"tryCall": false,
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"id": 2389,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "div",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 196,
																								"src": "24164:33:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																									"typeString": "function (uint256,uint256) pure returns (uint256)"
																								}
																							},
																							"id": 2391,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "24164:39:0",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 2392,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "24163:41:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2393,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 180,
																				"src": "24163:45:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 2395,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "24163:72:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2396,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 196,
																		"src": "24163:76:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2398,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "24163:81:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "24145:99:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2400,
															"nodeType": "ExpressionStatement",
															"src": "24145:99:0"
														},
														{
															"expression": {
																"id": 2418,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 2401,
																		"name": "fees",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2256,
																		"src": "24258:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_FeeBreakdown_$846_memory_ptr",
																			"typeString": "struct gainZilla.FeeBreakdown memory"
																		}
																	},
																	"id": 2403,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "tLiquidity",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 837,
																	"src": "24258:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"hexValue": "313030",
																			"id": 2416,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "24353:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"value": "100"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"id": 2413,
																					"name": "transferFeeIncreaseFactor",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 835,
																					"src": "24322:25:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"components": [
																						{
																							"arguments": [
																								{
																									"hexValue": "31303030",
																									"id": 2409,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "24311:4:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_1000_by_1",
																										"typeString": "int_const 1000"
																									},
																									"value": "1000"
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_rational_1000_by_1",
																										"typeString": "int_const 1000"
																									}
																								],
																								"expression": {
																									"arguments": [
																										{
																											"id": 2406,
																											"name": "_sellLiquidityFee",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 811,
																											"src": "24288:17:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										}
																									],
																									"expression": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										],
																										"expression": {
																											"id": 2404,
																											"name": "amount",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 2251,
																											"src": "24277:6:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"id": 2405,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberName": "mul",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 180,
																										"src": "24277:10:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																											"typeString": "function (uint256,uint256) pure returns (uint256)"
																										}
																									},
																									"id": 2407,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"kind": "functionCall",
																									"lValueRequested": false,
																									"names": [],
																									"nodeType": "FunctionCall",
																									"src": "24277:29:0",
																									"tryCall": false,
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"id": 2408,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "div",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 196,
																								"src": "24277:33:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																									"typeString": "function (uint256,uint256) pure returns (uint256)"
																								}
																							},
																							"id": 2410,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "24277:39:0",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 2411,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "24276:41:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2412,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 180,
																				"src": "24276:45:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 2414,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "24276:72:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2415,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 196,
																		"src": "24276:76:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2417,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "24276:81:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "24258:99:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2419,
															"nodeType": "ExpressionStatement",
															"src": "24258:99:0"
														},
														{
															"expression": {
																"id": 2437,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 2420,
																		"name": "fees",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2256,
																		"src": "24371:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_FeeBreakdown_$846_memory_ptr",
																			"typeString": "struct gainZilla.FeeBreakdown memory"
																		}
																	},
																	"id": 2422,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "tTeam",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 841,
																	"src": "24371:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"hexValue": "313030",
																			"id": 2435,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "24456:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"value": "100"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"id": 2432,
																					"name": "transferFeeIncreaseFactor",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 835,
																					"src": "24425:25:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"components": [
																						{
																							"arguments": [
																								{
																									"hexValue": "31303030",
																									"id": 2428,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "24414:4:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_1000_by_1",
																										"typeString": "int_const 1000"
																									},
																									"value": "1000"
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_rational_1000_by_1",
																										"typeString": "int_const 1000"
																									}
																								],
																								"expression": {
																									"arguments": [
																										{
																											"id": 2425,
																											"name": "_sellTeamFee",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 829,
																											"src": "24396:12:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										}
																									],
																									"expression": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										],
																										"expression": {
																											"id": 2423,
																											"name": "amount",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 2251,
																											"src": "24385:6:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"id": 2424,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberName": "mul",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 180,
																										"src": "24385:10:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																											"typeString": "function (uint256,uint256) pure returns (uint256)"
																										}
																									},
																									"id": 2426,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"kind": "functionCall",
																									"lValueRequested": false,
																									"names": [],
																									"nodeType": "FunctionCall",
																									"src": "24385:24:0",
																									"tryCall": false,
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"id": 2427,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "div",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 196,
																								"src": "24385:28:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																									"typeString": "function (uint256,uint256) pure returns (uint256)"
																								}
																							},
																							"id": 2429,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "24385:34:0",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 2430,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "24384:36:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2431,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 180,
																				"src": "24384:40:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 2433,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "24384:67:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2434,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 196,
																		"src": "24384:71:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2436,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "24384:76:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "24371:89:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2438,
															"nodeType": "ExpressionStatement",
															"src": "24371:89:0"
														},
														{
															"expression": {
																"id": 2456,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 2439,
																		"name": "fees",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2256,
																		"src": "24474:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_FeeBreakdown_$846_memory_ptr",
																			"typeString": "struct gainZilla.FeeBreakdown memory"
																		}
																	},
																	"id": 2441,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "tEcosystem",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 843,
																	"src": "24474:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"hexValue": "313030",
																			"id": 2454,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "24569:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"value": "100"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"id": 2451,
																					"name": "transferFeeIncreaseFactor",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 835,
																					"src": "24538:25:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"components": [
																						{
																							"arguments": [
																								{
																									"hexValue": "31303030",
																									"id": 2447,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "24527:4:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_1000_by_1",
																										"typeString": "int_const 1000"
																									},
																									"value": "1000"
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_rational_1000_by_1",
																										"typeString": "int_const 1000"
																									}
																								],
																								"expression": {
																									"arguments": [
																										{
																											"id": 2444,
																											"name": "_sellEcosystemFee",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 817,
																											"src": "24504:17:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										}
																									],
																									"expression": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										],
																										"expression": {
																											"id": 2442,
																											"name": "amount",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 2251,
																											"src": "24493:6:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"id": 2443,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberName": "mul",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 180,
																										"src": "24493:10:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																											"typeString": "function (uint256,uint256) pure returns (uint256)"
																										}
																									},
																									"id": 2445,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"kind": "functionCall",
																									"lValueRequested": false,
																									"names": [],
																									"nodeType": "FunctionCall",
																									"src": "24493:29:0",
																									"tryCall": false,
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"id": 2446,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "div",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 196,
																								"src": "24493:33:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																									"typeString": "function (uint256,uint256) pure returns (uint256)"
																								}
																							},
																							"id": 2448,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "24493:39:0",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 2449,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "24492:41:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2450,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 180,
																				"src": "24492:45:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 2452,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "24492:72:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2453,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 196,
																		"src": "24492:76:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2455,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "24492:81:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "24474:99:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2457,
															"nodeType": "ExpressionStatement",
															"src": "24474:99:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2460,
															"name": "fees",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2256,
															"src": "24602:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FeeBreakdown_$846_memory_ptr",
																"typeString": "struct gainZilla.FeeBreakdown memory"
															}
														},
														"id": 2462,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "tAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 845,
														"src": "24602:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 2477,
																	"name": "fees",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2256,
																	"src": "24686:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_FeeBreakdown_$846_memory_ptr",
																		"typeString": "struct gainZilla.FeeBreakdown memory"
																	}
																},
																"id": 2478,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "tEcosystem",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 843,
																"src": "24686:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2473,
																			"name": "fees",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2256,
																			"src": "24670:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_FeeBreakdown_$846_memory_ptr",
																				"typeString": "struct gainZilla.FeeBreakdown memory"
																			}
																		},
																		"id": 2474,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "tTeam",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 841,
																		"src": "24670:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 2469,
																					"name": "fees",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2256,
																					"src": "24649:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_FeeBreakdown_$846_memory_ptr",
																						"typeString": "struct gainZilla.FeeBreakdown memory"
																					}
																				},
																				"id": 2470,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "tLiquidity",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 837,
																				"src": "24649:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"expression": {
																							"id": 2465,
																							"name": "fees",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2256,
																							"src": "24628:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_FeeBreakdown_$846_memory_ptr",
																								"typeString": "struct gainZilla.FeeBreakdown memory"
																							}
																						},
																						"id": 2466,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "tMarketing",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 839,
																						"src": "24628:15:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"id": 2463,
																						"name": "amount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2251,
																						"src": "24617:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 2464,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sub",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 119,
																					"src": "24617:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 2467,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "24617:27:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 2468,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sub",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 119,
																			"src": "24617:31:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 2471,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "24617:48:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2472,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 119,
																	"src": "24617:52:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 2475,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "24617:64:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2476,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 119,
															"src": "24617:68:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2479,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "24617:85:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "24602:100:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2481,
												"nodeType": "ExpressionStatement",
												"src": "24602:100:0"
											},
											{
												"expression": {
													"id": 2491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2482,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 749,
															"src": "24721:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2484,
														"indexExpression": {
															"id": 2483,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2247,
															"src": "24731:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "24721:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2489,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2251,
																"src": "24763:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 2485,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 749,
																	"src": "24741:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2487,
																"indexExpression": {
																	"id": 2486,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2247,
																	"src": "24751:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "24741:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2488,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 119,
															"src": "24741:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2490,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "24741:29:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "24721:49:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2492,
												"nodeType": "ExpressionStatement",
												"src": "24721:49:0"
											},
											{
												"expression": {
													"id": 2503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2493,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 749,
															"src": "24780:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2495,
														"indexExpression": {
															"id": 2494,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2249,
															"src": "24790:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "24780:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 2500,
																	"name": "fees",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2256,
																	"src": "24828:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_FeeBreakdown_$846_memory_ptr",
																		"typeString": "struct gainZilla.FeeBreakdown memory"
																	}
																},
																"id": 2501,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "tAmount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 845,
																"src": "24828:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 2496,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 749,
																	"src": "24803:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2498,
																"indexExpression": {
																	"id": 2497,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2249,
																	"src": "24813:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "24803:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2499,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 103,
															"src": "24803:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2502,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "24803:38:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "24780:61:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2504,
												"nodeType": "ExpressionStatement",
												"src": "24780:61:0"
											},
											{
												"expression": {
													"id": 2533,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2505,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 749,
															"src": "24851:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2510,
														"indexExpression": {
															"arguments": [
																{
																	"id": 2508,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "24869:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_gainZilla_$2979",
																		"typeString": "contract gainZilla"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_gainZilla_$2979",
																		"typeString": "contract gainZilla"
																	}
																],
																"id": 2507,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "24861:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2506,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "24861:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2509,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "24861:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "24851:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"expression": {
																			"id": 2529,
																			"name": "fees",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2256,
																			"src": "24964:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_FeeBreakdown_$846_memory_ptr",
																				"typeString": "struct gainZilla.FeeBreakdown memory"
																			}
																		},
																		"id": 2530,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "tEcosystem",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 843,
																		"src": "24964:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 2525,
																					"name": "fees",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2256,
																					"src": "24948:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_FeeBreakdown_$846_memory_ptr",
																						"typeString": "struct gainZilla.FeeBreakdown memory"
																					}
																				},
																				"id": 2526,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "tTeam",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 841,
																				"src": "24948:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"expression": {
																							"id": 2521,
																							"name": "fees",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2256,
																							"src": "24927:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_FeeBreakdown_$846_memory_ptr",
																								"typeString": "struct gainZilla.FeeBreakdown memory"
																							}
																						},
																						"id": 2522,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "tLiquidity",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 837,
																						"src": "24927:15:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"expression": {
																							"id": 2518,
																							"name": "fees",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2256,
																							"src": "24907:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_FeeBreakdown_$846_memory_ptr",
																								"typeString": "struct gainZilla.FeeBreakdown memory"
																							}
																						},
																						"id": 2519,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "tMarketing",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 839,
																						"src": "24907:15:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 2520,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "add",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 103,
																					"src": "24907:19:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 2523,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "24907:36:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 2524,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "add",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 103,
																			"src": "24907:40:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 2527,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "24907:52:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2528,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "add",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 103,
																	"src": "24907:56:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 2531,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "24907:73:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 2511,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 749,
																	"src": "24878:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2516,
																"indexExpression": {
																	"arguments": [
																		{
																			"id": 2514,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "24896:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_gainZilla_$2979",
																				"typeString": "contract gainZilla"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_gainZilla_$2979",
																				"typeString": "contract gainZilla"
																			}
																		],
																		"id": 2513,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "24888:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2512,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "24888:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2515,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "24888:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "24878:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2517,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 103,
															"src": "24878:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2532,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "24878:103:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "24851:130:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2534,
												"nodeType": "ExpressionStatement",
												"src": "24851:130:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2536,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2247,
															"src": "25014:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2537,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2249,
															"src": "25022:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 2538,
																"name": "fees",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2256,
																"src": "25033:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_FeeBreakdown_$846_memory_ptr",
																	"typeString": "struct gainZilla.FeeBreakdown memory"
																}
															},
															"id": 2539,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "tAmount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 845,
															"src": "25033:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2535,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 69,
														"src": "25005:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2540,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25005:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2541,
												"nodeType": "EmitStatement",
												"src": "25000:46:0"
											}
										]
									},
									"id": 2543,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferStandard",
									"nameLocation": "23215:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2247,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "23241:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2543,
												"src": "23233:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2246,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23233:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2249,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "23257:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 2543,
												"src": "23249:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2248,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23249:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2251,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "23276:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2543,
												"src": "23268:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2250,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23268:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23232:51:0"
									},
									"returnParameters": {
										"id": 2253,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23292:0:0"
									},
									"scope": 2979,
									"src": "23206:1847:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2546,
										"nodeType": "Block",
										"src": "25090:2:0",
										"statements": []
									},
									"id": 2547,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2544,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25070:2:0"
									},
									"returnParameters": {
										"id": 2545,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25090:0:0"
									},
									"scope": 2979,
									"src": "25063:29:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2560,
										"nodeType": "Block",
										"src": "25158:51:0",
										"statements": [
											{
												"expression": {
													"id": 2558,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2554,
															"name": "_isExcludedFromFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 759,
															"src": "25168:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2556,
														"indexExpression": {
															"id": 2555,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2549,
															"src": "25187:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "25168:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 2557,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "25198:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "25168:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2559,
												"nodeType": "ExpressionStatement",
												"src": "25168:34:0"
											}
										]
									},
									"functionSelector": "437823ec",
									"id": 2561,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [],
											"id": 2552,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2551,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 277,
												"src": "25146:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "25146:11:0"
										}
									],
									"name": "excludeFromFee",
									"nameLocation": "25107:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2550,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2549,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "25130:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2561,
												"src": "25122:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2548,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25122:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25121:17:0"
									},
									"returnParameters": {
										"id": 2553,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25158:0:0"
									},
									"scope": 2979,
									"src": "25098:111:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2574,
										"nodeType": "Block",
										"src": "25275:52:0",
										"statements": [
											{
												"expression": {
													"id": 2572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2568,
															"name": "_isExcludedFromFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 759,
															"src": "25285:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2570,
														"indexExpression": {
															"id": 2569,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2563,
															"src": "25304:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "25285:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 2571,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "25315:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "25285:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2573,
												"nodeType": "ExpressionStatement",
												"src": "25285:35:0"
											}
										]
									},
									"functionSelector": "ea2f0b37",
									"id": 2575,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [],
											"id": 2566,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2565,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 277,
												"src": "25263:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "25263:11:0"
										}
									],
									"name": "includeInFee",
									"nameLocation": "25224:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2563,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "25245:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2575,
												"src": "25237:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2562,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25236:17:0"
									},
									"returnParameters": {
										"id": 2567,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25275:0:0"
									},
									"scope": 2979,
									"src": "25215:112:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2588,
										"nodeType": "Block",
										"src": "25394:38:0",
										"statements": [
											{
												"expression": {
													"id": 2586,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2582,
															"name": "bots",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 876,
															"src": "25404:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2584,
														"indexExpression": {
															"id": 2583,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2577,
															"src": "25409:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "25404:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 2585,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "25420:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "25404:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2587,
												"nodeType": "ExpressionStatement",
												"src": "25404:21:0"
											}
										]
									},
									"functionSelector": "5fecd926",
									"id": 2589,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [],
											"id": 2580,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2579,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 277,
												"src": "25382:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "25382:11:0"
										}
									],
									"name": "removeBot",
									"nameLocation": "25346:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2578,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2577,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "25364:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2589,
												"src": "25356:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2576,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25356:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25355:17:0"
									},
									"returnParameters": {
										"id": 2581,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25394:0:0"
									},
									"scope": 2979,
									"src": "25337:95:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2607,
										"nodeType": "Block",
										"src": "25492:112:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2597,
															"name": "canBlackList",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 919,
															"src": "25510:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "7468697320636f6e74726163742063616e6e6f7420626c61636b6c69737420616464726573736573",
															"id": 2598,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "25524:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bad442360b6845337bd4003d69c5089367f1b69f213d5a6e716006a978ac85ad",
																"typeString": "literal_string \"this contract cannot blacklist addresses\""
															},
															"value": "this contract cannot blacklist addresses"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bad442360b6845337bd4003d69c5089367f1b69f213d5a6e716006a978ac85ad",
																"typeString": "literal_string \"this contract cannot blacklist addresses\""
															}
														],
														"id": 2596,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "25502:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2599,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25502:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2600,
												"nodeType": "ExpressionStatement",
												"src": "25502:65:0"
											},
											{
												"expression": {
													"id": 2605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2601,
															"name": "bots",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 876,
															"src": "25577:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2603,
														"indexExpression": {
															"id": 2602,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2591,
															"src": "25582:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "25577:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 2604,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "25593:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "25577:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2606,
												"nodeType": "ExpressionStatement",
												"src": "25577:20:0"
											}
										]
									},
									"functionSelector": "ffecf516",
									"id": 2608,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [],
											"id": 2594,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2593,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 277,
												"src": "25480:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "25480:11:0"
										}
									],
									"name": "addBot",
									"nameLocation": "25447:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2592,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2591,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "25462:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2608,
												"src": "25454:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2590,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25454:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25453:17:0"
									},
									"returnParameters": {
										"id": 2595,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25492:0:0"
									},
									"scope": 2979,
									"src": "25438:166:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2617,
										"nodeType": "Block",
										"src": "25662:37:0",
										"statements": [
											{
												"expression": {
													"id": 2615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2613,
														"name": "canBlackList",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 919,
														"src": "25672:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 2614,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "25687:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "25672:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2616,
												"nodeType": "ExpressionStatement",
												"src": "25672:20:0"
											}
										]
									},
									"functionSelector": "d55cb78a",
									"id": 2618,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [],
											"id": 2611,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2610,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 277,
												"src": "25641:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "25641:11:0"
										}
									],
									"name": "disableBlackListing",
									"nameLocation": "25619:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2609,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25638:2:0"
									},
									"returnParameters": {
										"id": 2612,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25662:0:0"
									},
									"scope": 2979,
									"src": "25610:89:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2629,
										"nodeType": "Block",
										"src": "25793:56:0",
										"statements": [
											{
												"expression": {
													"id": 2627,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2625,
														"name": "transferFeeIncreaseFactor",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 835,
														"src": "25803:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2626,
														"name": "_multiplier",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2620,
														"src": "25831:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "25803:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2628,
												"nodeType": "ExpressionStatement",
												"src": "25803:39:0"
											}
										]
									},
									"functionSelector": "a850673d",
									"id": 2630,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [],
											"id": 2623,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2622,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 277,
												"src": "25781:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "25781:11:0"
										}
									],
									"name": "setTransferTransactionMultiplier",
									"nameLocation": "25718:32:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2620,
												"mutability": "mutable",
												"name": "_multiplier",
												"nameLocation": "25759:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 2630,
												"src": "25751:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2619,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25751:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25750:21:0"
									},
									"returnParameters": {
										"id": 2624,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25793:0:0"
									},
									"scope": 2979,
									"src": "25709:140:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2658,
										"nodeType": "Block",
										"src": "25929:249:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2643,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2638,
																"name": "maxWalletAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2632,
																"src": "25947:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "31303030",
																		"id": 2641,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "25978:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1000_by_1",
																			"typeString": "int_const 1000"
																		},
																		"value": "1000"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1000_by_1",
																			"typeString": "int_const 1000"
																		}
																	],
																	"expression": {
																		"id": 2639,
																		"name": "_tTotal",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 766,
																		"src": "25966:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2640,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 196,
																	"src": "25966:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 2642,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "25966:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "25947:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e20302e3125206f6620737570706c79",
															"id": 2644,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "25985:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6c4db68624a2e770077620719acb05295e7dcfc072b9733d6b92c297674c94f0",
																"typeString": "literal_string \"Amount must be greater than 0.1% of supply\""
															},
															"value": "Amount must be greater than 0.1% of supply"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6c4db68624a2e770077620719acb05295e7dcfc072b9733d6b92c297674c94f0",
																"typeString": "literal_string \"Amount must be greater than 0.1% of supply\""
															}
														],
														"id": 2637,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "25939:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2645,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25939:91:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2646,
												"nodeType": "ExpressionStatement",
												"src": "25939:91:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2650,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2648,
																"name": "maxWalletAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2632,
																"src": "26048:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2649,
																"name": "_tTotal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 766,
																"src": "26067:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "26048:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d757374206265206c657373207468616e206f7220657175616c20746f20746f74616c537570706c79",
															"id": 2651,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "26076:50:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b44a94ebbca3d153cb9c59a36d3c7e6533b0baf54384f35b08da2c0561f7e004",
																"typeString": "literal_string \"Amount must be less than or equal to totalSupply\""
															},
															"value": "Amount must be less than or equal to totalSupply"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b44a94ebbca3d153cb9c59a36d3c7e6533b0baf54384f35b08da2c0561f7e004",
																"typeString": "literal_string \"Amount must be less than or equal to totalSupply\""
															}
														],
														"id": 2647,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "26040:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26040:87:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2653,
												"nodeType": "ExpressionStatement",
												"src": "26040:87:0"
											},
											{
												"expression": {
													"id": 2656,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2654,
														"name": "_maxWalletAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 777,
														"src": "26137:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2655,
														"name": "maxWalletAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2632,
														"src": "26156:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "26137:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2657,
												"nodeType": "ExpressionStatement",
												"src": "26137:34:0"
											}
										]
									},
									"functionSelector": "27a14fc2",
									"id": 2659,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [],
											"id": 2635,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2634,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 277,
												"src": "25917:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "25917:11:0"
										}
									],
									"name": "setMaxWalletAmount",
									"nameLocation": "25864:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2632,
												"mutability": "mutable",
												"name": "maxWalletAmount",
												"nameLocation": "25891:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 2659,
												"src": "25883:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2631,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25883:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25882:25:0"
									},
									"returnParameters": {
										"id": 2636,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25929:0:0"
									},
									"scope": 2979,
									"src": "25855:323:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2736,
										"nodeType": "Block",
										"src": "26309:698:0",
										"statements": [
											{
												"assignments": [
													2673
												],
												"declarations": [
													{
														"constant": false,
														"id": 2673,
														"mutability": "mutable",
														"name": "totalFee",
														"nameLocation": "26327:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 2736,
														"src": "26319:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2672,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "26319:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2684,
												"initialValue": {
													"arguments": [
														{
															"id": 2682,
															"name": "ecosystemFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2667,
															"src": "26386:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2679,
																	"name": "teamFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2665,
																	"src": "26373:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 2676,
																			"name": "liquidityFee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2663,
																			"src": "26355:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 2674,
																			"name": "marketingFee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2661,
																			"src": "26338:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2675,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 103,
																		"src": "26338:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2677,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "26338:30:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2678,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 103,
																"src": "26338:34:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2680,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26338:43:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2681,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 103,
														"src": "26338:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2683,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26338:61:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "26319:80:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2688,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2686,
																"name": "totalFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2673,
																"src": "26417:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "323530",
																"id": 2687,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "26429:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_250_by_1",
																	"typeString": "int_const 250"
																},
																"value": "250"
															},
															"src": "26417:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53756d206f66206275792066656573206d757374206265206c657373207468616e206f7220657175616c20746f20323525",
															"id": 2689,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "26434:51:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1755f62c229a290ad9b7faac2959e1b3eb8f692fba0f163aae0b9540e4f5fdce",
																"typeString": "literal_string \"Sum of buy fees must be less than or equal to 25%\""
															},
															"value": "Sum of buy fees must be less than or equal to 25%"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1755f62c229a290ad9b7faac2959e1b3eb8f692fba0f163aae0b9540e4f5fdce",
																"typeString": "literal_string \"Sum of buy fees must be less than or equal to 25%\""
															}
														],
														"id": 2685,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "26409:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2690,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26409:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2691,
												"nodeType": "ExpressionStatement",
												"src": "26409:77:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2693,
															"name": "canChangeTax",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 922,
															"src": "26504:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546869732066756e6374696f6e20697320646961626c6564",
															"id": 2694,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "26518:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c16e27d8b3dc7ef60b76b5fcfd20d370ba809516527639905c66e9f077293ec0",
																"typeString": "literal_string \"This function is diabled\""
															},
															"value": "This function is diabled"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c16e27d8b3dc7ef60b76b5fcfd20d370ba809516527639905c66e9f077293ec0",
																"typeString": "literal_string \"This function is diabled\""
															}
														],
														"id": 2692,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "26496:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2695,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26496:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2696,
												"nodeType": "ExpressionStatement",
												"src": "26496:49:0"
											},
											{
												"expression": {
													"id": 2699,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2697,
														"name": "_buyMarketingFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 799,
														"src": "26556:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2698,
														"name": "marketingFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2661,
														"src": "26575:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "26556:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2700,
												"nodeType": "ExpressionStatement",
												"src": "26556:31:0"
											},
											{
												"expression": {
													"id": 2703,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2701,
														"name": "_buyLiquidityFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 787,
														"src": "26597:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2702,
														"name": "liquidityFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2663,
														"src": "26616:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "26597:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2704,
												"nodeType": "ExpressionStatement",
												"src": "26597:31:0"
											},
											{
												"expression": {
													"id": 2707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2705,
														"name": "_buyTeamFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 805,
														"src": "26638:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2706,
														"name": "teamFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2665,
														"src": "26652:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "26638:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2708,
												"nodeType": "ExpressionStatement",
												"src": "26638:21:0"
											},
											{
												"expression": {
													"id": 2711,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2709,
														"name": "_buyEcosystemFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 793,
														"src": "26669:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2710,
														"name": "ecosystemFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2667,
														"src": "26688:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "26669:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2712,
												"nodeType": "ExpressionStatement",
												"src": "26669:31:0"
											},
											{
												"expression": {
													"id": 2715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2713,
														"name": "_previousBuyMarketingFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 802,
														"src": "26719:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2714,
														"name": "_buyMarketingFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 799,
														"src": "26746:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "26719:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2716,
												"nodeType": "ExpressionStatement",
												"src": "26719:43:0"
											},
											{
												"expression": {
													"id": 2719,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2717,
														"name": "_previousBuyLiquidityFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 790,
														"src": "26772:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2718,
														"name": "_buyLiquidityFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 787,
														"src": "26799:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "26772:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2720,
												"nodeType": "ExpressionStatement",
												"src": "26772:43:0"
											},
											{
												"expression": {
													"id": 2723,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2721,
														"name": "_previousBuyTeamFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 808,
														"src": "26825:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2722,
														"name": "_buyTeamFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 805,
														"src": "26847:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "26825:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2724,
												"nodeType": "ExpressionStatement",
												"src": "26825:33:0"
											},
											{
												"expression": {
													"id": 2727,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2725,
														"name": "_previousBuyEcosystemFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 796,
														"src": "26868:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2726,
														"name": "_buyEcosystemFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 793,
														"src": "26895:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "26868:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2728,
												"nodeType": "ExpressionStatement",
												"src": "26868:43:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2730,
															"name": "marketingFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2661,
															"src": "26950:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2731,
															"name": "liquidityFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2663,
															"src": "26964:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2732,
															"name": "teamFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2665,
															"src": "26978:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2733,
															"name": "ecosystemFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2667,
															"src": "26987:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2729,
														"name": "BuyFeesUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 936,
														"src": "26935:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256,uint256)"
														}
													},
													"id": 2734,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26935:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2735,
												"nodeType": "EmitStatement",
												"src": "26930:70:0"
											}
										]
									},
									"functionSelector": "e4bf1bed",
									"id": 2737,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [],
											"id": 2670,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2669,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 277,
												"src": "26297:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "26297:11:0"
										}
									],
									"name": "setBuyTaxes",
									"nameLocation": "26193:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2661,
												"mutability": "mutable",
												"name": "marketingFee",
												"nameLocation": "26213:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 2737,
												"src": "26205:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26205:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2663,
												"mutability": "mutable",
												"name": "liquidityFee",
												"nameLocation": "26235:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 2737,
												"src": "26227:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2662,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26227:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2665,
												"mutability": "mutable",
												"name": "teamFee",
												"nameLocation": "26257:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2737,
												"src": "26249:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2664,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26249:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2667,
												"mutability": "mutable",
												"name": "ecosystemFee",
												"nameLocation": "26274:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 2737,
												"src": "26266:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2666,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26266:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26204:83:0"
									},
									"returnParameters": {
										"id": 2671,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26309:0:0"
									},
									"scope": 2979,
									"src": "26184:823:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2814,
										"nodeType": "Block",
										"src": "27139:712:0",
										"statements": [
											{
												"assignments": [
													2751
												],
												"declarations": [
													{
														"constant": false,
														"id": 2751,
														"mutability": "mutable",
														"name": "totalFee",
														"nameLocation": "27157:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 2814,
														"src": "27149:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2750,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "27149:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2762,
												"initialValue": {
													"arguments": [
														{
															"id": 2760,
															"name": "ecosystemFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2745,
															"src": "27216:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2757,
																	"name": "teamFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2743,
																	"src": "27203:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 2754,
																			"name": "liquidityFee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2741,
																			"src": "27185:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 2752,
																			"name": "marketingFee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2739,
																			"src": "27168:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2753,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 103,
																		"src": "27168:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2755,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "27168:30:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2756,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 103,
																"src": "27168:34:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2758,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "27168:43:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2759,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 103,
														"src": "27168:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2761,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27168:61:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "27149:80:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2766,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2764,
																"name": "totalFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2751,
																"src": "27247:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "323530",
																"id": 2765,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "27259:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_250_by_1",
																	"typeString": "int_const 250"
																},
																"value": "250"
															},
															"src": "27247:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53756d206f662073656c6c2066656573206d757374206265206c657373207468616e206f7220657175616c20746f20323525",
															"id": 2767,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "27264:52:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_64ead83ef76ea1c4f9fc5432258ce7c66fa12ae4c25d99983db46b0d37058094",
																"typeString": "literal_string \"Sum of sell fees must be less than or equal to 25%\""
															},
															"value": "Sum of sell fees must be less than or equal to 25%"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_64ead83ef76ea1c4f9fc5432258ce7c66fa12ae4c25d99983db46b0d37058094",
																"typeString": "literal_string \"Sum of sell fees must be less than or equal to 25%\""
															}
														],
														"id": 2763,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "27239:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2768,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27239:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2769,
												"nodeType": "ExpressionStatement",
												"src": "27239:78:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2771,
															"name": "canChangeTax",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 922,
															"src": "27335:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546869732066756e6374696f6e20697320646961626c6564",
															"id": 2772,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "27349:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c16e27d8b3dc7ef60b76b5fcfd20d370ba809516527639905c66e9f077293ec0",
																"typeString": "literal_string \"This function is diabled\""
															},
															"value": "This function is diabled"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c16e27d8b3dc7ef60b76b5fcfd20d370ba809516527639905c66e9f077293ec0",
																"typeString": "literal_string \"This function is diabled\""
															}
														],
														"id": 2770,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "27327:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27327:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2774,
												"nodeType": "ExpressionStatement",
												"src": "27327:49:0"
											},
											{
												"expression": {
													"id": 2777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2775,
														"name": "_sellMarketingFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 823,
														"src": "27387:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2776,
														"name": "marketingFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2739,
														"src": "27407:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "27387:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2778,
												"nodeType": "ExpressionStatement",
												"src": "27387:32:0"
											},
											{
												"expression": {
													"id": 2781,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2779,
														"name": "_sellLiquidityFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "27429:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2780,
														"name": "liquidityFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2741,
														"src": "27449:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "27429:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2782,
												"nodeType": "ExpressionStatement",
												"src": "27429:32:0"
											},
											{
												"expression": {
													"id": 2785,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2783,
														"name": "_sellTeamFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 829,
														"src": "27471:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2784,
														"name": "teamFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2743,
														"src": "27486:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "27471:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2786,
												"nodeType": "ExpressionStatement",
												"src": "27471:22:0"
											},
											{
												"expression": {
													"id": 2789,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2787,
														"name": "_sellEcosystemFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 817,
														"src": "27503:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2788,
														"name": "ecosystemFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2745,
														"src": "27523:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "27503:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2790,
												"nodeType": "ExpressionStatement",
												"src": "27503:32:0"
											},
											{
												"expression": {
													"id": 2793,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2791,
														"name": "_previousSellMarketingFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 826,
														"src": "27554:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2792,
														"name": "_sellMarketingFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 823,
														"src": "27582:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "27554:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2794,
												"nodeType": "ExpressionStatement",
												"src": "27554:45:0"
											},
											{
												"expression": {
													"id": 2797,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2795,
														"name": "_previousSellLiquidityFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 814,
														"src": "27609:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2796,
														"name": "_sellLiquidityFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "27637:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "27609:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2798,
												"nodeType": "ExpressionStatement",
												"src": "27609:45:0"
											},
											{
												"expression": {
													"id": 2801,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2799,
														"name": "_previousSellTeamFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 832,
														"src": "27664:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2800,
														"name": "_sellTeamFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 829,
														"src": "27687:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "27664:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2802,
												"nodeType": "ExpressionStatement",
												"src": "27664:35:0"
											},
											{
												"expression": {
													"id": 2805,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2803,
														"name": "_previousSellEcosystemFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 820,
														"src": "27709:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2804,
														"name": "_sellEcosystemFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 817,
														"src": "27737:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "27709:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2806,
												"nodeType": "ExpressionStatement",
												"src": "27709:45:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2808,
															"name": "marketingFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2739,
															"src": "27794:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2809,
															"name": "liquidityFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2741,
															"src": "27808:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2810,
															"name": "teamFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2743,
															"src": "27822:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2811,
															"name": "ecosystemFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2745,
															"src": "27831:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2807,
														"name": "SellFeesUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 946,
														"src": "27778:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256,uint256)"
														}
													},
													"id": 2812,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27778:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2813,
												"nodeType": "EmitStatement",
												"src": "27773:71:0"
											}
										]
									},
									"functionSelector": "f480fec2",
									"id": 2815,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [],
											"id": 2748,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2747,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 277,
												"src": "27127:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "27127:11:0"
										}
									],
									"name": "setSellTaxes",
									"nameLocation": "27022:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2746,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2739,
												"mutability": "mutable",
												"name": "marketingFee",
												"nameLocation": "27043:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 2815,
												"src": "27035:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2738,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27035:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2741,
												"mutability": "mutable",
												"name": "liquidityFee",
												"nameLocation": "27065:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 2815,
												"src": "27057:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2740,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27057:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2743,
												"mutability": "mutable",
												"name": "teamFee",
												"nameLocation": "27087:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2815,
												"src": "27079:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2742,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27079:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2745,
												"mutability": "mutable",
												"name": "ecosystemFee",
												"nameLocation": "27104:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 2815,
												"src": "27096:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2744,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27096:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27034:83:0"
									},
									"returnParameters": {
										"id": 2749,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27139:0:0"
									},
									"scope": 2979,
									"src": "27013:838:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2824,
										"nodeType": "Block",
										"src": "27906:37:0",
										"statements": [
											{
												"expression": {
													"id": 2822,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2820,
														"name": "canChangeTax",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 922,
														"src": "27916:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 2821,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "27931:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "27916:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2823,
												"nodeType": "ExpressionStatement",
												"src": "27916:20:0"
											}
										]
									},
									"functionSelector": "99a7b9bc",
									"id": 2825,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [],
											"id": 2818,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2817,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 277,
												"src": "27885:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "27885:11:0"
										}
									],
									"name": "disableTaxChange",
									"nameLocation": "27866:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2816,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27882:2:0"
									},
									"returnParameters": {
										"id": 2819,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27906:0:0"
									},
									"scope": 2979,
									"src": "27857:86:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2836,
										"nodeType": "Block",
										"src": "28036:53:0",
										"statements": [
											{
												"expression": {
													"id": 2834,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2832,
														"name": "_ecosystemAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 894,
														"src": "28046:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2833,
														"name": "ecosystemAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2827,
														"src": "28066:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "28046:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 2835,
												"nodeType": "ExpressionStatement",
												"src": "28046:36:0"
											}
										]
									},
									"functionSelector": "db0045ec",
									"id": 2837,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [],
											"id": 2830,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2829,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 277,
												"src": "28024:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "28024:11:0"
										}
									],
									"name": "updateEcosystemAddress",
									"nameLocation": "27958:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2828,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2827,
												"mutability": "mutable",
												"name": "ecosystemAddress",
												"nameLocation": "27997:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 2837,
												"src": "27981:32:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 2826,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27981:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27980:34:0"
									},
									"returnParameters": {
										"id": 2831,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28036:0:0"
									},
									"scope": 2979,
									"src": "27949:140:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2848,
										"nodeType": "Block",
										"src": "28186:53:0",
										"statements": [
											{
												"expression": {
													"id": 2846,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2844,
														"name": "_marketingAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 882,
														"src": "28196:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2845,
														"name": "marketingAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2839,
														"src": "28216:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "28196:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 2847,
												"nodeType": "ExpressionStatement",
												"src": "28196:36:0"
											}
										]
									},
									"functionSelector": "2369bf83",
									"id": 2849,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [],
											"id": 2842,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2841,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 277,
												"src": "28174:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "28174:11:0"
										}
									],
									"name": "updateMarketingAddress",
									"nameLocation": "28108:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2839,
												"mutability": "mutable",
												"name": "marketingAddress",
												"nameLocation": "28147:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 2849,
												"src": "28131:32:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 2838,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28131:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28130:34:0"
									},
									"returnParameters": {
										"id": 2843,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28186:0:0"
									},
									"scope": 2979,
									"src": "28099:140:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2860,
										"nodeType": "Block",
										"src": "28326:43:0",
										"statements": [
											{
												"expression": {
													"id": 2858,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2856,
														"name": "_teamAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 888,
														"src": "28336:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2857,
														"name": "teamAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2851,
														"src": "28351:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "28336:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 2859,
												"nodeType": "ExpressionStatement",
												"src": "28336:26:0"
											}
										]
									},
									"functionSelector": "14eb76ac",
									"id": 2861,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [],
											"id": 2854,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2853,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 277,
												"src": "28314:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "28314:11:0"
										}
									],
									"name": "updateTeamAddress",
									"nameLocation": "28258:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2852,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2851,
												"mutability": "mutable",
												"name": "teamAddress",
												"nameLocation": "28292:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 2861,
												"src": "28276:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 2850,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28276:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28275:29:0"
									},
									"returnParameters": {
										"id": 2855,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28326:0:0"
									},
									"scope": 2979,
									"src": "28249:120:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2872,
										"nodeType": "Block",
										"src": "28453:43:0",
										"statements": [
											{
												"expression": {
													"id": 2870,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2868,
														"name": "_lpRecipient",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 900,
														"src": "28463:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2869,
														"name": "lpRecipient",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2863,
														"src": "28478:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "28463:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 2871,
												"nodeType": "ExpressionStatement",
												"src": "28463:26:0"
											}
										]
									},
									"functionSelector": "cdb3858f",
									"id": 2873,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [],
											"id": 2866,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2865,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 277,
												"src": "28441:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "28441:11:0"
										}
									],
									"name": "updateLpRecipient",
									"nameLocation": "28385:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2864,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2863,
												"mutability": "mutable",
												"name": "lpRecipient",
												"nameLocation": "28419:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 2873,
												"src": "28403:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 2862,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28403:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28402:29:0"
									},
									"returnParameters": {
										"id": 2867,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28453:0:0"
									},
									"scope": 2979,
									"src": "28376:120:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2884,
										"nodeType": "Block",
										"src": "28573:44:0",
										"statements": [
											{
												"expression": {
													"id": 2882,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2880,
														"name": "numTokensToSwap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 784,
														"src": "28583:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2881,
														"name": "numTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2875,
														"src": "28601:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "28583:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2883,
												"nodeType": "ExpressionStatement",
												"src": "28583:27:0"
											}
										]
									},
									"functionSelector": "e315a6da",
									"id": 2885,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [],
											"id": 2878,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2877,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 277,
												"src": "28561:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "28561:11:0"
										}
									],
									"name": "updateNumTokensToSwap",
									"nameLocation": "28511:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2876,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2875,
												"mutability": "mutable",
												"name": "numTokens",
												"nameLocation": "28541:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 2885,
												"src": "28533:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2874,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28533:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28532:19:0"
									},
									"returnParameters": {
										"id": 2879,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28573:0:0"
									},
									"scope": 2979,
									"src": "28502:115:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2908,
										"nodeType": "Block",
										"src": "28703:93:0",
										"statements": [
											{
												"expression": {
													"id": 2898,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2894,
															"name": "cooldown",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 858,
															"src": "28713:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StrongHandsConfig_$855_storage",
																"typeString": "struct gainZilla.StrongHandsConfig storage ref"
															}
														},
														"id": 2896,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "enabled",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 848,
														"src": "28713:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2897,
														"name": "enabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2887,
														"src": "28732:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "28713:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2899,
												"nodeType": "ExpressionStatement",
												"src": "28713:26:0"
											},
											{
												"expression": {
													"id": 2906,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2900,
															"name": "cooldown",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 858,
															"src": "28749:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StrongHandsConfig_$855_storage",
																"typeString": "struct gainZilla.StrongHandsConfig storage ref"
															}
														},
														"id": 2902,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "duration",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 850,
														"src": "28749:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"id": 2905,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2903,
															"name": "duration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2889,
															"src": "28769:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "31",
															"id": 2904,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "28780:9:0",
															"subdenomination": "minutes",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_60_by_1",
																"typeString": "int_const 60"
															},
															"value": "1"
														},
														"src": "28769:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "28749:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 2907,
												"nodeType": "ExpressionStatement",
												"src": "28749:40:0"
											}
										]
									},
									"functionSelector": "729cb3f2",
									"id": 2909,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2892,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2891,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 277,
												"src": "28693:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "28693:9:0"
										}
									],
									"name": "configureStrongHands",
									"nameLocation": "28632:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2890,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2887,
												"mutability": "mutable",
												"name": "enabled",
												"nameLocation": "28658:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2909,
												"src": "28653:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2886,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "28653:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2889,
												"mutability": "mutable",
												"name": "duration",
												"nameLocation": "28674:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2909,
												"src": "28667:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 2888,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "28667:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28652:31:0"
									},
									"returnParameters": {
										"id": 2893,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28703:0:0"
									},
									"scope": 2979,
									"src": "28623:173:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2977,
										"nodeType": "Block",
										"src": "28975:365:0",
										"statements": [
											{
												"assignments": [
													2923
												],
												"declarations": [
													{
														"constant": false,
														"id": 2923,
														"mutability": "mutable",
														"name": "remaining",
														"nameLocation": "28993:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 2977,
														"src": "28985:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2922,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "28985:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2941,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2930,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"expression": {
																	"id": 2924,
																	"name": "cooldown",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 858,
																	"src": "29005:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_StrongHandsConfig_$855_storage",
																		"typeString": "struct gainZilla.StrongHandsConfig storage ref"
																	}
																},
																"id": 2925,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "walletList",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 854,
																"src": "29005:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 2927,
															"indexExpression": {
																"id": 2926,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2911,
																"src": "29025:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "29005:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"expression": {
																"id": 2928,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "29036:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 2929,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "29036:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "29005:46:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "30",
														"id": 2939,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "29119:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"id": 2940,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "29005:115:0",
													"trueExpression": {
														"arguments": [
															{
																"expression": {
																	"id": 2936,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "29100:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 2937,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "29100:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"expression": {
																		"id": 2931,
																		"name": "cooldown",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 858,
																		"src": "29067:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_StrongHandsConfig_$855_storage",
																			"typeString": "struct gainZilla.StrongHandsConfig storage ref"
																		}
																	},
																	"id": 2932,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "walletList",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 854,
																	"src": "29067:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2934,
																"indexExpression": {
																	"id": 2933,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2911,
																	"src": "29087:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "29067:28:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2935,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 119,
															"src": "29067:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2938,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "29067:49:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "28985:135:0"
											},
											{
												"expression": {
													"id": 2947,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2942,
														"name": "days_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2914,
														"src": "29139:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "3836343030",
																"id": 2945,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "29161:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_86400_by_1",
																	"typeString": "int_const 86400"
																},
																"value": "86400"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_86400_by_1",
																	"typeString": "int_const 86400"
																}
															],
															"expression": {
																"id": 2943,
																"name": "remaining",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2923,
																"src": "29147:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2944,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 196,
															"src": "29147:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2946,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "29147:20:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "29139:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2948,
												"nodeType": "ExpressionStatement",
												"src": "29139:28:0"
											},
											{
												"expression": {
													"id": 2951,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2949,
														"name": "remaining",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2923,
														"src": "29177:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "%=",
													"rightHandSide": {
														"hexValue": "3836343030",
														"id": 2950,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "29190:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_86400_by_1",
															"typeString": "int_const 86400"
														},
														"value": "86400"
													},
													"src": "29177:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2952,
												"nodeType": "ExpressionStatement",
												"src": "29177:18:0"
											},
											{
												"expression": {
													"id": 2958,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2953,
														"name": "hours_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2916,
														"src": "29205:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "33363030",
																"id": 2956,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "29228:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_3600_by_1",
																	"typeString": "int_const 3600"
																},
																"value": "3600"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_3600_by_1",
																	"typeString": "int_const 3600"
																}
															],
															"expression": {
																"id": 2954,
																"name": "remaining",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2923,
																"src": "29214:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2955,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 196,
															"src": "29214:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2957,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "29214:19:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "29205:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2959,
												"nodeType": "ExpressionStatement",
												"src": "29205:28:0"
											},
											{
												"expression": {
													"id": 2962,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2960,
														"name": "remaining",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2923,
														"src": "29243:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "%=",
													"rightHandSide": {
														"hexValue": "33363030",
														"id": 2961,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "29256:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3600_by_1",
															"typeString": "int_const 3600"
														},
														"value": "3600"
													},
													"src": "29243:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2963,
												"nodeType": "ExpressionStatement",
												"src": "29243:17:0"
											},
											{
												"expression": {
													"id": 2969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2964,
														"name": "minutes_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2918,
														"src": "29270:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "3630",
																"id": 2967,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "29295:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_60_by_1",
																	"typeString": "int_const 60"
																},
																"value": "60"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_60_by_1",
																	"typeString": "int_const 60"
																}
															],
															"expression": {
																"id": 2965,
																"name": "remaining",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2923,
																"src": "29281:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2966,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 196,
															"src": "29281:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2968,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "29281:17:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "29270:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2970,
												"nodeType": "ExpressionStatement",
												"src": "29270:28:0"
											},
											{
												"expression": {
													"id": 2975,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2971,
														"name": "seconds_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2920,
														"src": "29308:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2974,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2972,
															"name": "remaining",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2923,
															"src": "29319:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "3630",
															"id": 2973,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "29331:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_60_by_1",
																"typeString": "int_const 60"
															},
															"value": "60"
														},
														"src": "29319:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "29308:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2976,
												"nodeType": "ExpressionStatement",
												"src": "29308:25:0"
											}
										]
									},
									"functionSelector": "9d82190f",
									"id": 2978,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "cooldownRemaining",
									"nameLocation": "28811:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2912,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2911,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "28837:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2978,
												"src": "28829:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2910,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28829:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28828:17:0"
									},
									"returnParameters": {
										"id": 2921,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2914,
												"mutability": "mutable",
												"name": "days_",
												"nameLocation": "28884:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2978,
												"src": "28876:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2913,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28876:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2916,
												"mutability": "mutable",
												"name": "hours_",
												"nameLocation": "28908:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2978,
												"src": "28900:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2915,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28900:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2918,
												"mutability": "mutable",
												"name": "minutes_",
												"nameLocation": "28933:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2978,
												"src": "28925:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2917,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28925:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2920,
												"mutability": "mutable",
												"name": "seconds_",
												"nameLocation": "28960:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2978,
												"src": "28952:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2919,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28952:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28866:108:0"
									},
									"scope": 2979,
									"src": "28802:538:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 2980,
							"src": "8181:21161:0",
							"usedErrors": []
						}
					],
					"src": "682:28660:0"
				},
				"id": 0
			}
		}
	}
}